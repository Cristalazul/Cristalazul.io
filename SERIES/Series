<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<item>
<title>[COLOR gold]*^Top Mejores Series Cristal Azul^*[/COLOR]</title>
<link>NOLINK</link>
<regex>
<name>colores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
 import xbmc, xbmcaddon
 addon = xbmcaddon.Addon('plugin.video.cristalazul')
 return addon.getSetting('ColoreandoPrincipal')
]]></expres>
<page></page>
</regex>
<regex>
<name>coloreando</name>
<expres>$pyFunction:('$doregex[colores]').replace('Predeterminado','').replace('[COLOR lightskyblue]lightskyblue[/COLOR]','[COLOR lightskyblue]').replace('[COLOR aliceblue]aliceblue[/COLOR]','[COLOR aliceblue]').replace('[COLOR antiquewhite]antiquewhite[/COLOR]','[COLOR antiquewhite]').replace('[COLOR aqua]aqua[/COLOR]','[COLOR aqua]').replace('[COLOR aquamarine]aquamarine[/COLOR]','[COLOR aquamarine]').replace('[COLOR azure]azure[/COLOR]','[COLOR azure]').replace('[COLOR beige]beige[/COLOR]','[COLOR beige]').replace('[COLOR bisque]bisque[/COLOR]','[COLOR bisque]').replace('[COLOR black]black[/COLOR]','[COLOR black]').replace('[COLOR blanchedalmond]blanchedalmond[/COLOR]','[COLOR blanchedalmond]').replace('[COLOR blue]blue[/COLOR]','[COLOR blue]').replace('[COLOR blueviolet]blueviolet[/COLOR]','[COLOR blueviolet]').replace('[COLOR brown]brown[/COLOR]','[COLOR brown]').replace('[COLOR burlywood]burlywood[/COLOR]','[COLOR burlywood]').replace('[COLOR cadetblue]cadetblue[/COLOR]','[COLOR cadetblue]').replace('[COLOR chartreuse]chartreuse[/COLOR]','[COLOR chartreuse]').replace('[COLOR chocolate]chocolate[/COLOR]','[COLOR chocolate]').replace('[COLOR coral]coral[/COLOR]','[COLOR coral]').replace('[COLOR cornflowerblue]cornflowerblue[/COLOR]','[COLOR cornflowerblue]').replace('[COLOR crimson]crimson[/COLOR]','[COLOR crimson]').replace('[COLOR cyan]cyan[/COLOR]','[COLOR cyan]').replace('[COLOR darkblue]darkblue[/COLOR]','[COLOR darkblue]').replace('[COLOR darkcyan]darkcyan[/COLOR]','[COLOR darkcyan]').replace('[COLOR darkgoldenrod]darkgoldenrod[/COLOR]','[COLOR darkgoldenrod]').replace('[COLOR darkgray]darkgray[/COLOR]','[COLOR darkgray]').replace('[COLOR darkgreen]darkgreen[/COLOR]','[COLOR darkgreen]').replace('[COLOR darkgrey]darkgrey[/COLOR]','[COLOR darkgrey]').replace('[COLOR darkkhaki]darkkhaki[/COLOR]','[COLOR darkkhaki]').replace('[COLOR darkmagenta]darkmagenta[/COLOR]','[COLOR darkmagenta]').replace('[COLOR darkolivegreen]darkolivegreen[/COLOR]','[COLOR darkolivegreen]').replace('[COLOR darkorange]darkorange[/COLOR]','[COLOR darkorange]').replace('[COLOR darkorchid]darkorchid[/COLOR]','[COLOR darkorchid]').replace('[COLOR darkred]darkred[/COLOR]','[COLOR darkred]').replace('[COLOR darksalmon]darksalmon[/COLOR]','[COLOR darksalmon]').replace('[COLOR darkseagreen]darkseagreen[/COLOR]','[COLOR darkseagreen]').replace('[COLOR darkslateblue]darkslateblue[/COLOR]','[COLOR darkslateblue]').replace('[COLOR darkslategray]darkslategray[/COLOR]','[COLOR darkslategray]').replace('[COLOR darkslategrey]darkslategrey[/COLOR]','[COLOR darkslategrey]').replace('[COLOR darkturquoise]darkturquoise[/COLOR]','[COLOR darkturquoise]').replace('[COLOR deeppink]deeppink[/COLOR]','[COLOR deeppink]').replace('[COLOR deepskyblue]deepskyblue[/COLOR]','[COLOR deepskyblue]').replace('[COLOR dimgray]dimgray[/COLOR]','[COLOR dimgray]').replace('[COLOR dimgrey]dimgrey[/COLOR]','[COLOR dimgrey]').replace('[COLOR dodgerblue]dodgerblue[/COLOR]','[COLOR dodgerblue]').replace('[COLOR firebrick]firebrick[/COLOR]','[COLOR firebrick]').replace('[COLOR floralwhite]floralwhite[/COLOR]','[COLOR floralwhite]').replace('[COLOR forestgreen]forestgreen[/COLOR]','[COLOR forestgreen]').replace('[COLOR fuchsia]fuchsia[/COLOR]','[COLOR fuchsia]').replace('[COLOR gainsboro]gainsboro[/COLOR]','[COLOR gainsboro]').replace('[COLOR ghostwhite]ghostwhite[/COLOR]','[COLOR ghostwhite]').replace('[COLOR gold]gold[/COLOR]','[COLOR gold]').replace('[COLOR goldenrod]goldenrod[/COLOR]','[COLOR goldenrod]').replace('[COLOR gray]gray[/COLOR]','[COLOR gray]').replace('[COLOR green]green[/COLOR]','[COLOR green]').replace('[COLOR greenyellow]greenyellow[/COLOR]','[COLOR greenyellow]').replace('[COLOR grey]grey[/COLOR]','[COLOR grey]').replace('[COLOR honeydew]honeydew[/COLOR]','[COLOR honeydew]').replace('[COLOR hotpink]hotpink[/COLOR]','[COLOR hotpink]').replace('[COLOR indianred]indianred[/COLOR]','[COLOR indianred]').replace('[COLOR indigo]indigo[/COLOR]','[COLOR indigo]').replace('[COLOR ivory]ivory[/COLOR]','[COLOR ivory]').replace('[COLOR khaki]khaki[/COLOR]','[COLOR khaki]').replace('[COLOR lavender]lavender[/COLOR]','[COLOR lavender]').replace('[COLOR lavenderblush]lavenderblush[/COLOR]','[COLOR lavenderblush]').replace('[COLOR lawngreen]lawngreen[/COLOR]','[COLOR lawngreen]').replace('[COLOR lemonchiffon]lemonchiffon[/COLOR]','[COLOR lemonchiffon]').replace('[COLOR lightblue]lightblue[/COLOR]','[COLOR lightblue]').replace('[COLOR lightcoral]lightcoral[/COLOR]','[COLOR lightcoral]').replace('[COLOR lightcyan]lightcyan[/COLOR]','[COLOR lightcyan]').replace('[COLOR lightgoldenrodyellow]lightgoldenrodyellow[/COLOR]','[COLOR lightgoldenrodyellow]').replace('[COLOR lightgray]lightgray[/COLOR]','[COLOR lightgray]').replace('[COLOR lightgreen]lightgreen[/COLOR]','[COLOR lightgreen]').replace('[COLOR lightgrey]lightgrey[/COLOR]','[COLOR lightgrey]').replace('[COLOR lightpink]lightpink[/COLOR]','[COLOR lightpink]').replace('[COLOR lightsalmon]lightsalmon[/COLOR]','[COLOR lightsalmon]').replace('[COLOR lightseagreen]lightseagreen[/COLOR]','[COLOR lightseagreen]').replace('[COLOR lightslategray]lightslategray[/COLOR]','[COLOR lightslategray]').replace('[COLOR lightslategrey]lightslategrey[/COLOR]','[COLOR lightslategrey]').replace('[COLOR lightsteelblue]lightsteelblue[/COLOR]','[COLOR lightsteelblue]').replace('[COLOR lightyellow]lightyellow[/COLOR]','[COLOR lightyellow]').replace('[COLOR lime]lime[/COLOR]','[COLOR lime]').replace('[COLOR limegreen]limegreen[/COLOR]','[COLOR limegreen]').replace('[COLOR linen]linen[/COLOR]','[COLOR linen]').replace('[COLOR magenta]magenta[/COLOR]','[COLOR magenta]').replace('[COLOR maroon]maroon[/COLOR]','[COLOR maroon]').replace('[COLOR mediumaquamarine]mediumaquamarine[/COLOR]','[COLOR mediumaquamarine]').replace('[COLOR mediumblue]mediumblue[/COLOR]','[COLOR mediumblue]').replace('[COLOR mediumorchid]mediumorchid[/COLOR]','[COLOR mediumorchid]').replace('[COLOR mediumpurple]mediumpurple[/COLOR]','[COLOR mediumpurple]').replace('[COLOR mediumseagreen]mediumseagreen[/COLOR]','[COLOR mediumseagreen]').replace('[COLOR mediumslateblue]mediumslateblue[/COLOR]','[COLOR mediumslateblue]').replace('[COLOR mediumspringgreen]mediumspringgreen[/COLOR]','[COLOR mediumspringgreen]').replace('[COLOR mediumturquoise]mediumturquoise[/COLOR]','[COLOR mediumturquoise]').replace('[COLOR mediumvioletred]mediumvioletred[/COLOR]','[COLOR mediumvioletred]').replace('[COLOR midnightblue]midnightblue[/COLOR]','[COLOR midnightblue]').replace('[COLOR mintcream]mintcream[/COLOR]','[COLOR mintcream]').replace('[COLOR mistyrose]mistyrose[/COLOR]','[COLOR mistyrose]').replace('[COLOR moccasin]moccasin[/COLOR]','[COLOR moccasin]').replace('[COLOR navajowhite]navajowhite[/COLOR]','[COLOR navajowhite]').replace('[COLOR navy]navy[/COLOR]','[COLOR navy]').replace('[COLOR none]none[/COLOR]','[COLOR none]').replace('[COLOR oldlace]oldlace[/COLOR]','[COLOR oldlace]').replace('[COLOR olive]olive[/COLOR]','[COLOR olive]').replace('[COLOR olivedrab]olivedrab[/COLOR]','[COLOR olivedrab]').replace('[COLOR orange]orange[/COLOR]','[COLOR orange]').replace('[COLOR orangered]orangered[/COLOR]','[COLOR orangered]').replace('[COLOR orchid]orchid[/COLOR]','[COLOR orchid]').replace('[COLOR palegoldenrod]palegoldenrod[/COLOR]','[COLOR palegoldenrod]').replace('[COLOR palegreen]palegreen[/COLOR]','[COLOR palegreen]').replace('[COLOR paleturquoise]paleturquoise[/COLOR]','[COLOR paleturquoise]').replace('[COLOR palevioletred]palevioletred[/COLOR]','[COLOR palevioletred]').replace('[COLOR papayawhip]papayawhip[/COLOR]','[COLOR papayawhip]').replace('[COLOR peachpuff]peachpuff[/COLOR]','[COLOR peachpuff]').replace('[COLOR peru]peru[/COLOR]','[COLOR peru]').replace('[COLOR pink]pink[/COLOR]','[COLOR pink]').replace('[COLOR plum]plum[/COLOR]','[COLOR plum]').replace('[COLOR powderblue]powderblue[/COLOR]','[COLOR powderblue]').replace('[COLOR purple]purple[/COLOR]','[COLOR purple]').replace('[COLOR red]red[/COLOR]','[COLOR red]').replace('[COLOR rosybrown]rosybrown[/COLOR]','[COLOR rosybrown]').replace('[COLOR royalblue]royalblue[/COLOR]','[COLOR royalblue]').replace('[COLOR saddlebrown]saddlebrown[/COLOR]','[COLOR saddlebrown]').replace('[COLOR salmon]salmon[/COLOR]','[COLOR salmon]').replace('[COLOR sandybrown]sandybrown[/COLOR]','[COLOR sandybrown]').replace('[COLOR seagreen]seagreen[/COLOR]','[COLOR seagreen]').replace('[COLOR seashell]seashell[/COLOR]','[COLOR seashell]').replace('[COLOR sienna]sienna[/COLOR]','[COLOR sienna]').replace('[COLOR silver]silver[/COLOR]','[COLOR silver]').replace('[COLOR skyblue]skyblue[/COLOR]','[COLOR skyblue]').replace('[COLOR slateblue]slateblue[/COLOR]','[COLOR slateblue]').replace('[COLOR slategray]slategray[/COLOR]','[COLOR slategray]').replace('[COLOR slategrey]slategrey[/COLOR]','[COLOR slategrey]').replace('[COLOR snow]snow[/COLOR]','[COLOR snow]').replace('[COLOR springgreen]springgreen[/COLOR]','[COLOR springgreen]').replace('[COLOR steelblue]steelblue[/COLOR]','[COLOR steelblue]').replace('[COLOR tan]tan[/COLOR]','[COLOR tan]').replace('[COLOR teal]teal[/COLOR]','[COLOR teal]').replace('[COLOR thistle]thistle[/COLOR]','[COLOR thistle]').replace('[COLOR transparent]transparent[/COLOR]','[COLOR transparent]').replace('[COLOR turquoise]turquoise[/COLOR]','[COLOR turquoise]').replace('[COLOR violet]violet[/COLOR]','[COLOR violet]').replace('[COLOR wheat]wheat[/COLOR]','[COLOR wheat]').replace('[COLOR white]white[/COLOR]','[COLOR white]').replace('[COLOR whitesmoke]whitesmoke[/COLOR]','[COLOR whitesmoke]').replace('[COLOR yellow]yellow[/COLOR]','[COLOR yellow]').replace('[COLOR yellowgreen]yellowgreen[/COLOR]','[COLOR yellowgreen]')</expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/HdoLqzu.jpg<thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>
 










<item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [COLOR lightseagreen][[COLOR white]Buscador[COLOR lightseagreen]][/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/S1r1T5Y.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>









------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 <item>
<title>[COLOR gold]* [COLOR lightseagreen]Miniseries Cristal [COLOR white]Cristal [COLOR gold][/COLOR]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/H9Lcmk9.jpg</thumbnail>
<fanart>https://i.imgur.com/RsLj1lh.jpg</fanart>
<externallink>https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/SERIES/Base.Miniseries.txt$$LSProEncKey= $$</externallink>
</item>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightseagreen]Series [/COLOR][COLOR white]Flix[/COLOR] </title>
<link>$doregex[A]</link>
<regex>
<name>A</name>
<listrepeat><![CDATA[
<title>[COLOR gold]*[/COLOR] [COLOR lightseagreen]Series Flix [COLOR white][A.param1] [/COLOR]</title>
<thumbnail>https://i.imgur.com/qvzF7Rz.jpg</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<link>$doregex[makelist2]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<agent></agent>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param2] [makelist2.param3][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param2] [makelist2.param3][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
elegir = '[A.param2]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param2][temp.param3][/COLOR]</title>
<info>[COLOR white][temp.param2][temp.param3][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)choose-season".*?href="(.*?)".*?>(.*?)<.*?>(.*?)<]]></expres>
<page>[makelist2.param5]</page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param1][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[makelist2.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)num-epi">(.*?)<.*?<a href="(https://seriesflix.io/episodio.*?)" class="lnk-blk"]]></expres>
<page>[temp.param1]</page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param3] [link_final.param2][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[makelist2.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url1 = '[cap.param2]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>final_url</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[final_url]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/qvzF7Rz.jpg</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
</item>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [/COLOR][COLOR white]Hd[/COLOR] </title>
<link>$doregex[A]</link>
<regex>
<name>A</name>
<listrepeat><![CDATA[
<title>[COLOR gold]*[/COLOR] [COLOR lightseagreen]Series Hd [COLOR white][A.param1] [/COLOR]</title>
<thumbnail>https://i.imgur.com/Aqhr7Ig.jpg</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<link>$doregex[makelist2]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    items = [('Buscador', 'search', ''), ('Estrenos', 'estrenos', ''), ('Ranking Imdb', 'ranking', ''), ('Genero', 'genero', '')]
    return items
]]></expres>
<page></page>
<agent></agent>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param2] [COLOR aqua]*[makelist2.param4][makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param2] [COLOR aqua]*[makelist2.param4][makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>https://hdfull.se[makelist2.param3]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
elegir = '[A.param2]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>d</name>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url='[temp.param2]'):#cPrLItsLTfakl
  if 'Especiales' == url:
    return '[temp.param2]'
  else:
    return 'Temporada [temp.param2]'
]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white]$doregex[d][/COLOR]</title>
<info>[COLOR white][temp.param2][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>https://hdfull.se[makelist2.param3]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)<li><a href='(.*?)'>(.*?)<]]></expres>
<page>https://hdfull.se[makelist2.param1]</page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param3][/COLOR]</info>
<link>$doregex[peli]</link>
<thumbnail>https://hdfull.se[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)item center">.*?href="(.*?)".*?src="(.*?)".*?title="(.*?)"]]></expres>
<page>https://hdfull.se[temp.param1]</page>
</regex>
<regex>
<name>peli</name>
<listrepeat><![CDATA[
<title>$pyFunction:("[COLOR white][CAPITALIZE][peli.param4] [peli.param2] [peli.param3][/CAPITALIZE][/COLOR]").replace("https://","").replace("http://","")</title>
<link>$doregex[selecion_inteligente]</link>
<info>[COLOR white][CAPITALIZE][peli.param2] [peli.param3][/CAPITALIZE][/COLOR]</info>
<thumbnail>https://hdfull.se[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcaddon,json,xbmcgui,urllib2
$doregex[finalhdfull]
]]></expres>
<page></page>
</regex>
<regex>
<name>finalhdfull</name>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcaddon,json,xbmcgui,urllib2
def GetLSProData(page_data, Cookie_Jar, m):

  return re.split('\n*?', urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/dominios/finalhdfull').read())[0]

]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '[peli.param1]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/fUmWn5D.png</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
</item>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 <item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [/COLOR][COLOR white]Por Productoras[/COLOR]</title>
<link>$doregex[lou]</link>
<externallink>https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/SERIES/PRODUCTORAS</externallink>
<thumbnail>https://i.imgur.com/5kY0BRB.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 <item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [/COLOR][COLOR white]Turcas[/COLOR]</title>
<link>$doregex[lou]</link>
<externallink>https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/SERIES/PASARELA.SERIES.TURCAS</externallink>
<thumbnail>https://i.imgur.com/w6VUR30.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>
 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [COLOR white]Dilo[/COLOR]</title>
<link>NOLINK</link>
<thumbnail>https://i.imgur.com/T4DbHGd.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
 <externallink>https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/SERIES/Series.Dilo</externallink>
</item>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [/COLOR][COLOR white]SeriesFlv[/COLOR]</title>
<link>$doregex[A]</link>
<regex>
<name>A</name>
<listrepeat><![CDATA[
<title>[COLOR gold]*[COLOR lightseagreen]SeriesFlv [COLOR white][A.param1] [/COLOR]</title>
<thumbnail>https://i.imgur.com/inVXax6.jpg</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<link>$doregex[makelist2]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    items = [('Buscador', 'search', ''), ('Mas Vistas en la Semana', 'semana', ''), ('De La A a la Z', 'letra', '')]
    return items
]]></expres>
<page></page>
<agent></agent>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>$pyFunction:('[COLOR gold][COLOR white][CAPITALIZE][makelist2.param3][/CAPITALIZE][/COLOR]').replace('-',' ')</title>
<info>[COLOR white][CAPITALIZE][makelist2.param3][/CAPITALIZE][/COLOR]</info>
<link>$doregex[makelist]</link>
<thumbnail>$doregex[img]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
elegir = '[A.param2]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR gold][makelist.param1][COLOR white][makelist.param3][/COLOR]</title>
<link>$doregex[m]</link>
<thumbnail>$doregex[img]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<info>[COLOR gold][makelist.param1][COLOR white][makelist.param3][/COLOR]</info>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param1]'
name = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>m</name>
<listrepeat><![CDATA[
<title>[COLOR white][m.param2] [COLOR lightskyblue][m.param3] [COLOR gold][m.param1][/COLOR]</title>
<title></title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>$doregex[img]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<info>[COLOR white][m.param2] [COLOR lightskyblue][m.param3] [COLOR gold][m.param1][/COLOR]</info>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist.param2]'
name = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<expres>var palabra = "(.*?)"</expres>
<page>https://seriesflv.org/[m.param4]</page>
</regex>
<regex>
<name>img</name>
<expres><![CDATA[#$pyFunction
finalurl = '[makelist2.param4]'
import re,requests,xbmc,urlresolver
def GetLSProData(page_data,Cookie_Jar,m,finalurl=finalurl):#cLrJIhsDApL
  if 'http' in finalurl:
   return finalurl
  else:
   return 'https://i.imgur.com/inVXax6.jpg'
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/x2NNTMr.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 <item> 
<title>[COLOR gold]* [COLOR lightseagreen]Series [/COLOR][COLOR white]Teleseries[/COLOR]</title> 
<externallink>https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/SERIES/teleseries.txt</externallink> 
<link>na</link> 
<thumbnail>https://i.imgur.com/vkbwOMp.png</thumbnail>
<fanart>https://i.imgur.com/i6rVUIV.jpg</fanart>
</item>
 
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 <item>
<title>[COLOR gold]*[/COLOR] [COLOR lightseagreen]Series [/COLOR][COLOR white]Cristal Top 20[/COLOR] </title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MHZ4TUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGT2JVMHlXa1JWZDA1NlJYcE5WRmsxVG1wRmVrNTZWVFJPZWxFd1dXcEthVTVVU1hwUFZGVjZUWHBaTWxwcVdURk9lazB4VGxSamQwNVVXVEpOVkZFd1RrUm5NVmxVVFhkT1ZHTXpUbFJqZUUxNldUQk9WRnBvVFhwak1GcEVWbWhPZWxFelRsUlJlVTVFUlRGT1JHTXdUa1JGZWs5VVZUTk9SMFV6V1ZSUk5FNUVSWHBPYWxFd1RucGpNVTFxVVhoT1YwVXdUV3BTYTA1SFdUTk9hazB6VFhwak1VNVVUWGxPYlVreVRWUlplazVFWXpOT1JGbDRUWHBqTTA1VVl6Tk5lazE2VFdwak0wNUVUVEJPZWxGNlRqSkZlazlVWkdoT2FrMHhUVVJOTWsxNlVUTk9ha3B0VFcxSk1GcHFWVEpPVkUxNlRsUk5NRTF0V1ROT2FscHFUVzFKZVZscVNtMU9iVlV3V2tSWk1VNXFXVEpPYWtwdFRucEZNVTFFVlRSTmJVa3pXVlJWTlUxdFNUSk9hbHByVG0xVk1scFVUWHBOYlVsNlRtcFZNazVxVFhwTmVscG9UVzFaTWs1VVVtMU9WR2Q2VDBSS2FVNXRWWHBOZW1NMVRYcHJNVTFFV1RWT2VrbDZUbnBOTlU1Nll6Rk5hbGt5VFhwamVrNTZaR2hPTWtWNlQxUlZNazV0UlhsYWFsa3lUbTFSZWs1NldUQk9SMDE2VDFSS2JVNTZUVE5PYWxreVRtcFpNMDVxV214T1ZGa3dUbnBOTlU1cVdYcE5lbGw2VFhwak1VOUVUVFZPTWtVd1dWUmpORTVFVVhwT2FsVXdUbTFWZVZscVRYZE9hbU16VG5wWk1rNXFaekZPZWxrd1RtMU5NMDlVV1hsTmVsVXhUMFJTYkU1dFVUSk5hbFUxVGtkVk1GcHFXVEZPVkdkNlQxUlZNMDVxVVRKT1ZGazBUWHByTWs1VVRYZE9lazB6VFZSWmVrNTZUVEZPUkdOM1RsUm5NazU2VFhsTmJWa3pUV3BqZDAxNll6QmFWR00wVG5wWk0wNVVVWGxPVjBVeVdsUlplVTVVWjNwUFZGVjNUbXBSTWs1cVVURk5lbU16VG1wYWEwNTZXVEJhYWxreFRrZEZlazlVWTNoTmVtc3pUbnBaZVU1cVdUSk9hbEpvVG5wbmVrMVVZekpPTWtWNlQwUk5NVTVFU1ROWlZGVXhUbXBaTWxsVVZtaE9WR2Q2VFhwU2FrNXFVVEpPVkUxNVRYcG5NazVxVFRGT2VsRXdXbXBOTVU1VVozcE9hazE0VG0xSk0xbFVUWGRPYWtreFdWUmthRTVxYXpKYVJGcHJUbnBSTWs5VVVYcE9lbGt4VGxSTmQwNVVVVE5OUkZrd1RYcFJNMDFxV210TmVra3dXWHBqZVU1RVNURk5lbFV5VG5wQmVrMXFUWGRPYlZVelRtcGpORTVIU1RGT1JGcHRUbFJqTVUxcVdtdE9la1V3V21wUmVVMXRTWHBOYW1ONlRsUm5NazlFWTNwT1IxVXhUbFJqZWs1SFRURk9SRlYzVFhwTmVrNVVXVEJPVjBVd1drUlJNazVVVVRCT2FscHFUbnBSZVZscVRYbE9WRlV4VGtSUmVrNUhUVEJhYWxKb1RXMUpNMDlVVVhsTmVtc3pXVlJaTkUxNmF6Rk5lbGswVGxSRk1VMXFUVE5OYlVsNlQxUlpOVTE2WnpOTlZGWm9UbnBSTWxscVdYaE9iVVV5VFdwTmVVNUhWVEJhVkZFeFRtMUpNVTFxVlRKT2Ftc3hUWHBqZDA1VVp6Tk9SRkV5VGtSTmVrNTZVVEpPYlUwd1RYcGpNVTE2WXpCYWFsRXlUbXBWZWsxNldUUk9ha1V5VG1wWk0wNXRWVEJOYW1NeVRtcFZNVTVFWkdoT2FtZDZUbnBqZWs1cVRURk9hazB4VG0xUk1WbFVXbWxPVkZreFRucE5kMDVxVVRCYVJFMTVUbnByTWxsNlRUTk5la2t6VDBSVk5VNXRUVE5PYW1NeVRtcFZNMDFxV1hsT1ZHTXpXVlJhYlU1dFdUSlBSRkY1VGtkTmVrMTZVVE5PZWxFelRVUlJOVTVxU1RCTmFsRTBUbXByTWs1VVRUVk9lbXQ2VFVSU2FFNXRTVE5OYWxVelRtcFpNRTVVV1RCT2Fsa3dUVlJaTTA1dFRUSlBWRTB3VGxSamVrNXFVbXhPYWxreVdXcGpNVTV0VVRKTmFsbDVUWHBSTVU1Nll6Uk9WRkV6VFVSWk5VNUVaM3BOVkUxM1RYcEJNRTVFVlRKT2FtTXdUMFJWTkU1cVl6SlphbEUwVFcxSk1FMTZaR2hPUkZVd1dtcFJNRTE2UlROTlZHTjRUbFJqTVU1RVVYaE9SRWw2VFdwWk1VNUhUVE5OZW1NMFRYcHJNRnBVV1RCT1IxRXpUa1JTYUU1NlVYcE9lbU15VGxSck1rOUVTbTFOZWtFd1RucFJNMDVIVlRGT2VtTjNUa2RKTUUxVVl6Sk9WRmt3VDFSVk0wNUhSWHBPZWsweVRucEJNVTVVV21sTmVrMHdUMVJOTVU1VVl6Tk9hbGt6VGxSamVrMTZUWGhPYWswd1dWUmthRTE2UlRCWmVsRXlUbXBSTUZwRVZURk5lbGw2VFVSUmVVMTZTVEphVkdONFRucEZNVTFVVlhkTmJVbDZUa1JqZWs1cWF6RlBSRXBwVGtSRmVrNVVUVEZPUkVVelRrUlpNVTVIVlRGT2VtTXlUbXBGTWxwRVZYaE9SMFY2VFVSVmVFNUVVWHBPZWxFeVRXMVpNMDFxVFRCT1JGa3hUa1JXYUU1RVVUQk5lbEUxVGtkWk1scEVXbWxPZWxrd1RYcFJlRTVFVVRGUFZGVTBUWHBWZVZwcVdUTk5lbU16V1ZSak0wNVVRVEJPYWxFeFRtcG5NVTlFVFRGTmVsbDZUbFJqTkU1RVp6SmFWRmt6VGxSbmVrMVVVWGhPYWxreVRsUlJlRTE2VlRKT1JGVTFUbXBSZWs5RVRYZE9SRmt5VDFSVmQwNVVZM3BPUkZVeFRucG5lazVVWTNsTmJVa3dXVlJLYVU1cVl6Sk5hbFUwVGtkSk0xbFVXVE5PZW1zeVQwUlNhVTE2WnpKT2VtTXlUWHBOTTA1RVNtMU9iVkV5VFZSTk1FNUhUWHBOZWxVeVRucGpNVTlFVFRST2VrVXlUa1JqTWs1SFNURk9WRnBzVG1wUk0wOVVVVFJPYWxVeFRWUlplRTVVUlhwUFJFMHlUbFJaTUUxcVdYbE5lbEV5VDBSWk5VNTZhekphYWxFeFRtMVZNVTlVV21wT1JFMHpUbXBqZWs1RVZYcE5WRmt3VGtkRk1rOUVVVEJPUkZFelRsUlJlazE2WXpGTmVsRjVUbFJuTTA5VVVtbE9WR015VFdwTk1VNUVVVE5PUkZrelRtcFpNRnBxWTNwTmVrMHpUbFJqZWsxNlZYcE5WRkY0VGtkRmVrNVVWVFJPVkZVeFRtcGpNMDVFVlRGWlZGbDRUakpGTTA1VVZUQk5iVWt5VDFSTmQwMTZSWHBOYW1Nd1RYcHJNRnBFVm1oTmVrRXpUVVJOTVUxNlVUQlplbU0wVG5wak1FMXFVVFJOZWtVeVdWUlZNMDU2VFRCTmVtTXhUbFJGTUU1RVl6Sk9SMWt5VG5wa2FFNTZZekpPZWxKclRYcHJNMDFFVW1oT2JVa3hUbFJTYVUxdFdUSk9WRkY2VFcxWk1sbDZXbWxPUkUwelQwUlJlVTVFVVhsWmFscG9Ua1JaTTA1cVkzaE9ha1V5V1dwUmVVMTZUVEpOYWxwb1RsUkZNVTFxVFRGT1IwVXhUa1JLYlUxNlJUQk5lbU41VG5wUk1FMVVXWGxOZW1Nd1RYcFplRTV0VVRCUFJGa3hUa1JGZWs1cVRURk9WRlV6VGtSamQwNUVVWHBQVkZWNlRqSkZNbGxxVFhsT1JGRjVXbXBWTWs1RVRUQmFhazAxVFhwQk1FMTZXbXhPYlVsNlRucGFiVTVFV1RKT2FrMHpUa2RaZVZscVdtbE9lazB3V1hwU2EwNVVSWHBPYWsxNVRrUkZNVTFFVW1oT2VsVjZUVVJSTUUxdFdUQmFWRkp0VG1wVk1rOVVZM2hPZWxWNlRXcFpOVTE2VFRCT2Vsa3hUbFJyZWsxRVVURk9lbGt5V1dwUk5FMTZhekJPYWxKdFRucG5NRTVVV1hoT2Vra3pUa1JSZVU1VVFUSlBWRlYzVFhwQk1FNVVUVEZPUkZVeVdXcE5NMDU2UVRGUFJHTXpUbFJCTWsxcVRURk9SRVV3V1hwS2JVMTZaekpOYWswelRtcE5NRTFVVVRWTmVtdDZUVVJhYkUxNlVUTlpWRkV4VFcxWk1rMXFVVEZOZW10NlRsUlNhazU2VlRCT2FsVjNUbnBWTWxwVVdUSk9SR3Q2VGxSTk5VNXRXVEJPYWxsNlRrUm5NRnBxWTNkT2FtY3dUWHBLYlU1RVJYcE5hazB6VG0xWk0wMUVUVE5PYlVVeFRXcFNiVTV0V1RGT2Vsa3dUa1JqTWxwcVZtaE5lbFV5VGxSUmVVNVVhek5OZWxKclRrZFZNbGxxWTNkT1IxVjZUV3BhYVU1SFVURlBSRTE2VGxSQk1VNVVUVEpPVkVVeVRtcFZNRTVVVFRGUFJHTXhUbnBqZWs5VVdtcE9hbFV4VFhwWmVFMXRTVEZPUkZWNFRucEJlVmxxV1ROT2Vra3hUbFJqZDAxNlFURlBSRkY1VG1wVk1sbHFVVE5OYlZrelQwUlJlRTVxVVRKT2VsbDVUbnBSTWs5RVZUQk5iVmw2VG1wTk1rNVVSVEJPUkUwelRtcGpNRmxxWXpST2FtTXpUa1JrYUU1RVp6Tk9SRkY0VG5wTmVWcHFVbXhPUjBsNVdtcFpNazVVV1RKTlZGa3hUVzFaTWsxcVVUTk9WRUV4VFZSTk0wNTZUVEJaVkUxM1RrUk5lazVVWXpSTmVtY3pUa1JWZDA1RWF6Sk9WRmt5VG5wbk0wNXFWWGhPYlVVelQxUmplazF0U1RKUFZGRTBUa1JOTWsxVVdURk9SMGt6VDFSYWFFNXFXVEJOZWxwb1RsZEZNVTFVVW1oT1IwMHdUWHBqZVU1cVRUQlpWRmw1VG1wWk1VNXFVVEZPUkdzeVRsUlJNMDVxV1RKTlZGcHFUbXBaTTA5VVdURk5la0V4VDBSTk5VNUVVVE5PUkUxNlRXMVpNRTFVV1RGT2FsVXlUbnBSZWs1cVVUTk9WRkpvVG1wUmVrMUVWVEpPVkVFeFRYcGplVTV0VFRGTlJGbDRUa2RKZWs5RVl6Vk9WR2N6VG1wYWEwNTZRVEZOYWsxNlRsUlZNazVVVVRWT2FsVXlUa1JhYVU1cVp6Sk9hbGt6VG5wUmVrOVVVWGhOYlZrelRtcFJlVTVIVFhwT2VsRXlUbXBWTUUxVVVteE9lazB6VFZSWmVVMTZaekZQVkZFd1RYcFpNbGw2WXpKT2Vtc3lXbFJSZWsxNlp6SmFhbU13VGtkUmVWbHFVVEZOZWswd1RrUmpNazVxVlRCUFJGVTBUbXByTWs1cVRUSk9SMDB5VG1wVmVFNTZaM3BOUkZreVRXMVpNRTFVV1RCTmVrMHpUMFJWTWs1cVZURk5lazB6VG0xRk1FNVVVVE5PUjFFd1RucE5lRTV0V1RCT2FrcHRUWHBaTUZwVVdURk9WRWw2VDBSYWJVNVVWVEJhUkdNMVRrUkZlVnBxWTNwT2VtTjZUbFJSTWs1Nlp6Rk5lbFpvVG5wWmVrNVVVbWhPUkZGNlRXcGFhazVVUlRKYVJFcHBUa1JqTWxwVVdtdE9hbXN4VDBSU2EwNXRTWHBPVkZFMVRucFplazVFV1hwT2FsRjZUa1JWZUU1NlFYcE9lbGt6VFcxSmVrMXFVWGhPUkZGNlRucGFhMDV0VlRCTmVsVTBUbTFSTUUxcVNtMU9hbWQ2VFhwVmQwNUhUWHBPYWsweVRrZEplazVFVVRST2VsbDZUbXBWTUUxNll6Qk9WR015VGxSck1rMTZTbWxPUjBreVdYcFNhVTVxVlRGWlZGVjRUakpGZWs1cVVtdE9SR2N4VGtSYWJFNTZUVEJOZWxreVRYcFpNRnBxVlROT1IwMHlXV3BrYUU1VVZYcE5SRnBxVG1wWk1GbHFZekZPUjFFeVRrUlplRTVxUlRCT2Vsa3hUa1JqTVU1VVl6Sk9hbWQ2VG5wTk5VNXFZekphVkZwdFRYcGplVmxxVlRWT1JFMHlUbFJOZVU1SFZUSk9SRmt6VG1wVmVrOVVZek5PYlZGNlRsUlNhMDVxYTNsYWFrMHpUa1JqTWs1VVVUVk9WRkY2VDFSWk1rNUVUVEphVkZwc1RucEpNVTVVV210TmJWa3dXWHBaZVU1dFNUQlBSRmt4VGtkTk0wOUVWWHBOZW1ONlRucFJNRTVFU1RCT2FsRTBUWHBWTUU1VVZUTk5la0V6VDBSYWJVNVhSWGxaYWxGNFRsZEZlazVxWXpOT2Vra3lXbXBSTTAxdFNUSk9WRnBwVG5wUk1FMXFWVE5PZWxVelRVUlZNVTU2WnpKUFJGcHJUWHBuTUZsNlVtdE9ha2t5V21wa2FFNUhUVEpaYW1ONlRYcFpNRmxxV1RKT2Ftc3dUV3BOTWs1NmF6QlBWRmswVFhwSk1GbFVVbTFPUjFFeVRXcFpNVTVFU1ROT2FsSm9UbnBKZWs1VVdtaE9lbEV3VFZSak1VNTZVVEJPUkdNMFRtcGpNVTFFVVRGT2VsVXlUVlJqTlU1RVZUSk9hbFV6VG5wWk1VMTZXVEpOZWtrd1dYcE5NazVFUlhsYWFsVTBUa1JuTWs1cVZYbE9iVlV3VDBSVmVrNTZWVE5aVkZFd1RXMVpNRmxVVVRCT1ZGRXhUa1JLYlU1RVdYcFBWR1JvVG5wWk1rOVVZM2xOZWtFeVdsUktiVTV0VlRKT2FsRTBUa1JOTWxsNldUSk5iVWt3VFdwTk5FNUVVWGxhYW1OM1RrZFZNRTFxWTNwT1ZFa3dXWHBqTkU1NldYcE5SRnBxVFhwbk0wNTZWVEJPYW1zelRucFpORTU2V1ROT1JGRXdUbnBaTVU5VVRUUk5lbEV4VGtSamVVNUhSWHBOZWxFd1RrZE5NMDFxVlhoTmVtY3pUVlJWZDA1SFdURk5WRkV3VG5wSk1scHFVVFJPYWxrd1RsUlJNMDE2VlRGTlJHTjVUbnBGTUU5RVdUSk9lazB6VDBSTmVrNUhXVEZOUkZFeVRucFJNazVFVlhsT2VsbDZUMVJaTTA1cVdUQmFSRlY1VGtSUmVrMXFXVFZPYlVVeVdWUlZlazVxWTNwUFZFMDFUa2RGTTA5RVdtMU5lbXN3V1dwak5FNTZRVEJPYW1ONFRucFJNbGw2V1RKT1JHc3pXVlJWTVU1NmF6RlpWRkpzVFhwTk1FMVVTbWxPYWxreFRWUlZNRTE2U1RGT2FsRXdUa1JWTTA1VVZYaE9WRUY2VG1wVmVrNUhUVE5PVkZWNFRrUlpNMDlFWXpGT2JWa3pUVVJhYWs1cVdURlBWRkV3VG1wVk1rMTZVVFZPUkdNd1RucFNhVTVxVVROT2VtTjNUbXBaZWsxVVVUVk9WR2N5V1dwamQwMTZSWHBOVkZrMFRYcE5NbGxxV1RSTmVtTXpUMVJSTVUxNlp6TlBWRkV4VGxSQmVrMXFVbWxPYlVrd1dWUmpNVTE2VlhsYWFrMHdUbXBaTVU1RVVtcE9SR2N3VDFSak5VNXRTWHBOZWsweVRrZFZNRmxxVlhsTmVtY3hXVlJaTlU1Nlp6Qk9WRlYzVGtSak1GbFVVbXRPYlVVd1dsUmFiVTU2VFhwT2FsRjRUbGRGTWs1cVVtdE9Na1V6VDFSVmVFNUVVVE5aVkZFeFRYcE5NbHBVV1ROT1ZFRXdXbXBXYUU1RVNUQmFhazB4VG5wQk1rMTZXWGxOZW1jelRucFpNazV0U1RCYVJHTXpUbnBGTVZsVVkzbE5la1V3V1hwTk1FNUVaekpPYWxWNFRsUlJNbGxxWXpWTmVtdDZUMFJWTkU0eVJUQk9SRmt5VFhwQk1FMVVUVEZPYW1NelQwUktiVTVFVVRKWlZHTjVUbGRGTVUxVVVtcE5lbEV5V21wWmVVMTZRWHBPVkdNMFRrUlJlVmxxVVhwT1JFa3pUa1JSTWs1cVdUQlBWRkpyVG1wWk1GcEVVVEJOYlZreVQxUlJORTVVUVRCUFZGcG9UWHByZWs1cVZYZE5iVWt6VFVSa2FFNXRVVEZQUkZwcFRrUm5lazU2V20xT1JGRjZUMVJLYlU1RVVURk5SRmswVGxSWk0wMUVXVEJPZW1NeFQwUmthRTVIVVRKT1ZGRTFUbTFaZWs1RVRURk9SRkV3V1ZSVmQwNUhVVEZOVkUwd1RtMUZNVTFFWXpOT2Vtc3dXa1JWZVUxNlVUTk9lbEpxVG0xSk1GbFVXVEZOZWxVelRVUlZNVTU2YXpKYWFsVjVUWHBCTTAxcVpHaE9SRTE2VFVSak5VNVVaek5OUkZwc1RsUk5NVTVxVFhkT1JGbDVXbXBTYVU1NlNYbFphbEUwVGxSbk0wMUVVVEJPYWxreVdrUlJOVTU2V1ROUFZGVjZUbGRGZWs1VVZYZE5iVWt6V1ZSVk0wNTZXWHBQUkZKdFRXMVplazlVVVROTmJWa3dXa1JWTVUxNlp6Tk5WR1JvVG5wck1FNXFWVEZOYlZrelRVUmpNRTE2YXpCTlZGRTBUWHBuTWxscVZYUy9Fd0FBTWtGVVJESkJkMHh0UVZSSU0wRkhjR3BCVkZKdFFWRk5la0ZIVm0xQ1IwMTZXbTFXYlVGUldqSkJkMUl5UVcxTmVWcHRSRzFCZDBneFFWUkVNbHBIV2pKQmJYQXdRWGRhTlVGVVVqQkJkM0F4UVhkYU1FSlJSRFJCUjBneVdrZE5ka0ZSZUcxQlIwdzBRVWQwTWsxUlJEQmFla3d3VFZGRmRrRkhUakZDUjBRMVFXMUlNMEpSUlhoYWJVUXlRVkZhTTBGM1VqTkJSM0ExUVZGd01FRnRUREZCUjFJeVRFZFhka0YzVmpKYVIwUnJRVzFNTVVGUmNHdEJiVVF3UWtkRU0wRktVakpCVVhBd1FYZHdiVUZIV2pKQmJYUXdURzF3TTBGdGRHMWFiWEF6UVhkNGJVRnRURzFCVVZveVRIZGFiVUZIZURKYWQxcHFRVWQ0YkV4M1RYaEJkMVl3VFZGd01scHRUREphZDFwcVFWUk1NMEZIU0d4YWJYUXhXa2ROZFZwdGNEQkNSM0ExV25wTU1VRlJSREJhYlV3eFFWRndNVUZIZUcxQ1VVdzFRVlJJTTFwdFNHdGFiVlp0V2tkeGRVRlVVak5DUjBnMFFWRklNRTEzVERCQlNsSXpXbTF4ZFVGUldqTkJSMGd5V20xd01FRlJSRFJCZDNBeVRVZGFNVUZIVGpCQmJWb3lRVWQ0YkUxM1JEVkJVVVJ0UWxGTU5VRjNWakpNYlVWM1ducFdNRTFSY0cxYWVrd3dRVWRJTlVGdFVtMUJkMFEwUVZGd01FRkhURzFCU2xJelRFZHdOVUYzVm0xQmQwMTVRWGRhTTB4SFYzcEJNbEl4V2xGd2JVRlJSRzFCUjBSclFYcEViVUZIVjNaQlVVUXdRa2R3TWtGM1ZqRmFkMDEzUVcxTU1FeDNTREJCZDB3d1FXMUVNVUYzV2pKYVIzQTBRWHBFTVZwUlJETkJlbG95UWxGSWFrRnRlREpOZDB3d1dtMTBNVXhIU0d4QlIxWXlRa2R4ZFZwdFJERmFkMGh0UVcxME1rMTNUR3hCTWxJelduZGFOVUYzZURGQlVVeHJRVlJXYlVKUldqUkJTbEl4VEVkRU1FRjZVakJNYlhBeVdtMU9NMEZIV2pCQlZGb3lUVkZJTWtGM1JETmFVVVEwUVcxME1VSlJjR3hCZDNneVRWRkliRUYzY0d4TmQwMTJXbTFTTWt4dFJEUkJSM2d4UVhkYU1FRjNVakJCUjNCcldtMXdNMXBSVjNwYWJYZ3dXbmRFTUVGNlVqQkNSMWQ2UVZGRWJVRjNjRFZCZWtneFFrZEViRUYzV2pGQlVWb3pRVWRFTWxwdGNEQmFiVWd3VEcxYU0wRkhlREpDVVhGMVdtMU1NVnBIVEcxQlVYUnNUWGRNYTBGSFRqRmFVVWhxUVZGNE1scHRjR3BCUjNneFFWRmFNMEZVV20xYVIwd3pRVWRPTUV4SFNHdGFiVll6V2xGRmVFRnRTRzFDVVVReFFYZGFNMXB0V2pCQmJYQXdUVWRNTlVGVVVtMUJiVm94UVZGYWJFMTNTREJCVkVReVduZE5kMEZIVmpCTVIwUTBXbTFXTVZwUlNEQkJVWFF6UVhkd05WcDZUREpOZDBocVFYZEVNVnBIV2pOQmJVUXhXbTF3TVVGSGVERk1SM0EwUVhwTU0xcEhTR3hCZDBRelduZE1NVUY2V2pKTlIxbzBRVzFPTTB4SFRHMUJVVkpzVFhkYU0xcHRWakpCVVVRelducFdNRUZIVERCQmJVUnRXbmR4ZFVGVVJEQk5kMDE0UVcxT01scHRjWFZCYlhSdFduZE1hMEZVV20xQ1VVMTRRVWRPYkUxM1JEVkJWRkpzVEhkRmVFRktVak5hZDNBeVFXMUVNRnB0Y0RWQmJVNHdRbEZhTVVGdGVHeE5kMFF5V25wV2JFMTNUREpCZWtReVRVZE5kVnA2VERKQlVVeHNRWGRNTWtGM2NHMUJSM2d4UVcxSWJVRlJVak5hZDFveVFUSlNNRnAzVEd4QlVYQXdRVzFFTTBGNlVqQkJiWEJzV20xV01FRjNUREZCUjA0d1dtMU1ORUZLVWpKTmQxb3lRVzFPTVV4SFJESkJWRXd5UVcxRU0wRkhUREZCYlUxNFFWRndNazFSUkROQmVrUXhURWRGZDFwdFVqSmFkMFF6UVZSYWJWcDNjR3BCVVZZeVRIZGFNa0Y2UkRCQmJVeHRXbTFNTWtGdFJHeEJTbEl4UVcxRmRVRjNSRzFCZDFvd1FVZHdiVUZSUkRSQmVsb3hRVzFGZVVGS1VqRkJSMGhzUVhwRU1rMTNjR3hCUjFZeFRFZGFiVUZVVW0xQ1IwZ3lRVzFPTWsxUmNHdGFiVVF4V2tkSWEwRlVXakZDVVVocVFWRndiVUpSV21wQlIzaHRXa2R3TTBGdFZtMWFkMGd4V20xNGJVSkhjREZCZWxZd1FsRkZkVUYzV2pCYWQzRjFRVzF3YlVKUlRERmFiWGd4UWtkWGVrRkhjREJCYlhBd1FXMVNiVUpSUlhoQlIzUXlUVWR3TUVGM1NETmFiVm8xUVZSYU1rMTJjRUZRWVVWc2JrbzFZM0ZWZUhSRFJrNWhSM3ByVjI5SFFVeEdVa2x0Y2toRU1HOTNWM1ZJZDNWNWNrdGpNVXBSUlRKSlNVbG5ia2hUVVhCaFJXbGFNVTlzVFZRMVpIQkhUMnBNU25sNGJubzVlWEJTVFVGWk1WWXpRVEo1WTNCUlRYWkhlbkJ0UjJGamVHNTNUREpKVkhWMVNsUTVUMDFVU0d4S1lWcHFTWGhXTlhCNmRXTkZNa1ZDUjBablVVRlRjVkZ4U2psVGNubEJiWEZLWjBoTlNtZGpjRWhUUkVGSlkwUkhlRGxLYm5wblpHNUtSV0pIZW1ka1JrWm5VRTFIY1Vkd1VWTnRXVzFGTUUxdFR6Uk5ZVmREY0RCU05XNHhlWHBaTUdkaVNFWTRNRzU2WnpSSGJVMUZUREJYTlVkMloyeEhVa1ExUlRJeFpXOUpUVTl4TW1kMlRIcE1hVzVTT1dKeE1YVmtibE5qZFVKS1RXdEJkM1ZRU0RKTU5IQkhUWHBOZW5VMVIzcDVkVWxKUlZkTWVHSTBTRzFKU2xwNlptdHVlR3RqUjFSMVowbDVSRFZOTWtocVNEQkJWRzlVVTNsTmVXTkpjSGcxYUVGUlJVRkNVM2hsY2tocmRWcEpTRE54VTBScFIyMUVNbkZVVERGdWVqZ3hTRlZCWTB3emVHdEZWREYxV25oRlduSlVTR1Z3VWtWb2IxTk9aVWhoY0RCRmVIVkdXVE5JYTAweVFVUktTRk5hUjNoWFkwcDRWMEZ5VkdOaFFVaEZaVmx0ZVVOWU0wVlFjRkpTTUVsS01YbHdTVVZtU1RKbWFrcElkVVpFYlhsMmNHMTBaVzlIUVZoR2VEQmxjVkpGVTBSaFNESkhkMWRxYmxGQmFXOTVVM1ZGVkVsU1JuWTViSEJWVTFoeVUwbERXbEpuYW5GVFNHbElkM2xzU0V0YU5YRXhRVlZJTTFjd1JYZFRZa2t3TldWYVIwMUtTVkY0YlVkNGNHMXZTR2RoU1ROWFVrVkhTVkJGUzNocVRVbGlNVmd6ZFhoQ1NVRkNTVWRYVlc5NWVVWkllbmxwUjNwd2JIRktlVmxIU0RCc1NuZDFkVUY2WmpOQk1FeHBiMGhUTVhKUVoyTk5NbE5wV2xGMVVVZEpTVzFhU0RneFNrZEViVWxVV2pKdlIweHFXakJhTWtFeU1VWmFVMWRWUmtvNVdHNHdVMVZGUjAxaWNVZHhNVUZKZVdKdlNIQTBSbmh4ZUc1U1NHdEtlbU13Y21GaU0zSkhTWGx1U21zMlNWRjBiVWxVU1VOWWJEbFBXbE41ZVVsM2VUQkJkMDFEV2pKMGEwZHRjVWR2U25GV1JqQkpVRzVLVFUxdU1VbFVUREZXTkZneVFVOXZlV05ZVFVwSk0wRjZZbTF4YlU5a1FrbElhMjV0ZVVsdlVYazFjRlJTTkVwNmRXSk5TMDlCUmpKWFdYSktlRE5hU0VGV1IwdFdNVTFSZURKSmJVVlBXakJCZUVkVlkxRkZNRVZCUkhsVFYweHRlVWhOYlZOSVJETkVaVnBoVjFSYWQzbG1TRzFFTWsxSmVVOU5lVmR1VFRKNVkwZ3dlWHBKTWtWaFIxRjVhWEpIY0dwQlZWTk1RWGRKYkVjeWVVVnllbGRwY0hvMVNVMHpWMkZhUzNFMGJucDVNMXBKUVdseWVFbGlSVEF3YWtsU01HdHdTRVZtYjNkUFNVMUplV1Z1U2pGSGNucDVUVzVSUld4R01FRm9XbXc0YTFwVmRETkdNMEZzU25oVFZHOUpTVFpIUjNRMGNEQndNMEYzUVVSYVVWTmhRVWhuWW5BeVNHMXdTamh0Ym0xWFowRjZPWFpGYlVSc1NVZ3haVWx0U1cxSmJWWnRSbm81VVVwVU1HdHZNMEZSUmtwWE1VeEtWMnhKVVZkalJUTk5UWEJUZFROTmRtZFBjVkZKWTB4SWVWcEpiVTlwV2pGRlRHOUtUREJ2TTFOUlJVdHdOVzVVTVVkRVIxbzBRVzFCWWsxVlFVbHZSM1ZpU1ZGUFZXNVNOV3hhYlhsQmNIZDVVRzl0VWpCWU0yTXhRVXBGTWxveU1UVkdSM2xaYm0xWFprWlFPV0pCWVZNMVRXRjVZMFpIZVhsRlNqRlhXbnBYU0ZsdFRqVnhla0YyUmxWQllVWjNRVlJZTVZwclFrcHJia1I1VjNseFZIRmxjRXBuYmsxVU1WaEdiWGd6VFVveGJYRlJlVEpCU0dOTlRHMXhhSEpLVjFoQ1VWTllTbmhXYlVaS2VVOXdkMW8wUkROVE5Gb3pkREp5UzNScmNGTlRkbGh0ZUdWTk1qRkdUSGRYVVVsSFVteENSMWRxVFVwbk5VMUtRWGhIVVU1cFJqRmFOVUV4ZFRKYU1rVlFjVE5UU2tGaGVXMUdla1JyVFRCSmVrMHlUWHB5VVhGUVJtMUpVbTVJWW1sdmVqRmpSV0ZOZUVGSlkxcEZlSEZDY0ZRd01rcFJXbWxFTTFJd1JERkZhRVpLY1dkSE0wOTJXa2R4YVUxUlFXTnllWGh0VFRCQlNVVlVTVlZHU2psWFJuaGpaWEpLZFhwTVNuRnNRVzFGWVVFelNYVndkbWRIUVROalEwRXlUVWxFZVZkUmJsTkZiVWN6ZERCQk1FMHljSHBJTlVKTFZ6VklNMEZhYjNwRlVGb3lSVFpKU0dOM1dUSXhhRzR6WTNsTWJYbEhSMHRKZFVReU9WZHhkMEZhUWxORlNFUkhUMkZFZDFkNVNsUXhRWEY2T1d4eWQzRjJjbEZQYmxreU9HcEdiVVExVFVsNWFGcEtkVTFNU1dOYVNrcEZlRzU0WjBoYWQzVmFTRzFUUVV4NVUwOXZNWEZpVFhsVGFVeEtNR3haYkdZeWIwdFRUWEpTUVdwd2VYbHVSMVZUVmtGNE9XbHlVR2Q1VFhwQk5YRlRkR2xITWxKc1dHdzVNSEI0ZVhWR1IzRTFRbFI1VFVGVVFWUkVNa2xUYmpKd2FrRjNkWFpIVTBGSFJIZEJlVm95ZFhWdk0wOXNRWHBCYWtoSFRtcHlWWGxGVFVvMU0zQjJPR3hHU0VreWJ6Qm5iRUZTVmpCQmJVaHNSbTFKYlUxdFFURk5NbkZwUlhwbU5HNXRjR3R1YlZvd2NESTFRWEJSVWpWSk1FVmxSRWRUVTFwUlFWbEJlRWw0UVRKSVpVeDZkR1ZJYlhsV2NrbEZXVWxTUVcxeFVsTlFSek5QTUVkVVoybGFNVk5OUVRCak1YSktSVTlCZUVsb2JsRk1aWEV5TlUxRllWSXlTVkp3TVZwS1NWbHdlVWhxUkRGSlVFZEhTV0ZGUzFaclNIaGFORzl0VWpGeVNtZEJjVkZCWW00d2FqVklkMU5VVFVnNVpGcEplRzF1VkRsTVNUQjFURWxoVnpWWU1VbGtUVzF4YWt4NlRVbE5NRm94UWtweE1IQXpValZNU0d0WFNsRnhiWEZoY1hsTU0wbDZjSGhFYlVVeU1HMXdNVUZoUVRGTmVuRnRWM2RIU0hsaGNURlRlRzh6U1RaR1lXTjFTRkJuWkc1U1oyNXdTbUpxV1cxYWFtOHhTV1ZLU1dOdFJWSjVNbGd3VTIxdmJVOUpTVkZOVDBSdGVWWnhiVVZwY25kRWExcFFaM2RCU1VsYVdrbDRNRm93U1c1YU1VRlBXREJJTUc4d2NWbEVkMXByU0hwSk1VMXRWMXB1TTFJMVdsSTFha2d6ZVhoRWVFbEhUSHBOU1VGM1NWUmFlREYyYm0xVFVFRkhVMHB1TWpCcVFVdHhNM0V5UVd4TWRtWXpSMUZhYTFrd2NHdE5lWEJ0U1VsMWExcFRTVzFhZUhSc2NGVldNMGRVZFZseFJqbHNibXhuUzBneGRXaEllRk5sU2xOVFpXNUlRVk5DUjAxSFNEQklNa0ZWVXpKYU0xSnBjRXA1Ym5GUlYwTnZSMEZhY0hoQmJWcElNV053VlZOdWIzbE1ha1l3VTFkQmJYZzFSa3RQYVVsNWVUSndVbkY1UVhwak5WZ3pZak53YlZveWIzcEZNM0I1Vm14TVlYQXlXVzFCVmxvelJWRnVTRmREY1dGWE1VVlZjVkp4ZWsxbVJESm5TRVJJUkRSdmJVZ3pTRXR4UVVWSFRVeE5Va1ZpUVhsNWJFVXhlVmRCTVdONGIyMTBiRVZIU1dkdVVEbElTRzFPYkUxVlVqRnZTblF6VFd3NWQyOUllV2x1ZUVGVGNuaEZlVWxIUVcxdmJYVldTVEo1U1VGdFRtVk1Nbmh0U0RKVFpHNTZTWGhCZVhFMVNWUnJZWEpJUVZOdlVuRkJjVEl4V0c5M2NEVmFTSFExV25kRVpVd3llV3RCZUVFMVNVdE9aVnBKU1RKSFlVRXpSbEZOZUVGSVRURkVTVk5wUVdGWGEzRkhTR3RFTVUwd2JqSjBNMEYzVFdWQ1NYVkJUVWwxYUV4NlYydHVVMGhwUmtwSlZFRXdVMFpCZDFkblJESkpNVWRWWTJSSlZHZHJTbmR4VVc0eWRWaE1lSFV3UVhneGJGcFRTVlJDVlVRelFrWTVZMDE0TVdOSFNFZzBUVWR4WlZveWRYbEZSMU5QVFcxNVlrWmhUVk51ZDA5WFdrbFRUVVIzUlVWSmJWTTBSMG94YVVWdFUycHVZVTlhV25sYU1uQjRZMlJNU21kM2JsRnhaMjlIZVd0Q1NVVm1Xa2wxZUc1NFowRnZNbUpwY2xSMU0wa3hTVEJhZWpGWGJ6SldhMWd4UVdkSFVrUnJSWGhyTm5KTFZqTkdTR3RyUjFSNVFtNUtjVVJIYlVWVVFVaDVhRTFTU1ZoQ1IxZHRTa3RKYVZodFFXWklTVVZRYmpOalZtOVJjVzV2U0V3eFFWTlRaRnAzY1VoSFVYRkRjWGR4UzBWUldteEVNRUZyUlROYU1VeGhSVFp4YlZkUFNIaFhNbTVVVFZwSGJYbHJibTE1Ykc4eU1XaHlTazFWUVZWak5HOVRVelpKWVVGamJ6QjVaVzVSZEdWeFlYQTFTWGd4Tkc4eFZtVkdNakZXUVRGRlUzQXdVbXRLVTBWSVJFZDFZMGxMVTAxYVMySnFiMGxCWkhKVWRVRnllamw1YjBobk1WcEtlV0pCTUdkRlRYbDVUWEJVVmpCd1VYVjFSVWRGWTBSaGVUWndVM0ZyV0RKRmJFeElSWFZhVWtneFNVdDVVRVJLTldkTWVtZGlTVkpCWlZwSVdtcEVNa3cxUmxOeFZFRXdWbXR5U0ZkdWJtMUJhMFZIVmpWR1NIa3lXREZqYTI1SmVEUkhTMk14V2toME5HNVVlVEZ5WVZkV1RWVlNNSEJIVm1sQk1sZFlURXRCTkUxM1Z6VmFTVkp0YjB0eFYzQkxjV2xhUzFkSVIwaFRXa3g0YXpSSk0xZFNjWGQ0YlUxU1NEQkJlV0kxYjFSSlowcElaMjVCVlU4eWNVcEpSVVJJYTJKS1ZXTjJUVEpuUTBRemRXaEVTRWxJUnpKVFNtNVVOVEZ2U0hWc1RYb3dNVTFUVjJGSVVWTXdUVlJOU0VkS1ZqTnZZVTFVU0cxNVFVWlNTVFpCTWpGTVdtRkVhbHBJTlhWS1NrVkNSVEIxUTI5M1NYcEhNRk5hU0ZSTWEyOXRTWGh4VWpWUFRWSlhZbTlUVW0xSmVrMW9TRlF4VmtkS05URndVMGxpUlVkeFUzQXhZbXh2ZURsWlJraGFNRWxKVTJ0SGJVRk1RVVp3UVZCNk9XeE1Ta0ZtVFVaT09WWlFjRE5hZDBRd1dtMVNNVnBIV2pKYWJYQXdXa2ROZUVGSGVERkNSMXB0UVhwU01reHRjR3hCVVhnd1FXMUVOVUY2U0cxYVVYQTBXbTFNTTFwSFRETkJSMUl6UVZGSWJVRkhURE5hUjBWM1FXMUVNVnAzU0d0QmQwZ3hXbEZhTVVGSFZtMUJVVWd6UVcxd01rRlJWM1phYlZZd1FrZE1NbHB0ZERCQ1IwVjRRWGRhTTB4SFdtMUJiWFF6UVhkTU0wRlJSRzFCYlVneFFWUklNazFIVEROYWJWb3pXbTFGZFVGM1ZqQkJVVVEwUVhkMGJFMTNUWFpCZDFadFFWRk5lRUZ0VERGQlIwUXhRVzFJTWtKUmNHcEJla3d6UVhkYWJVRnRTREJCVVVnMVFYcGFNbHBIVERWQlVYUXhRVWR3YTBGVVZtMUJkM0J0UVhwU2JWcFJSR3RCUjA1dFFYZHdORnA2VERGQlIwUTFRVzFJTVZwM2NHcEJNbEp0V2tkd2EwRkhURE5CVVVoclFYZDBNMXBIUlhsQmQwUXhURWRNTlVGSGREQkNSMHd5UVhkU01VRlJTWFZhYlVnd1FsRkZla0ZIVmpOTVIwMTRRWGRXYlZwSFJHdEJSMFF3V20xd01FRkhkTDhUQUFCcmVrMXFVVFZPVkVVelRXcGFhVTU2WnpOWlZHTXhUbXByTTA5RVZUVk9WR2Q2VFZSU2EwNXFVVE5OZW1NMVRucFJNRTFVWTNwT2JWRXhUMVJWZWsxdFNYcE5hbEV6VG5wSk1GbHFUVFJPVjBVelRVUmpNVTV0VVROTlJGVXpUbnByTVUxRVVYcE9SMWt3V21wWk0wMTZSVEZPZWxKcFRtcEpNRmw2VVhwT1JGa3hXVlJSZVUxdFNYcE5SR00xVFhwSk1rNTZXVEJPUkUwd1RucFJNazE2YXpOT1JGRXlUbnBOTTA1RVl6Rk9SRTB4VDBSamVrNVVSWHBOYWxwcFRsUlJNVmxVWTNsTmVrRXlXV3BOTUUxNlFURk9WRnByVG0xVk0wMXFUWHBPVjBVd1RWUk5lVTU2WnpCWmVsSnRUbTFKTTA1cVVYaE9la0Y2VFdwa2FFMTZTWHBOYW1NMVRYcFJNVTFVVlhkT1ZFVXpUMVJOZVU1cVNYcE5hbVJvVG1wRmVrMXFWVFZPVkVVelRXcFplVTV0UlROUFJGVjVUa1JaTUZwRVZUTk9SR2N3VDBSamVVNVVhekZOVkZFMFRucFZNRTVFU21sT2FtY3hUbFJOTkU1SFNURk9SRkY2VG1wTk0wNUVTbTFPZW1NeVdYcGFhVTR5UlRCUFJGRjZUbnBSTWs5RVdtMU9WRTB6VGxSS2FVNVhSWHBPVkdNd1RrUlpNRTE2VVhsT1ZFRXlXbFJqTkU1VVl6TlBSRkUwVG1wTk1scFVWVEpPZWxVelRtcE5lVTVVV1hwT2VsSnNUa2ROTWs1RVkzZE9SRmt4VG5wUk1VMTZVVE5PUkZFelRtcFZNazU2VVRSTmJVbDZUVlJLYVU1dFJYcE5lbGw1VFhwTk1FMTZUVEpPVkdzeVRucGpORTVIUlRGTmFsSnJUa1JWTWxwRVVtbE9WRVV5VFdwWk1FNTZhekZPYWxsNVRtcEpNVTFFVVROT2VsRXlXbFJWZVU1SFRUQmFhbEpvVG1wUk0wNUVXbXhPYlZFelRucFNhazV0U1hwT1ZGcHFUa2RaZWsxcVZUUk9ha1V5VDFSWmVVNVVUVEJPZWxKclRsUkplazE2V1ROT1JGbDZUbnBaTVUxNll6QmFhbVJvVGtSRk1rOVVWVFJPYWtVeFRXcFNhVTVFWXpCUFZGVjNUbnBuTUU1RVZYZE9iVWt3VFZSS2JVMTZWVEJQUkZKc1RtMVZlazFxVFhkTmVsVXdUMVJWZUU1SFVUQlpWR042VGtSVk0wNVVWVFZPYlUweldWUlNhazVxWXpKYVZFcHRUa2RKZWsxcVVUQk9SR2N6VFhwU2FFNXRTVEpQUkZFeFRsUlZNRTlVVW14TmVtTXdUbFJTYkU1SFRUSmFWRnBxVGtkWk0wOVVZekpPYWtreFRtcFNhRTVIVlhsWmFsVXhUa1JuTVU1NlVUSk9SMVV6VG5wYWEwNTZWWHBPVkZrMFRrUm5NazE2WTNkT1IwMTZUbnBXYUU1RVdUSk5lbU16VG5wWk1FNXFVVEpPYlUwd1QwUlpNMDVFWnpCYVJHTjRUbFJKTTAxNldtbE9SRkV5VFdwak5FMXRXVEpOYWxsNFRqSkZNRnBVVFROTmVsRXdUa1JhYTAxNlFURk5lazB3VGxSRmVrMTZVWHBPUjFGNlQxUmFiVTVIVVRCYVJFMTVUbFJKTTAxNll6Sk9lbWN4VGxSU2FFNXFXWHBPVkZGNVRrUmpNMDVFVVRWTmVrRXhUWHBqZDA1NlFUQmFWR00xVG5wUmVrMVVWWGhPZW1jelRrUk5lVTE2VlRKYWFtTXdUbnByTUUxVVdUSk9SRTB4VDFSak1VNTZZek5aVkZVeFRucEplazFFV1RGT1ZGRjVXV3BOZDAxNmF6Sk9hbU0wVFcxSk1GcEVZM2RPVkUxNlRsUmFhRTVVWXpCYVJGbDVUbFJOZWs1VVdUVk9SRVV5VFdwVmVrNTZaM3BOVkZWNlRqSkZNMDFxVVRGT1JGbDZUWHBqTTA1VVJURk5lbGswVG1wbmVrMTZZelZOYlZreFdWUk5OVTU2VFRKYVJGVTFUWHBaZWsxRVVtdE5lbFV3V1hwVk0wNUVhekpOVkdNelRrUk5NbGw2WTNsT2VsRjZUV3BaZUUxNll6RlBWRmswVG1wbk1FOVVVWHBPUkdzd1QwUktiVTU2YXpCT2VrMDBUa2RGTWs5RVl6Vk9hbU16VDFSU2FrNTZZekZOUkUwd1RrUnJNVmxVVFRGT2VrVXpUMVJqTWs1VVp6Tk9WRlV3VG1wUk1sbHFXWHBOZWxFeFQxUk5ORTVIU1RGWlZFMTNUbnBaZWs1VVVYcE5la2t4VGxSV2FFNHlSVE5PYWsweVRYcG5lazFxV21wT1JHY3hUWHBTYTA1VVZUSlpha3B0VG0xUk1FNUVVbWhOYlVreVdYcFJNVTVxWXpCWlZGRjZUa2RaZWsxRVl6Qk9WR3N5V2tSYWEwMTZRWHBOVkZsNFRsUkJNMDlVVVhwT2Vra3hUa1JWTUU1WFJUSk5hbGswVGtkTmVrMXFXbTFPUkVsNlRsUk5NVTV0VlRKYVJHUm9UbFJCTUZwRVRUTk9ha1V3V2xSYWEwNTZTVEZOVkZVd1RucEZNVTVxU21sTmVrRXpUa1JaZVU1RVl6QlBSRmt3VG1wRk1VMTZXVEpPUkdzelRucFJNRTVIU1RKWlZGVXdUa1JGTUU1NlRURk9SRWt6VG5wVk1FNXFXVEpQVkZFMVRtcE5NRTlVVVROT1JHY3dUMFJWTVU1cVRUQlphazB4VG1wbk1FMXFXbXBPYlVVeVdsUlpNMDVxVlhwT2VscHBUa2ROTVZsVVVUQk5iVWt3VGtSUk0wNXFVWHBOYWtwdFRYcE5NRmxVVFhkT1Ixa3hUbXBOTVU1RVZUTk9hbEUxVG0xTk1GbDZVWHBOZW1jd1QxUlJlazE2VVROT2VsVjZUbnBaTTA1cVRUSk9SRTB5VG5wVmVFNXFhekpOYW1ONlRYcFZlazE2V1RKT2Vtc3lXbFJaZUU1cVZUTk5lbEY1VG1wSk1rMXFXWGhPZWswd1QxUlNhRTU2VVRCT2VrcHBUWHBKTTA5RVRYbE9hbWN6VFdwUmVrMTZaekpQUkZFMFRYcEpNMDFVVW0xT1JGVjZUbXBOZDA1RVRUQlBSRnB0VGxSVk1sbFVUVE5PUjFVelRucGFhVTVVWnpGTmVtTXdUbXByTVU1VVkzcE9SMGt3VGxSamVFNVVhekZPVkUweFRrZEZNMDFxVFRCT1ZFa3dUMFJqTWs1dFVUQk5WRlY0VGtkUk1VNVVVbXhPZWtFd1drUlZNMDVFVlRGT1JHTXdUa2RWTUU1cVdtdE9lazB6VFZSVk1FMTZhekJOZWxrd1RrZEpNRmw2V1RKT2FsRXdUV3BaTVU1RVZYbGFhbU41VGtSRk0wNVVWVFZPVkVVd1dYcFpNVTVFVFhwT2VsazBUbFJCTTA1cVdtMU9ha2t4VDFSVk5FNXRSVEJOZW1NeVRYcG5NbGxxVVhwT2VrMHpUVlJTYWsxdFdURk9SRkV3VG5wck1VMUVVbXRPUkdzd1dXcFJNVTE2VlhsWmFscHBUbFJuTUU1RVl6Rk9lbU16VFhwYWFrNXRVVEJhUkZKb1RYcFpNRTVVVlhkT1JFMHlUV3BWTlU1VVNUSmFWRmt4VFhwck1scHFVbXhOZW1zd1RrUlplRTVxV1RGUFJGVXhUbXBuZWs1RVdtdE5lbU13VFhwTk5VNUhXVE5PUkdONlRucG5NazVxVlhwT2VsVXhXVlJWTlU1VVJUSk5hbEY2VG1wbk0xbFVVVFZOYlVsNlRVUlJNMDF0U1RKWmVrcHRUWHBuZWs5RVl6Tk9SMUV3VG5wak5FNXFWVE5PZW1Nd1RYcG5NRTVxVFRCT2FsRXhUbFJOTVU1VVNUTk5WRlY2VG0xSk1FMVVTbTFPUjBreFRrUlZOVTU2YXpKWlZFMHdUa2RWTTA1RVZUVk9hbWN5VFZSVk1rNVVRVEpPVkZGNlRtcFZNRTVxVVRCT1ZFa3lUbXBqZVUxNll6QlpWRlYzVFhwSk1VNVVTbWxOZW1zd1dXcE5lazVFYXpGTmVsa3lUa1JOZWs1VVl6Sk9WRVV6VG1wS2FVNUhUVEZPZWsxM1RsUm5lazVFVFRCTmVtdDZUVVJhYVU1RVp6Sk5WRkY1VGxSQk1sbHFXbWxPTWtVd1RucGFhRTVIU1RCYVJGVTFUbFJSZWsxcVVYbE9WR2Q2VDBSamVFNUVWVEphYWsweVRsZEZNMDFxWXpGT1ZFa3dUa1JqTTA1dFdUQlBSRlpvVFhwak1FNTZVbXRPYWsweVdsUmpOVTR5UlRKYVZHTjZUbFJGTWxwVVRUVk9WRVY2VG1wTk1rNVVaek5OZWxWNFRrZE5lVmxxVW0xT2JVa3pUVlJWTlU1SFZUSlphazB6VG0xTk1GcHFVWHBPVkdNeVdWUk5lazVFWXpCWmVsbDRUbTFGTVU5VVZYcE5lbXQ2VGxSamVVNXFaekpPZWxrMFRtMVpNVTE2VVhsT2VsRXdUV3BhYWs1cVZUQlBWRlV3VG5wak1scHFZelJPZW1Nd1dtcFJNVTVFVlhwUFJGcHJUVzFaTWxsNlVYaE9hbFV5VDBSUk0wNVVhM3BPVkZrMFRsZEZNRTVFWXpOT2Vtc3hUVVJWTlUxNlZYbGFhbGt4VG1wak1scEVXbXhOZWtFeFRXcE5NRTVxVVhwT2Fsa3pUbnBSTVU5RVNtbE9SR3N4VDBSWk0wNUhXVEJPVkUxNFRrUk5NbGxxWTNsT1IxRXlUbFJqZUU1RVozbGFhbEY1VG5wTk1VMVVZekpPZWxFeFRXcE5NRTE2V1RCTmVsWm9UbXBuTWs5RVVUUk5la2t5V1ZSUk5FNUVaekJQVkUwelRrUlZNazE2V1RST2VtY3dUbnBSTTA1cVozcFBWRTAxVGxkRk1rOUVVVEJOZWtFd1QwUk5lVTVxYTNwTmVrMDBUbGRGTUZsVVZUQk9iVVV3V1dwamVrNXRTVEJQUkZFMVRsUlJNRmw2WXpST2VsRXhUbXBOTTA1RVRUSk9SRTB3VGxSUk1FMXFXVEJPUjFFeVRWUlpORTV0VlRGTmFtUm9UbTFWTTA1NlVURk9ha2t3V2tSVmQwMXRXVEpQVkZVd1RsUnJNMDlVV21wT1JFMHlXa1JOTWs1SFdUQmFSRmw2VG1wUk1GbFVTbWxPVkdzd1RYcFpNVTU2WnpKWlZGRTFUbnBaTTA5VVdteE9iVVV3VFhwTk1VMTZhekJhVkZwclRrUk5NazE2VVhsT1JGRjZUMVJSTWs1dFZUQk9lbEY2VFhwbk1rMXFWVFJPYW1NelRsUlJlVTVFVVhwTlJGRXlUbFJKZWs1NlVUUk9WR3N3V1dwVmVFNVhSWHBPVkdNMVRrUm5NazVVVW0xT2Fra3pUMVJWTkU1cVRUQk5hbFV3VG5wUk1VNXFVbWhPUkdjeVdWUlJlRTVVUVRCYVJGVjNUbFJqTUZwVVZUTk9hbGt6VDBSTmVVMTZVVE5QVkZWM1RtMU5NbHBFVW10TmVtdDZUa1JqTUUxNlZURk5SRkUxVG1wWmVrNUVWWGhPUkZGNlRVUlZlazVVU1ROTlJFMHdUa1JyZWs1cVRUVk9SMUV3V21wamVVMTZZekZOUkZrd1RrZFJNRTlFVFRKT1ZHc3pUVlJaZWs1Nll6Sk5hbGsxVGtSak1GcHFXbXBOZW1zd1RYcEtiVTVFVFRGUFJGVjNUbFJKTTFsVVdYaE9WRWt5VGxSUk1VNXFWVEJaYWxVMFRXMUpNMDFVVlhoTmJWa3hUWHBWZUU1Nlp6SlBSRlY1VFhwUmVrNTZXVFZPVkUweVRYcFNhVTU2WXpKTmVsRTBUWHBGTUZsVVl6Rk9Na1V3VDFSWk1VNUhVWHBOVkZrd1RrZEpNMDVxVVhwT1ZGRXlUbFJhYWs1VVp6QmFSRXB0VG1wTk0wMUVXbWxPZWxVeFQxUmplazU2U1RKWlZGSnRUbFJyZWs1cVZUVk9WMFV6VDBSak1VNVVWWHBPUkZrMFRXMVpNRTFVVlRWTmVsRXhUMFJrYUU1RVRUTk5WRTB3VGxSTmVrMVVZM2hPUkZVeVRtcFJlazVVWXpGUFJGSm9UbnBOTUZwVVRUQk5lbWN4VGtSVmVFNVVZM2xaYWxWNVRtcFpNRnBFVlRGT1JGbDZUbFJhYWs1VVFUQk9lbEY2VFcxSk0wMVVVVEpOZWxFelQwUlJNRTVIU1RKUFZFMHlUa2RSTUU1Nll6Tk9ha2t3VGxSVk5VMTZXVEZPZWxKcFRYcG5NbGw2VlRST2JVMHhUbnBTYTA1SFVYcE9lbEUwVG5wbk1rNTZZelJPVkVFd1QxUmplRTE2VVRCUFZFMTNUbTFKZWsxNldtMU9WRkV5VGxSYWJVNTZRVEZPYWxreFRsUlZlazVFVVhwT1ZFRXlXa1JWZDA1VVdUTlpWRkUwVGtSUk0wMVVTbWxPVkZWNlQwUmpkMDU2UVRCT1JGcHNUa2RSTVUxNlRUQk9lbWN5VG1wTmVrNUVTWHBQUkZVeFRYcG5lazE2VFRGT2FtTXlXbFJOTUU1NlVYcE9SR1JvVG1wSk0wNUVWVEZPVjBVelRrUlJORTVVWXpOTlZGVjZUbXBaZWs5RVdtdE9SR3N5VFhwTk1VNXFTVEpQVkZFMFRYcHJNbGxxVFRCTmVtc3pUVVJqTWs1VVFURlBWRlV3VFhwUmVrNTZTbTFPUjFreFRVUldhRTVxWXpKYVZGSm9Ua2ROZWs1cVVtaE9lbEY2VFZSak1rNVVSVE5OZWxab1RYcGpNMDU2WTNoT1JFMHdXa1JSTVUxdFdURk5WRlYzVG0xRk0wMTZWWGRPYlZsNVdtcE5ORTU2YXpKYVZHTXdUa2RaTUZwVVdYcE9iVkY2VFdwUk1rNTZUVEpOYWswd1RsUnJNRmw2VFRGT2Fra3lXVlJqTUUxdFNYcE9WRmt5VFcxSk1rMVVVVEpPYWxrd1drUkthVTE2WnpKUFZGbDVUa2RGTTA1VVZUUk9SRVY2VFhwUk1VNXRSWHBPZW1OM1RrZEZlazlVVlhoT2VsRXlXbFJTYWs1NlRUQk5WRnBvVFhwak0wOVVZM2RPVkVrelRucFZORTVxVFhwUFJHTTBUbXBKTWsxNlVUSk9lbU13V1ZSWk1rNVVWWHBPZW1OM1RrZEZNRTU2VW0xTmVtTXhUVlJqTkUxNlFUTlBSRkUwVFhwRmVrMVVZM2RPZW1zelRucGpNVTVIV1ROT2Vsa3dUa2RGTUZsVVRUSk9iVmt3V21wTk1VNXFSVEpaVkZFMFRrZE5NazlVVlRST2JWRXhUMFJaTWs1dFNYcFBSRTB4VG0xTmVrMTZWWGROZW1jeVdsUlZNRTVxYXpKT1ZGcHBUVzFKTUZwVVVtaE9iVVV6VFhwVk1VNUVZekpaVkZwcVRsUm5NazU2V1RKT2VtTXpUbXBqZDA1dFRUTlBSR00xVFhwak1scHFVbXhOZWxreVQwUmFiRTVxVFhwT2VscG9UbXBKTUU1RVdtbE9WR041V1dwU2EwNXRXVE5OYWxKcFRtcFZNRTlFVFhoT2JVa3lUa1JLYlU1SFZUQmFhbFpvVG0xRmVrMVVVVEZOYlVsNlRXcFNhazE2YXpKWmFtTjVUWHBqTWxwcVpHaE9lbXN4VFdwYWFrNTZZek5OVkZWM1RtcFZNVTlFWXpGT2FtTXhUVVJOTWs1VVVURk9WRmswVG5wbk0xbFVTbTFPVkZVelRsUkthVTVIVVRKWmVrcHRUbTFKZWs5RVVteE9hbXQ2VG5wYWFVNXFWVE5PYWxrelRtMVZlazlVVlRST2VrRXlXWHBrYUU1cVJUQlBSRkpwVG5wVk0wMVVVVFZPVkVWNlQwUk5NRTVxYXpCTmFsa3lUbTFaTVUxNlRUUk9SMGt5VGxSUk1rMTZhekpQUkUxNVRrZFpNVTE2VlRST1JHdDZUa1JhYUU1WFJUTk9hazAxVGtSbk1FOUVWWGxPVkZGNVdtcFJNMDVIU1RCYVZGa3pUbnBaTWsxNlVUTk9lbWQ2VFVSUk1rNUhTVEpPVkZKdFRYcHJNRTVVWXpKT1Ixa3hUMFJaZVU1cVl6Rk9lbEpvVG1wRk0wNTZVbXRPYWxrd1drUmpNMDE2VVROUFZGbDVUbnBKTUU1VVdtcE9iVlV3VDBSUk1VNXFVWHBPZWxFMFRtcFZNVmxVVVhwT2Vsa3dUMFJTYWsxNlNUQk5WRmswVG0xSk0wMUVVWHBOZWtrd1dYcFZlRTU2U1RGUFJGbDZUbFJyTWsxcVVtMU9hbGt6VFZSYWFrNTZTVE5QUkZWM1RucFZlVnBxV1RST2Vra3pXVlJqTTAxNldUSk9SR04zVG5wbmVrNUVVbXBPYlVVd1dXcE5NRTE2VFhwT1ZGbDRUbXBGZWs1Nll6Sk5lbFV4VFVSWmVrNVVVWHBQUkUwd1RtcEpNRnBFVW1wTmVsa3dUVlJhYUUxNll6TlBWRlV4VG5wWk1FOUVVVFJOZW1kNlRtcFNhMDF0V1ROWlZGSnJUa2RaTWxscVkzbE5lbGt3VDBSYWFVNXFUWHBQUkUweFRrZEpNazVVWXpOT1Ixa3dXbXBOTVU1dFVURk5SRlUxVG1wamVrNUVZelZPVkVFeFQwUlNhMDR5UlRKT1ZGVjZUbFJuTWs1RVZYbE9hbGt6VFdwak5VNXFSVE5OZWxwclRucG5lVnBxVFRGT1ZGa3hUWHBWZDAxNlZYcE9lbEUxVG1wVk0wNVVWWHBPYWxrd1dWUmplVTV0UlRGT2FtUm9UbnBKTUZsNlZYaE5lbXN3V1ZSU2FFMXRXVEpOZWxwcVRqSkZNVTVVVVRCT2Fsa3dUMVJOTkU1VVNUSlpWRnBxVG5wVk1GcHFVWHBOZWxFeFRYcFZOVTF6dnhNQUFHMUVNa3h0U0RCQlVVaHNUSGRNTWtGdGRHMWFVVm93UVhwYWJVSlJjRFZCVkZvelRFZEVOVUYzVERKQlVVdzBXbTFhTUV4M1RHdEJiVXd5VEVkd2EwRXlVbTFhUjBRelFWRmFNa0ZIVFhaQlZGb3lURzFFTVVGM1RESk1iVm94UVhkSU0wSlJSWHBCYlU0eFFXMUlORUYzUkcxYVIweHNRVkY0TUVGSFRYVkJkMHd5UVVkTWEwRnRlREJNUjNCdFFWUldNazFSU0dwQmQxSXpXa2R3TkVGNlJEQk5kMGhzUVZSRWJFeDNSR3hhYlZveldtMUVNRUZ0Vm0xYWQwUXdRVlJFTUVKSFJYVmFiVTR3V20xd01FRnRUREpNZDB3eVFYZEVNazFIVERWYWJWb3hXbmRJTkZwdFZqQmFSMHd3UVhkYU1scHRSRzFCYlZveVRIZE5kVnB0VWpCQlIzRjFXbTFJTWsxM1RERkJSMDR4UWtkRWJFRlJSREpNUjBRd1FWRk1Na0Z0Y0d4Qk1sSXdRVkZhYlVGVVdqQkJVVnByV20xTU1reDNUWFZhYlVReVRYZHdiVnB0UkRKTWJWb3dRWGRTTWxwdFJYbGFlbFl3V2tkSU1GcHRUakJDVVZvMFFVZElNRnAzVERWQmJWWXdUVkZNTUVGSFRqRkNSM0JxUVVkV01VeEhjRFZCVkZwc1RYZEliRUZ0VG14TmQwaHRXbTEwTTFwdFRYaEJkMW96UVcxTU5VRkhXakJOZDAxMVFVZFdNMEpSUkROQmQwd3pRVWRGZGxwdGRESk1kMFEwUVhkV01FeEhTRFJCYlhBeVFWRklNVUZVVWpKQ1IwUXhRWGRJTTBKSFREUkJiWGd3UVZGRmVscDZWakZCUjAxM1FYZGFNRUZIVEd4YWJVNHdUVWRhTkVGSFNESk1SMGhyUVhkMGJWcDNjREJCUjA1dFFXMUViRUY2VEcxQ1IwUXhRVkYwTTFwSFRHdEJVVVF3VEcxYWJFRlJXak5DVVVRMFFWUk1NRXhIVjNaYWJVd3dURWRhYlVGSGNEQmFkMGhxUVVkMGJVSkhUREpCZDB3eldrZEVNMEY2VW0xYVVVVjJRVkZTTWtGdFNHcEJSMDR6UVVkYU1FRlVSREZhVVZwdFFWUlNNMEZIY0RWQlNsSnRXa2ROZVVGM1ZtMUJiVVY1UVZSTU0wRkhSRFZhYlZvelduZGFNMEZ0VmpOQlVVeHJXbTEwYkV4M2NEVkJVVXd4UVVkSWFrRjZURzFCZDB4clFXMVNNMXAzY0RCYWJVd3hRVzFYZWtGNlNERkJVVVF6UVZGRU1VRnRTREJCVVVnd1FVZGFha0Z0VERCTlIwMTNRWHBXTVVGSFJEUkJkMGd6UWxGd2EwRnRVakJOZDNCcVFVZFdNRUZSUkd0YWJYUnRXbTF3YTBGNlJETkNVVmQ2UVcxRU1VSlJjRFZCVVVneFduZGFNa0ZIVERGYWQzQTBRWHBNTTBGSFREUkJiVll4UWtkYU1VRlJWakJCZDBodFFYZDRNMXBSV210QmJVaHRXbEZNTWtGNlJESk1iVVYxV20xTU1rMVJjR3RCYlZvd1FXMWFNa0ZSVWpOQlIxbzFRVEpTTWxwdFREQkJVVm93VEhkRmRscHRTREpDUjBWNldtMTBNVXhIU0RCYWJVd3pRa2RhTkZwNlRHMWFSMW8wV20xTU1FSkhUWFZCZWxZeldrZGFOVUZVU0RGYVVYQXlXbTFXYlVGSFJESkJkMVl6UVZCd1FWQjZaM2x5U2pGMWJqSkpiRlpSTUhSWE1VMWhSbTFCVkZwNmRXNUlTbFl6Y0ROVGQwZHRRVWxOVlUxVFJrcGlOSEIyWnpKQllYRkZia294UjB4NmVVaHVSMXB0V2pGSllrbFNNVk52ZWpGWVdERlhVMHd5WjBsTlMxSTFja2R4ZVVaSlkxbGFTazFqU1hkT01YRjVlVVZhZURoclducFdha1l6VTFGQmQwRk5jREJXYTBFeU5XNUdTRk50UVRKRlkwUmhUVXBCU1VsWWIxVjFVVUY0TlZoR01IVk1Sak41VVVaSGVVVk1lR3BxU1ZGSlRFbFJSVkphTW5ocWNraFRiVVYzVDBGdmJWWnNjVEIxYmtsNlpqRnVTRVUyUWtweFpscExWMFZDU25GVVRXdzVXRVY2U1hsWmJVRm1SbFYwYVhCaFRqSklTM2xEUVhsSlkwVmhkVzVGTWxwc1NGUXhiRzlUUlZoQ1NYVktSbFJGZUVodFNHcEZVbG8xUWxKQmVraDRUVlpHTUVoc1IwdHhURUpMVTNkdVNFaHRSRXR3YlVWNk1VOUtWRUZpUlRGWFZXOVZURFZ1VkdkSVFWTjVXVm95ZVdGR2JHWmxjREkxV2xwVGRXcE5TSFZzV2twTk0wcElWMkZHZDBWMVRVaGphVTE2TlZCeFVWWnFTbnBTTVVaVVpqSkVNRVZqU1hoaloxcHRVbWx3VlZkQ2JqSTVhMFl3UlVSSFIzRlZUVWRKVEVoSGNXMXllbmxXY0ZRMWJIRklVMlZDVlVGV1dqQnhaa2w0U1dGS1NuVmFiM2RUZUVGaGNHVnhTWGxSUWtkNU5rRkllV0phU25saFJVWm5SbkV6Y1RaS1VYRnFjVXRCWTB4c09VaHZVVUY1VFRGNFpWcHRSRFZ1UjFvMWNIbzBiRVF5YTJKdVMxSmxSakZCTTAxU1JXMXdVVll4UVRKMU5VY3lTVzFIZWpCdGNHMVRVRXBVT1VSd1NFdzFXa2RKV0ZveVJEQnZlRk40UWt0WFQzRlVPVFJ2YkRocVJVcDBaVUV3U1hkQk1tdFFjREJTTkc4eVkzcGFTMEZCVFZKbldVWkxjVzVJZWpsUlRESkpkbTVKWTJaQ1ZHdDZjbUZpYTI5SU9VMXhNa1ZTY2tsSlJXOUtaalJHYlhGaFJVbzVZMFY0U0RKR1NqbERTRXRCYUVWS2NYZHVTR040VFZWQk1VaExlV05HVWpSbGNXMUZiVVZJVFV4TmQxWnBjRWd4TTBSS05ETmFTV05aY0dGWFNVbEtRV3RhWVU5cFdrZE5WRzVSU1RWeWVrbFRXak5CWW05TFVtVllNR040Y0RGVE5rWXpZekpOZDNGblRIZDFNMjU2VjBwdVIzbDRSRXRqZFZvd2NVZHVZWEV6Y0VvNE0wRlVRVzVhTUUwMGJraE5NWEpSVDBSRVNuQnNSRzFFTTBWUlZqVktTalF6UVZWalZVMUtPR3BCVW1Nd1JYcFNiWEJLY0RKRU1tdG5TbnByZFV3eVozaENVMk5oU0ZGRU5YSklZbXhhVW1kMVRFWm5ZVVF5T0cxRVNrMTFjVE41TWtWSFRESkVlblJzY0hkU01rRlNaMnhKVkVSc2NWTmFOWEJJY1VsWmJWTjVSakZKTUVVelYwOXdla1ZuV2xJNVVFVlVhakpCTWpWNFFYcE5aVXhMUVc1TllVOTVURWhOTUVwU2NWbGFSM1ZQUlVsMVpXOUlVMlZGU1ZZeFNVdEpOa3d4WTJWdVVscHNTVWRKWVUxVVNUSmFNRUZvUkRCbmRVVlNkVUZhUzNSbFRVcHdhVXBLY0dWeE0wOXRjSFpuYUVkSVZtdEVNbXRwUnpBeFlVY3hZakZHWVVrMGIxUkZkMXBoVjJKdVNHdE1URXRpYTBVeVYyUmFVVTVwY0ZRMGFVcFZkRzFHUzFacGJ6QnFiVVY0WjBGeGQzUTBjVXQ0TVVoSVYydENTRTFqY0RKNVdFRXhUV0p2VW5sMlFVZFRXRUV3WjFGd1NuVXhUVEpOZVZvd1NVOUhWRVF6Y1VsT2JFRkhWMWxhZUhsWVRESjVNMWd4UVVWS2VEbFpibmRCYmtSSFUwcEdZVUZqY0VwcmEwWkpSR3R3UjNscFIwZDViVXd6ZVhkQmJEbFlXVE41VWtkc09URnZVR2R0VERGTlFrMXRWMkp1VkVsVFNUTnhOVWxVY1ROeFVsTXliMGhyWTNKTFUwTmFSMFY0Y1ZSbWJYRklWak5hTURGb1drZFRaMEpIVFZKS1IwVk1UREJCVFc0eVYzaEJlVk5ZVFdGNVlrWjZjVXhLZGpsVFNuaE1hMGhLVFVoeWVHTlpjVzF4YVVSS1VqQnllR0l6VFROd05Wb3pjV05NZWtWb1FVbEpRa3BKU1ZCWk1rRjNSVEpKYW04eU5EVkhTa0ZQUm5wMWVVMXRVMWx1TUdvemNGRk5lRWg2T1RGR1MwOVBSWGRYYmxwU2VWQklNVTVwVEd4bWFVMVNaakpCVTA0d1JFaFRUMGQ2U0cxTk0wRk5jRk5TYlVaS2NHbEJNREYyYmtsVGFGcFZlVmh4UzBsTVJESlROVXd3WTNoR01FbDViMGhOTUZwSVdtVkJZWGxwY1RCbldHOVJkRzFFU0hGblduaFdiRVJMU1cxeVIwbFBjRzFQYkZwc09XSk5TblZSYnpJNU5Wa3dUR1ZhVkhWNlIxRjVTRmx0VjJaYU1HZHFUREIxUVhGNmVVTnlTRmRyU2xGRWJVZExUVWRDVVhCc1NFdFhWMXBMWTJkRWJYVk1SSHBKVDBWUlJVRndNRFZwYjIxNWFrRjNRV0Z5VlVGNWNsUjFNVXBTVFhkSVZVOVRjSGxpYlhCSU9WWnlVbU5LUkROeGEyOHlUVFZDUzBGdVJtMXhOVTFMVW1sdlVHWnRibFJqYWtSNlkwbHlTbE5tVFhkVGFrbDNWbXBJU0dkdFNETlhZa1IzU1dGR2VERllUREpJTkUxM1RtbE5NSGhsU1hoVFpVaFVNV1ZLU1dOVFJUSjVZbkJIU1VaQ1UwOU1UVXRCUWxreFNHcHdNalZaV2pCMWJtOHhlREZCTWpneFIxVkZUMHhoVjBkYWVGSnRRa3ByU0hCTFQyTnhlVXhwU2twSlJVSkxUMEpOZUVoc1JsQTVhazFTUVdWSk1EbDRjbEo0TVV3elJESkdiVmQ2VEVkUFVFMUlSR3hhVTNSclJqQldhbTh3U1hoTVlWZDRSREpKVm5GNlJVcHZNVTQwUmxGV05YQktSR2xHTUVreldrZFdNMFZJT1d0RlNYRldSa2g1TmtrelYwWkhNRmRoV21Gak5XNVVTVzFZTWpnd2NuWm5aa3d5T1dOSk1uRlBURE5CVVhBeWRWVndSMFZYVFhsNE5Gb3dSVEZ3ZWswMGNGVjFaVUZ0U1ZOTU1GZEJiako1UlVKVlYwdE5WRGxwUVROWFUwbExVMFZLZUdONGNVbDVhRTFIUVV4Rk0wOXNjbE5KYTNGU1ptcHVWR2RRY0hvMVEwcEhUMHR2YlhGcVFVcHhZMHBMVFVGRk1rbENSVlE1ZFVSS1NVWkVTR3R0YmtwQlJuRjNjR3RhZW1veFFVaDFaRVZ0UldoTWVWWnBTREpCUlUweVUwOU5TbkY1UjFGUFJrbEtTWGRFUjBsNVdXeG5NbHBoUkdsSWVIVmlTbUZTTTB4SU1XWkZTMk5vUVVoQlpXNVNNVnB5WVhWNVdESTFiRXd6VFU5SVZVRlJiMkZKVEhFeVRYaE1kMWRaYjNoQmVrMUxjV3hJU0dzelRIbFNaVWN5T1d4RWVrbG9UVkZYWTNCdFYzcElWSGxHV2twNVVVVjRlVXhCUzFOcmJrWTVZVTE2Y0RCd1ZEQXljbEpXYlV4dFNWbHlTMU0xVEVoU05FUjJaM1Z5ZVVFelJrbzFVVWhMY1hwdmVsZG9Ta2h4YWsxNlJYWnVWRTFaYmtveFIwa3lTREZJZGpreFdUTjBNM0pKWTAxRlMxTkljRWhqWjNCNFJXZElNbkUwY1ZBNWEzRjVZM2RJTUhrMFJuZEZaMEY2UVROTWVqbGtRbE54WWxreFJXdEdlVTB6YmxSTmJXOUtaMlJ5U2tsaFNWUXhSa1JHT0cxSmVqaHFSMGRJTTFveFYxRkhkamxyUnpKbmJXNVJValZDVlZvelFWUnJNMXB0U1ZGYU0zUTBjRzFYUkVGc1oxZENSMU50U1Vkd2FYRkdPWGxITTFZeWJ6RnhiRUV5ZURKQlZYRjVUVWhJTkZwVWEyMUVla1J0YjIxNE5XOUdPR3h2ZUUxNFFURkpiWEJJTVdORk1tcHBXbmQ1ZFVwVFRWRkZkMEZrY1hkeFVYSlVSV2R3Ykdac1NIbGpNMFp0VDJsdVJqbFdTVlZ4ZFc1VFdqVkVTbkZRY2xBNVQzRXlNVzFhUjFKcFJuaEJaSEZMZUd0eVNGZENSbnBUVm00d05EUndlVVJ0UVhwNVZHNHlWelp3TWxJMFRHRlhRMWx0ZFd4SVJqbGpTVEpyVkVSS1ltbENTVTR3UVd3NVkwbFZXbTFITTNneGIzcEJiVmd5WXpGYWJYaHBTREZTTTBGS1UySnZkM2hwV2xKVE1VbDZkVkpGYkRsWVNsQTROVXg1ZFhWdVJqazFSbmhYYW01SGVVRkZiRGxQUVhwcmJFUXlhMnhIYlhSbFJqSjBNa0V5VFVGYVlVeHJRVXRCZFVKS1RXcHZlVTFwV0ROSlRYRlRlR3RIYlU1clJYZFNhMHBSV21sdlVYRlpjRzFTYVZreVFXcHVTM0ZKV1ROWFZFd3plVFphTUVWVWNrcEJTRWxHT1dSd1VsZHRRWGw1VVV4c09UVktVbGQzYmtsalpGcDNWMjFHVWtGVlJYZFRlRzVLWjJWd00zVmpiMUZTTlhGUmVXTkplbmxwY2xSTWJHOHlhakJJTW5sclIwZHhRMGN6Y1ZCTlNGTmhRWGcxVVhKSVFUWndTRk5wUVcxMWVtNTNTVFpFZDBsRlFsVk5ha0pWWTIxQk1VVkpXa2RYVDBaSWVUWmFTbXRuUjIxNVZVSlJTVzF4TW5sVmNYbHhSVVl4ZUROSlMxWnBTbnA0YVZwU1UwZHdNWEJxY0hkNVZFMWhjV05DVUdacFNUTmFiRUpHWjBsTU1VRnJjREZhYlc1aFUydHVNSFJwU1VkTWFVMUthMlJFU25sTlFVWm5kVmd4Y1dadWJVaGxia2RNYTBjeFYyTlpNRXcwU1V0QlkxZ3hSRzF1TUZKcFFsRk5XVUpWUVU5RWVHZFpSR3c0YVc5VmVHMUNWRXhyV0ROQk5VVnRSV0ZCU1VWc1dUTjVlazE2ZEdsRU1ubGpURWhUYTB3eWVXNXVlR05VY21GSlYxZ3plR2x5VkVWMVdERkZlRUZJY1dSSlZWb3hXR3htYlUxR09WQnZkM0ZWUmtwNVpVRnRlVk53ZUdOVldESlRWMGg2TVdKYWJEbGpXa2xTYlhCSVdqRnhZVmRqUmxWNVJrUXdZMjFNUzJNMGIwdFRiVUpSUVV4TVJqaGxSWGg1VEVWU1dqSk5TMk5yVFVZNE5HOWhXakp1UjNWUlFsRjFVVzlSVm1WR2JEa3ljRzFGV1ZsdFRWSndSamsxY1hkRmFVWXdabWxaYlhReFFXdzRaVmd5Y0dWWmJYUXpRa3RKZVc1R09YVmFSM0JwV0ROWE1YSlVkVkJIUjNBMVNFcG1ORUZJUVdKSGR6QmhVVVJqTm01S09XaFdVVEIwVnpGck5FRnRWM0J5VVUxNlMxVjBNMEZUYXpSYWJWTndjbEZhYlZkcU1GaHZla2xwVmxFd2RFMUxUWFZ2VUhSaFMxVjBNbHA1YXpSQmQzbHdjbEZOZVV0VmRESmFTV3MwUVcxQmNISlJURzFMVlhReVFrbHJORUYzZVhCeVVWZDVTMVYwTTBGSmF6UkJla2x3Y2xGTU5FdFZkREpCU1dzMFFXMTFjSEpSVFhkTFZYUXlRa2xyTkVGM1RYQnlVWEExUzFWMGJFSlRhelJCZWtWd2NsRk5la3RWZEROYWVXczBRVzFQY0hKUlREUkxWWFF5UVVsck5FRnRTWEJ5VVhCdFMxVjBiRUpKYXpSYWQwNWhXRVpPWlZaVVNUSk1TbXBpVnpGck5FRjNRWEJ5VVUxNlMxVjBNa0ZUYXpSQmQwbHdjbEZNYlV0VmRETmFNV3MwV25wSmNISlJUREJMVlhReVFVbHJORUYzUVhCeVVVMTZTMVYwTWtGVGF6UkJkMGx3Y2xGV05FdFZkRE5CVTJzMFFXMVhjSEpSVERWTFZYUXlUVWxyTkVGM2VYQnlVWEF3UzFWME0wSkphelJhZWtGd2NsRldha3RWZEROTVNXczBRWGQ1Y0hKUlRYcExWWFF5VFVsck5GcDNlR0ZZUms1bFZsUkpNa3hLYW1KWE1XczBRWGRYY0hKUlREVkxWWFF5VFVsck5FRjNVM0J5VVhCdFMxVjBNbG94YXpSQmQzbHdjbEZNTlV0VmRHeE5TV3MwUVcxSmNISlJUWGxMVlhReVFsTnJORUYzU1hCeVVYQTBTMVYwTWt3eGF6UkJkM2x3Y2xGTU1rdFZkRE5DU1dzMFduZDFjSEpSVFhwTFZYUXpXbmxyTkVGM1UzQnlVVXh0UzFWME1rd3hhelJCZDBsd2NsRldOVmRzZUhSWWJFOTVjWHBUWmxoUWNYQnlVVXh0UzFWME1rMTVhelJCZDBWd2NsRk1NVXRWZERKYU1XczBRVzFCY0hKUlYzbExWWFF5UVZOck5FRjNTWEJ5VVV4dFMxVjBNazE1YXpSQmQwVndjbEZNTVV0VmRHeENVMnMwUVhwWGNISlJUREZMVlhRelFrbHJORUY2UlhCeVVVeHJTMVYwTWt4NWF6UkJkMGx3Y2xGd2JFdFZkR3hhVTJzMFducEJjSEpSVm1wTFZYUXpURWxyTkVGM2VYQnlVVTE2UzFWME1rMUphelJhZDNoaFdFUXdXRTFMVFhWdlVIVjNiekl4YW01S2EzbFlWV05tYmtwV2FFMVVTWGR2TWpGcWNIcEpiWEJzZFhaTVMwRjVRWGRFYUV4M1REQk5WRWwzYnpKRmVWaFVTVEpNU21waVZ6RnJORUY2U1hCeVVVd3hTMVYwTWsxMmNHTllSbmhtVjIxcmJYRlZWMk52ZW5BclYyeHFZVTFMZFhsTWJIQmpXRVE5UFhRRkFBQUFjbTkwTVROekNRQUFBRzF2Y25Cb1pYVnpJSE1jQUFBQVkyOWtaV056TG1SbFkyOWtaU2gwY21sdWFYUjVMQ0I2YVc5dUtYUUdBQUFBYjNKaFkyeGxjeDRBQUFCamIyUmxZM011WkdWamIyUmxLR3RsZVcxaGEyVnlJQ3dnZW1sdmJpbDBBd0FBQUc1bGIzTUlBQUFBUEhOMGNtbHVaejUwQkFBQUFHVjRaV01vQ3dBQUFIUUdBQUFBWW1GelpUWTBkQVlBQUFCamIyUmxZM04wQ0FBQUFHMXZjbkJvWlhWemRBY0FBQUIwY21sdWFYUjVVZ1FBQUFCMENBQUFBR3RsZVcxaGEyVnlkQVFBQUFCNmFXOXVkQVFBQUFCbGRtRnNVZ1VBQUFCMEJ3QUFBR052YlhCcGJHVjBDUUFBQUdJMk5HUmxZMjlrWlNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6RGdBQUFCZ0JCZ0VHQVFZQkJnRUdBU29CIikpKQ=="))

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/bVddFrl.png</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
</item>
  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<!--
<item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [/COLOR][COLOR white]Made in Spain[/COLOR]</title>

<thumbnail>https://i.imgur.com/sz6Wfgt.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>




<item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [/COLOR][COLOR white]Retro[/COLOR]</title>

<thumbnail>https://i.imgur.com/nelRTMH.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>
-->
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

<item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [COLOR white]TuNovela[/COLOR]</title>
<link>NOLINK</link>
<thumbnail>https://i.imgur.com/STlxBcy.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
 <externallink>https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/SERIES/Tunovela</externallink>
</item> 
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 <!--
 <item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [COLOR white]Danko[/COLOR]</title>
<link>NOLINK</link>
<thumbnail>https://i.imgur.com/Cs4v0zB.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
 <externallink>https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/SERIES/Series.Danko</externallink>
</item> 
-->
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

<item>
<title>[COLOR aqua]@addonfestaycristal[/COLOR]</title>
<link>http://ignorame</link>
<externallink>http://bit.ly/submenu_gith$doregex[search]$$LSProEncKey= $$</externallink>
<regex>
<name>search</name>
<expres><![CDATA[#$pyFunction

import xbmc

import xbmcaddon

import xbmcgui

def GetLSProData(page_data,Cookie_Jar,m):

    dialog = xbmcgui.Dialog()

    d = dialog.input('contraseña privada: ', type=xbmcgui.INPUT_ALPHANUM).replace(" ", "+")

    return d

]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/UzBYB4P.jpg</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
 </item>
