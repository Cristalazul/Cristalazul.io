<?xml version="1.0" encoding="UTF-8" standalone="yes"?>



<item>
<title>[COLOR red]NETFLIX [COLOR white]cristal Series[/COLOR] </title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR aqua][makelist2.param1][/COLOR]</title>
<info>[COLOR aqua]Grupo telegram: [COLOR gold]@addonfestaycristal[/COLOR]</info>
<link>$doregex[makelist]</link>
<thumbnail>$pyFunction:('https://www.seriespapaya.se/uploads/[makelist2.param2]|user-agent=Mozilla%2F5.0+%28X11%3B+Linux+x86_64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F86.0.4240.183+Safari%2F537.36').replace('\u00f1','%C3%B1').replace('\/','/').replace('https://www.seriespapaya.se/uploads/https://i.imgur.com/jZ4HiVq.png','https://i.imgur.com/jZ4HiVq.png')</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR lightskyblue][B] [makelist.param4][/B] [COLOR white]entra en los servidores[/COLOR]</title>
<thumbnail>$pyFunction:('https://www.seriespapaya.se/uploads/[makelist2.param2]|user-agent=Mozilla%2F5.0+%28X11%3B+Linux+x86_64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F86.0.4240.183+Safari%2F537.36').replace('\u00f1','%C3%B1').replace('\/','/')</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<link>$doregex[picapau2]</link>
<name>makelist</name>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re , requests , xbmc , xbmcaddon , xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
 
    url= 'https://www.seriespapaya.se/serie/[makelist2.param3]'
    agente = {'User-Agent': AgenteCristal()}
    extraer = requests.get(url, headers=agente)
    ExpresCristal = re.findall('(?s)location = "([^"]+).*? href="([^"]+).*?img src="([^"]+).*?;([^<]+).*?', extraer.text)
    return ExpresCristal

def AgenteCristal():
    url= 'https://pastebin.com/raw/KfH67FfV'
    agente = {'User-Agent': 'Mozilla/5.0'}
    extraer = requests.get(url, headers=agente)
    AgenteCristal = re.findall("(.*?)CRISTAL", extraer.text)[0]
    return AgenteCristal
]]></expres>
<page></page>
</regex>
<regex>
<name>picapau2</name>
<listrepeat><![CDATA[
<title>[COLOR lightskyblue][makelist.param4][/COLOR] [COLOR white] [picapau2.param3] [COLOR lightskyblue][picapau2.param5] [COLOR gold]idioma [picapau2.param1][/COLOR] </title>
<thumbnail>$pyFunction:('https://www.seriespapaya.se/uploads/[makelist2.param2]|user-agent=Mozilla%2F5.0+%28X11%3B+Linux+x86_64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F86.0.4240.183+Safari%2F537.36').replace('\u00f1','%C3%B1').replace('\/','/')</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<link>$doregex[selecion_inteligente]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re , requests , xbmc , xbmcaddon , xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
 
    url= 'https://www.seriespapaya.se/[makelist.param2]'
    agente = {'User-Agent': AgenteCristal(), 'Referer': 'https://www.seriespapaya.nu/serie/breaking-bad.html'}
    extraer = requests.get(url, headers=agente)
    ExpresCristal = re.findall('idioma[\w\W\s]{0,47}images\/(.*?)\.p[\w\W\s]{0,80}fecha\"\>\n(.*?)<[\w\W\s]{0,217}(Upto.*?|Gamo.*?|Vido.*?|Streamch.*?|Gounlimi.*?|Uqload.*?|Ok.*?|Upstreamt.*?|Fembed.*?|Clipwatch.*?)<[\w\W\s]{0,99}href="(.*?)"[\w\W\s]{0,88}calidad">\n(.*?)<', extraer.text)
    return ExpresCristal

def AgenteCristal():
    url= 'https://pastebin.com/raw/KfH67FfV'
    agente = {'User-Agent': 'Mozilla/5.0'}
    extraer = requests.get(url, headers=agente)
    AgenteCristal = re.findall("(.*?)CRISTAL", extraer.content)[0]
    return AgenteCristal
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<expres><![CDATA[#$pyFunction
import re , requests , xbmc , xbmcaddon , xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
 
    url= 'https://www.seriespapaya.se/[picapau2.param4]'
    agente = {'User-Agent': AgenteCristal(), 'Referer': 'https://www.seriespapaya.nu/serie/breaking-bad.html'}
    extraer = requests.get(url, headers=agente)
    ExpresCristal = re.findall("location\.href='(.*?)'", extraer.content)[0]
    return ExpresCristal

def AgenteCristal():
    url= 'https://pastebin.com/raw/KfH67FfV'
    agente = {'User-Agent': 'Mozilla/5.0'}
    extraer = requests.get(url, headers=agente)
    AgenteCristal = re.findall("(.*?)CRISTAL", extraer.content)[0]
    return AgenteCristal
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/jZ4HiVq.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>


<item>
<title>[COLOR deepskyblue]HBO [COLOR white]cristal Series[/COLOR] </title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR aqua][makelist2.param1][/COLOR]</title>
<info>[COLOR aqua]Grupo telegram: [COLOR gold]@addonfestaycristal[/COLOR]</info>
<link>$doregex[makelist]</link>
<thumbnail>$pyFunction:('https://www.seriespapaya.se/uploads/[makelist2.param2]|user-agent=Mozilla%2F5.0+%28X11%3B+Linux+x86_64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F86.0.4240.183+Safari%2F537.36').replace('https://www.seriespapaya.se/uploads/https://i.imgur.com/thTfzMZ.png','https://i.imgur.com/thTfzMZ.png')</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUF3QUFBRUFBQUFCeklRQUFBR1FBQUdRQkFHd0FBRm9BQUdVQUFHb0JBR1FDQUlNQkFHUUJBQVJWWkFFQVV5Z0RBQUFBYWYvLy8vOU9kQUJuQUFCaFZ6RjNZak5LTUVsSE1XaGpiazV2V1ZkM04xcFlhR3haZVdoMFdWaEtlbUZIUm5OTWJYaDJXVmRTZWt0SFNtaGpNbFV5VGtNMWFVNXFVbXRhVjA1MldrZFZiMGxzYkROUlZVWkNVVlZHUWxGVlJrSlJWVXBTVVZWR1FsSlZSa0pSVlVaRFpXMXNVbEZWUmtKU01VWkNVVlZrVWxGclJraGtNRVpDVW0wNVFsRlZaRkpSVlVaSVZWVktRbEl6WkVOUlZWcDJVV3RHU0ZWVlRrSlNiVGxFVVZWa1VsSkZSa2RpTUZKQ1VqRkdSbEZWV25aU1ZVWklWVlZhUWxKdE9VZFJWV1JTVWpCR1IySXdaRUpTTVZaSlVWVmtVbE5GUmtwVVZVcENVakZXU1ZGVlpGSlRWVVpLVkZWS1FsRnRVbk5SYm1SRFlUQk9VbEV3VWtKVlZVWlpWMnhHYWxGV2NFSmlNRVp1WkRCV1FsSnFSblpUVlVaSVZsVm9RbEl4Vmt0UlZXUldVVlZHU0dJd2RFSlNNVlpKVVZWa1VsUkZSa3BVVlVwQ1UxVXhRMUZWWkZKVVZVWklWVlUxUWxOVk1VVlJWV3hPVVd0R1FsSnRkRUpWVlVwVlV6QkZNRkZWUmtKUmJrRjJUSGs0ZGt4NlFURk5SR2d6VFVWR1FsSlhkekZWVnpFMFlWZEtWazVVU2xoaE1sSllXVlJDYzFOR1RuRldhMVpXVm5wc2VGVXhWbGRaVmxwWFUycE9UbEpZVWtaV1ZtaERaREZzYzJGRlRtdGlWVFV4Vmxaa2ExZHRTbFpYYWxwWVlrWktZVlJWVmpSU1JrWnhWMjFzVTAxdWFIZFdSVlpQVVRKR2RGTlliRlppV0doaFZGUkJlR1ZzVGxaYVJYUnFVakJ3TUZWdE5YZFhhekYwWlVoa1UxSnJXak5hUldSS1pXeE9kVnBIYUZOTlZtdzBWMVJPYzFGck9WWmlSVkphWld0d1VGWnJXa3RpTVZKMVkwaEtUazFFVmtaV2JGSlBWREpHYzFKWWNGVmlSa3BVV1d4Vk1VNXNTbGxqUlRWVFVtMXplRlpIZUZOaGF6RnlUbGhHVjFaRlNrOWFWekY2WlVaU1dXTkZkR2xXVkZaNFZrWlNRMWxYUm5OV2FsWlZWbnBHUzFSVVFURldWbFpWVTJzMWJHRXdWalpXUmxwVFZHMVJkMDVVV2xkV1JYQmhWbXRhUjA1R1VuSmFSbkJPVFZkNFZsZFVUbmRVTVZwSFVsaGtWV0p1UW1oWlYzTXhUbXhLVlZSck5WTlNhMVYzVmtkMFUxUnJNVVpOV0VaYVpXdGFVRlpxUWxabFZsSjFZMGR3VGsxRVZUSlpXSEJMVkcxV2MxWlVRbFZoTVVweFZGZDRkMk5XVmxWVmF6bHNZVEZXTmxaRVFsTlZNa3BXVGxaV1YxZElRbEJhVjNoWFRteFNjMVZ1U2s1U1ZGVXlWMWh3VTFReVZuUlVXSEJWVmxaS1YxcFdWVEZUUm1SVlVXeENWMUl3TkRGV1JtTjRVMjFXVjJKSVJsVlhSMmhRV1ZjeFRtVnNaRmRWYlhSb1VsUldXVlZzVWtkVlJrcEhZa1JTVldKR1NuVlVWbFV4VG14a1dXRkZPVk5TVjNjeVZrYzFkMWxYUlhkT1ZGcGFaV3R3VUZacldrWk5WbEp6Vlcxd1RrMUVSVEpXYkZKUFZERkplRlpZYkZWaVdFSlhWRmR6ZUdSR1RsVlVhemxzWWtaV05WWkdZM2hYYXpCM1RWUmFXbVZyY0ZCV2EyUnJUbXhTY2xWck5VNWhlbFpXVjFST2QxUXhTa2RoTTJ4VllsUkdSMXBYY3pWV1ZrNTBZa1UxYVZadGR6SldSbWgzV1ZkS1ZrNVdWbWhsYTNCUVdWZDBkMlJHVW5WalJYQk9UVVJzVmxZeU1YZFViVlp6WWtSV1dHSllRbFJaVjNNeFRteHdObEpyTlZOU1ZFSTJWa2MxZDFGck1IZFBWbFpWVjBkU1QxcFhNWHBsVmxKMFkwWmFUbEpVVmpCVk1XaDNWR3hhUmsxSWNGVmlia0poVkZkemVHTldVbGxoUlRWc1lsaE9ORlpHVmxOWGF6RldUbFJhWVUweWVHaFpWM2hYVFRGU2NWTnJXbXhoZWxVeVZsY3hNRlF5Um5OaE0zQlZZbGhDVDFSV1ZURlRSazVWVVd4Q1YxSlVRak5XUnpWM1Uyc3hjazVZUmxoV1JYQlBXV3hhY21Wc1VsaGpSbHBzWVhwV1ZsZHVjRU5VTWxaeVkwaFNWV0p1UWxOYVYzTXhZMVpPZEUxVk9WTlNNbEV4VmpGa2QxTXlSbFpOVkZwb1pXdHdVRlZyV25KbFZsSjFZMFp3VG1KSVFsWldSbEpIVkRBeGNsWlljRlZOUmtwUFZHdFZNVlpXYjNwalJUbFhVbFJGZWxaSGRHdFRhekI0WWtaV1dGWkZjRkJaVjNONFRteFNXV05IY0U1U1ZGWjRWVEZTVDFReFdrWk5TSEJWWWtaS2VWcFhjM2hPYkZaMFpVVTFiR0pYVGpOV01uaFRZVzFXVmsxVVdsZFdSVnBRV1ZjeFQwNVdVbGxqUmxwT1VtMTRWbGRZY0VkVU1sWnlZVE5vV0Zac1NuRlViRlV4WTFac05sUnNjRmRTYlhjeFZrWm9kMk5yTUhkTldFWldWMGQ0VUZsWGRISmxiRkowWTBaS2JGWlVWbmhXYkZKSFZVWktTRlJxV2xWaE1sSlRWRlJCTlZaV1pGbGhSVGxzWVRCV05WWkdhSGRoYXpWV1RsWldWbFpGY0dGV2ExcFhUVEZTZEUxV1NteFdia0o0VmxjeGQxUXlSblJhUkZwVllURktWRmxzVlhoT2JVWTJWR3M1YUdKSVFubFdSM1JUVm1zeGNrMVdWbFZYU0VKUVZtdGthbVZHVWxkVmJVWnBWbFJGTWxaR1VrTlpWbHBIWTBoS1ZXSllRbmxVVlZwM1ZsWlNWVlZyT1d4aVYwNDJWa1prZDJFeVJrWk5WRnBWVmtWd1VGcFhlSEpsUmxKWlkwWndUbUY2UmxaV01WSkxWREZhU0ZScVdsVk5Sa3B4Vkd0VmVFNXNXbFZSYlVab1lsVXdkMVpITVhkaWF6RnlUbFpXV21WcmNFOWFWekZPWlZaU2MxVnJOV3hoZWxaV1YxaHdTMWRzV2tkU1ZFSlZZbTVDZVZSVlduTldWazUwVFZVNWFHSkhkRFJXUkVKVFZtMVdSazVZVWxWWFNFSlJWV3RhZDJNeFVsbGpSVXBPWVhwV1ZsZFljRU5VTWtaeVZtcGFWVlpzU25GYVYzTXhZMVpPVlZOck5WZFNWRVV5VmtkMGExZHJNVVpOVkZwWFZrWktUMXBYZUVabFJsRjRWV3h3VGxKVVJUSldSbEpIVkRGS1IxWnFXbFZpUmtwNVZGVlZNV05XVWxsalJUbFhVbFJDTlZaSGVGTlVhekZHVGxSYVZGZEhlR2haVjNoTFlqRlNkR05GV2s1U2JrSldWbGN4YzFSdFZuTlNXR3hWVFVaS1YxUlZWVEZUUms1WlkwWkNVMUpzV1RGV1J6QjRVMnN3ZDAxWVJsWmlWRVpQV2xjeGFtVnNVWGhWYlVab1ZsUkdNRll4VWs5VWJVWnpZa1JTVldKVVJtRlVWVnAzVmxaU1ZWSnJOV2xXVjNRelZqRmFVMVJyTVZaT1dFWlRWa1ZhVDFsWE1VOU5NVkp6V2tWYVRtRjZWVEpXYkZKVFZESktWazFJYUZWaVdFSnhXbFZWZUU1c1pGVlVhemxzWWxVME1WWkhlRk5SYXpGeVRsVldXazB5YUZCWmJGWldaVlprYzFWdGNHdE5SRlV5Vm14U1MxZHNXa2RXVkVKVllsUkdTMVJYZUhkU1ZtdzJVV3M1VjAxR1ZqTldSRVpUV1ZkR1ZrNVlSbE5XUlVwb1ZXdFZlRTB4VW5OVmJrcE9WbFJXVmxaWE1UQlViVlp6Vm1wYVZWZElRbWhaVlZVeFZsWkdWVkZyTldoaVJYQjVWa2N3ZUZWck1WWk5XRVpXWWxkb1VGWnJWbFpsYkZKelZXeGFiR0Y2Vm5oV1JsSkRWREpHZEZSVVJsVmlXRUpMVkZWYWQxWldWbGxqUlRWc1lsZE9OVlpHWkhkVWJWWkdUbGhTV0ZkSVFrOVpWM2hIVGtaU1dFMVdjRTVTVkVaV1ZsY3hkMVF4V2taU1dHeFZUVVpLVjFwV1ZURlNWbXcyVW14Q1YxSnVRakJXUjNoVFZHc3hWazlXVmxoaVYzaFFWbXBDVm1ReFVsbGpSbHBPWVhwV1ZsVXhVazlVTVVwSFlrUmFWV0pZUWt0YVYzTTFWbFpXZEUxVk9XaGlWMDR6VmtjeGQyRnRWbkpPVmxaaFpXdGFUMVpyV25kalJsSlpZMGhLVGsxRVJuaFdSbEpUVkRGSmQyRXphRmhXYkVwb1dWWlZNVkpYUmpaU2F6bFhVbXR3ZVZaSGRGTmphekZHVFZaV1dtVnJTbEJaYkZaV1pERlJlRlZzV214aGVrVXlWMnBPYzFsWFJuUlVhbFpWVjBoQ1YxUlVRWGhPYkZwWllVVTFiR0pYVGpWV01uaFRWV3N3ZDA1VlZsaFdSWEJRV1ZkNGNrMVdVbkphUlRWT1VsUkdlRlV5TUhoVU1VcElWRmhvVlZkSVFtaFpWVlV4VmxaS1ZWTnJOV2hoZWtGM1ZrZDRVMVZ0Vm5KTlZsWllZbGhTVUZWcVFsWmtNVkpaWTBaYWJGSlVWbmhYVkU1M1ZVWmFTRlJxVGxWaE1VcHhWRlpWTVZaV1ZsVldhemxUVFVkME0xWkdXbE5UTWtwV1RsVm9WRlpGY0ZGVmEyUlBUbFpTV1dOR1NrNVNWRVo0VjFod1IxUXhXa1pXV0hCVlYwaENWRmxXVlRGVFJtUlZVVzFHVTFKWVFuZFdSM2hUVldzeGMySkdWbGhpV0ZKUVZtdGthbVZHVWxkVmJYQnNVbFJXTUZZeFVrTlVNVXBIVTI1U1ZXSnVRbE5VVkVFeFkxWlNWVkpyT1ZOU2JYUTJWa1prZDFkck5WWk9XRVpZVmtWYVVGbFhjM2hOTVZKelZXczFUazFFYkVaV01WSkhWREZhUjJFelpGaGhNVXBUVkZSQk1WSldTbFZUYlVaWFVqQXdkMVpITUhoWGF6RnpZa1JhVjFkSGVGQlZha1pXWkRGU1dHTkhSbWxTVkZaWlZXeFNUMVZHU2taTlJFWlZZa1pLZVZSVlduTldWbVJWVldzMWJHRXhWalpXUnpWM1lXczFSazVWVmxoWFNFSlJWbXRhUzJJeFVuUmpTRXBPWVhwV1ZsWnNhSE5VTVVsM1RVaGtXR0pZUWs5VWExVXhWbFpPV1dORk9XeGlWa3AyVmtjMWQxZHJNSGROVkZwV1lsaG9VRmxYZUhKbFJsRjNWV3hLYkZKVVZsbFZiRkpIVlVaYVIxSllaRlZoYTNCSFZGVmFjMVpXVWxsYVJUVnNZa2QwTTFaSE1YZFZhekZ5VGxoR1lXVnJTbUZhVjNoWFRURlNjMVZyTlU1U1ZGWkdWMVJPYzFSdFZuTmhNMmhWVmpOQ1ZGbFhjekZqVmxaVlUyeHdhR0pGVmpaV1IzUlRZV3N3ZDAxV1ZsVldSa3BRVld0a1RtVkdVWGRWYlVab1ZsUldTVlpXVWtOVlJrcEhVbFJDVldKdVFrdFVWbFY0VWxaV2RHSkZPV2hoTVZZMlZrZDBVMWR0Vm5KT1ZGcGFUVE5DVDFWcldsWmxSbEp6Vlcxd1RsWlVWbFpXTWpGdlZESkdjMUpZWkZWWFNFSlVXVmR6ZUU1dFJqWlNhemxUVWxoQ2QxWkhOWGRXYXpGR1RsUmFXbVZyY0ZCWmJGcHlaV3hTV1dOR1NteFdWRVV5VjI1d1MxZHRSbk5pUkZaVlYwaENVMVJWVlRGV1ZrNTBUVlU1VjFKVlZqVldSRUpUVlcxV1ZrNUliRk5XUlVwb1dWY3hUMDVHVWxsalJ6Vk9VbFJXVmxkWWNGTlViVXBXWVROc1dHSkdTbFJaYkZVeFVsWmFWVk50UmxkU2EzQjVWa2Q0VTFOck1WZGlSbFpWVmtWd1VGcFhlRlprTVZKeVZXeGFUbEpVUmpCV01WSkRWRzFHYzFKWVpGVmlWRVpYVkZSQk1VNXNXbGxqUlRsc1lsVXhORlpFUmxOVWF6VldUbFpXV0ZaRlNtRldhMlJUWWpGU2RHTkhjR3hoZWtVeVZrWlNSMVF5Vm5KaVJGcFZUVVpLVkZsWGN6RlNWbXcyVVdzNVYxSnRkRFZXUm1oM1kyc3hSazlXVmxaV1JWcFFXbGQ0Um1WV1VYaFZiRXBzVmxSV2VGWXhVazlVYlZaelUyNVNWV0V4U21GVVZWVXhZMVpXZEdSRk9WTlNWbFkxVmtSQ1UxWnRVWGRPVkZwWVZrVktZVlpyV2tabFJsSjBZMFphYkdGNmJFWldNakI0VkRGS1NHUkVWbGhpV0VKeFdrUkJNVTVzYkRaVWF6bFRVbFJDTTFaSGRHdFdiVlp5VGxaV1ZtSlVSbEJWYTJST1pWWlNjbFZyTlU5U1ZGWXdWbFpTUzFkdFZuTlRiazVWWW01Q1UxUlhlSE5XVmxwWldrVTFiR0pGVmpSV1IzUlRWR3MxUms1VmFGTlhTRUpQV2xkNFJtUXhVbkphUmxwc1ZtMTRlRlpHYUc5VU1VcEdWbGhrVlUxR1NsTlVWRUV4WkVaYVZWTnJPVk5TYkZrd1ZrZDBhMVZyTUhoaVJsWllWa1pLVDFsc1duTk9iRkY0Vlcxd2JGSlVSVEpYYm5CUFZHMUdjMUpZY0ZWaE1VcFhXbGR6TVU1c2JEWlRhemxvWWxkT05GWkhOWGRoTWtaR1RsVldWVlpGU2xCWlYzaHlaVlpTZEdOSVNrNWlTRUo0Vm14b2MxUXlSblJqTTJSWVYwaENWMVJYY3pGalZuQTJVbXM1YkdKR1dUQldSekYzVTIxV2NrNVdWbGRpVjJoUVZtdGtlbVF4VWxoalIzQlBVbFJGTWxWV1VrdFhiVlp6VW1wYVZXRXhTblZVVkVGNFRteFdkR0ZGTld4aGVrVXhWakl4ZDFack1IZE5XRkpVVmtWS1VGWnJWWGRsUmxKWlkwWndUazFFVlRKV2JGSkRWRzFXYzFacVdsVmlXRUpoV2xaVmVFNXNjRFpSYlVaWFVtNUNlVlpIZEd0VmF6QjNUMVZXV21WcmNGQldhMlJxWkRGa2MxVnRjRTVXVkZaR1dWaHdTMVZHU2tkaGVrWlZWMGhDZVZSWGVITmpWbEpWVTJzNVUxSlVRalZXUjNoVFZXc3dkMDVZUmxoV1JVcFFWV3RhVm1Wc1VuSmFSVnBPVmxSRk1sWXlNWE5VYlZaMFZGaHdWVTFXU2xkYVZsVXhUbXh3TmxSck5XeGlSWEI1VmtkNFUySnJNWEpOVkZwVlZrWmFVRmxYTVhwa01WSnlWV3MxYkZaVVZrWldiRkpEVlVaYVNGUlliRlZoTVVweFZGUkdjMVpXVmxWVWF6bFhVakEwTVZZeFpIZFhhekZXVGxSYVZsWkZjRTlXYTFaM1kwWlNjMVZyY0U1V1ZGWjRWa1pTUzFReFdrWk5TR1JWWWxoQ1lWUldWVEZPYkVwVlVXeENVMUpyY0hkV1J6RjNZbXN4Y2sxVVdscGxiRnBRV2xkMGMwNXNVbFpWYkdSb1VsUkZNbFpzVWtkVU1sWnpWbXBhVldKR1NrZFVWbFUxVmxaV2RHRkZPVTVoTVZZMVZqRmtkMWxYUmxaT1ZWWlhWa1ZLYUZWclZYaE9WbEowVFZVMVRsSlVWbmhXVnpCNFZHMVdkRmt6WkZoV00wSlRWRlZWTVdOV1NsVlRiVVpUVWpBeE5sWkhkRk5pYXpCM1QxWldWMVpHU2xCYVYzUnlaV3hTVmxWc2NFNU5SRlpXVjJwT2QxUXhTa2RoZWtKVllsaENWMVJYY3pGU1ZtdDZZMFU1VjFKVVJUSldSelYzVkdzMVJrNVZWbGhXUlZwUVdWZDRSbVZzVW5SalJscE9WbFJXVmxZeFVrdFViVlp6VWxoa1dHSkdTbkZVYkZVeFVsWktWVkZ0UmxkU2JYUXpWa1pqZUZOck1WWk9WVlpXWWxSR1VGVnJWbkprTVZGM1ZXeGFUbUY2VmtsV1JsSkRWREpHYzFKcVZsVlhTRUpQV2xkek1VNXNaRlZUYXpsWFVsWldNMVl5ZEZOVWF6VkdUbFZvVjFkSVFsQmFWM2hHVFZaU2NsVnNXazVTYmtKR1ZrWm9hMVF5U2xaTlNIQlZWMGhDWVZSc1ZURldWa1pWVkdzNWFHSkZWak5XUnpGM1Uyc3hSazVZUmxaV1JVcFFXVmQ0Um1WV1pGbGpSVFZQVmxSRk1sWldVazlYYkZwSFlUTm9WV0p1UW5GYVYzTjRWbFpPZEUxVk9XeGlWVEUxVmpGa2QxUnJNWEpPVmxaWVZrVndhRlpyWkU1TlZsSnlWV3hLYkdGNlJUSldiRkpYVkRKV2NsWlljRlZOVmtwb1dWWlZlRTV0UmpaUmF6bFhVbTVDZVZaSGVGTlhhekZXVDFWV1drMHllRTlaYkZaeVpXeFNkV05HY0U5U1ZFWXdWVEZTUjFReFdrZGpTRVpWWVRKU1IxUlhjekZqVm1SMFlrVTVVMUpXV1RGV01XUjNXVmRHY2s1VlZsUldSWEJSVm10YVJrMUdVblZqUm5CT1VsUldSbFl4YUhkVU1VbDNUVlJhVldKR1NsTlVWbFV4WkVaYVZWSnJOV2hpUmxZMFZrWm9kMk50Vm5KT1ZGcFdWMGQ0VUZsWGVFWmxiRkpZWTBaS1QxWlVWa2xWYkdoM1ZESkdkRlJVUmxWaVZFWkhXbGR6TlZaV1dsVlVhemxUVWpBME1sWkhlRk5XYlZaeVRsWldWbFpGU2s5YVYzaDNZMFpTV1dORk5XeGhlbFpHVm14U1IxUnRTbGRoTTJoVlRWWktWRmxWVlRGT2JVWTJVMnhDVTFKdGREUldSelYzVW1zeFJrMVVXbFppV0doUVZXdFdjMDVzVW5KVmF6VnJUVVJGTWxaR1VrTlhiVVp6Vm1wYVZXSllRa2RVVlZVeFkxWmFXV0pGT1doaVIzUXpWa1pvZDFWck1YSk9XRVpZVmtWd2FGbFhNVk5pTVZKeFUydGFUbEp0ZUZaV2JGSkxWREZKZDFacVdsVmlSa3B4VkZkek1WTkdUbFZSYlVaVFVsUkNOVlpITlhkaGF6RkdUbFJhVlZkSVFsQlpiRnB5WlZaa1dHTkdTbXhXVkZaNFZURm9kMVF4V2tkalNFWlZZVEpTUjFSVlduTldWazUwVFZVNWFHSllUalZXUmxwVFdWZEtWazVZUm1obGEwcGhXVmR6ZDJWV1VuVmpSVnBPWVhwc1ZsWXhhSGRVYlZaMFdUTndWVmRJUW1GVVZsVXhVbFpyZW1ORk5XeGhla1V4VmtkMFUxVnRWbkpOVkZwVlYwZDRVRnBYZEZabGJGRjRWVzFHYVZKVVZrbFdNVkpEVkRGS1IxWnFVbFZpUmtweFdsZHplRlpXWkhSaVJUbFRVakpPTlZaSGRGTlpWMFYzVGxab1UxWkZXazlhVjNoeVpWWlNXV05ITlU1U1ZFWjRWbXhvYTFReVJuUmpNM0JWVmpOQ2NWUldWVEZXVms1VlVtczVhR0pGY0hwV1J6RjNWR3N4Vms1V1ZsWldSVXBRV1ZkNFZtVldaSEpWYkU1b1RVUldlRlpHVWt0VU1rWnpVbXBTVldKWVFuVmFWbHAzWTFaYVdXRkZPV3hpV0ZFeFZqSXhkMVpyTVZaT1dFWmhUVE5DVUZsWGVIZGtSbEowWTBad1RrMUViRlpXTWpGelZHMUtWMkV6Y0ZWTlZrcHhXbFpWZUU1c1JsVlJhelZzWVhwQmVGWkhlRk5XYXpGeVRsWldWVmRIVWxCVmExWnlaREZTZEdOSGNFOVdWRlo0VjFod1IxUnNTa2hVYWxKVlltNUNRMVJWVlhoalZsSlZWV3M1YVZaV1ZqTldSRUpUVm1zeFZrNVlVbGhXUlZwUVdWZDRjazFXVW5KVmJUVk9UVVJGTWxZeFVrOVVNVnBHWWtSV1dGWXpRbGRhVlZVeFVsWk9XV05GTlZOU2EzQjRWa2N3ZUZSck1YTmlSRnBXWWxkNFVGVnJWWGhPYkZKMFkwVTFiRkpVVm5oV1JsSkxWMjFXYzJFemJGVmlSa3BIVkZaVk1WWldWblJpUlRWc1lrVldNMVpFUmxOVk1rWkdUbGhHWVdWclNsRldhMlJPVFZaU2NsVnVTbXhoZWxaR1ZteG9kMVF5Um5OV1dHeFZUVlpLVkZsc1ZURlRSbVJWVTJ4d2JHSkZjSGxXUjNoVFltc3hjMkpJUmxkWFNFSlBXV3hXY21WR1VsbGpSbHByVFVSVk1sVnNVa05VTVVwR1RVaHdWV0p1UWs5VVYzaHpUbXhrV1dORk9WZFNiWFF6VmtaYVUxZHRWbkpPVmxaVFZrVndVRnBYZUhka1JsSjBZMFp3YkZadGVIaFdWbEpMVkRGS1NGcEVXbFZpV0VKVFZHeFZNV05XWkZsalJrSlRVbTVDTUZaSGVGTlZhekIzVFZWV1ZsZEhlRkJXYTJScVpWWlNXV05HU2s1aGVsWjRWakZTUTFSc1drZGhNMmhWWW01Q1IxUlZWWGhXVmxKVlVXczVhR0pZVGpOV1JscFRWbXN4Vms1VmFGVldSWEJvVld0VmVFNUdVblJqUjNCT1ZsUldlRmRyWkc5VU1rWjBWRmhzV0dKWVFsZFVhMVV4VWxaa1ZWRnNRbGRTTURCM1ZrZDBhMVJyTVVaT1ZGcFlZbGQ0VDFwWE1YcGxiRkpYVlcxR2FHRjZSVEpWTVZKSFZHMVdjMk5IT1ZWV2VrWmhWRmQ0ZDJOV1pIUmpSVGxUVWpBeE5sWkVRbE5WYlZaR1RsUmFXRlpGU2xCYVYzTjRUbXhTZEUxV1NrNVdWRVpHVm14U1UxUXhTWGRoTTJoVlZsWktUMVJXVlhoT2JFWlZVV3hDVTFKclZqWldSekI0VTJzeGNrNVdWbGhpV0VKUVdWZDBjMDVzVW5OVmJIQnNVbFJWTWxsWWNFOVViVVp6VTI1S1ZXSkdTbmxVVlZVMVVsWmtWVlZyT1ZOU01ERTFWa2N4ZDFadFVYZE9WVlpYVmtVMVQxcFhlRVpsVmxKelZXdHdUbUY2UmxaV01qQjRWREZhUmxKWVpGVldiRXBYVkZSQk1VNXNXbFZSYXpWWFVtdHdkbFpITVhkVWJWWnlUVmhHVmxaRmNGQlZha1pYVG14UmQxVnNjRTVoZWxaNFZsWlNTMVJzV2tkU1dHeFZZbGhDZVZSVlZURlNWbVIwWVVVMWJHSlhVVEpXUmxwVFlXc3hSazVWVm1oTk0wSlFWV3RhYzA1R1VuSlZhelZzWVhwc1ZsWnNhRzlVTVVsNFVsaHdWVlpzU2xOVWJGVjRUbXhXVlZOc2NHaGhla0l6VmtkNFUxSnRWbkpPVkZwYVpXeGFVRmxYTVdwa01WRjNWV3hLYkZaVVZsWlZWbEpIVkd4YVIyRjZSbFZXZWtaaFZGVlZOVlpXVmxsalJUbFRVbXRaTWxaSE5YZGhhekIzVGxWb1ZGWkZOVkZXYTFweVpWWlNXRTFXY0U1TlJFWldWMVJPYzFReVZuUlVXR1JZVjBoQ2FGbFdWVEZXVmxaVlUyczFiR0pGY0hkV1IzaFRVbTFXY2s1WVJsaGlXRkpQV2xkMGNtUXhaRmhqUms1cFZsUldWbGxZY0VOVU1VcEdUVWhrVldKSFVrZGFWM014WTFac05sWnJPV3hoTUZreVZrUkdVMWxYUmxaT1dGSllWa1UxVUZacldsWk5WbEp6VldzMVRsWlVSa1pYV0hCWFZERktTR1JFUVRSa2VrSkNVVlZTVDFGc1ZsWmtla0pTVm5wRk1GUlVRa2RUUms1SVkwVktWMUpYWkRWV1JsWnJVMWRHY2xKdVVteFNSVXBFVmxab1FtVldSbGRTYkdST1RVVmFTVmt3WkhkUmJFbDNUa2hzVlZKNlJrWlVWRUpIWkVaU1JWRnJUbE5OVjFGNVZWWmFSMDFGTVhKTlZFNVZVa1pLUTFaV2FHNWtNVVpXV2tkR2FFMVlRakJhUlZKUFdWWldWbVF6YkZKV2VrVXdWRlZXUjFOSFRsbFdhMHBwVmxSU05GVldhR3RVYlZaR1VteFdWbUZyY0VOV1ZsWnVUVlpHVmxwRmJHbFdWWEJKVmpJeGQxRnNWbGRYV0dSU1ZtdGFXVnBYZEVkVmJGSkZVV3MxYTAwd1JYZFZWbFpyVlRKS1YyTklVbGhoYTFwRFZsWmFTbVZzVWtaYVIwWm9Za2hDTUZZeWNFOVpWbFpXVlZoa1VsWlhVbEJaYkZaTFZXeEtSVkpyU21sV1YyUTJWakkxYTFKWFJYZFNiRXByVWpOb1RscEVRbE5qYkVaWFVteGtUbUV3V1hwVmJHaFhVV3hhUm1RemJGVlhSMUpvVkd0V1IwMHhaSEZSYlVaVFRVUkZlRlZXWTNoa01ERnlVMnhLVkZJelVrTldhMXAyWlZaR1ZscEZNV2xTVlZsNldrVlNRMWxYVVhkaFNFWlNWbXhLVGxSVlZrZE5NVXBGVld0S1UwMUhhREJWVjNSclUxVXhWbEpyYUZOU2VrWkVWV3BDVjAxc1JsZFNhMVpwVmxWYVUxVnNhR0ZSYkVsM1RraHdVbFpyV21oWlZFWjNaRWRTUlZSdFJtbFhSVVkwVlZaYVIwMUZNWEpOVldocVVqTkNRMVpyV25abGJFWllUVlZzYVZKVldrbFpNRkpEVVcxS1ZsWnFSbEpYUjFFd1ZGWldSMVZzVWxsV2EwcHJUVlpzTkZaRlZtdFNiVlpYWTBoU2ExSkZjRTlWYWtKdVRVWkdXRTFWYkU1TldFSXdWV3hvWVZGck1YTlRXSEJTWWtWYVIxcEVRa2RWYkdSeFUyc3hhVmRGUmpaV01qQjRXVlV4Um1WRmFGTlNNMmhEV2tSR2QyUkdSbGRTYm1ScFVsVmFTVlpIY0VkUmJGWldXak5rVWxacldtaFVWRUpIVFRGU1NHVkZTbE5OU0dRelZrVldhMVJWTVVaU2JsSlRVa1ZLUTFwRVJuWmxWbVIwVFZSQ1RsSnVRa2xaTUZKTFVXMUtWMkl6WkZKV2ExcEdXV3RXUjFaV1pIRlJiVVpwVm0wNU0xVldhR3RTVlRGR1UydG9WRkl6VWtOWmJGVXdaREZrY2xwR2FHeGhNRm93V2xWU1ExRnRVWHBSV0d4U1YwaENUbFJYZEVka1JsSlpWbXRLYVZkR1JqTldNblJyV1ZkS1ZsSnFUbE5TUlZwb1ZXcEdkMk5XUmxkVmEyeE9UVVZhTUZaR2FHRlJiVXBXWkROc1dHRXlVa3BaYTFaSFpFZFdSVkZ0UmxOTlJrVjNWVlphVTFSVk1VZGpTRkpVVjBaYVExWldhRUpsVmtaelVtdHNhVlpWV2pCV01uQkhVVzFSZUdOSVNsSldla1pVV1d0V05FMHhTa2hrUlVwclRWVndNRlZYZUVkVVZUVkdVbTVTVTFKRk5VUldWbFpYVFd4R1YxVnJiRTVXVlhCVFZrVlNTMUZ0U2xkVFdHUlNWbXRhYUZSVlZrZFRSbEpGVW0xR2EwMUlhSHBWVm1oclRVVXhWbVZGYUZOU1JWcG9XV3hvVTJSR1pIVmFSVlpQVm01Q01GWkhNVFJVVjFGM1ZXNU9VbFpyV2pOWmJGWkhUVEZTUlZaclNsWldWa1kxVlZkMGEyUXdNWEpTYkZaWFlXdGFSRlpXVmpSamJFWlpZMFZzVGxaVmNGTldNbkJQVVd4YVJtUXpjRkpXVjFKR1ZGWldSMU5IVWtoTlZVNVdWbFJGZWxZeU1IaE9SVEZYWTBoU2FsSkZjRU5hUkU1dVpWWlNSbHBHYUd4aE1Gb3dXVEJTVDFFeFNYaGlNM0JTVjBoQ1RsUldXbmRUUmxsNlkwVktiR0pIT1ROV01qQjRWRlV4VmxKc1NteFNSVXBvV2tSQmVFNVdaSFJOVlRsT1lUQmFNRlpGVWt0WlYwcFdaRE5zV0dFeVVrcFpiRlpIWkVaYWRHVkZOV3ROVnprelZWWmFSMVl3TVhKU2FrNVRVbnBHUTFWcVFqTmxiRVpYVW01a2FHSklRVEpXUlZKRFZGZFJkMVpxVGxKWFIxSlVWRlZXUjFOR1NrVldiVVpzWVROa00xWXlkR3RTVlRWSFkwaFNWRkpGV2tSVmFrWjJUVlpHVmxwRmJHbFNXR2Q2V1RCU1UxRnRWbkphTTJ4U1lrVmFUMXBHVmtkTk1sWkZVbTFHYTAxWE9UWlZWbWhyVlRKS1ZsTnJhRlJTTTJoRFZUSjRTMlJHUm5KYVJWcHNZa2hDTUZadGNFdFViRWwzVm1wT1dHSlVSbGhaYTFZMFRURmtkRTFYUm1sV1ZGWjZWa1ZvYTFOVk5VZGpTRkpWWVd0S1QxVnFUa0prTVVaWFZXeE9UbUY2UmxOVk1HUjNVV3hKZDA1SVpGSldhMXBLV1ZSQ1IxWldUa2hOVjBacFYwVkZkMVZXYUd0V01rcFdVMnRvVTFkSGVFTlpiR2hEWkVaa2RWcEZWazVOV0VFeVZtMXdSMUZzVmxaVlZFWlNWbXhLVGxsclZYaE5NVkpGVW10S2EwMHlaRFpXTWpCNFdWVTFWMk5FV2xWU2VrWkRXV3hXVjA1R1JsaE5WRUpwVmxWWmVsWnFUbUZSYkZwR1dqTnNXR0p0VWpOVVZFSkhaRWRTUlZGclNtbFdia0o2VmpJd2VGUlZNSGRTYWs1cVVrVktRMVZxUmxwbGJFWnpVbXMxYTFaVldYcFZNRkpEVkcxUmQwMVVSbEpYUjFJelZGZDBSMDB4VWtWVGEwcHBWbXhzTTFaR2FHdFViVlpIWTBoU1ZXSlZXbE5WYTJST1pESk9TV05FVm1oU2VsWk5WV3hTVjFZeFZsVlJha0pYWldzMU5GWldWa1prTWxaWVdrVXhVMDFHV2xsVmFrWkxZbXhXV0U5WVVsWmlWM2hvVmxab1IwMVdVbFZUV0doVVZsaG9UVmt3VWt0UmF6RnhVbXQ0YVUxSFVqUlhhMVpyVTFaVmQxUnJTbHBXTURWSVdUSjBNRkZzVGtaV2JFcFdUVlUxU1ZaV1ZsTmpWazVIVVcwMVdHSkhkRFJXVkVKaFdWWkpkMUpZY0dwV1JVcEhWa1ZqTlU1V1ZYbGxTR1JXVmxaYU1WVldZM2hUYXpWWVRsVjBhbFl5VWs5Vk1qVnpVa1prZFdGR1VsSk5SVmw2Vld4a2QxUnJNWFZpUjNCVlVsZFNWVlY2UW5kTmJIQTJWV3QwVjFJeVVsTlZhazV6WlVaV1NWSllaRTlTUmtwUFZtdFNjMWRIU1hwaVJrNW9UVVZ3VmxaWE1YTlRNbFowVkcwNWFsWlhhSGhaYTFwM1V6Rk9WbGRyY0ZSWFJWVjVXVEZvYjFZd01IZFdXR2hXVFc1b1IxWldhRWRqUm1SelZtMXdWbUV3Y0ZWYVZtUTBVMnhhV1ZKcVVsUlNhMWt4VjFkMGExTkhVbGhqUlZwT1UwWkZkMVpHVm10bFJsbDNVMnhXV2sxdGVERlZNRlY0WXpGR2NtUkVSbUZpVkZJMVZHdGtORk5XV2xkalNGSnFVMGRTV1ZWclZuZFZiRkowVFZVeFZFMHhSak5aYWs1ellXMVdSbFZxVGxKV1JYQkhWbFpvUjJJeFJuSmtSVFZUVFVaS1RWVldWa3RVYlZaMVVtMHhhVTFJUVRGWlZ6QTFVekpGZVZSck5VNVRSbHBhVlRGb2EwNVdaRWRqUkZwVlVqTkNTVlV5TlVOamJFNUdZMFZ3V2sxcWJGTlZWbWh2WlZaSmQySkZaRlZTZWtaVlZGWldVMU5IVmxoaFJYUmFWbXMxUlZVd1VrZFZSMVpXVFZWb1YwMUhVazVWTW5CelVUSk9WVk5zYUdoU1ZFVjZWVEZTUTJSWFVYcGhTRVpZWWxSRmQxUlZXbmRUTVc5M1UyNVdVMDFFUm5KVk1GcFhWVEpLU1ZKcmJGSldSa3BEVlhwT1IxbFhUa2hrZWxac1ZsZE9ORlZXVWs5a2JGWnhVVzE0VkdKVldrTlZWM040WkVaT1ZscElaRTVpVjFKT1ZqQlNTMlZIU2taV1dIQllZV3R3TVZwVlVtNU5Wa1pXWkVWd2ExWllhRXhaTVZwRFV6RldXVkp1UWxWU1JVcFZWakJvUzFNd01WVldibHBXVFVaR05sVXlkR3RPVjBWM1ZXNVNWMDFyY0VsV2ExVjRWMnhPVjFKck5WcE5SM2N5V1RGVmVGUnJNSHBhZWtaVlYwZDRTMWx0ZEd0VE1VNVlWMjFHVm1FeFNuTlpNRkpMVjBaT1JtRkVWbEpXUlVwTFZtdFdVbVZzVGxkV2FsSmhWbFp3TUZreFpGZFNiRTV4Vm10c2FXSkdSVEZaVjNSaFlVWlNWMUZ1WkZOTk1FWTJWa1pXYzFKVk1WWlNhazVYVFVaYU5WVXlOWEpOUmtwSlYyMDFXazFFUWpOV1JsVjRVV3hPZEZwRk1XbE5hMXB4VlZaVmVGTXhUbGhpU0d4V1VrZDRjRlV3V2xkbFJrbDNZMFpLVWxkSGVFZFVWbFpIVmtaU1JtUkZOVlpTVlZZMFdsWmtjMlJXVmxaU2FrWlRZVEpSZUZsVVFYaFRSMVpZVFZWc2JHRXllRkZXTWpWM1RsWk5lVTlJYkdwV1YyaFBWRlZhYTJFeFVrbGFSRlpzVW5wU05WWlVSbGRUYkU1eVZteHdWR0V5YUZWWlZWWnZVekZLUlZKc2JFNU5SR3g2VmtaYVYyVkdjSEpYYTNocVZrWmFSMWRXWkV0amJVNVdaRVprVGxKVmNFbFdWRXBoVVRGV2NrMVVWbWxOUnpoNFZrWmpOVTVIVGxsaVJUVlhVa1ZhU1ZWV1dsTk5WbXhXVld0b1ZVMVdXa3RXVkVGNFRsWk9TVnBFUms1aE1Ga3dWMnBDYjJReFdsbGhla0pxWW01Qk1WUldWa1psVm1SMFpFZEdWMVpXUmpaV01qVnJWREF3ZDFacmFGZE5TRkpEVmxWU2MyRlhTWGRrUld4cFZsVndTVmt4YUdGVGF6RkdWbXBhVlZaRldrOVZha1ozVXpGdmVHRklWazVoTUZwTlZXcEplRk5zUmxaU1dHUmhUVEpTVGxWNlFUQmtNVVpXWVVkc1RtSnJXa2xWVmxwVFUyMUtWMXBHYkdwV1JYQkRWbXBHZDFWdFVsbGFSVXBPWVhwR1lWVnNhSE5XUm5CV1YxaGthMVp0VWtoVmVrWlBZa1pHVlZGc1VsUk5hbXN4VmxSQ1IyVldUblJpZWtKVlVucEdXVnBFUWpObGJVNUlUVmhXVmxaVlZqVlZiRlpyVGxkR2Nsb3piRkpXZWtaS1ZteG9SMkZYVGtaaFJtaHBZbXR3U2xaRlpGZFNNREYxVm0xNGFsSllRa3RYYkdNd1pXeFZlRnBJVmxkU1JscE1WakowYjFGdFVsWk5WbHBXVFdwR05WVXdhSE5qUjA1MVkwUldhVko2VmpCWk1WWnpWRmRXUjFkVVJtcFNSVXBMVmpKMFMxWnNVbGhOVlhCVVUwVlpNbFZYZEc5WlZuQldXa1pTYWxkSGVERlVWekZPWld4U1ZscEZTbFpXVmtwSldURmFZVkl3TVZoVWF6VnFVMGRTUzFwRVFtOVZiR1IwWWtWc1RsSkZSWGhaTUZaclRrZEtWbG96Y0ZSV2EwbzFWbXhhYTFkc1JsbFhWRlpVVWxWYVUxWXljRXRrTVZWNFdraEdVMWRJUWpSWmExWlRVekpGZWxacldsUmhNRnB3VlZab2MxSlZOVlpoUldoVFZteEtSRlV3WkU5UmJFWnlZbnBHYTAxWE9UVlVWbFUxWkRKUmVtSklVbFJoTWxKTFZqQm9SMVJHVlhwV2EzQlVWMFZaTWxWV1ZqQlhSbFpHWTBST2JGSXhXalZXYkZadlkxWkdWMVZyY0ZWU1YyaE1XVEZqTVZOR1RrVlNhMXBUWVRGd2RWbHNZekZOTWxKWFlVaGFUazFFUm5sVk1qVjNUVVp3VmxWcVVsZE5WVm8xVldwQ2MySlhUbkpYVkZaVlRVVndWRmRxU2xOU2JHeFdUMWR3VTFaRldrTmFSbFYzWlVaa2NWRnJaR3hpUlRFMldXMTBkazFXVWxsU2EyaHJVa1UxTVZsc1ZtOWpSa1pXWVVjMWJGWlhlRXhVVmxKUFVqQXhWbEp0Y0ZKaE0wSXpXV3RXYW1WVk5VaFdhMVpwVmxWYVVWa3hVa3BOUjBWNlVtcEtZVTFxUmpKYVJ6RnJWbGRKZW1GR1VscGhNbEpUVmxSS05GSXlWbGhUYmtKVlZsZG9jRlJVVGtkaFJsWjBUVlZhVm1GcldsRldNbkJIVVcxR1ZscElVbGROVjFKUFdrUkNiMkpHVWtWUmJUVlBWbGQ0VmxwV1ZqQlJiRlowWkVjMVUxSkZjRE5VVmxaelV6RlZlVlp1V214U1ZFVjRWa1ZXYTFKdFZrWmtNMlJoVFVWYVJGWldhRmRYVmxKVlZHeFNWMDFIZUV4VVZsWnJWR3hWZWxKdE1XcFdSVmt3VkZWVmQyVldSbGRpUlhSc1lYcEdSVmt4V2tkbFJteFhXak5zVGxaWFVraGFWbHByVVcxT1ZWUnNRbWhOYWxaTVZGVlNUMUl3TVVoWk0zQlZVbGRTTkZwRVFtRlVSbEY0WVVWS1RsWlhhSHBWTVZwSFRsWmtXVkZzVG1GTlZuQkpWVEp3UjFWc1NrWmtSVFZYVFVaYVNsWkdXa05TTVVsM1lrWk9VbUpHV2xWV1JWWmhWVzFPV0ZadWJGWldWM041VlRCU1IxSnNVWGRsUld4YVlXdEtNMVJXYUhOVVZsSlhWbXR3V2sxWVFsZFpNVkpoWkcxV1ZtRjZTbFJpUmtreFYycEdibVZYVWxWV2ExWk9UVEJaTWxsdGREQk5WbXQzVFZkb1ZGSkZOVnBVVlZaSFYyeEdXVnBFVWs1TlNFSlVWbXBLVTFNeVVYaFViRXBUVFZaR05GUlVRbmRPYkU1WVZXdEtUbUV5ZERSVmExWjJUbGRHVmxaWWNGVldSVXBPV2xjMVEyTXhSbkppUjNCaFZsWlplbHBWVWtka2JWWnhZa1JPVWxaRk5ERlhha0pUVG1zNVJWTnJWbXROVlRWYVdXNXdSMDFYVWxaYVJsSmFaV3h3U2xwVlVrZGlNV1J6VW1zMWFWWllaRE5YVkVaUFpERk9jMWw2UmxOWFIxSlJXV3RhZG1WdFRsWlNibHBVWW0xM01GVldWakJVYkZKSFkwWk9WazB5VWtsVmVrWnJVa1pTV1dOSVpHRlhSWEJLVlZaV1YyUXdNWEZXYXpGU1YwZFNUMXBFU1RWaFIxWklUVlUxVGsxVk1UWlZNVll3WVZkR1dFNUljRlZOVlZwT1ZGUkNOR015VGtaaFJ6Vm9UVWRTU2xRd1pEQlpWbFp6V1hwR2FsSlhhRmxWTW5STFZsVTFXVnBGYUZSaE1tUTBWakp3UTFZeVJuSlNhbEpoVFROQ1IxUldhRmRUUmxKV1kwWmtUbUV4U2t4Vk1XUjNVVzFSZDAxSWFGaFdla1pZVkd4V1IxVnRUbGhoUjBaT1ZsWkZkMVZYZEhObFJrNXlZMFpLYTFack5VZFZNalZYVG14R1ZtRklhR2hTV0VKTFZXdFNRMU14YkZkWGJrcFZVMGRTTkZSVVRrSmtNV3Q1V2tWb1RtSldiRE5aTUZwVFVXeFdSbFpzVGs1U2VrWktWbFZTYzFkV1JsZFNiR2hQVmxkME0xUlZaRmRaVjFaeFlrUldVbUpGV1RGWFYzaDNVMFpLUlZWdVpGUldWM2gzVlZkNFYxRnRVbFpYV0d4clZsaG9NMXBXYUZkWFZrcHhVMVJXVjAxRldsTlpNRkpUWlVaT1JXSkhhRmhpYldjeFZHdFdZVTVXVWtWVGEwcE9VakJ3TUZaRmFIZE9WbTkzWWtWd1ZWWlVSakZWYWtFMVpGWlNTV0o2VmxwV1ZWcHZWa1JLUjFJeFRsZGpTRkpWVjBoQk1WWXlkRzVsVjFaWVdraHNWbUpIVW5CV01qVjNVMVp3Vm1GRmNGUldWbHBJVkZab2MxUldTa1phZWxab1lUQlpNVlpGVWtOUk1VNUZWbTVDYVdKVVJqUlVWM1JIVTIxV1ZrMVZXazVOVm13MVZrWmFTazFIU2xsU1dHeFNWak5DVDFwRVFUVmpSMDVIVm0xd1ZWSnVRa2xWYkdSWFUwWk9jbFp1UWxOaE1taERXV3hXUm1ReVZrVlVhMlJUVFVkM01WVldVazlPVmtsNFlqTnNhbEl6UWpKVVZ6VnpWRlprUlZKclZrNVdWRVpNVkRGa1IxSnJNWEZWV0dSU1lrWkthRmxyV25abGJGRjRZMGRHVGsxRVJuQlZWM2hYVkd4c2RWTnJlRmRoYkVwRFdsVm9WMVJHU2tWUmJHaGFZbXRLU1ZadGNFTlNWazVGVWxSR1ZGTkhPVFJYYkZwM1ZURlNWMkpGTlZaWFJrWTJXVEJvYTAxRk1IbE9WWFJVVjBkNE1sUlVTazlqVjBsNVRWVndVbFpYVWtwYVJsWTBaRlV4ZEZwSGJGVldSVmw0VjJwQ2FtVldSbGxhUlVwV1ZtMVNVVlZxUW01bFJteFdXa1pXV21GcmNERmFWekZQVlcxS2MxVnJXbGhUUlZZMVZGWmFSMWxWTVhWaVJuQnBUVWRvV0ZSV2FFSmxWVEZZWTBkR1dsWnRVbE5WYkZZd1pVWnNWazFXV2xwbGEzQkRWRlJLU21ReFNraFNiR1JPVm01QmVWZHFTWGhSYkU1SlZWaG9WVko2Ums1VVZFSkhWa2RXV1ZwSFJteFdNREI1VlcxNFIxRnNaRlpWYWxKWFlsaENRMVV5ZEZkaGJFcFdZMFJHVjFkRldUQlZWbWh6VTJzeFIxUnRiRmhpUlhCWVZGUkNjMU14YTNsYVJYUldZa2RTY1ZZeWRGcE9WMHBXVjJwS1VGSkZTazlhVjNoS1RVWkdXVmR0TldGV2JrSklWMnBDWVdSV2JGWmlSRkpVVWtWd2RWbFhkR3RrUmxsNVpVVjBWbFpYZDNwVlYzaExVMnhzY2xwSGFHdFdNVXBPVkZkMGJrMVdTbk5UYlRWWVlsUnNUVlZzVWt0VWJFbDZWbTE0VkZKcldrZFZNRlpYVTIxT1ZWZHJiR3hUUmxwb1ZUQmFSMWxYU2toUFZrcFZWbnBHTVZwVldrOVhWMDUxV2tob1RsWlhlRmRWTVdNeFVsVXhSVlpzWkdsaVZWcG9WRlZXVjFNeGNEWlVibHBPVWtaYWNGWkdVa3RpYkVWNlVXcFNUbFl5VWpGYVZ6VnpZa1pPVjFOdVNsWk5SVnBOVlRGa1MxTnJNVlpXYTNCcVZsZDNNVlp0ZEVkVGJHdDNWR3N4VG1KWVVqRlZNRnBIVkZkS1ZtRkdWbEJXVkd3eVZXcE9SMUV4VWtaa1IzQnJWbGhCTWxwR1ZuZFJiRTVYVkd4b2FsSnJjRWRVYTFaSFV6RmFjVlpyV2s1aVYxSnpXVEZhUzFsWFNsWmFSRkpvVFVkb1NsVXlkRmRUTVZKWllVVXhhRTFJWnpCWk1HUjNVMGRLU0ZwSGFGUlNhM0I1V2taak1WTlhSWGxPVjBac1lURktjMVZxVG5kTlYwWnlXa2RvVjAxV1dqVlZla0pYVGxkT1YxWnNRbGROUlhCTVZURlNZVk5WTVVaU1dHUnBUVWRTUTFZeWRGZFZiRTVaWVVkR1UwMVhVWGhaYlhoWFVtMVJlR0ZJVW1wV2JGcElWRmQwVjFWc1pITlZXR2hXVTBWSmVscEdZM2hSYkZaelZHNUthV0p0YUZsV1JsWnpWVEExVjFadVdtdE5NRVY0VlZaV2QyTnNiSE5qUkZKWVlsaG9NVmxyYUVOUmJGWkpZbnBXYVZKWWFFeFZWbVJoVkd4S2NrNUVWbGRpUlVveldXeGFkMlJIVGtoTlZVcHJUVWRrTlZWV1ZtdFVWVEIzVW1wT1YyRnJjRTlWYWtKdVpERkdWbHBFUWs1aE1Gb3dWa1ZTUTFsWFNsbGFNMlJTWWtWYVIxcFdWa2RrUmxaeFUyMUdhMDFHUmpOVlZscFRWakpLVmxKdVVsaGlXRUpEVm10V2JtUXhaSEphUlZaT1RVVmFVMWt3VWtOVVZrbDZVVmhvV0dKVVJsUlVWbFpMVld4a2RHVkZTbWxXVjJRMFZqSjBhMUp0VVhoalNGSnJVa1Z3UTFsc1ZtOWpWbVIwVFZaa1RsWnVRbE5aTUZKSFVXMUtXVlZZWkZKaVJWcE9WRlpXUjFOSFRraE5WVTVUVFVoamVGVldhSGRWTWtwWFkwaFNhbEpGV2tOV1ZsWlNaVlpTVmxwSVpFOVdWVnBUVm0xd1MxRnRVWGhhUkVwU1YwZFJkMVJYZERSVFJsSlpZa1ZLYkdFeVpETldNakI0VkZVeFZsSnFUbFZTUlZwRVZXcENWMDVzWkhSTlZGSk9VbGhuZWxVd1VrTlJiRnBIWWpOa1VtRXlVa3BaVjNSSFRURk9SVlJyVGxaV1YyTjRWakl3ZUZZeVNsWlNiRXBYVFRGd1ExbHNWbEpsYkVaWFVtdHNUMUp1UWpCVk1GSlBVVEZKZDJGSVJsSldla1pHVkZWYWQwMHhVa1ZTYTBwcFZteHNNMVpHVm10VVZUQjNVbXhLVTFKRk5VTldWbFkwWXpGa2RFMVZPV2xXYmtKSlZqSXhkMUZzU1hkVldHeFZVbnBHUjFwRVJuZGtSMDVGVkcxR2EwMUlhSHBWVmxaM1ZUSktWbEp1VWxSU00yaERWV3BPYm1WR1pITlNhMnhvVFVWWmVscEZVazlaVmtsM1ZtcEtVbGRIVWtaVVZWWkxVMFprZEdSRlNtbFdWRkl6VlZaYVIxUlhTa1pTYTJoclVucEdRMVZxUWxkT2JFWlhWV3RzVGxKVldYcFZiR2hyVVd4SmVsRnVVbGhoTWxKR1dXeFdSMDB4V25GUmF6VlRUVWRvZVZWV1dsTldNREZ5VW1wT1ZGSXpVa05hUkU1U1pWWlNTVnBIUms1aVNFSXdWa2R3UTFFeFNYZFZXR2hTVm5wRmQwOUlZM2RSVlVaSFlUTm9WVlpzU2xSWlYzTXhUbXhLVlZKck5WTlNhM0I2VmtkMFUxUnJNSGROVmxaWVZrVTFVRnBYZUVabFZsSlhWVzF3YkZKVVZuaFhibkJMVkRGS1IxWnFWbFZpUmtwRFZGUkJNVkpXWkZWVWF6bHBWbTEwTlZaSE5YZFViVkYzVGxoU1ZGWkZjR2hWYTFwM1pFWlNkRTFWY0U1V1ZGVXlWbGN4TkZReVZuSldXR1JZWWtaS1QxcFdWVEZPYkd3MlUyeHdhR0pIZHpCV1JtaDNZV3N4Vms1VlZsZFdSVFZQV2xkMFJtVnNVblZqUlRWT1ZsUldSbFpzYUhkVlJscElWRmhrVldKWVFuVlVWVnB6WTFaV2RHSkZPVk5OUkVJMlZrWmtkMU15UmxaT1ZGcFlWa1ZLVUZacldtRmlNVkowWTBaS1RsSnVRa1pXUmxKTFZERktSMkV6Y0ZWaE1VcHhXbFZWTVZOR1dsVlRhemxzWWxVeE5GWkhNWGRoYXpGV1RWVldWMVpGTlZCWmJGcEdaVVpTY2xWc1dteFNWRlpHVmxaU1ExZHRSbk5UYmtKVllUSlNWMVJWVlRGV1ZtdzJWR3MxYkdFeFZqTldSbVIzVXpKR1ZrMVVXbEpXUlZwUFZtdFZlRTB4VW5SalNFcE9UVVJzVmxZeFVrOVVNa3BXWVROd1ZXRXhTbGRVYTFVeFZsWmtWVkZyT1ZkU1ZFVXdWa2R3UzFKck1VWk5XRVpZVmtWYVVGWnJXbFpsVm1SWlkwZHdUbFpVVmtaV01WSkRXVlphUjJOSVNsVmlXRUpMVkZaVmVFNXNWbFZUYXpWc1lUSjNNbFpHVmxOVWF6QjNUbFZvVkZaRlNrOVdhMVozWkVaU2MxVnJjRTVXYlhoV1ZrWlNUMVF4U1hoV1dHUlZZa1pLWVZSV1ZYaE9iRlpWVVcxR1YxSlVSVEZXUjNSVFUyc3dkMDFWVmxkWFIyaFFWV3RXY21WV1VuTlZiVVpvVWxSV1NWWnNhSGRVTWtaelkwaE9WV0pVUmxOVVYzTTFVbFphV1dORk9WZFNhMVkxVmtkNFUxUnRWbFpPVldoVVZrVTFUMVZyWkU1a01WSjFZMFZ3VGxKVWJGWldNVkpUVkRGSmVGWlljRlZXVmtwUFZGWlZNVTVzVmxWUmJIQm9Za1ZXTkZaSGVGTlhhekZ5VFZaV1ZsZElRbEJWYWtGM1pWWlNWMVZyTlU5U1ZFVXlWbFpTUTFReFNrZGlSRkpWWVRKU1YxUlhjM2hqVmxwVlVXczVVMUpzVmpWV1JFWlRWMnN3ZDA1WVVsaFhTRUpQVm10YVJtVldVblZqUlhCT1ZsUnNSbFl5TUhoVU1rWjBWR3BhVlZZelFuRmFSRUV4WkVaS1ZWSnJPVk5TYTFZMFZrZDRVMVpyTVhOaVJsWlhWa1phVUZWcVFYaE9iRkY0Vld4S1QxSlVWbmhWTVZKSFZHMUdjMk5JU2xWWFNFSkhXbGR6TlZaV1pIUmtSVGxvWWxoT05WWXhXbE5VYlZGM1RsVldXazB6UWxCV2ExcFhUbXhTZEdOSVNteGhla1pHVm14U1QxUXlWbk5TV0d4WVZteEtZVnBWVlRGVFJrNVZVV3MxYUdKSGR6QldSM1JUWTJzeFIyTkdWbFppV0ZKUFdsZDBjbVF4VW5SalJYUnBWbFJXVmxVeFVrTlVNa1p6WVROb1ZWZElRa05VVmxVeFkxWlNWVlpyT1ZOU2JGWTBWakZhVTFSck1IZE9WbFphWld0d1VWWnJXbmRqUmxKeVdrVndUbEp0ZHpKV1JsSkRWREpLVjFaWVpGaGlXRUpYVkZaVk1XTldaRlZVYXpsWFVtdHdkMVpITVhkV2F6RldUVlpXV0dKWVVrOWFWM1JXWlZaU1YxVnJOVTVXVkZaR1ZURlNUMVJ0Um5OV1dIQlZZbFJHVTFSWGN6Rk9iR1JWVTJzNVUxSlhkRFZXUm1SM1Ztc3dkMDVVV2xkV1JVcGhWbXRhUzJOc1VuUmpSa3BPVmxSR1ZsWXhVa05VTVVwSFlUTm9WV0p1UW1GVWJGVXhWbFp3TmxOck5WZFNNREUwVmtkMFUyTnRWbkpOVmxaWVZrWmFVRlZxUmtaa01XUjBZMFpLYkdGNlZuaFZiR2gzVkd4S1IxWnFUbFZYU0VKUFdsZHpOVlpXWkZWVWF6bFRVbFJDTlZaSGRGTlZhekIzVGxoR2FHVnJOVTlaVjNONFRsWlNkRTFXV2s1aVIzaFdWbGN4TUZReFNraGFSRnBWVmxaS2FGbFhjekZPYkZwVlVtczVVMUp1UW5sV1JtaDNVV3N4YzJKR1ZsaFhSMmhRVld0V1ZtVnNaRmRWYkhCc1VsUldWbGxVVG5kVU1rWnpVMjVHVldKR1NtRlVWRUY0VWxaV1ZWRnJPV2hpUlZZMVZqRmtkMVpyTUhkT1ZWWlhWa1ZhVDFsWGVITk9WbEowWTBjMWJHRjZWa1pXTWpFd1ZESldjMVpZWkZWaVdFSlBWR3hWTVZaV1ZsVlNhemxzWWtoQ01GWkhlRk5XYlZaeVRWVldXR0pZVWxCVmEyUnFaV3hSZDFWc1NrOVdWRlo0VmxaU1ExVkdXa2hVV0doVlltNUNRMVJWVlhoalZsSlZWV3M1YUdGNlFqTldNV2gzVkdzeGNrNVlSbWhsYTBwUlZtdGtUbVZHVW5OVmExcE9WbFJHZUZaV2FHOVVNbFp6VWxoc1ZWZElRbkZVVjNNeFVsWmFWVk5yT1ZkU2JYY3hWa2N3ZUZWck1YTmlSRnBhVFRKNFVGWnJXbFprTVZKelZXMUdhRlpVVmxaVlZsSkxWREpHYzJKRVdsVmhNVXB4VkZSQmVHTldWbFZSYXpsc1lURldOVlpHYUhkVWJWWldUbFJhVlZkSVFsRlZhMXAzWkVaU1dXTklTbXhoZWxaR1ZsWlNTMVF4U2tkV1dHaFZWbXhLVjFwRVFURk9iRXBWVVd4d2JHSkdWalpXUnpGM1ZXc3hSazVXVmxkWFNFSlBXbGQwVm1WR1VuSlZiSEJzVmxSV1ZsZFljRXRaVmtwSFUyNUNWV0p1UWxOVVZFRjRVbFphVlZGck9XbFdiWFExVmtSR1UxWnJNVlpOVkZwVlZrVktVVlZyV2tabGJGSjFZMFp3VGxKVVJsWlZNakI0VkcxV2RGUlliRmhXYkVwVVdXeFZlRTVzUmxWVWF6bHNZbFUwTUZaSE5YZFRiVlp5VDFaV1ZsWkdXbEJVVjNSV1pWWmtkR05HU214U1ZGWjRWbXhTVDFSc1NraFVWRUpWWWtaS1MxcFhjekZPYkZaVlZHczVVMUpVUWpSV1JsWlRXVmRLVms1VlZsWldSWEJRV2xkNFZtUXhVbkZUYTFwT1ZsUldSbFl4YUc5VU1sWjBXVE5vVldFeFNuRmFWbFV4VTBaS1ZWSnJOV2hpUjNRelZrZDBVMkZyTUhkUFZWWldZbGhvVUZWcVJsWmxiRkpaWTBaT2FWSlVWVEpXTVZKTFYyMVdjMUpZWkZWaVdFSmhWRlpWZUZaV1duUmhSVFZzWWtkME5GWkhkRk5oYXpWR1RsWldWRlpGU2xGVmExcEdaV3hTZEUxV2NFNVdWR3hHVm14U1MxUXhXWGRXYWxwVlZqTkNjVnBWVlRGT2JFWlZVMnMxVjFKdGR6SldSekI0VW1zeGNrOVdWbHBsYTBwUVdsZDBWbVZXWkhSalJuQlBVbFJWTWxac1VrdFVNbFp6VW1wU1ZWZElRbUZhVjNNeFZsWldkRTFWT1d4aVYwNDJWa2MxZDFadFZuSk9XRVphWld0YVVWWnJWbmRrUmxKeVZXdGFUbFpVVm5oWFdIQlRWREpLVm1FemNGVlhTRUpVV1d4Vk1XUkdWbFZUYkhCb1lrWldOVlpIZEZOaWF6RkhZa1JhVmxaRldsQldhMVYzWkRGU2NsVnNjRTlXVkZaV1ZrWlNTMVJ0Um5OV1dIQlZZa1pLUzFSVlZYaE9iRlowVFZVNVUwMUdXVEpXUkVaVFdWZEdWazVWVmxSV1JUVlFXVmQ0ZDJOR1VuVmpSbHBzWVhwc1JsWnNhSGRVTWxaeVlUTnNWVlpzU2xSWlYzTjRUbXhXVlZKck9WTlNXRUl3Vmtjd2VGVnJNVlpQVlZaV1ZrVmFVRlZyV25OT2JGSldWVzFHYUZKVVZrbFZNVkpMVjIxR2MyRjZRbFZpYmtKVFZGWlZlRkpXWkZWVGF6bHBWbXhXTkZaR1pIZFdiVlpHVGxoU1ZWWkZOVkJXYTFWM1pXeFNXV05HY0U1V1ZFVXlWakl4TUZSdFNsZGhNMlJZVm14S2NWUlZWVEZrUm1SVlVXczVVMUl3TVRSV1J6QjRVMnN4VmsxWVJscGxiRXBRV1d4V2NtVkdaRmRWYkdSb1VsUlZNbFZzYUhkVU1VcElWVzA1VlZkSVFubFVWM2gzWTFaYVZWWnJOV3hpUjNjeFZqSXhkMWxYU2xaT1ZsWm9aV3R3VVZWcldrWk5WbEpaWTBWYVRrMUViRlpXTWpFd1ZHMUtWbUV6YUZWaVJrcHhXa1JCZUU1c1pGVlRhelZYVW01Q2VGWkdhSGRYYXpGR1RsVldXRlpGY0U5YVYzaFdaREZTZEdORmRHaFdWRVV5Vld4U1QxVkdTa2RqUnpsVllrWktVMVJVUVRGT2JHUlZWR3M1VTFJd01UWldSbHBUVm1zeFJrNVlSbE5XUlhCUFZtdGFWbVZHVW5KVmJIQk9UVVJXUmxaWE1UUlVNbFp6WVROd1ZVMVdTbE5VYTFWNFpFWk9WVk5zUWxkU2ExWTJWa2MxZDFKck1WWk5WbFpZVmtWd1VGWnJXbFpsYkZKMVkwWmFUbUY2UlRKWldIQkhWRzFXYzFKVVFsVlhTRUpMVkZSQk1WWldaSFJrUlRscFZsZDBObFpHVmxOVmF6VkdUbFJhWVdWclNsQmFWM040VG14U2NsVnVTazVoZWxVeVZteG9kMVF5Um5OaE0zQlZZVEZLVTFwV1ZURldWbTk2WTBVMVUxSnJXVEJXUnpWM1kyc3hjazlXVmxoV1JYQlBXbGQ0Vm1WV1pGbGpSM0JzVWxSVk1sVnNhSGRVYkVwSFUyNVNWV0pZUW5sVVYzaDNWbFpTV1dORk9WTlNNMUV5VmtjeGQxVnJNWEpPV0ZKVVZrVktVRlpyV25OT2JGSjBUVlZ3VGxKdGVGWlZNakZ6VkRKR2RHTXpjRlZOVmtwb1dXeFZNVmRHU2xWU2F6VlRVbXhXTmxaSE5YZFNhekIzVFZaV1ZtSlVSbEJXYTFaV1pVWlNjMVZzVG1oaGVsWkpWVEZTUTFSc1drWk5WRkpWWVRGS1IxUlhlSGRXVmxaMFRWVTVhVlp0ZERSV1JFWlRWV3MxVms1VmFGWldSVnBSVm10VmQyVkdVblJqU0VwT1ZsUldSbFpzYUd0VU1WcEdWbGhzVldFeFNtRmFWM014Vmxaa1ZWRnJPVmRTVkVWNlZrZDRVMU5yTVhKTlZsWllWa1pLVUZsc1ZsWmxWbEoxWTBaYVQxWlVWa1pWTVdoM1ZVWktSMU51UWxWaWJrSjVWRmQ0ZDFKV1pGVlNhemxvWWtWV00xWXhaSGRoYXpWV1RsaEdXbVZyY0U5V2ExcEhUbXhTYzFWc1NrNWlTRUpHVmpGb2MxUXhTa2RTV0doVlZqTkNUMXBWVlRGVFJsSlZVV3h3YUdKRmNIcFdSbWgzWW1zeFZrMVdWbFpXUmtwUVZtdFZkMlF4VW5SalJuQnNVbFJXUmxaV2FIZFViVlp6WVROa1ZXSkdTbmxVVkVFMVVsWnNObFJyT1doaVJWWXpWakl4ZDFSck5VWk9XRkpWVmtVMVQxcFhlRXRrUmxKMFRWWmFUbFpVYkZaV1ZtaHpWREZhUjFKWWFGVldNMEpYVkZSQk1WWldXbGxqUlRWWFVqRktkbFpITlhkVGF6RkdUbGhHVjFaRmNGQmFWekZyVG14U1ZsVnRkR2hTVkZaV1dWaHdRMVJ0Vm5KTlZGWlZZbGhDZVZSWGVITk9iRnBWVW1zNVYxSnJWak5XUjNSVFlXczFWazVXVmxoWFIzaGhXVmQ0Vm1WR1VuVmpSVXBzWVhwV2VGWXhVbGRVYlVwWFlUTm9WV0V4U25KWlZWVXhUbXhHVlZGck9XeGhla0Y0VmtkNFUxWnJNVWRqU0VaVlYwZG9VRmxYTVU1bFZtUnpWV3h3VDFKVVZsWlhibkJEVjIxR2MyTklUbFZXZWtaTFZGZDRkMk5XVm5SalJUbHNZVEZXTTFaSGVGTlViVlp5VFZSYVUxWkZXbEJWYTFaM1pFWlNXV05HV2s1TlJFVXlWa1pvYjFReVJuSmlSRnBWWWtaS2FGbFZWVEZXVm5BMlVtczVhR0Y2UlhwV1IzaHJVbXN4VmsxV1ZsaFdSWEJRV2xjeGVtVldaRmRWYkZwT1RVUldNRlZzVWs5VWJFcEhWbXBXVldKR1NrTlVWVnAzVWxaa2RFMVZPVk5TYlhRMVZrYzFkMVpyTVZaT1dFWldWa1Z3VUZsWGMzZGxWbEp5VlcwMVRtRjZWbFpXUmxKTFZERmFSbUV6YkZWTlJrcFVXVlpWZUU1c1dsVlNhelZvWWtaWmVsWkdhSGRpYXpGR1RWUmFXR0pYYUZCYVYzaEdaREZTVjFWc1NteFdWRVV5VjFod1ExbFdTa2RoTTJ4VlltNUNVMVJWVlhoV1ZsWlZWR3MxYkdKR1ZqVldSRVpUVkcxV2NrNVVXbUZsYTBwUVZXdGFkMk14VW5OVmJGcE9ZWHBXVmxkWWNFdFVNVnBHWVROa1dHRXhTa3haYkZVeFVsZEdObFJyT1doaE0wSXdWa2QwVTFKck1YTmpSbFpWVmtWS1VGWnJWbFprTVdSWlkwWmFUazFFVmxaV2JGSkxWREpHYzFKWWNGVmlSa3A1VkZWYWMyTldWbFZVYXpsWFRVWldNMVpHYUhkVk1rcEdUbGhHYUdWcmNHaFZhMXB6VGtaU2MxVnJjR3hoZWxVeVZteG9jMVF4U2toVVdIQlZWbXhLYUZsclZURmtSazVWVW1zMWJHRjZRWGRXUm1oM1ZXc3hjMkpJUmxSaVYzaFFWbXRhVm1Wc1VuUmpSVFZPVmxSV1ZsZHVjRXRVTWxaelkwaFNWVmRJUWxkVVZsVjRVbFphVlZack9WTlNWM2N4VmpJeGQxZHJOVlpOVkZwVFZrVndVVlpyV2taa01WSnpWV3RLVGxKVVZsWldNakZ2VkRKS1YyRXphRlZpYmtKUFdsWlZNVmRHU2xWUmF6VnNZa2QwTkZaR2FIZFJhekZHVFZaV1dtVnJjRkJhVnpGNlpXeFNWMVZzU2s1TlJFVXlWMWh3UzFsWFJuTmpTRXBWWVRGS2VWUlVRWGhqVmxKVlZXczVVMUpYZERWV1JFSlRZVzFXUms1WVJsUlhTRUpQVld0YVZrMUdVbkpWYlhCT1ZsUldlRmRVVG10VU1VcEdUVWh3VldKWVFsTlVWM014VmxaT1ZWTnJPVk5TYTFWM1ZrY3hkMU5yTVZaT1ZsWllWa1ZLVUZacldsWmtNVkpaWTBVMVQxSlVWakJWTVZKTFZERmFSMk5JVWxWaVdFSlhWRmQ0YzA1c1pGVlRhemxUVWpKT05GWkVSbE5YYlZaeVRsVldVMVpGTldGV2EyUk9UVlpTZEUxVldrNU5SRlpXVm14U1UxUXlSbk5oTTJSVlRWWktVMVJXVlhoT2JGWlZWR3MxVjFKdGREVldSelYzWTJzeGNrMVVXbGRXUlVwUFdsY3hhbVZXVW5KVmF6VnJUVVJXTUZaR1VrZFViRXBHVFVSR1ZXRXhTbGRVVkVGNFVsWlNWVlpyT1ZkU01rNDJWa1JDVTFWdFZuSk9WVlpWVmtWYVQxVnJXbk5PUmxKelZXdHdiR0Y2UlRKV2JHaHZWRzFXY2sxSWJGaGlXRUpQV2xaVk1WTkdWbFZTYkhCWFVsUkZlbFpITlhkVGF6QjNUbFZXVjFkSVFsQmFWekZxWld4U2RXTkZOV3ROUkZaNFZqRlNUMVZHU2toVVZFSlZWbnBHUzFSWGMzaE9iRkpWVldzNVUwMUhkRFZXTW5SVFYyc3hjazVZVWxOV1JYQlFXbGQ0Vm1WV1VuSlZhMXBzWVhwV2VGWnNhSE5VTWxaeVRWUmFWV0pZUW5GYVJFRXhUbXhLVlZGc1FsTlNWRUl6VmtkMFUxUnJNSGROVkZwWVlsUkdVRlpyV2tabGJGRjNWV3hPYUZaVVZsWldiRkpQVkRKV2MxSlliRlZoTWxKaFdsZHplR05XWkhSaVJUbG9Za1ZXTkZaSGVGTlhhekIzVGxoR1dGZElRazlXYTFwR1RWWlNkRTFXU2s1aGVsVXlWa1pTUTFRd01YSldXSEJWVFVaS1lWcFdWVEZTVm5BMlUyczFhR0V6UW5kV1J6RjNWVzFXY2sxV1ZsWmlWMmhRVld0a1RtVldVbk5WYkZwT1lYcFdWbFZXVWt0VlJrcEhVbXBTVldKdVFsTlVWVnB6VmxacmVtRkZPVmRTVjNRMVZqSjRVMVJyTlZaT1dFWllWa1ZhVUZsWGVGZE9WbEp5VldzMVRrMUVWbmhXYkZKVFZERktSazFJYkZWaVJrcHhXbFpWTVdOV1VsVlJiSEJYVWpBME1WWkhOWGRoYXpGR1RWaEdXRlpGY0ZCYVYzUkdaVlprZEdOR2NFNWhla1l3VlRGU1ExUXlSblJVYWxwVllrWktZVlJYZUhOT2JGWlZWR3M1YUdKRlZqUldSM2hUVkcxV1ZrMVVXbE5XUlVwb1ZXdGFjbVZHVW5OVmExcHNWbTE0ZUZVeU1YTlVNVXBHVmxoc1ZWZElRbE5hVlZVeFRteGtWVlJyTldoaVJuQjJWa1pvZDFack1WWk9WVlpYVjBkU1VGVnFSbFpsVmxGM1ZXczFiRkpVVmtaV01WSkxWMjFHYzFaWWNGVmlia0o1VkZSQmVGWldXbFZWYXpWc1lsZE9NMVpFUmxOVWJWWnlUbFpXVmxaRk5VOVpWM2hXWlVaU1dXTkZjRTVOUkVaR1YydGtiMVF5Vm5SVVdHUllWak5DVTFwWGN6RlRSbHBaWWtkR2FHSlZOSHBXUnpCNFZXc3hSazVXVmxkV1JVcFFWbXRXY21WR1VuUmpSMFpvVmxSV1JsZHVjRU5WUmtwSFZtcGFWV0V4U2xkVVZsVjRZMVpyZW1KRk9WZFNWRUkwVmtSQ1UxUnJOVVpOVkZwWFYwaENVRlpyV2xkT1JsSjBZMFp3VG1GNmJFWldNV2h6VkRGSmVGSllaRlZpYmtKeFZHeFZNVlpXVGxWUmF6Vm9ZWHBGZWxaR2FIZFVhekZHVGxaV1ZtSlhlRTlhVjNSV1pWWmtXV05HU2s5U1ZFVXlWMjV3UzFReFNraFVWRVpWWWxoQ1UxUlZXbmRXVm13MlZHczVVMUpzV1RKV1JtaDNWbTFSZDA1WVJsVldSVnBRVm10YVZrMUdVblJqU0VwT1RVUldWbGRVVG05VU1WcEdUVWhzVlZkSVFtRmFWM014WTFaYVZWTnNRbGRTTURSNlZrY3hkMUp0Vm5KT1dFWlhWa1ZLVUZWclZuTk9iRkpZWTBkR2FWSlVWbFpXYkZKRFdWZEdjazFVVWxWaVJrcEhWRlpWZUZKV1pGbGhSVGxvWWtkME0xWkdXbE5XYXpGeVRWUmFZV1ZyU21GV2ExcExZekZTV1dORldrNVNWRlpXVmxjd2VGUXhXa1pXV0doVllURktVMVJWVlRGV1ZscFZVMnh3VjFKcmNIZFdSM1JyVjIxV2NrNVVXbGhpVjNoUVdWZDRjMDVzVVhkVmJGcHNZWHBXU1ZWc1VrdFViVlp6VWxoc1ZWWjZSbUZVVmxVeFkxWnNObEpyTld4aE1WWTJWa1phVTFWck5VWk9XRkpUVmtWd2FGWnJWWGROUmxKeVZXNUtiR0Y2VmxaV1JtaHZWREZLUjFKWWNGVk5Sa3BUVkZWVk1WWldUbGxqUlRWVFVteFdNMVpITlhkaGF6RnlUbFJhVlZaR1NrOWFWM1J6VG14U1ZsVnNXazVoZWxaV1YyNXdUMVZHV2tkU1dIQlZZbTVDZFZwWGMzaFdWbkJJWVVVNVUxSnNWalJXUmxaVFZtc3dkMDVZVWxaV1JYQm9XVmN4VGsxR1VuUmpSWEJPVWxSRk1sWnNVa3RVTVZwSVZGaHdWVmRJUWs5VVYzTjRaRVprVlZOc1FsZFNhMVl6VmtjeGQxSnJNSGROV0VaWFZrWmFUMXBYZUVabGJGSllZMFphYTAxRVJUSldWbWgzVkRGS1IyTkhPVlZYU0VKaFZGWlZNVkpXWkhSaFJUbFRUVmQwTkZaSE1YZFZhelZHVGxWV1dGWkZTbEJXYTFwWFRURlNjMVZzY0U1U2JYaDRWakZTUTFReFNraGpNMlJWVjBoQ1RGbHNWVEZPYkVaWllrWndhR0pGV1RGV1IzUlRWMjFXY2s1V1ZsZFhSM2hQV1d4V2NtUXhaSFJqUjBacFVsUldWbGxZY0U5WGJGcEhVbXBhVldKdVFrZFVWbFY0VG14U1ZWVnJPVk5OUmxZMVZrUkNVMkZ0Vm5KT1dGSlVWMGQ0YUZsWGVGZE9SbEpZVFZad1RtSklRa1pXYkZKWFZERktSbFpZYkZWaVdFSnhWR3RWTVZKV2NEWlJiRUpUVW0xM01sWkhkRk5XYlZaeVRsUmFWbFpHU2xCVmExWldaREZrY2xWc1NrNVNWRlpaVld4U1MxUXlWbk5oTTJ4VllURktUMVJWVlhoV1ZsSlZWV3M1YVZadGREVldSbHBUVlRKS1ZrNVdWbGRYU0VKUFdWZDRkMk5XVWxoTlZuQnNZWHBzUmxZeU1UUlVNbFp5Vm1wYVZWWXpRazlhVmxVeFRteGFWVlJyT1doaVIzY3hWa1pqZUZOck1WWk5WRnBXVmtWd1VGbFhlRWRPYkZKWlkwZHdUbUY2VmtsVk1WSkxWREZLUjFaWWNGVmhhM0JIV2xkek1VNXNWbFZWYXpWcFZtMTBNMVl4V2xOVk1rWldUbGhTVkZaRmNFOVpWM2hHVFZaU2NWTnJXazVXVkVaR1ZteFNTMVF5Vm5Sa1JGcFZWbXhLVkZsVVFURmtSbHBaWWtkR2FHSkZjSGhXUjNSVFVtc3hWazFWVmxkWFIxSlFXVmQ0Um1WV1VYaFZiWEJPVWxSRk1sVXhVa3RWUmxwR1RWUmFWVmRJUW5sVVZsVXhaV3BvTTAxRlJrSlRSMUpQV2xkNGQwNXNVa1ZSYXpGVFRVWlpNbFl5TUhoVFZUQjNVbTVTYWxKR1NrTldWbFkwWkVaR1ZscEZNV2xXVlZwVFdrVmplRkV4Vmxaa00yUlNWMGhDUmxSV1ZrdFZiVTVGVlcxR2FWZEhaRFpWVm1oclpEQXhSbEpzU2xkaGF6VkRWV3BDYjJOV1pIUk5WVEZPWVRCYVNWVnJVa05SYlVwWFYxaHdXR0pGV2pOVVZWWkhWVzFPUlZGclNtbFdia0o1VlZab2QxUlhTbFpTYTJoVFVrWktRMXBFVGxKbGJFWnlXa1ZhYkZadVFqQldSVkpQVVd4V1ZsVlliRkpYUjFKR1dXeGFkMVZzU2xsYVJVcHJUVVpHTTFaRmFHdGxSMUpXVW1wT1ZGSkZjR2haYkZadVpWWkdXV05IUms1TlJWcEpWa1ZTVDFGc1NYZGhTRkpZWWxSR1IxcEVRa2RXVmxaeFUyMUdVMDFHV1RGVlZtTjRVbFV4YzJORVRsZE5NMEpvV1d4YVMyTXhVbGxhUlZaUFVsVmFVMVp0TUhoWlZrbDZVVmh3VWxacldUQlVWbFpIWkVaT1JWRnJTbXROVm13MFZWZDRSMUp0VmtaU2JFcFhZV3MxYUZWcVFsTmtSbVIwVFZVeFRtSklRakJWYkdodlVXeEplbFZZYUZoaVZFWk9XVlJDUjAweFRrVlJhMHBwVmxaWk1WVldZM2hXTURGV1UydG9XR0pZYUdoWmJGcDJaREZHYzFKck1VNU5SVnBKVmpKd1ExUnRVWGhpZWtKWVltNUNXRlJWV25kTk1VNUZWVzFHYVZkR1JqWlZWbHBIWkRKS1JsSnJhRmRoYXpWb1dXeFdOR05zUmxWVGJFNU9WbTVDU1ZWc2FITlJiRlpYVjI1U1VsWjZSak5VYkZaSFZsWldjVkpyTVZOTlYxRjVWakl3ZUZZd01YSlNibEpWVWtVMVExVnFSa3BsVmtaV1drVmFiRkp1UWpCV2JYQkxXVlpKZUdOSVRsSldWMUpRVkZkMFIxTkdVa2hsUlVwcFZtMDVORll5TUhoWlYwWnlVbXRvVkZKNlJtaGFSRUl6VFZaR1YxSnJNV2xXYmtGNlZXdFNVMUZ0VVhoVGJsSllZbFJHUmxSWGVIZE9iRkpGVVd0S2EwMUhhSHBXTWpCNFdWVXhSazFXU2xWU1JYQkRWbFpvVTJSR1JsbGFSMFpQVWxWWmVscEZVazlSYlZGNFlucEdVbFo2Ums1VVZWWTBVMFpPU0dORlNsZFNia0l3VlZkMGExbFZNVVpTYWs1clVrVmFSRlpXYUVKa01VWlpZMGRHVGxaVldsTldNbkJEV1ZkS1Zsb3pjRkpXYTFveldWZDBSMlJIVGtoTlYwWnBWbTVDTUZWV1kzaFdNREZHVFZaS1UxSjZSa05aYkdoU1pWWkdXRTFYUms1TlJWb3dWakl3ZUZFeFNYZE5WRTVTVm10WmQxUldXbmRWYkZKSVpVVkthVlpZWkRSV01qQjRWMGRXY2xKcVRsWmhhelZFVmxab1EyTnNaSFJOVms1T1RVaG9TVlZyWkRSWlYxWnlaVWRvVmxaV1NuRlhiRlY0VkVkV1dGcEZNVlJpVjFFeFdUQm9ZVlF3T1ZkWGJFWnFWakZhVEZaWE5YTk5iR1J5WTBSU2FWWlZjRWxhUlZKUFpWWlZlRlJyVWxKV1JUVkdWRlZhZDFac2JIRlVibFpYVWxkM01WVnRjRXRXUlRCNlVteGFhMVpYZUVaVVYzUnZZMGRKZVZKcVVtbFNWWEJKV2taV2MxRXhTWGROVkZKVFZrVTFORmRxVGt0V2JVNVlaRWhzYTAxRlducFdSV2gyVGtVMVZtRkVVbWhOVlVwS1ZGZDBjMk5XUmxoTlZYQnJUVVZhVTFVeFpEUlViVloxWWtST1dGSkZTWGRVVlZaR1pXeHNkRlpyYUd4U1JscE5WV3RTUTA1V2NFZGlNMmhzVWpKNE0xVjZUbGRUTVdSVlZHdEtZVTFIZERaVk1XUlRXVmRXVmsxRVJsTk5TRUpaVmtWV1lWTnNTa2hOVlZwV1YwZDRWbFl5ZUZOTlZsWllUbFZvVWxacldqTlZha1pQVTFaR2NtSklhRkpXVjNoTFZrUktNR1ZXU1hoVWJsSlRZV3RLUTFaWE5VZFRSMVpZVFZoV1ZGSlhlRnBWYWs1M1RrZEtWMkl6Y0ZKV2JXZ3lWbXhXUjJKV1JsZFZhbFpvVFVWYVNWWkVTalJVYlZaMVlUTndVMkZyU2t0WFZFWjNVekpPV0ZkcmNGUlhSM2h3VlRGb2RrMVhSbkpoTTJSV1RXcFdXbFJXV2xwTlYwbDNaRWRzYVZKWWFFcFZhMlF3VVRGV1YxcEZOVlZUUjJjd1dXeFdjMU5HVW5SalNGcE9VakpTUmxVeWVGTmpWMFoxVTJ0MGFHSldXakpWZWtFMVVURlNSVkpyU214V1ZWcFRWbTV3UTFSV2JGZGFSWFJTVmxjNU5GZHFRbGRPYlZaWllrVTFiRkpyTVRaWmFrWkRZbTFHVm1KRVdtdFdSVnBMVm10b1EyTXlTWGhWVkZKaFZsVldOVmt4WkU5U01sRjRXa1p3YVdWcmJ6Rlhha0poWVVaS1YxWnJOVlJTYTJ0M1ZUQm9ZV0pzV2xaalJXeHNWak5DUTFaclZYaE5Na3AxWWtob2EySkhhREJXYWtvd1Yyc3dlRnBHU2xWVFIyY3dWMnhqTVZac1RsZGhTRlpUVFVka00xVXlkSGROUjBwWVRsVm9WMlZzV2pWV1ZXUnJZMVpPV0UxV1FsaFdXR2h2VlRGb2ExbFhWblJhUm14VVZrVTBlRnBHV25kVmJFWlhWMjVrVGxaVldYcFpiWGhIVjBac2RWTnNUbFJXUlRWb1ZtdG9WazFYVGxoTlZWcHBZbFJXVmxaVVFtRmtWbFp6Vkd4S2FVMUlRbWhVVmxaYVpVWmtjVlJ1VmxSVFIyUTJWVEJhVDFZeVNrWldXR2hWVFZWYU0xVXdXbXRWVjA1SllVY3hhVk5GY0V4WGFrcEhVbTFLVjFkdVJtcFNiRVV3VkZab1EyUkdVbGhqUlhCWFVrVlZlRmxxUmxOaGJHOTNVMnRzVWxacldqUmFWVnBMWXpKT1NXTklTbGhoZWtVd1ZsY3hkMUpXVFhoYVJYUnFVakJhVlZSWGREUmtSa1pZWlVoV1ZFMVhVbFJWYkZZd1VXeFdWazFJY0ZWTk1WcFBWVEowUmsxV1pFVlViR2hzVmxkU1Uxa3hVbUZrYkZwSFUyNVNVMkpVUlRCWlZFa3hVMjFTUlZKdVZrNWlSMUV4V1cxNFMwNVdUWGRTYWxKclZrWmFUbFV4YUhOT1JrWldZMFJXVGsxWGVEQldWRUp6VW0xV2RXSklTbFJXVjJoUFYxY3dOR1ZXU2toTlZWcE9Za1UxTUZVd1dsZFVWMFpXVW01U1ZtVnJXa1JWTVZwclRteEdWbUpFVW1sWFJVbDZWa1JLUjFsWFVYaFVWRUpZVWtWYVMxbHJWbk5TTURsWldrVldWRk5HUmpWWk1GSlBWVWRLV0U5VVRsVmhhM0JvVmxkMFIyTnNVa1ZUVkZaYVlUQldOVnBXVmpCa1YxWkdVbXQwVTFOSVFrdFdWbFpIVmxkV1YxTnJUbFJUUjNod1ZURldiMDVXUmxaWk0zQnFWak5DVEZwWGNGZFhiVTVKWVVob1YxSlVSazFXUkVwclpERldWbEpZYUZOU1JVcFpWbTEwWVU1R2NIUmtSMFpPVmxWVmQxa3lkR3RXUm10M1lVWk9WRll3Y0VsYVZsWnVaVlpTV1ZvelpFNVdWRVpLVmpJeFYxTXlWa2hrUlRGVVltNUNUMWxWVm5kT1JsVjVVbXR3VmsxR1NqQlZNR2h2WTIxS2NsTnJiRmROU0VKb1ZYcE9RbVZ0VGxaYVJtaFlVbnBvTTFkcVRuZFpWbXhaVW0xb1ZWSllRbGxaYTJoRFV6QXhXR05GY0U1U2JVNDBXVEo0UjA1WFJrWldiRXBzVWtaYU1WWlhOVUpOVm1SeVdraG9XbUV4YjNwV2Frb3dVVEZXZEZSck5WSldhMFV4V2xkME5FNXJNVlphUlZaT1RWVTFlbFZXWkVkVWF6VnlUVWhvVWxaR2NFcFZNR1JyWTJ4SmVWSnVhRTloTUZwWFZrUktORmxXVmxaU2JrcHBZVEpvUTFsclZuZE9WMDVGVlc1a2FWWnRVbkJWYlhSdlpVWndjbVZFVGxKWFJuQlBWRlZhVDFWc1JuTlJiVFZvWVRCYVRGZFVRbGRUVjBwSVdrZHdVbFpYT1RSWGJYUjNWbXhrY1ZSdFJsUmliRVYzV1cxME1FNVdiRlpsUldoV1RXMTRNMVpVUWxkVlJrNUdaRWhvV21GNlFqTmFSbEpMVkd4c1dWSnJXbGhpYldRMFdWUkNSMVV4Vlhsa1JuQk9Za2RTTUZreFZtdFZNa3BYWTBWNFZVMXVRakZhVlZwUFRURmtkV05GU2xKV2JYUXpWbFJLVTFOR1NuRmlSVFZwWVd0d2NGbHNZekZXVlRWWFlrVTFWazFyTVROWmJYaExZMnhrVmxac1VsVk5NVm94VjFab2MySXhSbGhOVlZacFVsZFNNRlpFU2xkbFJUQjNWbXRLVlZaWVFrTlVWV2hIWkVaS1ZsSnJOVlJXYTNCNFZqSjBNR0ZWTVZaaFIyaFZUV3MxVDFwVlpEQlVWMDVHWVVWS1RtSlVhRE5XYWtaaFVsWk9WMWRZYUdsaWJWSkxWV3BCZUZOR1RsaFRhekZVVFVob2VWVnJWbk5UYkVwR1lrWldXazFFYkU5Vk1GWkhVbFpKZVZKc2FFOVNlbXd3VlRGV2QxRnNXbGxWYmtwcVltNUNRMVpFU1RGa1JsRjVVMjVzYkZKVlducFZiRlp2VjBkRmQyTkVVbXBTTTBKRVZsY3hXazFXVWxWU2FsWm9ZbFJXU2xReFZqUlJNVlY2WWtWYWFsSnNTbmxYYTJNMVV6Rk9XRlZyU2xSTlJHeHhXVzF3UzFkRk1IZFRhMnhhVFZWS01WcFZVbk5WUmtaV1drUldXRlo2YkV4Vk1WVTFWRlpPU0ZSdGFHbGhNbEpQVkcxMGExTkdTa2hrUjBaVVlteFplVlZxUW5kT1YwcEpVbXQwVlZKR1drZFZNR2hYWVVaR2NtUkZTbHBoTW1oSldUQlNRMVJWTUhwV2JYQlVWbGRTVUZkc1dtNWxWbFY0WVVWb1ZsZEdXbnBaTVZKTFltMUZlR05FVW1GTmJYZ3hWbXhhYTJGdFRrZFZia3BvVmxWd1ZsUXhXbXRTYXpGeldrZHdhV0V6VWpSYVYzaDNVMjFXV0ZwRk5XeFdWR3hUVlRGb2QxbFZNWEprTTJoYVRXeHdORlJYTlhOT1IwbzJVMnhvYkdFeWVFbFZNV1JQVkd4T2NsSlliR3BXUlhCNVZsVldkMDVXVlhsaFJUVldUVVphU2xsdGREQldNREZHWWtWMGJGWnNXazVWYWtKWFlteFNTV05FVWs5VFJVWXpWRlprUjJSc1ZsZFRia1pxWWtaSmQxUnJXblpsVmxsNVpFaHNhMDB4V21GVk1GWjNZbTFTV1ZOcmFGVlNla1pMV2xWa2EyRkdUbkpqU0doV1RVUkdWMVpFUW5kWlYxRjRWRzF3VlZOSFpEUlZhMVY0VTJ4VmVXSklhRlJXYXpWaFZUSTFiMVpHYTNkalJGSk9Va1UxTWxWNlFuTk9iRVpXV2tWd1QxSlhhRmRXUkU1WFUyeGFWazFZU2xOaWJWSkhXa1pXUjFOSFZsaE5WVFZPWW10V05sa3hVa2RrTURGeVZWaHdXazFFYkVaYVZWWkhWVVpPVjFac1VsZGlWR3hNV1Zkd1QxTnRTbFpXYTNCcVZucEdXVlV3V25abFZrWllaVWhXVmsxVmNITldNRkpMV1ZVeGNsVnFVbFZXYkVvelZsVlNjMVpXVWtWVWJHUlBVbnBzU0ZkcVRtOVJiR3hYV1hwS2FVMUlRVEZXUkVKSFl6QTVSVlZ0UmxSU01sSndWVEJhUjFOdFVsbFJhbEpZWVd0YU1WVXhWWGRsUmxKRlUycFdWbFpXYnpKVlZsSlRXVlpPY2xadGNGUlNiRnBvVkZWYWQxWldWblJXYTFwclRWVXhObFZzVm5kU2JGWldVbXRvYWxZeFdqTlpiR2hEWkVkT1JWSnFVazlXVm13MFZXeFZlRk14VFhkUFYzQllZV3R3UjFwSGRGTk9iVVY2WVVac1RrMUVWbmRWYWtKdlYwVXhXVk5zVWxoaVZscGhWRlJHVDFOdFNYZGpSbWhvVWxaSk1sUXdVazlVVmsxNlZXNUdVbFpGY0U5V2JYaHVaREF4U0dKRmNGUlhSMmh6V1RCV1drNVhTbFpoUlhCc1VrVmFTbFpzV210a1IwNUdZVVpTVjFaWFpEVldNbkJEV1ZaYVNWSnROVk5XUlRWWlZtMTBiMU14UmxaTldHeHNZVzE0ZEZaR1kzaFVWVFZaVW01T1lXSlhlRWRaYTFKelZGWk9TVnBHUW10V1YzaEpWV3hXVjJSc1RuSmhSM2hUWW0xb2NWbFdWa3RXVm10NVYydEtWbGRIYUhsV01qQjRaVVpPY2xkc1RsWmlWM2hHV1d4V1YyRkdTa1ZUYWtaaFltdEplVmRxUVhoU2F6RjBWMjVLYVUxcVJrdFdWRTVEWXpBNVYySkdiRTVTYmtKNVZXeGplRk5YU2xaU2FrcGhUV3hhWVZsc2FITk9Sa3BKWVVWd1ZsZEZTbFJVVm1oelUyeFZlbFp0ZUdsaE0wSlVWRmQwV21WdFZrVlJiVVpyVFVkb2VsVXdWbmRVYkVaV1ZWaHNZVTFzY0ZwWmJGWXpaVVprUlZOdE5XRlRSVm93VmxSQ1QyUnNWWHBXV0docFRUSlJNRlJzVmtkT2JFcFhWRzVvYkdFeWVGcFZNblJyWlVaR1ZsSnVUbEJTTVZvelYxWldSMkpHVGxaaVJGWlZUVWhDYjFWV1pHdFpWbHBHVm1wR1ZHSkdSVEZWVmxwdVpWWk9WMkpGV2xaaVdGSlRWakkxYTFRd01VZGpSa1pRVmtWS1JGWlZVbkpsYkdSWVRWVXhhR0V4YnpCV1JWSlBVekZXY2sxWVVtbGhNV3N4Vm1wQ1dtUXhiM3BoUlRGc1ltdGFZVmt4WTNobFJteFdWV3RvYTFadGVFeFZNakZoWTFaT1dXRklTazlXVkVaTVZsUk9jMUl3TVVaTlZGWnFVbGhDUTFkcVFrdFdSbFY2WVVWc1RsSlhhSGRWYm5CTFlXeFplR0pJVW14U2VrWTFWMVpXUjFac1NrWmFSbWhhVFRCS1VsUXhXbk5VYlZaWVZHcE9hbFpGY0hWV1YzUkxVekZaZWxadFJrNWlhMXB2V1RGYVUyVkZNVlpTYTNoWFlsaENUMVpYY0VkaGJGSkZWRzVvVlZaV1NqQmFWbVEwV1ZVeGNsWnRiRkpoTTFKSFZYcENSbVZzVWxkaVJuQk9WbFphVVZZeFVrTlhSbVJXVjI1U2FsWlZjREpVVnpGMlRWWktTRTFXVWxaaWExWTFXbFprVjJSdFNsbFdibFpZVm5wRk1WWkVSbTVsUmtwVlVtNVdUazFWTlhoVmFrSnJaREExUmxWcmVGUlhSbkF5VjFaV1JtUXlUa2RSYlRWWVZsVmFWbGRxUm10a01EQjZVVzE0V0ZaNlJqTlVhMXAzVTBkU1dGWnJTbFJTYlZKTFZWWlNTMkpzY0ZaYVJGWmFZbGQ0UjFac1ZrZFNiR1JWVVdzMVZVMVhaRFpXUjNCWFpHeE9TVkp0TlZoV1JUVkxWMVphZDFVeFZqWlhiVVpPWW0xb01GWXlNSGhPUm5CV1VtNU9ZVTFIYUV0V1ZtaHpWVzFLZEZKcmJFOVhSWEJUVmtod1QxTnRTbGxTYkdoVlYwZG9XVmx0TlVOa1JtUjBZa2RHYVZkRldrcFZhMk40Vmtad1YyTkdXbXRXVlRWT1dXeG9VbVF4U2xWVWEwcG9ZbFJvTlZWc2FHOWtNVWw2VWxod1ZWWnJhekZXYTFwM1RsWldkRlpzY0dsV1ZWcExWVmQwYTFOdFJYZGtNM0JxVm10YVExbHNWVFZpUmtaWllVUkNhRlpVUWpSVk1XUnJVbXhXY2xKcVRsTk5Wa3BaVm10V1VtVlZNVWhpU0doclRVVmFhRlZyVWs5VGJIQkhXak53YWxkR1dqSlZha0pYWTFaU1NXTkVVbWxXZW1nelZtMHdlRmxWTVVaa00zQlZVbFpyTVZac1ZrdFdWa3BZWTBoV1ZGSlVSWGxWYTFKUFZGZEtSazFWYkZWWFJscEVWbFZTYzFOWFNuSmFSVGxPVFZkNE1GVnJaSE5aVlRGSldqTmthbUp0ZUVwWlYzaHpaRVpTTmxSc2NHbFdWM2d3VmpGamVGRnNXbkpTYms1UVZrVndORlV5TVVwTlIwcHpVbXRLV2sxWGVEQlZWbVJIVVd4SmVGZHVRbGhXTTJNeFZteGpNVk5IVmxsWGJVWlVWbXR3YzFscVFtdGxSMHBKVVZoc2JGWXhXbWhhVmxaeldWWkdWMVJ0Um1sV2JYUTFWMVJHVDFOV1ZYbFRibEpTVmxkNFJsZFdXa2RTVm13MlYyNVdWR0Z0ZUhaV2JYaEdaREpTUjFremFHaGxiRXBEV1d4YWEyUXlUbk5TYXpWc1lUTlNWMXBGVWs5UmJGVjVZM3BDV0dKVVJsVlpNR2hMVld4a2RFMVdhR2hoYTBwYVdXcE9kMU50UmxkWGJFcE9VMFpLVDFWNlFYaE5WMGw0VVdwQ1dsWllVbGRhUlZKTFdWZFdXR042UWxKWFIxRXhXVEJvUzFWc1VsbGlSWGhYVjBaR05WWXlkSE5qYXpWR1VtNVNVbGRGU2pWV1ZsWTBaRVpOZUZacVFrNWhNSEJMV1Zod1UxRnRVWHBpU0dScVlrVmFXVnBXVmpCV2JWSkZWR3RLVkZZelRYZFZWbWgzVTIxT1NWTnNTbFZTUmtwTlZteG9VbVZXUmxaaVNFcFBVbFZhTUZwR2FFTmxWbFpXVFZST1ZFMVdXWGRVVjNSTFUyMUdObFZyU210TlJFWXpXVEo0UjJRd05WWmtSbHByVWpOb1JGWlVTbnBOUmtaWlkwVmFhbE5GY0ZOV1JtaDNWRVphV1ZWWWNGaGliWGg1Vkd0V1IyUkdVWHBSYm14V1ZsaGpkMVY2UmxkTlJURnlVbXR3YUdWc1NrTlpiRlp6WkRKT2MxSnVaR2xXV0ZKWFdrVmtORkV4VGxoamVrSllZbTFTVUZkV1dtOVNNVkowVm14a1YxSlhkRFZXUlZaM1kxWnNjMWt6YUdobGJFcERXa1JDUjJReVRuTlNhelZzWVROU1YxcEZVa3RSYkZWNVkzcENVbGRIVWt0Wk1HaExWV3hTU0UxVmVGZFhSa1kyVmpKd1IyTnJOVWRqUkZwVVYwVktOVlpXVmpOa01VMTRWbXBDVG1Fd1drdFpXSEJUVVcxUmQxSnVaR3BpUlZwUFdsZDBNRlp0VWtWVGEwcFdUVzVOZDFWV2FHdFRiVTVKVTJ4S1YyRnNTazFXYkdoU1pXeEdWMVJ1U2s5U1ZWb3dWbXBPUTJWV1ZsWmtla1pVVFZaWmQxUlhjM2hUYlVZMlZXdEthMDB5ZUROWk1uaEhaREF4Um1SR1dtdFNSVFZFVlRGa2VrMUdaSFZqUlVwcVUwVndVMVp0TVhkVVJscFpWVmh3VlZKWGVIbFVhMVpIVFRKV1dWRnViRlpXVkVVeVZYcEdWMDFGTVhKTlZYQm9aV3hLYUZwRVRtOWhSbVJHVjJzNVlWWnNjRlpWTVZKTFZGWk9kR05IYkZkbGExcDVWR3RXUjAweFdYcFJibXhXVmxoamVGVjZSbGROUlRGeVRWVndhR1ZzU2tOYVJFWlBaREpPYzFKdVpHbFdXRkpYV2tWU1MxbFZNVmhqZWtKU1YwZFJNVmt3YUV0VmJGSkZWbXQ0VjFkR1NucFdSbFp6WTJzMVJsSnVVbFJYUlVvMVZsWlZlRTVXVFhoV2FrSk9ZVEJ3VlZsWWNGTlJiVkYzWWtoa2FtSkZXak5VYTFZd1ZtMVNSVk5yTVU1V00wMTNWVlpvYTA1WFRrbFRiRXBWVWtWd1RWWnNhRkpsYkVaeVlraEtUMUp1UVhwYVJtaERaVlpXVmsxVVdsUk5WbGwzVkZSR2QwNVhSalpWYTBwclRWVTFNMWt5ZUVkVVYwcFdaRVphYTFKRmNFNVVWbVI2VFVaR1dWcEZjR3BUUlhCVFZtMXdWMWRIU2tsaFJFSllVak5vVVZwV2FFZE9iRlY1VjJ4c1ZsTkZXak5aTW5oSFZGZEtWbVJHV210U1JYQlBXbFprZWsxR1JsbGFSVnBxVTBWd1UxWkZVa2RVUmxwWlZWaHNXR0ZyV25sVWExWkhaRVpHV1ZGdWJGWldiVkV4VlhwR1YwMUZNWEpTYkZKb1pXeEtRMXBFUW5Oa01rNXpVbXN4YVZaWVVsZGFSVkpMVkcxV1dHTjZRbEpYUjFKSFdUQm9TMVZzVWtWU2EzaFhWMFpLZWxWWGVFOWphelZHVW1wYVYwMHdTalZXVmxZelpVWk5lRlpxUWs1TlJYQkxXVmh3VTFGdFZuSldibVJxWWtWYVRsbFVRakJXYlZKRlUyc3hiRll6VFhkVlZtaHJVMjFPU1ZOc1NtcFNNMmhOVm14b1UyTXhaSE5VYmtwUFVtNUJNbFZXYUVObFZsWlhWMjVHVkUxV1dYZFVWRUkwVTIxR05sVnJTbXROTW5neldUSjRSMVJ0Vm5Ka1JscHJVa1Z3VDFVeFpIcE5SbVIxV2tSU1dsWnRhRVpVVlZwdlZHeE5kMDFVUm1sTlZVbDRXa1JKTkdWVk1WaGpTRlpVWWxoUk1WWXdXbGRoYkhCMFRsVjBWMkpYYUU5V2ExWnpUVEpLTmxOWWFHaGlhMGt5VlRGamVHUXlTa2xXYWtwVlVsaFNRMXBXVmtkTk1VcElZVVV4YTAxSVpETldSbHBUVTIxUmVVOUliRk5YUjNoYVZtdFdjbVZXVWtaalNFWmFZa2RPTkZsWWNGTlJiVlp5WWtoa2FtSkZXazVVVmxZd1ZtMVNSVk5yTld0aWEwcHhWakJXWVU1R2NITmFTRkpvVFdwR05GWnNXbXRoYlVsNlkwaGtURTFYVW5wWlZ6RkhWR3hOZWxacVZsVlNNMmd6VjFSR2IxSldRbFZOVkVKRFZWVkdRbEZWYUV0a2JWSkZVbGh3YW1ReWRFSlJWVVpEWkVkSmVsTnVaR2hTTVZsNFdUTnNRMlZyYUVKUlZVWkNVakExTWxkclpGZGhiVTQxVGxkMFlWWXdOVEpYYTJSV1lqSlNTVk51UW1saVYzZDNXbFpPTTFveVZuUmlTRnBwWVZkM2QxRnRaRUpSVlVaSVQxaHNXbFl3TlhwWGJHaE9XbFZHUWxGVlJscE5hbXh5VjJ4a1QyVnJlSFJWYlhoYVRXcHNjbGRzVG05amJIQlpZa2hTV2xZelVuTlpNbXhDWXpCc1NXTklRbWxOYWxKM1drVkdUbEZWUmtKUmJsWmhWbnBzTmxFd1JrSlJWVVpGWlVod2ExTkZjSGRaYlRGcVN6SlNRbFZWUmtKUlZVcHpXbFZrVjJGcmRFSmpNRVpDVVZWSmQxRnRaRUpSVlVaSVUyMW9hazFzVlhsVWEyaFNVakJHUWxGVlJscE5hbXh5VjJ4a1QyVnRVa0phTUVaQ1VWVktNRmxxVGt0a01rWklWbXBHYWsweFJrbFJWVVpDVVZkU1NWTnVRbWxpVjNkM1dsWmFTbEpWUmtKUlZVWnJVVmRrUWxGVlJrTmpiSEJaWWtoU1dsWXpVbk5aTWpWU1VsVkdRbEZWUm14aVYzZ3lXVzAxVWxKVlJrSlJWVVpoVjBad2IxbHJXa3BTYTBaQ1VWVkdhMUZYVGtKUlZVWkRZVzFKZVUxWVpHaFdNMmh6V2tWR2NsRlZSa0pSYld4UFlXeEtjbGRzWkU5a2JIQklWbGM1UWxGVlJrSlJWVTV1VVZWR1FsRlZSa3hSVlVaQ1VWVkdRMlZyU201UlZVWkNVMFUxY1ZreU1YTmtNbEpKVlZWc1FsRlZSa0pWUldONFpHeHdTVlp1VG1GV1JGSkRVVlZHUWxGWFRqTk9SVVpDVVZWR1dsRldSbHBSYTBwdVVsVmtRbFZXYkVOUmJXUkdZMVZHVWxCVU1HbExVMnR3S0FJQUFBQjBCZ0FBQUdKaGMyVTJOSFFKQUFBQVlqWTBaR1ZqYjJSbEtBQUFBQUFvQUFBQUFDZ0FBQUFBY3dZQUFBQnpZM0pwY0hSMENBQUFBRHh0YjJSMWJHVStBUUFBQUhNQ0FBQUFEQUE9IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR lightskyblue][B] [makelist.param4][/B] [COLOR white]entra en los servidores[/COLOR]</title>
<thumbnail>$pyFunction:('https://www.seriespapaya.se/uploads/[makelist2.param2]|user-agent=Mozilla%2F5.0+%28X11%3B+Linux+x86_64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F86.0.4240.183+Safari%2F537.36').replace('\u00f1','%C3%B1').replace('\/','/')</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<link>$doregex[picapau2]</link>
<name>makelist</name>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re , requests , xbmc , xbmcaddon , xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
 
    url= 'https://www.seriespapaya.se/serie/[makelist2.param3]'
    agente = {'User-Agent': AgenteCristal()}
    extraer = requests.get(url, headers=agente)
    ExpresCristal = re.findall('(?s)location = "([^"]+).*? href="([^"]+).*?img src="([^"]+).*?;([^<]+).*?', extraer.text)
    return ExpresCristal

def AgenteCristal():
    url= 'https://pastebin.com/raw/KfH67FfV'
    agente = {'User-Agent': 'Mozilla/5.0'}
    extraer = requests.get(url, headers=agente)
    AgenteCristal = re.findall("(.*?)CRISTAL", extraer.text)[0]
    return AgenteCristal
]]></expres>
<page></page>
</regex>
<regex>
<name>picapau2</name>
<listrepeat><![CDATA[
<title>[COLOR lightskyblue][makelist.param4][/COLOR] [COLOR white] [picapau2.param3] [COLOR lightskyblue][picapau2.param5] [COLOR gold]idioma [picapau2.param1][/COLOR] </title>
<thumbnail>$pyFunction:('https://www.seriespapaya.se/uploads/[makelist2.param2]|user-agent=Mozilla%2F5.0+%28X11%3B+Linux+x86_64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F86.0.4240.183+Safari%2F537.36').replace('\u00f1','%C3%B1').replace('\/','/')</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<link>$doregex[selecion_inteligente]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re , requests , xbmc , xbmcaddon , xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
 
    url= 'https://www.seriespapaya.se/[makelist.param2]'
    agente = {'User-Agent': AgenteCristal(), 'Referer': 'https://www.seriespapaya.nu/serie/breaking-bad.html'}
    extraer = requests.get(url, headers=agente)
    ExpresCristal = re.findall('idioma[\w\W\s]{0,47}images\/(.*?)\.p[\w\W\s]{0,80}fecha\"\>\n(.*?)<[\w\W\s]{0,217}(Upto.*?|Gamo.*?|Vido.*?|Streamch.*?|Gounlimi.*?|Uqload.*?|Ok.*?|Upstreamt.*?|Fembed.*?|Clipwatch.*?)<[\w\W\s]{0,99}href="(.*?)"[\w\W\s]{0,88}calidad">\n(.*?)<', extraer.text)
    return ExpresCristal

def AgenteCristal():
    url= 'https://pastebin.com/raw/KfH67FfV'
    agente = {'User-Agent': 'Mozilla/5.0'}
    extraer = requests.get(url, headers=agente)
    AgenteCristal = re.findall("(.*?)CRISTAL", extraer.content)[0]
    return AgenteCristal
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<expres><![CDATA[#$pyFunction
import re , requests , xbmc , xbmcaddon , xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
 
    url= 'https://www.seriespapaya.se/[picapau2.param4]'
    agente = {'User-Agent': AgenteCristal(), 'Referer': 'https://www.seriespapaya.nu/serie/breaking-bad.html'}
    extraer = requests.get(url, headers=agente)
    ExpresCristal = re.findall("location\.href='(.*?)'", extraer.content)[0]
    return ExpresCristal

def AgenteCristal():
    url= 'https://pastebin.com/raw/KfH67FfV'
    agente = {'User-Agent': 'Mozilla/5.0'}
    extraer = requests.get(url, headers=agente)
    AgenteCristal = re.findall("(.*?)CRISTAL", extraer.content)[0]
    return AgenteCristal
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/thTfzMZ.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>


<item>
<title>[COLOR yellow]SYFY [COLOR white]cristal Series[/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR aqua][makelist2.param1][/COLOR]</title>
<info>[COLOR aqua]Grupo telegram: [COLOR gold]@addonfestaycristal[/COLOR]</info>
<link>$doregex[makelist]</link>
<thumbnail>$pyFunction:('https://www.seriespapaya.se/uploads/[makelist2.param2]|user-agent=Mozilla%2F5.0+%28X11%3B+Linux+x86_64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F86.0.4240.183+Safari%2F537.36').replace('\u00f1','%C3%B1').replace('\/','/').replace('https://www.seriespapaya.se/uploads/https://i.imgur.com/cYJ070e.png','https://i.imgur.com/cYJ070e.png')</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR lightskyblue][B] [makelist.param4][/B] [COLOR white]entra en los servidores[/COLOR]</title>
<thumbnail>$pyFunction:('https://www.seriespapaya.se/uploads/[makelist2.param2]|user-agent=Mozilla%2F5.0+%28X11%3B+Linux+x86_64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F86.0.4240.183+Safari%2F537.36').replace('\u00f1','%C3%B1').replace('\/','/')</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<link>$doregex[picapau2]</link>
<name>makelist</name>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re , requests , xbmc , xbmcaddon , xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
 
    url= 'https://www.seriespapaya.se/serie/[makelist2.param3]'
    agente = {'User-Agent': AgenteCristal()}
    extraer = requests.get(url, headers=agente)
    ExpresCristal = re.findall('(?s)location = "([^"]+).*? href="([^"]+).*?img src="([^"]+).*?;([^<]+).*?', extraer.text)
    return ExpresCristal

def AgenteCristal():
    url= 'https://pastebin.com/raw/KfH67FfV'
    agente = {'User-Agent': 'Mozilla/5.0'}
    extraer = requests.get(url, headers=agente)
    AgenteCristal = re.findall("(.*?)CRISTAL", extraer.text)[0]
    return AgenteCristal
]]></expres>
<page></page>
</regex>
<regex>
<name>picapau2</name>
<listrepeat><![CDATA[
<title>[COLOR lightskyblue][makelist.param4][/COLOR] [COLOR white] [picapau2.param3] [COLOR lightskyblue][picapau2.param5] [COLOR gold]idioma [picapau2.param1][/COLOR] </title>
<thumbnail>$pyFunction:('https://www.seriespapaya.se/uploads/[makelist2.param2]|user-agent=Mozilla%2F5.0+%28X11%3B+Linux+x86_64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F86.0.4240.183+Safari%2F537.36').replace('\u00f1','%C3%B1').replace('\/','/')</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<link>$doregex[selecion_inteligente]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re , requests , xbmc , xbmcaddon , xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
 
    url= 'https://www.seriespapaya.se/[makelist.param2]'
    agente = {'User-Agent': AgenteCristal(), 'Referer': 'https://www.seriespapaya.nu/serie/breaking-bad.html'}
    extraer = requests.get(url, headers=agente)
    ExpresCristal = re.findall('idioma[\w\W\s]{0,47}images\/(.*?)\.p[\w\W\s]{0,80}fecha\"\>\n(.*?)<[\w\W\s]{0,217}(Upto.*?|Gamo.*?|Vido.*?|Streamch.*?|Gounlimi.*?|Uqload.*?|Ok.*?|Upstreamt.*?|Fembed.*?|Clipwatch.*?)<[\w\W\s]{0,99}href="(.*?)"[\w\W\s]{0,88}calidad">\n(.*?)<', extraer.text)
    return ExpresCristal

def AgenteCristal():
    url= 'https://pastebin.com/raw/KfH67FfV'
    agente = {'User-Agent': 'Mozilla/5.0'}
    extraer = requests.get(url, headers=agente)
    AgenteCristal = re.findall("(.*?)CRISTAL", extraer.content)[0]
    return AgenteCristal
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<expres><![CDATA[#$pyFunction
import re , requests , xbmc , xbmcaddon , xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
 
    url= 'https://www.seriespapaya.se/[picapau2.param4]'
    agente = {'User-Agent': AgenteCristal(), 'Referer': 'https://www.seriespapaya.nu/serie/breaking-bad.html'}
    extraer = requests.get(url, headers=agente)
    ExpresCristal = re.findall("location\.href='(.*?)'", extraer.content)[0]
    return ExpresCristal

def AgenteCristal():
    url= 'https://pastebin.com/raw/KfH67FfV'
    agente = {'User-Agent': 'Mozilla/5.0'}
    extraer = requests.get(url, headers=agente)
    AgenteCristal = re.findall("(.*?)CRISTAL", extraer.content)[0]
    return AgenteCristal
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/cYJ070e.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>


<item>
<title>[COLOR pink]AMC [COLOR white]cristal Series[/COLOR] </title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR aqua][makelist2.param1][/COLOR]</title>
<info>[COLOR aqua]Grupo telegram: [COLOR gold]@addonfestaycristal[/COLOR]</info>
<link>$doregex[makelist]</link>
<thumbnail>$pyFunction:('https://www.seriespapaya.se/uploads/[makelist2.param2]|user-agent=Mozilla%2F5.0+%28X11%3B+Linux+x86_64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F86.0.4240.183+Safari%2F537.36').replace('\u00f1','%C3%B1').replace('\/','/').replace('https://www.seriespapaya.se/uploads/https://i.imgur.com/LtaChcA.png','https://i.imgur.com/LtaChcA.png')</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR lightskyblue][B] [makelist.param4][/B] [COLOR white]entra en los servidores[/COLOR]</title>
<thumbnail>$pyFunction:('https://www.seriespapaya.se/uploads/[makelist2.param2]|user-agent=Mozilla%2F5.0+%28X11%3B+Linux+x86_64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F86.0.4240.183+Safari%2F537.36').replace('\u00f1','%C3%B1').replace('\/','/')</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<link>$doregex[picapau2]</link>
<name>makelist</name>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re , requests , xbmc , xbmcaddon , xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
 
    url= 'https://www.seriespapaya.se/serie/[makelist2.param3]'
    agente = {'User-Agent': AgenteCristal()}
    extraer = requests.get(url, headers=agente)
    ExpresCristal = re.findall('(?s)location = "([^"]+).*? href="([^"]+).*?img src="([^"]+).*?;([^<]+).*?', extraer.text)
    return ExpresCristal

def AgenteCristal():
    url= 'https://pastebin.com/raw/KfH67FfV'
    agente = {'User-Agent': 'Mozilla/5.0'}
    extraer = requests.get(url, headers=agente)
    AgenteCristal = re.findall("(.*?)CRISTAL", extraer.text)[0]
    return AgenteCristal
]]></expres>
<page></page>
</regex>
<regex>
<name>picapau2</name>
<listrepeat><![CDATA[
<title>[COLOR lightskyblue][makelist.param4][/COLOR] [COLOR white] [picapau2.param3] [COLOR lightskyblue][picapau2.param5] [COLOR gold]idioma [picapau2.param1][/COLOR] </title>
<thumbnail>$pyFunction:('https://www.seriespapaya.se/uploads/[makelist2.param2]|user-agent=Mozilla%2F5.0+%28X11%3B+Linux+x86_64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F86.0.4240.183+Safari%2F537.36').replace('\u00f1','%C3%B1').replace('\/','/')</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<link>$doregex[selecion_inteligente]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re , requests , xbmc , xbmcaddon , xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
 
    url= 'https://www.seriespapaya.se/[makelist.param2]'
    agente = {'User-Agent': AgenteCristal(), 'Referer': 'https://www.seriespapaya.nu/serie/breaking-bad.html'}
    extraer = requests.get(url, headers=agente)
    ExpresCristal = re.findall('idioma[\w\W\s]{0,47}images\/(.*?)\.p[\w\W\s]{0,80}fecha\"\>\n(.*?)<[\w\W\s]{0,217}(Upto.*?|Gamo.*?|Vido.*?|Streamch.*?|Gounlimi.*?|Uqload.*?|Ok.*?|Upstreamt.*?|Fembed.*?|Clipwatch.*?)<[\w\W\s]{0,99}href="(.*?)"[\w\W\s]{0,88}calidad">\n(.*?)<', extraer.text)
    return ExpresCristal

def AgenteCristal():
    url= 'https://pastebin.com/raw/KfH67FfV'
    agente = {'User-Agent': 'Mozilla/5.0'}
    extraer = requests.get(url, headers=agente)
    AgenteCristal = re.findall("(.*?)CRISTAL", extraer.content)[0]
    return AgenteCristal
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<expres><![CDATA[#$pyFunction
import re , requests , xbmc , xbmcaddon , xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
 
    url= 'https://www.seriespapaya.se/[picapau2.param4]'
    agente = {'User-Agent': AgenteCristal(), 'Referer': 'https://www.seriespapaya.nu/serie/breaking-bad.html'}
    extraer = requests.get(url, headers=agente)
    ExpresCristal = re.findall("location\.href='(.*?)'", extraer.content)[0]
    return ExpresCristal

def AgenteCristal():
    url= 'https://pastebin.com/raw/KfH67FfV'
    agente = {'User-Agent': 'Mozilla/5.0'}
    extraer = requests.get(url, headers=agente)
    AgenteCristal = re.findall("(.*?)CRISTAL", extraer.content)[0]
    return AgenteCristal
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/LtaChcA.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>


<item>
<title>[COLOR deepskyblue]AMAZON PRIME [COLOR white]cristal Series[/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR aqua][makelist2.param1][/COLOR]</title>
<info>[COLOR aqua]Grupo telegram: [COLOR gold]@addonfestaycristal[/COLOR]</info>
<link>$doregex[makelist]</link>
<thumbnail>$pyFunction:('https://www.seriespapaya.se/uploads/[makelist2.param2]|user-agent=Mozilla%2F5.0+%28X11%3B+Linux+x86_64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F86.0.4240.183+Safari%2F537.36').replace('\u00f1','%C3%B1').replace('\/','/').replace('https://www.seriespapaya.se/uploads/https://i.imgur.com/QaTc8Hx.png','https://i.imgur.com/QaTc8Hx.png')</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR lightskyblue][B] [makelist.param4][/B] [COLOR white]entra en los servidores[/COLOR]</title>
<thumbnail>$pyFunction:('https://www.seriespapaya.se/uploads/[makelist2.param2]|user-agent=Mozilla%2F5.0+%28X11%3B+Linux+x86_64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F86.0.4240.183+Safari%2F537.36').replace('\u00f1','%C3%B1').replace('\/','/')</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<link>$doregex[picapau2]</link>
<name>makelist</name>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re , requests , xbmc , xbmcaddon , xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
 
    url= 'https://www.seriespapaya.se/serie/[makelist2.param3]'
    agente = {'User-Agent': AgenteCristal()}
    extraer = requests.get(url, headers=agente)
    ExpresCristal = re.findall('(?s)location = "([^"]+).*? href="([^"]+).*?img src="([^"]+).*?;([^<]+).*?', extraer.text)
    return ExpresCristal

def AgenteCristal():
    url= 'https://pastebin.com/raw/KfH67FfV'
    agente = {'User-Agent': 'Mozilla/5.0'}
    extraer = requests.get(url, headers=agente)
    AgenteCristal = re.findall("(.*?)CRISTAL", extraer.text)[0]
    return AgenteCristal
]]></expres>
<page></page>
</regex>
<regex>
<name>picapau2</name>
<listrepeat><![CDATA[
<title>[COLOR lightskyblue][makelist.param4][/COLOR] [COLOR white] [picapau2.param3] [COLOR lightskyblue][picapau2.param5] [COLOR gold]idioma [picapau2.param1][/COLOR] </title>
<thumbnail>$pyFunction:('https://www.seriespapaya.se/uploads/[makelist2.param2]|user-agent=Mozilla%2F5.0+%28X11%3B+Linux+x86_64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F86.0.4240.183+Safari%2F537.36').replace('\u00f1','%C3%B1').replace('\/','/')</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<link>$doregex[selecion_inteligente]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re , requests , xbmc , xbmcaddon , xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
 
    url= 'https://www.seriespapaya.se/[makelist.param2]'
    agente = {'User-Agent': AgenteCristal(), 'Referer': 'https://www.seriespapaya.nu/serie/breaking-bad.html'}
    extraer = requests.get(url, headers=agente)
    ExpresCristal = re.findall('idioma[\w\W\s]{0,47}images\/(.*?)\.p[\w\W\s]{0,80}fecha\"\>\n(.*?)<[\w\W\s]{0,217}(Upto.*?|Gamo.*?|Vido.*?|Streamch.*?|Gounlimi.*?|Uqload.*?|Ok.*?|Upstreamt.*?|Fembed.*?|Clipwatch.*?)<[\w\W\s]{0,99}href="(.*?)"[\w\W\s]{0,88}calidad">\n(.*?)<', extraer.text)
    return ExpresCristal

def AgenteCristal():
    url= 'https://pastebin.com/raw/KfH67FfV'
    agente = {'User-Agent': 'Mozilla/5.0'}
    extraer = requests.get(url, headers=agente)
    AgenteCristal = re.findall("(.*?)CRISTAL", extraer.content)[0]
    return AgenteCristal
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<expres><![CDATA[#$pyFunction
import re , requests , xbmc , xbmcaddon , xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
 
    url= 'https://www.seriespapaya.se/[picapau2.param4]'
    agente = {'User-Agent': AgenteCristal(), 'Referer': 'https://www.seriespapaya.nu/serie/breaking-bad.html'}
    extraer = requests.get(url, headers=agente)
    ExpresCristal = re.findall("location\.href='(.*?)'", extraer.content)[0]
    return ExpresCristal

def AgenteCristal():
    url= 'https://pastebin.com/raw/KfH67FfV'
    agente = {'User-Agent': 'Mozilla/5.0'}
    extraer = requests.get(url, headers=agente)
    AgenteCristal = re.findall("(.*?)CRISTAL", extraer.content)[0]
    return AgenteCristal
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/QaTc8Hx.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>
