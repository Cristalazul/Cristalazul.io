<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<items>


<item>
<title>[COLOR orangered]SERIES TURCAS [COLOR white]Cristal [COLOR yellow](Nuevo)[/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/w6VUR30.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>



<item>
<title>[COLOR orangered]ESPECIAL [COLOR white]Fuerza de Mujer [COLOR yellow](Audio Latino)[/COLOR]</title>  
<link>$doregex[capitulos]</link>
 
<regex>
  <name>capitulos</name>
  <listrepeat><![CDATA[
    <title>[COLOR white][capitulos.param1][/COLOR]</title>
    <thumbnail>https://i.pinimg.com/474x/b8/41/80/b84180293465528b5dc2dcea8c443832.jpg</thumbnail>
    <fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
    <link>$doregex[id5]</link>
  ]]></listrepeat>
<expres><![CDATA[(Capitulo.*?)[\n\r]+([^\r\n]+)]]></expres>  
<page>https://pastebin.com/raw/nRyZFLfk</page>
</regex>

<regex>
<name>id5</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
  import resolveurl,xbmc 
  url = '[capitulos.param2]'
  try:
    u = resolveurl.resolve(url)
  except:
    u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR yellow]Enlace caido[/COLOR],4000)")
  return u    
]]></expres>
<page></page> 
</regex>
<thumbnail>https://i.imgur.com/ylKGzs8.jpg</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>


<item>
<title>[COLOR red]ESPECIAL [COLOR white]Love is in the Air [COLOR gold](Nueva opción)[/COLOR]</title>
<link>$doregex[lou]</link>
<regex>
<name>lou</name>
<listrepeat><![CDATA[
<title>[lou.param2] [lou.param1]</title>
<link>$doregex[id3]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>[lou.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)<title>(.*?)-.*?(.*?)<.*?urlsolve>(.*?)<.*?thumbnail>(.*?)<.*?fanart>(.*?)<.*?]]></expres>
<page>https://pastebin.com/raw/GYWWujub</page>
</regex>
<regex>

<name>id3</name>

<expres><![CDATA[#$pyFunction

def GetLSProData(page_data,Cookie_Jar,m):

   import resolveurl

   url = '[lou.param3]'

   try:

       u = resolveurl.resolve(url)

   except:

       u = ''

   return u

]]></expres>

<page></page>

</regex>
<thumbnail>https://i.imgur.com/u483P9W.jpg</thumbnail>
<fanart>https://i.imgur.com/SbpAQBV.jpg</fanart>
</item>
    
<item>
<title>[COLOR red]ESPECIAL [COLOR white]Mi Hija: Kizim [COLOR gold](Nueva opción)[/COLOR]</title>
<link>$doregex[lou]</link>
<regex>
<name>lou</name>
<listrepeat><![CDATA[
<title>[lou.param2] [lou.param1]</title>
<link>$doregex[id3]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>[lou.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)<title>(.*?)-.*?(.*?)<.*?urlsolve>(.*?)<.*?thumbnail>(.*?)<.*?fanart>(.*?)<.*?]]></expres>
<page>https://pastebin.com/raw/qy0GgtFH</page>
</regex>
<regex>
<name>id3</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
 
   import resolveurl
 
   url = '[lou.param3]'
 
   try:
 
       u = resolveurl.resolve(url)
 
   except:
 
       u = ''
 
   return u
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/6VqzmVs.jpg</thumbnail>
<fanart>https://i.imgur.com/Yzlxiv6.jpg</fanart> 
</item>
    
    
<item>
<title>[COLOR red]ESPECIAL [COLOR white]Mi Hogar, Mi Destino [COLOR gold](Estreno)[/COLOR]</title>
<link>$doregex[lou]</link>
<regex>
<name>lou</name>
<listrepeat><![CDATA[
<title>[lou.param2] [lou.param1]</title>
<link>$doregex[id3]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>[lou.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)<title>(.*?)-.*?(.*?)<.*?urlsolve>(.*?)<.*?thumbnail>(.*?)<.*?fanart>(.*?)<.*?]]></expres>
<page>https://pastebin.com/raw/zc5hfC8C</page>
</regex>
<regex>

<name>id3</name>

<expres><![CDATA[#$pyFunction

def GetLSProData(page_data,Cookie_Jar,m):

   import resolveurl

   url = '[lou.param3]'

   try:

       u = resolveurl.resolve(url)

   except:

       u = ''

   return u

]]></expres>

<page></page>

</regex>
<thumbnail>https://i.imgur.com/DECJ8Ej.jpg</thumbnail>
<fanart>https://i.imgur.com/ugmEixA.jpg</fanart>
</item>


   
<item>
<title>[COLOR red]ESPECIAL [COLOR white]La Promesa (Yemin) [COLOR gold](Estreno-Latino)[/COLOR]</title>
<link>$doregex[lou]</link>
<regex>
<name>lou</name>
<listrepeat><![CDATA[
<title>[lou.param2] [lou.param1]</title>
<link>$doregex[id3]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>[lou.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)<title>(.*?)-.*?(.*?)<.*?urlsolve>(.*?)<.*?thumbnail>(.*?)<.*?fanart>(.*?)<.*?]]></expres>
<page>https://pastebin.com/raw/hz7J46sz</page>
</regex>
<regex>

<name>id3</name>

<expres><![CDATA[#$pyFunction

def GetLSProData(page_data,Cookie_Jar,m):

   import resolveurl

   url = '[lou.param3]'

   try:

       u = resolveurl.resolve(url)

   except:

       u = ''

   return u

]]></expres>

<page></page>

</regex>
<thumbnail>https://i.imgur.com/bUJdjBV.jpg</thumbnail>
<fanart>https://i.imgur.com/0s3efth.jpg</fanart>
</item>
 

   
    <item>
<title>[COLOR orangered]ESPECIAL [COLOR white]Omer: sueños robados [COLOR yellow](Estreno)[/COLOR]</title>  
<link>$doregex[lou]</link>
<regex>
<name>lou</name>
<listrepeat><![CDATA[
<title>[lou.param2] [lou.param1]</title>
<link>$doregex[id3]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>[lou.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)<title>(.*?)-.*?(.*?)<.*?urlsolve>(.*?)<.*?thumbnail>(.*?)<.*?fanart>(.*?)<.*?]]></expres>
<page>https://pastebin.com/raw/Xdf0nFWx</page>
</regex>
<regex>

<name>id3</name>

<expres><![CDATA[#$pyFunction

def GetLSProData(page_data,Cookie_Jar,m):

   import resolveurl

   url = '[lou.param3]'

   try:

       u = resolveurl.resolve(url)

   except:

       u = ''

   return u

]]></expres>

<page></page>

</regex>
<thumbnail>https://i.imgur.com/Lz5jAVf.jpg</thumbnail>
<fanart>https://i.imgur.com/YZsKkrp.jpg</fanart>
</item>


</items>
