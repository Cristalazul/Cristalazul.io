<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<item>
<title>[COLOR lightseagreen]TuNovela[/COLOR][COLOR white] Completa[/COLOR] </title>
<link>$doregex[A]</link>
<regex>
<name>A</name>
<listrepeat><![CDATA[
<title>[COLOR gold]*[COLOR lightseagreen]TuNovela [COLOR white][A.param1] [/COLOR]</title>
<thumbnail>https://i.imgur.com/Hea2K46.jpg</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<link>$doregex[makelist]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    items = [('Buscador', 'search', ''), ('Todas', 'todas', '')]
    return items
]]></expres>
<page></page>
<agent></agent>
</regex>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist.param2][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>$doregex[img]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
elegir = '[A.param2]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>img</name>
<expres><![CDATA[#$pyFunction
finalurl = '[makelist.param3]'
import re,requests,xbmc,urlresolver
def GetLSProData(page_data,Cookie_Jar,m,finalurl=finalurl):#cLrJIhsDApL
  if 'http' in finalurl:
   return finalurl
  else:
   return 'https://optimovision.tv/[makelist.param3]'
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param3][/COLOR]</title>
<link>$doregex[getUrl]|user-agent=ipad&amp;referer=https://optimovision.tv/[makelist2.param1]</link>
<thumbnail>[makelist2.param2]</thumbnail>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist.param1]'
nombre = '[makelist.param2]'
import re,requests
import base64;exec(base64.b64decode(""))
]]></expres>
<page>https://optimovision.tv/[makelist.param1]</page>
<referer>https://optimovision.tv/novelas-completas</referer>
</regex>
<regex>
<name>getUrl</name>
<expres><![CDATA[<video.+?src="([^"]+)]]></expres>
<page>https://optimovision.tv/[makelist2.param1]</page>
<referer>https://optimovision.tv/[makelist.param1]</referer>
</regex>
<thumbnail>https://i.imgur.com/Hea2K46.jpg</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>

