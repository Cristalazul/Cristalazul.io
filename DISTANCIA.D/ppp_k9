<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<items>





<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]sERIES [COLOR white]PRODUCTORAS[/COLOR]</title>
<link>$doregex[makelist]</link>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist.param1][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>[makelist.param3]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
def GetLSProData(page_data,Cookie_Jar,m):#CpRdIsSaTvAmL
  response = requests.get('https://pastebin.com/raw/mRDFTn7Y', verify=False).text
  items = re.findall('(?s)"titulo":"(.*?)".*?"url":"(.*?)".*?"imagen":"(.*?)"', response)
  numero_total = len(items)
  return [('[COLOR aqua]Cristal Azul, Productoras:[COLOR white] ('+str(numero_total)+')', ' ', 'https://i.imgur.com/5kY0BRB.png')] + sorted(items) + [('[COLOR white]No hay mas resultados...', ' ', 'https://i.imgur.com/5kY0BRB.png')]
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist.param2]'
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data, Cookie_Jar, m,url=url):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = '(?s)"item movies">.*?href="(.*?)".*?src="(.*?)".*?alt="(.*?)".*?p>(.*?)<.*?span>.(.*?)<'
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    try:
        cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
        response = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
        response = six.ensure_str(response)
        data = re.findall(patron, response)
    except:
        response = 'NADA_LOGUEO'
    contador = 0
    while 'NADA_LOGUEO' in response or 'Cloudflare Ray ID:' in response or 'Olvidaste tu contrase' in response:
        try:
            cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
            response = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
            response = six.ensure_str(response)
            data = re.findall(patron, response)
        except:
            response = 'NADA_LOGUEO'
        contador += 1
        if 10 == contador:
            return [(' ', 'https://i.imgur.com/r6aXooD.jpg', ' ', '[COLOR white]Web en Mantenimiento', ' ')]
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        url = item[0]
        imagen = item[1]
        titulo = item[2]
        titulo = six.ensure_str(titulo).replace('á', 'a').replace('é', 'e').replace('í', 'i').replace('ó', 'o').replace('ú', 'u').replace('Á', 'A').replace('É', 'E').replace('Ó', 'O').replace('Ú', 'U').replace('ñ', 'n')
        anio = item[3]
        categoria = item[4]
        video += [(titulo, imagen, url, anio, categoria)]
    return [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white] ('+str(numero_total)+')', ' ')] + sorted(video) + [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR white]No hay mas resultados...', ' ')]

  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,serie=serie):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = """(?s)class='se-c' data-season='(\d+)"""
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        video += [('Temporada', item)]
    return [('[COLOR aqua]Cristal Azul Temporadas '+serie, ' ')] + video + [('[COLOR white]No hay mas resultados...', ' ')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,temporada=temporada):
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    patron = '(?s)href="(.*?)".*?src="(.*?)".*?epst"(.*?)<.*?numerando">(.*?)<'
    data = re.findall(patron, response.split("class='se-c' data-season='"+temporada+"'")[1].split("</ul></div></div>")[0])
    numero_total = len(data)
    return [(' ', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados Capitulos: [COLOR white] ('+str(numero_total)+')')] + data + [(' ', ' ', ' ', '[COLOR white]No hay mas resultados...')]
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath

def GetLSProData(page_data,Cookie_Jar,m,url=url):

  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'streamspro' in id:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    patron = '(?s)href="(.*?)".*?src.*?>(.*?)<.*?>(.*?)<.*?languages/(.*?)[_\.]'
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response.split("linksUsers")[1].split("linksUsers")[0])
    try:
        enlaces_post = re.findall('(?s)playerItem.*?lang="(.*?)".*?Player="(.*?)".*?h3>(.*?)<.*?Calidad: (.*?)<', response)
        lista_post = []
        for item in enlaces_post:
            if 'powvideo' in item[2] or 'waaw' in item[2] or 'streamplay' in item[2] or 'vidtodo' in item[2]:
                url = ''
            else:
                lista_post += [(item[1], '[COLOR gold]E.Oficial '+item[2], item[3], item[0])]
    except:
        lista_post = []
    data = lista_post + data
    videos = []
    for item in data:
      if 'powvideo' in item[1] or 'waaw' in item[1] or 'streamplay' in item[1] or 'vidtodo' in item[1]:
          url = ''
      else:
          url = item[0]
          servidor = item[1]
          calidad = item[2]
          idioma = item[3]
          videos += [(url, servidor, calidad, idioma)]
    numero_total = len(videos)
    return [('http', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados links: [COLOR white] ('+str(numero_total)+')')] + videos + [('http', ' ', ' ', '[COLOR white]No hay mas resultados...')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath

def GetLSProData(page_data,Cookie_Jar,m,url=url,referer=referer):

  if 'http' in url:
    return url
  else:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia )
    patron = "src='(.*?)'"
    data = "------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"_method\"\r\n\r\ngetPlayer\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"id\"\r\n\r\n" + url + "\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"width\"\r\n\r\n601\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"height\"\r\n\r\n540\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE--\r\n"
    try:
        cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
        #response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
        response = requests.get('https://playdede.com/embed.php?id='+url+'&width=601&height=540', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}).text
        response = six.ensure_str(response)
        url_post = re.findall(patron, response)[0]
    except:
        response = 'NADA_LOGUEO'
    contador = 0
    while 'NADA_LOGUEO' in response or 'Cloudflare Ray ID:' in response or 'Olvidaste tu contrase' in response:
        try:
            cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
            response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
            response = six.ensure_str(response)
            url_post = re.findall(patron, response)[0]
        except:
            response = 'NADA_LOGUEO'
        contador += 1
        if 10 == contador:
            break
    ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
    open(ArchivoDestino + 'html.txt','wb').write(six.ensure_binary(cookie+'*'+str(contador)+'*'+response))
    return url_post.replace('\/', '/')
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
import re,requests,resolveurl,cfscrape,six
from kodi_six import xbmc,xbmcaddon,xbmcgui
from six.moves import urllib_parse
from resources.lib.megaserver import Client
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
def GetLSProData(page_data,Cookie_Jar,m):
    pasta = requests.get('https://pastebin.com/raw/WbE5acSW', verify=False).text
    return six.ensure_str(pasta)
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/S1r1T5Y.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>













<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]sERIES [COLOR white]PRODUCTORAS[/COLOR]</title>
<link>$doregex[makelist]</link>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist.param1][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>[makelist.param3]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
def GetLSProData(page_data,Cookie_Jar,m):#CpRdIsSaTvAmL
  response = requests.get('https://pastebin.com/raw/mRDFTn7Y', verify=False).text
  items = re.findall('(?s)"titulo":"(.*?)".*?"url":"(.*?)".*?"imagen":"(.*?)"', response)
  numero_total = len(items)
  return [('[COLOR aqua]Cristal Azul, Productoras:[COLOR white] ('+str(numero_total)+')', ' ', 'https://i.imgur.com/5kY0BRB.png')] + sorted(items) + [('[COLOR white]No hay mas resultados...', ' ', 'https://i.imgur.com/5kY0BRB.png')]
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist.param2]'
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data, Cookie_Jar, m,url=url):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = '(?s)"item movies">.*?href="(.*?)".*?src="(.*?)".*?alt="(.*?)".*?p>(.*?)<.*?span>.(.*?)<'
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    try:
        cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
        response = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
        response = six.ensure_str(response)
        data = re.findall(patron, response)
    except:
        response = 'NADA_LOGUEO'
    contador = 0
    while 'NADA_LOGUEO' in response or 'Cloudflare Ray ID:' in response or 'Olvidaste tu contrase' in response:
        try:
            cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
            response = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
            response = six.ensure_str(response)
            data = re.findall(patron, response)
        except:
            response = 'NADA_LOGUEO'
        contador += 1
        if 10 == contador:
            return [(' ', 'https://i.imgur.com/r6aXooD.jpg', ' ', '[COLOR white]Web en Mantenimiento', ' ')]
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        url = item[0]
        imagen = item[1]
        titulo = item[2]
        titulo = six.ensure_str(titulo).replace('á', 'a').replace('é', 'e').replace('í', 'i').replace('ó', 'o').replace('ú', 'u').replace('Á', 'A').replace('É', 'E').replace('Ó', 'O').replace('Ú', 'U').replace('ñ', 'n')
        anio = item[3]
        categoria = item[4]
        video += [(titulo, imagen, url, anio, categoria)]
    return [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white] ('+str(numero_total)+')', ' ')] + sorted(video) + [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR white]No hay mas resultados...', ' ')]

  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,serie=serie):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = """(?s)class='se-c' data-season='(\d+)"""
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        video += [('Temporada', item)]
    return [('[COLOR aqua]Cristal Azul Temporadas '+serie, ' ')] + video + [('[COLOR white]No hay mas resultados...', ' ')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,temporada=temporada):
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    patron = '(?s)href="(.*?)".*?src="(.*?)".*?epst"(.*?)<.*?numerando">(.*?)<'
    data = re.findall(patron, response.split("class='se-c' data-season='"+temporada+"'")[1].split("</ul></div></div>")[0])
    numero_total = len(data)
    return [(' ', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados Capitulos: [COLOR white] ('+str(numero_total)+')')] + data + [(' ', ' ', ' ', '[COLOR white]No hay mas resultados...')]
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url):

  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    patron = '(?s)href="(.*?)".*?src.*?>(.*?)<.*?>(.*?)<.*?languages/(.*?)[_\.]'
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response.split("linksUsers")[1].split("linksUsers")[0])
    try:
        enlaces_post = re.findall('(?s)playerItem.*?lang="(.*?)".*?Player="(.*?)".*?h3>(.*?)<.*?Calidad: (.*?)<', response)
        lista_post = []
        for item in enlaces_post:
            if 'powvideo' in item[2] or 'waaw' in item[2] or 'streamplay' in item[2] or 'vidtodo' in item[2]:
                url = ''
            else:
                lista_post += [(item[1], item[2], item[3], item[0])]
    except:
        lista_post = []
    data = lista_post + data
    videos = []
    for item in data:
      if 'powvideo' in item[0] or 'waaw' in item[0] or 'streamplay' in item[0] or 'vidtodo' in item[0]:
          url = ''
      else:
          url = item[0]
          servidor = item[1]
          calidad = item[2]
          idioma = item[3]
          videos += [(url, servidor, calidad, idioma)]
    numero_total = len(videos)
    return [('http', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados links: [COLOR white] ('+str(numero_total)+')')] + videos + [('http', ' ', ' ', '[COLOR white]No hay mas resultados...')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
def GetLSProData(page_data,Cookie_Jar,m,url=url,referer=referer):

  if 'http' in url:
    return url
  else:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    patron = "src='(.*?)'"
    data = "------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"_method\"\r\n\r\ngetPlayer\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"id\"\r\n\r\n" + url + "\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"width\"\r\n\r\n601\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"height\"\r\n\r\n540\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE--\r\n"
    try:
        cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
        response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
        response = six.ensure_str(response)
        url_post = re.findall(patron, response)[0]
    except:
        response = 'NADA_LOGUEO'
    contador = 0
    while 'NADA_LOGUEO' in response or 'Cloudflare Ray ID:' in response or 'Olvidaste tu contrase' in response:
        try:
            cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
            response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
            response = six.ensure_str(response)
            url_post = re.findall(patron, response)[0]
        except:
            response = 'NADA_LOGUEO'
        contador += 1
        if 10 == contador:
            break
    ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
    open(ArchivoDestino + 'html.txt','wb').write(six.ensure_binary(cookie+'*'+str(contador)+'*'+response))
    return url_post.replace('\/', '/')
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
import re,requests,resolveurl,cfscrape,six
from kodi_six import xbmc,xbmcaddon,xbmcgui
from six.moves import urllib_parse
from resources.lib.megaserver import Client
from resolveurl.plugins.lib import jsunpack
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cLrJIhsDApL
 
  if 'gamovideo' in url:
    try:
        if 'https' in url:
            url = url.replace('https','http')
        ua = AgenteCristal()
        headers = {"User-Agent": ua,"Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8","Accept-Language": "es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3","Alt-Used": "gamovideo.com:443","Upgrade-Insecure-Requests": "1","Cache-Control": "max-age=0", "cookie": "gam=1"}
        source = requests.get(url, headers=headers, verify=False).text
        source = six.ensure_str(source)
        #ArchivoDestino = xbmc.translatePath('special://home/addons/plugin.video.cristalazul/')
        #open(ArchivoDestino + 'html.txt','wb').write(source)
        pack = re.findall('javascript.*?(eval\(function\(p,a,c,k,e,d.*)', source)[0]
        unpack = six.ensure_str(jsunpack.unpack(pack)).replace('\\', '')    
        u = re.findall('file:\s*"(http.*?)"', unpack)[0]
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
            #u = xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold]enlace caido [/COLOR], 4000)")
    return u
  elif '.torrent' in url or 'magnet:' in url:
    addon = xbmcaddon.Addon('plugin.video.cristalazul')
    elecion_torrent = addon.getSetting('TodosTorrent')
    if 'Ninguno' == elecion_torrent:
      import xbmcgui
      dialog = xbmcgui.Dialog()
      ret = dialog.select('Reproducir con:', ['[COLOR white]Quasar[/COLOR]', '[COLOR white]Torrenter[/COLOR]', '[COLOR white]Elementum[/COLOR]', '[COLOR white]Torrentin[/COLOR]'])
      channels = [
   'plugin://plugin.video.quasar/play?uri='+url+'&image=imageurl&player=0',
   'plugin://plugin.video.torrenter/?action=playSTRM&url='+url+'&image=imageurl&player=0',
   'plugin://plugin.video.elementum/play?uri='+url+'&image=imageurl&player=0',
   'plugin://plugin.video.torrentin/?uri='+url+'&image=imageurl&player=0']  
      return channels[ret]
    elif 'Quasar' == elecion_torrent:
      return 'plugin://plugin.video.quasar/play?uri='+url+'&image=imageurl&player=0'
    elif 'Torrentin' == elecion_torrent:
      return 'plugin://plugin.video.torrentin/?uri='+url+'&image=imageurl&player=0'
    elif 'Torrenter' == elecion_torrent:
      return 'plugin://plugin.video.torrenter/?action=playSTRM&url='+url+'&image=imageurl&player=0'
    else:
      return 'plugin://plugin.video.elementum/play?uri='+url+'&image=imageurl&player=0'
  elif 'supervideo.tv' in url:
    try:
        ua = AgenteCristal()
        s=requests.session()
        rsource=s.get(url, headers={'User-Agent': ua},  verify=False)
        source=s.get(url, headers={'User-Agent': ua},  verify=False)
        pack = re.findall('(eval\(function\(p,a,c,k,e,d.*)', six.ensure_str(source.text))[0]
        unpack=jsunpack.unpack(pack)
        u = re.findall('file:\s*"(http.{0,100}mp4)"', unpack)[0]+'|User-Agent='+ua
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'mixdrop' in url:
    url = url.replace('/f/','/e/').replace('.co','.to')
    try:
        ua = AgenteCristal()
        scraper = cfscrape.create_scraper()
        source=scraper.get(url, headers={'User-Agent':ua}, verify=False)
        source_text = six.ensure_str(source.text)
        if 'eval(function' in source_text:
           pack = re.findall('(eval\(function\(p,a,c,k,e,d.*)', source_text)[0]
           unpack=jsunpack.unpack(pack)
           url2 = 'https:' + re.findall('wurl="(.*?)"', unpack)[0]
           servidor_inicial = re.findall('//(.*?)/',url2)[0]
           cambio_servidor = re.findall('ipr=(.*?)"', six.ensure_str(requests.post('http://www.mon-ip.com/direccion-ip-sitio.php', headers={'user-agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:81.0) Gecko/20100101 Firefox/81.0','referer':'http://www.mon-ip.com/direccion-ip-sitio.php','x-requested-with':'XMLHttpRequest'},data={'add':'1','domaine':servidor_inicial,'mss':''}).text))[0]
           servidor_final = url2.replace(servidor_inicial,cambio_servidor)
           return servidor_final
        else:
          source2 = 'https://mixdrop.to' + re.findall('"(.*?)\"',source_text)[0] + 'https://mixdrop.to/'
          source3 = scraper.get(source2, headers={'User-Agent':ua}, verify=False)
          pack = re.findall('(eval\(function\(p,a,c,k,e,d.*)', six.ensure_str(source3.text))[0]
          unpack=jsunpack.unpack(pack)
          return 'https:' + re.findall('wurl="(.*?)"', unpack)[0]
    except:
      try:
          u = resolveurl.resolve(url)
      except Exception as e:
          u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
      return u

  elif 'google' in url:
    try:
        id = re.findall("([-\w]{25,})", url)[0]
        u = 'plugin://plugin.video.gdrive/?mode=video&amp;instance=gdrive1&amp;filename=' + id + '&amp;content_type=video'
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u

  elif 'dailymotion' in url:
    try:
        url = 'https://www.dailymotion.com/embed/video/'+url.split('/')[-1]
        m3u8 = re.findall('URL"."url":"(.*?)"',six.ensure_str(requests.get(url,headers={'user-agent':'ipad'},verify=False).content))[0].replace('\/', '/')
        return re.findall('\s*(h.*?)\s',six.ensure_str(requests.get(m3u8,headers={'user-agent':'ipad'},verify=False).content))[-1]
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u

  elif 'mega' in url:
    try:
      video_urls = []


      c = Client(url=url.replace('/file/','/embed#!').replace('/embed/','/embed#!').replace('#!#!','#!'), 
      is_playing_fnc=xbmc.Player().isPlaying())
      files = c.get_files()

      if len(files) > 5:
        media_url = c.get_play_list()
        video_urls.append([get_filename_from_url(media_url)[-4:], media_url])
      else:
        for f in files:
            media_url = f["url"]
            video_urls.append([get_filename_from_url(media_url)[-4:], media_url])

      return video_urls[0][1]
    except Exception as e:
        return xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))

  elif 'clipwatching' in url:
    try:
        ua = AgenteCristal()
        u = re.findall('sources:.*?"(.*?)"',six.ensure_str(requests.get(url,headers={'user-agent':ua},verify=False).content))[0] + '|User-Agent=' + AgenteCristal()
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'cloudvideo' in url:
    try:
        response = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://cloudvideo.tv/'}, timeout=10, verify=False).content
        response = six.ensure_str(response)
        datos = re.findall('(?s)name="op" value="(.*?)".*?name="usr_login" value="(.*?)".*?name="id" value="(.*?)".*?name="fname" value="(.*?)".*?name="hash" value="(.*?)".*?name="imhuman" value="(.*?)"', response)
        source=requests.post(url,headers={'User-Agent':'Mozilla/5.0','referer':url},data={'op':datos[0][0],'usr_login':datos[0][1],'id':datos[0][2],'fname':urllib_parse.quote_plus(datos[0][3]),'referer':'','hash':datos[0][4],'imhuman':urllib_parse.quote_plus(datos[0][5])}).text
        source = six.ensure_str(source)
        pack = re.findall('javascript.*?(eval\(function\(p,a,c,k,e,d.*)', source)[0]
        unpack=jsunpack.unpack(pack)
        xbmc.log('miraaaaaaa: %s' % (unpack), xbmc.LOGNOTICE)
        u = re.findall('src:"(.*?)"', unpack)[0]
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'vidoza' in url:
    try:
        mozhdr4 = {'User-Agent': AgenteCristal(), 'Referer': 'http://www.seriespapaya.net/'}
        html4 = requests.get(url, headers=mozhdr4, verify=False).text
        html4 = six.ensure_src(html4)
        u = re.findall('["\']?\s*(?:file|src)\s*["\']?\s*[:=,]?\s*["\'](?P<url>[^"\']+)(?:[^}>\]]+)["\']?\s*res', html4)[0] + '|User-Agent=' + AgenteCristal()
    except:
        u = xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold]enlace caido [/COLOR], 4000)")
    return u
  elif 'gloria' in url:
    try:
        mozhdr4 = {'User-Agent': AgenteCristal(), 'Referer': 'http://www.seriespapaya.net/'}
        html4 = requests.get(url, headers=mozhdr4, verify=False).text
        html4 = six.ensure_src(html4)
        u = re.findall('(?:file|src)\s*=["\'](http.*?)["\']', html4)[0].replace('&amp;','&') + '|User-Agent=' + AgenteCristal()
    except Exception as e:
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'videobin' in url:
    try:
        u = url.replace('.html', '.ogg') + '|User-Agent=' + AgenteCristal()
    except Exception as e:
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'ulozto' in url:
    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0',
            'Referer': 'https://uloz.to/'}
    page = requests.get(url, headers=headers, cookies=Cookie_Jar).content
    page = six.ensure_src(page)
    try:
      eurl = re.findall('getPreviewURL":"(.*?)"', page)[0]
      eurl = 'https://uloz.to' + eurl.replace('\/','/')
      url = requests.get(eurl, headers=headers, cookies=Cookie_Jar).json()['streamPreviewUrl']
      u='{}|{}'.format(url, urllib_parse.urlencode(headers))
    except:
      try:
        u = 'https:' + re.findall('URL":"(.*?)"', page)[0].replace('\/','/')
      except Exception as e:
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'flixplayer' in url:
    try:
        ua = AgenteCristal()
        u = re.findall('link":"(.*?mp4)"',six.ensure_str(requests.get(url,headers={'user-agent':ua},verify=False).content))[0] + '|User-Agent=' + AgenteCristal()
    except:
        try:
            Link = re.findall('link":"(.*?)"',six.ensure_str(requests.get(url,headers={'user-agent':ua},verify=False).content))[0].replace('embed-','')
            u = resolveurl.resolve(Link)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'openload' in url:
    try:
        mozhdr = {'User-Agent': AgenteCristal(), 'Referer': 'http://www.seriespapaya.net/'}
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold]Servidor Openload muerto [/COLOR], 4000)")
    except:
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold]Servidor Openload muerto [/COLOR], 4000)")
    return u
  elif 'uptobox' in url:
    try:
        mozhdr3 = {'User-Agent': AgenteCristal(), 'Referer': 'http://www.seriespapaya.net/'}
        html3 = requests.get(url, headers=mozhdr3, verify=False).text
        html3 = six.ensuere_str(html3)
        part1 = re.findall('(by its owner|uploaded with File Uploader)', html3)[0]
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    except:
        H = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul_[COLOR gold]Uptobox[/COLOR],[COLOR gold]Limite 120minutos diarios con esta ip[/COLOR], 5000)")
        u = resolveurl.resolve(url)
    return u
  else:
    try:
        u = resolveurl.resolve(url)
    except:
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u

def get_filename_from_url(url=url.replace('/file/','/embed#!').replace('/embed/','/embed#!').replace('#!#!','#!')):
    parsed_url = urllib_parse.urlparse(url)
    try:
        filename = parsed_url.path
    except:
        if len(parsed_url) >= 4:
            filename = parsed_url[2]
        else:
            filename = ""

    if "/" in filename:
        filename = filename.split("/")[-1]

    return filename

def AgenteCristal():
    url= 'https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/AgenteCristal'
    agente = {'User-Agent': 'Mozilla/5.0'}
    extraer = requests.get(url, headers=agente)
    AgenteCristal = re.findall("(.*?)CRISTAL", six.ensure_str(extraer.text))[0]
    return AgenteCristal
 
]]></expres>
            <page></page>
        </regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
def GetLSProData(page_data,Cookie_Jar,m):
    pasta = requests.get('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo', verify=False).text
    return six.ensure_str(pasta)
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/S1r1T5Y.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>








</items>
