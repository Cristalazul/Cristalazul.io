<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<item>
<title>[COLOR orangered]          [COLOR aqua] TV SPAIN ESTABLE [COLOR orangered]          [/COLOR]</title>
<externallink>$$LSProEncKey= $$</externallink>
<link>na</link>
<thumbnail>https://i.imgur.com/knrTdP2.png</thumbnail>  
<fanart>https://i.imgur.com/fp05txz.jpg</fanart>
</item>



<item>
<title>[COLOR orangered]Chikiry_Cristal [COLOR white]Movistar Lista 1 Pro[/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR lightskyblue][CAPITALIZE][makelist2.param1][/CAPITALIZE] - [COLOR white]$doregex[emitiendo][/COLOR]</title>
<link>$doregex[link_inteligente]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)"name": "(.*?)".*?"image": "(.*?)".*?"url": "(.*?)".*?"embed": "(.*?)']]></expres>
<page>https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/TV/base_canales</page>
</regex>
<regex>
<name>emitiendo</name>
<expres><![CDATA[(?s)[makelist2.param4].*?ahora">\s*(.*?)<]]></expres>
<page>http://www.formulatv.com/programacion/movistarplus/</page>
<agent>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:81.0) Gecko/20100101 Firefox/81.0</agent>
<referer>www.formulatv.com</referer>
</regex>
<regex>
<name>link_inteligente</name>
<expres><![CDATA[#$pyFunction
title = '[makelist2.param1]'
url = '[makelist2.param3]'
import re,requests,xbmc
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex> 
<thumbnail>https://i.imgur.com/AgY8dgR.png</thumbnail>  
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
</item>





<item>
<title>[COLOR lightskyblue][COLOR orangered]Chikiry_Cristal [COLOR white]Premium [COLOR gold](VPN si no os va)[/COLOR]</title>
<link>$doregex[A]</link>
<regex>
<name>A</name>
<listrepeat><![CDATA[
<title>[A.param1]</title>
<thumbnail>[A.param3]</thumbnail>
<fanart>https://i.imgur.com/yNfc6m7.jpg</fanart>
<link>$doregex[busca]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUJBQUFBQW9BQUFCREFBQUFjeUlBQUFCa0dRQmtHZ0JrR3dCa0hBQmtIUUJrSGdCa0h3QmtJQUJuQ0FCOUF3QjhBd0JUS0NFQUFBQk9jMUVBQUFCYlEwOU1UMUlnWjI5c1pGMHFLaUJiTDBOUFRFOVNYVnREVDB4UFVpQjNhR2wwWlYxSlRrWlBVazFCUTBsUFRpQkpUVkJQVWxSQlRsUkZXME5QVEU5U0lHZHZiR1JkSUNvcVd5OURUMHhQVWwxMEN3QUFBR2x1Wm05eWJXRmphVzl1Y3g4QUFBQm9kSFJ3Y3pvdkwya3VhVzFuZFhJdVkyOXRMMW95ZFVRME4yRXVhbkJuY3pzQUFBQmJRMDlNVDFJZ2IzSmhibWRsY21Wa1hTc2dXME5QVEU5U0lIZG9hWFJsWFVOQlRrRk1SVk1nUkVVZ1JFVlFUMUpVUlZOYkwwTlBURTlTWFhRSUFBQUFaR1Z3YjNKMFpYTnpId0FBQUdoMGRIQnpPaTh2YVM1cGJXZDFjaTVqYjIwdldtTkhOVmQyZFM1cWNHZHpNZ0FBQUZ0RFQweFBVaUJ2Y21GdVoyVnlaV1JkS3lCYlEwOU1UMUlnZDJocGRHVmRWRllnVUZKRlRVbFZUVnN2UTA5TVQxSmRkQWtBQUFCMGRuQnlaVzFwZFcxekh3QUFBR2gwZEhCek9pOHZhUzVwYldkMWNpNWpiMjB2UVdoRGIyZFVSQzVxY0dkekt3QUFBRnREVDB4UFVpQnZjbUZ1WjJWeVpXUmRLeUJiUTA5TVQxSWdkMmhwZEdWZFZFUlVXeTlEVDB4UFVsMTBBd0FBQUhSa2RITWZBQUFBYUhSMGNITTZMeTlwTG1sdFozVnlMbU52YlM5YWRUTmFkRVJSTG1wd1ozTXpBQUFBVzBOUFRFOVNJRzl5WVc1blpYSmxaRjBySUZ0RFQweFBVaUIzYUdsMFpWMVVWaUJKVGtaQlRsUkpURnN2UTA5TVQxSmRkQWdBQUFCcGJtWmhiblJwYkhNZkFBQUFhSFIwY0hNNkx5OXBMbWx0WjNWeUxtTnZiUzgzYVVkRmJFRTBMbXB3WjNNL0FBQUFXME5QVEU5U0lHOXlZVzVuWlhKbFpGMHJJRnREVDB4UFVpQjNhR2wwWlYxRFFVNUJURVZUSUVSRklFUlBRMVZOUlU1VVFVeEZVMXN2UTA5TVQxSmRkQXdBQUFCa2IyTjFiV1Z1ZEdGc1pYTnpId0FBQUdoMGRIQnpPaTh2YVM1cGJXZDFjaTVqYjIwdmFIcENhV2xYU2k1cWNHZHpNUUFBQUZ0RFQweFBVaUJ2Y21GdVoyVnlaV1JkS3lCYlEwOU1UMUlnZDJocGRHVmRWRUZSVlVsTVRFRlRXeTlEVDB4UFVsMTBDQUFBQUhSaGNYVnBiR3hoY3g4QUFBQm9kSFJ3Y3pvdkwya3VhVzFuZFhJdVkyOXRMMmRtY0ZObFNHTXVhbkJuY3k4QUFBQmJRMDlNVDFJZ2IzSmhibWRsY21Wa1hTc2dXME5QVEU5U0lIZG9hWFJsWFV4QlZFbE9UMU5iTDBOUFRFOVNYWFFHQUFBQWJHRjBhVzV2Y3g4QUFBQm9kSFJ3Y3pvdkwya3VhVzFuZFhJdVkyOXRMemh1U1hCVGJqTXVhbkJuS0FNQUFBQnpVUUFBQUZ0RFQweFBVaUJuYjJ4a1hTb3FJRnN2UTA5TVQxSmRXME5QVEU5U0lIZG9hWFJsWFVsT1JrOVNUVUZEU1U5T0lFbE5VRTlTVkVGT1ZFVmJRMDlNVDFJZ1oyOXNaRjBnS2lwYkwwTlBURTlTWFZJQUFBQUFjeDhBQUFCb2RIUndjem92TDJrdWFXMW5kWEl1WTI5dEwxb3lkVVEwTjJFdWFuQm5LQU1BQUFCek93QUFBRnREVDB4UFVpQnZjbUZ1WjJWeVpXUmRLeUJiUTA5TVQxSWdkMmhwZEdWZFEwRk9RVXhGVXlCRVJTQkVSVkJQVWxSRlUxc3ZRMDlNVDFKZFVnRUFBQUJ6SHdBQUFHaDBkSEJ6T2k4dmFTNXBiV2QxY2k1amIyMHZXbU5ITlZkMmRTNXFjR2NvQXdBQUFITXlBQUFBVzBOUFRFOVNJRzl5WVc1blpYSmxaRjBySUZ0RFQweFBVaUIzYUdsMFpWMVVWaUJRVWtWTlNWVk5XeTlEVDB4UFVsMVNBZ0FBQUhNZkFBQUFhSFIwY0hNNkx5OXBMbWx0WjNWeUxtTnZiUzlCYUVOdloxUkVMbXB3WnlnREFBQUFjeXNBQUFCYlEwOU1UMUlnYjNKaGJtZGxjbVZrWFNzZ1cwTlBURTlTSUhkb2FYUmxYVlJFVkZzdlEwOU1UMUpkVWdNQUFBQnpId0FBQUdoMGRIQnpPaTh2YVM1cGJXZDFjaTVqYjIwdlduVXpXblJFVVM1cWNHY29Bd0FBQUhNekFBQUFXME5QVEU5U0lHOXlZVzVuWlhKbFpGMHJJRnREVDB4UFVpQjNhR2wwWlYxVVZpQkpUa1pCVGxSSlRGc3ZRMDlNVDFKZFVnUUFBQUJ6SHdBQUFHaDBkSEJ6T2k4dmFTNXBiV2QxY2k1amIyMHZOMmxIUld4Qk5DNXFjR2NvQXdBQUFITS9BQUFBVzBOUFRFOVNJRzl5WVc1blpYSmxaRjBySUZ0RFQweFBVaUIzYUdsMFpWMURRVTVCVEVWVElFUkZJRVJQUTFWTlJVNVVRVXhGVTFzdlEwOU1UMUpkVWdVQUFBQnpId0FBQUdoMGRIQnpPaTh2YVM1cGJXZDFjaTVqYjIwdmFIcENhV2xYU2k1cWNHY29Bd0FBQUhNeEFBQUFXME5QVEU5U0lHOXlZVzVuWlhKbFpGMHJJRnREVDB4UFVpQjNhR2wwWlYxVVFWRlZTVXhNUVZOYkwwTlBURTlTWFZJR0FBQUFjeDhBQUFCb2RIUndjem92TDJrdWFXMW5kWEl1WTI5dEwyZG1jRk5sU0dNdWFuQm5LQU1BQUFCekx3QUFBRnREVDB4UFVpQnZjbUZ1WjJWeVpXUmRLeUJiUTA5TVQxSWdkMmhwZEdWZFRFRlVTVTVQVTFzdlEwOU1UMUpkVWdjQUFBQnpId0FBQUdoMGRIQnpPaTh2YVM1cGJXZDFjaTVqYjIwdk9HNUpjRk51TXk1cWNHY29BQUFBQUNnRUFBQUFkQWtBQUFCd1lXZGxYMlJoZEdGMENnQUFBRU52YjJ0cFpWOUtZWEowQVFBQUFHMTBCUUFBQUdsMFpXMXpLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEF3QUFBQkhaWFJNVTFCeWIwUmhkR0VCQUFBQWN3UUFBQUFBQVI0QlRpZ0JBQUFBVWd3QUFBQW9BQUFBQUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUUlBQUFBUEcxdlpIVnNaVDRCQUFBQWN3QUFBQUE9IikpKQ=="))
]]></expres>
<page></page>
<agent></agent>
</regex>
<regex>
<name>busca</name>
<listrepeat><![CDATA[
<title>[COLOR white][busca.param1][/COLOR]</title>
<link>$doregex[plugin]$doregex[link_inteligente]</link>
<thumbnail>[busca.param2]<thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
elegir = '[A.param2]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>emitiendo</name>
<expres><![CDATA[(?s)[makelist2.param4].*?ahora">\s*(.*?)<]]></expres>
<page>http://www.formulatv.com/programacion/movistarplus/</page>
</regex>
<regex>
<name>link_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '[busca.param3]'
import re,requests,xbmc,xbmcaddon,resolveurl,cookielib,urllib,urllib2
from resolveurl.plugins.lib import jsunpack
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>plugin</name>
<expres><![CDATA[#$pyFunction
url = '[busca.param3]'
import re,requests,xbmc
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/rVVnm10.png</thumbnail>  
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
 </item>




<item>

<title>[COLOR orangered]Chikiry_Cristal [COLOR white]Tdt[/COLOR]</title>
<externallink>https://www.tdtchannels.com/lists/tv.m3u8</externallink>
<link>na</link>
<thumbnail>https://i.imgur.com/kl3p3MV.png</thumbnail>  
<fanart>https://i.imgur.com/fp05txz.jpg</fanart>
</item>




<item>
<title>[COLOR orangered]          [COLOR aqua] TV SPAIN NO ESTABLE [COLOR orangered]          [/COLOR]</title>
<externallink>$$LSProEncKey= $$</externallink>
<link>na</link>
<thumbnail>https://i.imgur.com/ZztDztR.png</thumbnail>  
<fanart>https://i.imgur.com/fp05txz.jpg</fanart>
</item>



<item> 
<title>[COLOR orangered]Chikiry_Cristal [COLOR white]Channels_Spain The Cat [COLOR gold]En mantenimiento[/COLOR]</title> 

<thumbnail>https://i.imgur.com/RRMufBH.png</thumbnail> 
<fanart>https://i.imgur.com/fp05txz.jpg</fanart>
</item>




<item>
<title>[COLOR orangered]Chikiry_Cristal [COLOR white]Multilistas España [COLOR gold]En mantenimiento[/COLOR]</title>

<thumbnail>https://i.imgur.com/RJnHTtC.png</thumbnail>
<fanart>https://i.imgur.com/fp05txz.jpg</fanart>
</item>



