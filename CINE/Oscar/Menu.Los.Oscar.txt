<?xml version="1.0" encoding="UTF-8" standalone="yes"?>



<item>

<title>[COLOR red]          And The Oscar goes to...[/COLOR]</title>

<link>cristalazul</link>

<thumbnail>https://i.imgur.com/mk7GGeT.jpg</thumbnail>
<fanart>https://i.imgur.com/3z5tAFE.jpg</fanart>
</item>




<item>
<title>[COLOR gold]OSCAR [COLOR white]Peliculas Ganadoras [COLOR gold](1927-2019) [COLOR chartreuse][/COLOR]</title>
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
title = '[c.param1]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]
]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/mk7GGeT.jpg</thumbnail>
<fanart>https://i.imgur.com/RsLj1lh.jpg</fanart>
</item>







<item>
<title>[COLOR gold]OSCAR [/COLOR] [COLOR white]Canciones Ganadoras [COLOR gold](1927-2019)[/COLOR]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR yellow]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/3z5tAFE.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=qMdwFkO8xA0&list=PL0B1_5rxQV_88vrkM210EQpHDKs25XA60'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/mk7GGeT.jpg</thumbnail>
<fanart>https://i.imgur.com/3z5tAFE.jpg</fanart>
</item>



 
<item>
<title>[COLOR gold]OSCAR [COLOR white]Mejor Actor [COLOR gold](1927-2017)[/COLOR]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=tXzcblMsNag'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/mk7GGeT.jpg</thumbnail>
<fanart>https://i.imgur.com/3z5tAFE.jpg</fanart>
</item>




<item>
<title>[COLOR gold]OSCAR [COLOR white]Mejor Actriz [COLOR gold](1927-2017)[/COLOR]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=8wM40Bt31pY'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/mk7GGeT.jpg</thumbnail>
<fanart>https://i.imgur.com/3z5tAFE.jpg</fanart>
</item>



<item>
<title>[COLOR gold]OSCAR [COLOR white]Momentazos [COLOR gold][/COLOR]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR yellow]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/3z5tAFE.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=3M0k8-pMMgI&list=PLWVTnUUgGFJDTi4OJuJNSoZQ2i3PcAbHe'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/mk7GGeT.jpg</thumbnail>
<fanart>https://i.imgur.com/3z5tAFE.jpg</fanart>
</item>
