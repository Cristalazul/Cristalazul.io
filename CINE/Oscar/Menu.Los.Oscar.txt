<?xml version="1.0" encoding="UTF-8" standalone="yes"?>



<item>

<title>[COLOR red]          And The Oscar goes to...[/COLOR]</title>

<link>cristalazul</link>

<thumbnail>https://i.imgur.com/mk7GGeT.jpg</thumbnail>
<fanart>https://i.imgur.com/3z5tAFE.jpg</fanart>
</item>




<item>
<title>[COLOR gold]OSCAR [COLOR white]Peliculas Ganadoras [COLOR gold](1927-2019) [COLOR chartreuse][/COLOR]</title>
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
title = '[c.param1]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MFdSQUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT2JVa3lXa1JWZDAxNlVYcFBSRmsxVGxSWk0wNXFXbWhPYWxreFRWUktiVTE2V1RCT1ZGRjRUa1JuZWs5VVkzaE9SR015V1ZSVmVFNUVWVEZQUkZKclRtcFJlazFFVW1oT2JVVXdUVlJaZWs1RWF6Qk9hbFUwVG1wTk0wOUVZM2RPUjFreFRWUmFhMDVIUlRGTlZGSnNUWHByTWxscVZUSk9hbXN4VFhwVk1VNXRUVE5QUkZFeFRsUlZNMDFFVFhoT1IxRXdXWHBqZVUxNmEzbFphbU15VG1wbk1rNXFVbXRPUjBrelRrUmpNVTVIVlROT2VsVXpUa1JGTUZwcVdYcE5la0V5VDBSVmVFNVhSVEJPVkZWNlRYcG5NazVVVlhkT2Vsa3pUMVJWTWs1cVdYcE5lbU4zVG5wcmVWcHFXbXRPYWxVd1dsUk5OVTF0V1RCYWFrMTZUWHBqZWs1cVdYcE9la0V6VFVSTk5VMXRXWGxaYW1Nd1RrZFJNVTlFVW0xTmVrMHdUbXBLYVUxdFdUTk9WRnBzVG0xVk1scFVUWGxOZWxWNlRWUk5lVTR5UlROWlZGa3hUbnBaZWs1VVl6Vk9SMWt6VG1wTk1VMXRTVEpPYWxVeVRtMVZlVnBxVFROT1ZFVXlXVlJqTWs1NmEzcE5lazE2VFcxWmVWbHFZM2hPVkdONlRrUlpNVTE2WXpKT1JHTXhUWHBWZVZwcVNtMU5lazB3V1hwVmQwMTZZM3BPZWswMFRYcFJNbGxxVFhwT2VrbDZUbXBhYWs1VVNUTk9hbFYzVFhwUk1VMTZaR2hPUjAweldWUk5lazVFWnpCYVZFMDBUbnByTTA1NlVtbE9WRkV6VDBSU2FrNTZRVEJhVkZFelRtcGpNazFxVW10T2Vtc3pUbnBaZVU1VVZYbFphbU15VFhwWmVrNUVTbTFOZW1jd1QwUmFhazE2V1ROWlZFMTVUbnBCZWs1VVVUSk9iVWt5VDFSYWJFNUVTWHBOVkVwdFRsUm5NVTVFWXpWT2FrVXlXWHBqTVU1cVZUQk5hbFUxVG0xVk1GbDZXWGhPYlZrelQxUmFiRTVxV1hsWmFsSnRUbXBOZVZscVRYZE9SMFY2VG1wTk1VNXRUVEZPZW1Nd1RsUlJNbGxVWkdoT2Fsa3pUa1JTYWsxNmEzcE9SRmt4VG0xRk0wMTZUWGhPVkdjelQwUlpOVTR5UlhwUFZFMHpUbFJuTVU5RVVteE9lazB5V2tSTmQwNXFVVE5PUkUxNVRrZE5NMDVxVlROT2VsRXlXa1JaTVU1RWF6Tk9hazEzVFhwUk1VMTZWbWhPUkZFeVdsUmpNMDVIV1ROT1JGbDRUakpGTUU5VVVUQk9SRkY2VGxSTk0wMTZTVE5OUkZsNFRtcFZNMDVFV1hoT2FsRXpXVlJOZDAxNldYbFphazE2VG5wUk1rMVVXWHBPUkd0NlRucFNiVTVxV1ROWlZGa3dUbXBWTVZsVVVtaE9la1V3VG5wak5VNUhUVEpOZWxKc1RYcFJNVTU2VW0xT1YwVjZUbXBaTVU1NlRUSlphbU15VGtSTk1FNTZXVEpPZWxFeFRsUmFiRTU2UlRGTlZHTjRUbTFWZWs1VVdtdE5iVWt3V1hwWk1FNUhSWHBPVkZwclRYcEpNVTVFV1hoT2FsRXpUWHBOTWs1dFZUSk5hbFV6VGtSck0wMUVWVE5PYWswd1dXcGFiRTU2U1RGT2VsWm9UbnBCTUZwcVpHaE9SMUV6VFZSamVrNXFSVEpOYW1Sb1RrZFpNVTE2WTNkT2VtY3dUa1JOTlU1RVl6RlpWRXBwVGxSWk0wOUVXVFZPUkdkNVdtcFZOVTE2WXpKYWFsbDZUa2RKTVU1RVkzaE9SMVV5VDFSWmVFNUhXVEZaVkUweFRYcEJNbGxVWXpGT2VsVjZUbnBaTkU1RVl6Tk9WRmt6VGtSTk0xbFVUVEJOZWxFeldWUmplRTVVVVRKTlZGSnFUbnBOTWxwRVl6Uk9SR2Q2VFhwWmVrNXRVWHBPUkZKcVRtcFZlazFxV1RCT1IwVjZUbXBSZUU1NlNUTlpWRnBzVGxSVmVrOUVXWGxPYWxrd1RYcFNiVTU2VFhwT1ZGcHFUa1JOTTAxcVRUTk9iVVV5V2xSYWJFNVVVVEZQVkUxNFRtcHJNbHBVVW0xT2FtY3lUWHBWZWs1SFRUSlphbU42VFhwQk1rMTZUVEpOZWxWNlRtcE5NazVIVVhsYWFrMTNUbXBKZWsxNldYbE9lazB6V1ZSWmVrMTZZek5OUkZVd1RucHJlazFxV1hoT1ZFMHpUMFJqTlU1SFdUSk5WRkpwVG5wVmVrNXFWbWhPYWxVeFdWUlJNMDU2VlROT1JGcHBUbTFOTUU5VVdYcE9iVkV6VGxSWk0wNUhWWHBOZWxWM1RqSkZlazFxWXpST2VsVjVXV3BWTUUxNlJUSmFWR00wVFhwak1VNTZUWGhPZWtreVRYcGpNRTVFVVRCTmFsa3hUbXBWTUZsVVdteE9iVmt5VFZSS2JVNXFhM3BOYWsxM1RucEpNRmxxV21sTmVtc3dUVlJOTTA1dFZYcFBSRkV4VG1wWk1rNUVVVFJPZWtreFRtcGplazU2YXpGTmVsbDVUbnBSTTAxVVVYcE5lbU15V2xSWmVVNXRUVEJhYWswMVRYcFJNazlVVVRGT1JGRjZUMVJqTWs1RVRUTk9lbHBvVG5wQmVrMUVXbWxPYlZVd1RWUlJNazE2WnpKUFJGa3hUWHBSTWsxNll6Uk9SR3N3VG1wTk5VNTZVVEpOZWxsNlRtcFJNRTVFVW1wT1ZFMHdUMVJLYlU1WFJUQk9SR041VG5wVk1GbHFVbWxPYWxreFdWUmthRTE2UVRKT2VscHNUbnBWTTA5RVVYbE9iVTE2VG1wTmVVNXFUVEpaZWswMVRrZEplVmxxV1RST2FtY3dXVlJWTWsxNll6Tk9lbFY0VFhwQk1FMXFTbTFPYWxFeFRYcEtiVTVxVVRCUFZGcHNUbFJKTWxsVVdYbE9hbU42VG1wVk1rNUhSWHBOZWxwb1RsUlpNRmw2V21wT2Fsa3pUVlJSTTA1dFZUSk5hbGw1VG0xUk1FOUVZekpPUjBreFRtcFNiVTU2U1hwTlZGcG9UbnBaZWs5RVkzaE9SMDB3VDBSUk5FNTZRVEpPZW1NeFRrUlJlazlVV1hsT1ZHc3hUV3BOTlUxNlVUQlBWRXB0VFhwTk1FMTZWVEZOZWtFeVQxUkthVTVIUlRCYVJGa3hUbFJSTUU1VVpHaE5iVWt6VG5wU2JFMTZhM3BOVkVwdFRucG5NazFxVFhwT1ZFVjZUa1JWTVU1NlozcE5hbVJvVFhwbk1FNUVVVFJPUkZreVRtcE5NRTVxWnpKUFZGcHJUWHBCTUUxcVdUSk9lbXN5V2xSak5VNHlSWHBOZWxVMFRucGpNVTFFVlRST2VsRXdUbFJXYUUxNll6Rk9lbU13VGtkUmVWbHFXVFJPYWxFeFRtcFNiRTU2VFhwT1ZGa3pUbnByZWs5VVVYbE5lbU42VDFSUmVrNVVaekJhUkZKclRtMU5NVTU2VlRKTmVsRXhUMFJOZVU1RVZUSk5hazAwVFhwak0wMTZZM2hPZWxVeFRrUmFhVTVxWjNwT2Fsa3pUbGRGZWsxRVZUVk5iVWt5VDBSTmVrNXFUVEJhYWxFelRucEZNRmxxVlRGT2VsRXpUVlJTYUU0eVJYcE9WRkV5VG1wVk1GbFVXVE5PUkZFeFQxUmpNRTE2U1RCTlZHTXlUWHBuTTFsVVVYaE9Na1V6VDFSTk1VNUVUVE5PYWswd1RucEZNVTFVV1hsTmJVa3dXVlJqTWs1cVl6Qk5la3B0VGtScmVrNTZXbWxPYW1NelRtcE5NRTVVVVhwTmFsRTFUbnBaTUZwcVl6Tk9SRTE2VG5wYWFVNXRWWHBPZWxFd1RqSkZNRTVFVlhkT2Vsa3lXVlJWZDA1NldUQk9hbEV6VFcxWk1rNTZWVFZOZWxrd1RXcFpNVTVVVVRCT1JGVXlUWHBCTUU5RVNtbE9WRTE2VFhwamVFNUVSWGxhYWxrMVRqSkZNVTlVVlhkT2FrVXhUbXBOTTA1NmF6Rk5WRXB0VGtScmVrMTZZM2xPYW1NeFRrUk5NVTU2WjNwTlJGSnFUWHByTUZwRVVtdE9WRmt6VDFSWmVrNXFUVEpaZWxreVRYcGpNRTFxVFhwT2JVa3pUWHBhYlUxNlVUSlphbEp0VG1wUk1GbFVUWHBPYlZFeFRrUktiVTVVU1ROT2Fsa3lUa1JGTUU1RVdtcE9hbXN3VDBSTk0wNUhWVEJOVkZVd1RYcFpNVTFxVVRCT2VsbDZUV3BSTTA1cVZURk5hbU41VFhwQmVrMXFZek5PUkVWNlRYcE5kMDVxU1RGUFZGRjVUbXBWTUU1cVVUSk5la1V3VG5wTk5VNVVVVEZPUkdNMVRrZEpNRmw2U20xT2FtTXpXVlJOTlU1SFJYbGFhbHBwVFhwVk1FNUVXVEJPVkUweldWUk5NVTR5UlRKUFZHTTFUbFJGTTA5RVZUSk9ha1V5VGtSak1VNUVUWHBQVkZwcVRXMVpNMDFFU20xT2FtY3dUMFJLYVU1NlJURk9WRkp0VGxSQk1GbFVXVEpPYlVreVdYcE5lRTVxYXpCTmFscG9Ua1JKTWxsVVRUVk9SRVV6VG1wUk1VNUVZekpPVkdONVRrUnJNRTVFU21sT2VrRXhUbXBqTlU1RWF6QlBWR00xVG1wUk1rMXFUVE5PUkZrelQxUlJORTU2VFRCUFZFcHBUbTFaTVU5VVVUTk9hbGt6VG5wVmVFMTZUVEJPYWxFMFRtcFJNMDE2V20xT1IxRXpUMVJSTVU1RVozbFphbGw0VGtkWk1FMVVXWGxOZWxreVRrUlJNVTVxWXpKT2FrMDFUWHBWTUZscVl6Rk9WR3N5VDBSU2JVNXFSVEpaZWxGNVRtcE5lazVFVVRCTmVtTjZUa1JTYTA1NlVUSk5lbFV6VGxSQk1rOUVVWGhPVkVFd1RXcFpNazVVVFRCT1JGcHJUa2RWTTAxNldtdE5la0V3VGxSWk1FNVVUVEpPZWxwc1RYcFZNRTlVVW0xT2VrMHhUMVJaTWsxdFdUQmFWRkY2VGtSSk1VOUVVVEZPVkZVd1QxUmpNazVVVFRCT2FscHJUbnByTVU1NlRUTk9lbU15VGtSWmVrNVVSWHBQVkUwelRrZEZNMDFxWTNsT1ZGVXlUMVJLYVU1dFNUQk5lazB4VGxSQmVrOUVVbTFPYlZreFRXcEthVTVIUlRCUFJFcHRUbnBqZWsxRVRUVk9SRTB3VFZSak1rNUVUVEZOVkZwc1RYcGpNRnBFV1RCT2JWa3hUVVJLYlU1RVdUQlplazAwVG5wVk1sbFVWWGhPUkZWNVdXcFZNVTVIVFRGTmFsbDZUbXBGTWs1RVVYcE9hbGt6VFZSa2FFNVVTVEpPYWxVMVRtcEpNMDVFWXpOTmVtTXlUMVJSZWs0eVJUSlphbEUxVFhwbk1scEVVWHBPYWxGNlRsUlJOVTVFVFROT1ZFMHdUa2RaTUZwcVl6Tk9lazB6VDFSWmVVNVVRVEJhYWxVeVRucHJNRTVFVlhkTmVtY3dUWHBTYlU1dFVUSk5lbU4zVGtkVmVrMUVXbWxOYlVrd1QxUmFiRTVFUlRGTlJFcHRUbTFWTWs1cVdteE9lbXN4VFVSWk5VMTZhM3BQUkdNelRtcFZNazVFV210T2FrVXhUWHBaTWs1VVJYcE9WR014VGxSRk1VMUVVbWhPUkVVeVRtcE5kMDVVU1hsYWFsRXlUa1JGTWs1VVRUTk9ha1V5V1dwU2FrMTZVVE5OYWxWM1RrUkZNMDVxVFRGT1IwVXlUbXBSTUU1dFVURk9WRlUxVGpKRk1sbFVXbXBPUjFrelQwUmFhMDVVUVhwUFJGRXpUWHByTVU1cVNtbE9hbU14VDBSak1VNUVXVEpOVkZWNFRsUlJNbGxxU20xT2FrVXhUV3BLYlUxNlJYcE5WRlV5VFhwWk1VNVVXWHBPUjBWNVdtcFNhMDVVU1RCYVJGRXhUbFJWZWs5VVVURk9iVlY1V1dwUk5VNUhUWGxaYWxVMVRXMVpNbHBxV210T2Ftc3hUMFJSTWs1SFNYbFphazB3VG0xWmVrNXFXVEpPZWxFd1QxUk5OVTE2UlRCTmFsa3hUbTFOTVU5RVl6Vk9WRTB5VFdwTk5FNUhXVEpPYW1ONlRtcHJNRTlVV214T1Ixa3lXa1JWZVUxNlRUSk5hbGt5VGtSVk1VOUVTbWxPUjAwd1RucFJNRTF0U1RCT1ZGcHNUbFJOTUU1VVdUSk9iVWt4VFVSWk1rNUVWVEZOUkdNeVRrUkpNMDU2WXpKT2JWVXlXbXBSTWs1cVdUSmFhbGt3VFhwak1sbHFZekpPYW1jeFRsUmpOVTVxWXpGT1ZFMTZUbXByTVU1VVl6Qk5la0V6VFdwU2FFNXFWWHBOUkZKcFRucG5NbGw2WTNwT1JHTjVXV3BTYUU1RVRYbGFhbU0xVG1wbk0wMTZXbWxPUkdkNlQwUlpOVTU2VVRCYWFsa3lUbXBqTUU5VVRUTk9WRVV3VDBSWmVFNUhTVE5OVkZVeFRXMUplVnBxV20xT2JVVXpUMFJTYVU1cVZUSmFhbEY0VFcxWk1FNXFUVFZPYlZFd1QxUlpNazVFVlRGT1JFMHhUa1JGTVUxRVl6Vk9WRTE2VFhwTk5FNUhSVEZQUkUweVRYcEJNMDlVVlRKTmJWa3lXV3BSTWsxdFNURk5hbU15VGtSWk1FNTZTbTFPYlVsNlRYcE5lRTV0V1RKTlZGRjVUWHBuTVUxcVZUQk5lbFV5VFZSUk5VNTZTWHBPYWxwcVRXMVplVmxxVVRWT2FsVXpUVlJaTkU1NldUSlphbFYzVFcxSk1VMXFUWHBPYlUwd1dtcFNhMDVFVlhwTlZGVjRUbFJuTVU5VVdUVk9WR016VG5wUk1rNXFXVEZOYWxFelRYcHJNbHBFVlROT2Vtc3lUVlJhYVUxdFNYcFBSR041VG1wVk1FNXFTbWxPVkVreFQwUlpNMDVVVVRGWlZGRXhUWHBOTTAxcVVURk9lbGt4VDBSWk5FMTZXWHBPUkZGNFRXMVplazVVWXpGT2Vtc3lUbnBWTkU1VVFUTlBWRlY2VFhwVk1FMTZZM3BPYW1jeVRtcGFhVTVIUlhwTlZGRTFUblJaRUFBQVVYUXlUWGR3YWtGUlJHeE5kMFYyV20xTU1WcDNSRFJhYlhReVFsRlhla0Z0VGpCTVIxcHFRWHBNYlVKSFRYVkJWRXd6V2tkRU1GcHRjREJOZDBWNFdtMUViVUZSU0RCQmVsWXlRVzFhTlZwdGNESkNVWEExV25wTU1GcDNSWGRhZWxZd1FWRkVORUZVVWpCYVIxZDZXbTE0TUVKUlNHcEJWRVF5VEVkYU1rRlVSREJCUjB4dFFVZE1iVnB0U0d0QmQweHRRa2RFTTBGUlZqRmFSMHd5UVZSRU0wRkhWM3BCVVVRelduZHdOVUZSU0RGQlVYQTBRWGRXTWsxSFJETkJkMUl5UVZGYU5FRlVSR3hNZDAxMVFWUldNa0YzVEROQlVVUnNUSGRGZGtGM1RHeE5kMFY0UVZSV00wRjNTRzFCVkZJeFFXMWFNVUY2UkROQ1IwZ3pXbTEwTTFwUmNHdEJiVTR3VEVkd01rRkhkREpNZDBneFFWRkliVnAzVEROQmJVZ3dURzF3TkVGdFVqQk5VVTE0V20xME1VSlJTWFZCVkZKdFFrZHdNMEZ0VGpGYVVYRjFRVkYwTVV4SFdqTkJVWGd4UVZGYU0wRlJTRzFhVVZveVFYcGFiVUZ0V2pGQlZGcHNUWGR3YlVGM2NERkJSMGd6UVVkNE1rRjNSWGhCZWxZelFYZEliRUZIZURKTWQzRjFXbTFFTUVGM1dqRkJSM2d5UVhkTmRrRkhWbTFhYlZveFFWRlNNVnBSY0cxQlIwUnRRVWRNTkVGVVRERmFSMFY2UVVwU01WcDNjRFJCUjFJeVFYZElNa0Z0Vm0xYVVVUXdRVWRNYkV4M1REUkJiVXd3UVVkd05FRkhUakZCYlVneldtMTBNMXBSVFhWYWJVZ3hURWROZGtGUlRHMUJSMXB0UVhwTU1scDNUWFphYlZveFFrZGFha0ZLVWpGQlVYQTBRVWQ0TWt4M1REVmFiWGd5VFhkSWFscHRTRE5CVVhBMVFVZHdiRTEzY0dwYWVrd3lRVzFJTUZwdFNESk5SMGcwUVZSU01scEhjRE5CYlZZeFdtMU5kMEZVV2pKTWJVUTFRVlJNTWtKUlNHeEJiWGd6UVcxSWFscDZUREpDUjBSc1FVZE9Na0pIV20xQlIwZ3dRbEZNYTBGdFRqSk5SMW94UVZGV01scHRTREZhYlVoc1RIZElhMEZSZEROQ1VVUnNXbnBNYlZwSFJHdEJWRm95VEhkYU5FRnRSRzFCVVVWNVFVZE9NVUZIU0RGYWVsWXdXa2ROZVVGUlJEQkJSMGhzUVZGMGJVRnRjREJCUjA0eVFVZE5kMEY2VmpGYWQxcHRRVWRJTWtKSFNHcEJSMGd5UVcxYU1rRktVak5hUjFveVFYcEVNa0ZIVFhaQlIwd3pRa2RFTlVGNlNHMWFVVVYzUVVkd01VRlJXakJCYlU0d1FsRndOVUZSU0RCQmQxZDJRVWRFTUVGdGNHMUJSMGd4VEVkYU1rRlJTRE5CUjFveVdtMUlNVnBSUkRCQmVscHRRVzF3TkVGUlRETkJSM0JxUVZSSWJWcEhUWGRhZWxZeVRYZGFhbHB0Y0RCTWQwd3dRVWRXTUVKUlRETkJVVm96UVZGTmVFRnRTREpOZDAxMldtMXdNVnBSY0d4QlZGb3pURWR4ZFZwNlZtMUNSMGhxV20xV2JVRnRXbTFhYlZac1RYZHdNRUZSU0RKYWQwZ3lRVkZTTWtGUmNHdEJkMW96UVcxSWJFRlJjREpOUjBWNVFWRndNVXhIVERGYWJVNHdRVWRGZWtGdFREQk1kM0F6UVcxME1rRnRUR3RCYlhReFFrZE5lbHB0VEROYVVVdzFRVzFhTUVKUmNHdEJla1F5V25kRmVrRnRSR3hNZDBWNVFWRlNNbHBIVEd4QlVVUXlXbmR3TkZwdFdqRmFkM0JxUVVwU01VSkhjREZCYlU0eldtMWFNRUZSUkcxYWJVd3hXbTFNYlVGdFNETkJVVVJ0V20xYWFrRjZSREpCYlZvMFFYZGFNRUZIV210YWJWWXdRVzFFYkVGdFVqSkJiSEJCVUdGRmJHNUtOV054VlhoMFEwWk9ZVVZJVTFaTlNVZ3hSakpuVDBjd1kxaElNMWRHUjFGTU1VZDRUR3RhVVhGNWNGRk5ha1Y1UlVaYVIzRjNja3BuWlZveFQxcENWRFZsUjBwclJIQlJkVTlHVVhGNWJuZE5NRWxJY1RWTmVtTk5jRWw1V1hFeWVWbEhiVTAxU0ROeGEyOTZkV1ZKTVVGTFIzbGFiVTB3VTBOdk1FbGtSVzFOVWtnd1JEVndlWGxRY2tnNVFVbFRjVkpOZWpsTlNVcDFSMDE2VERWQlUwVmhRVko0YWtaNVRXMUdNRVZ0V2pCeFVFbGhWekZhZDAxTFJsUjRiRWt3TlcxRWVuRk5USGxOWjBkS1ZqRkJiWEYzYm5nMWVuRlNlR3RHZW1OS1JrcDVNRVI0UVZwSVJqbEtSa2xQUjBGVWEzaHhlamwxU0hwU01rUklhMkpCZVhGNlRWTkVhVWRSVWpGS1ZYbEdTa3RCUW04d2NEUnhTRGxvV25wblpFa3dkRzF1WVVsdFdrcHhTa1o2U1ZSeFVYRjZSWHBCU25CUlRWWkpNMDFuYmpKbmVXNVVSR3B5U0VGMVJEQk5TM0IzVTJkTWVrVlhSakE1TlVKVU9EUk5ValY0U1ZKNU1VUkhVME5ITW5GS2JrcEZSa2xIZFVKYVIwa3dXa3BCTUZwdFRUQkllWEZOY0hveE1XOXRSVEZIYkRsU2NuZDVWa1J0VFhseVIwRktRVkpyVEVSNVRVVnlTRFZEUWtkMWEwWlJTVWxOU21kRFNucEZia2t5Y1d0Q1UwOVBUVlJYTUVSdGVVWkJVWFZvUVRGMVptNHpUMHhZTWsxU1FWUjVlbkZUZVdKSU1VMWpSa2cwTlhGS1oycE5la1ZyV0RGMVMwVXdaMDF4YlVFMGIwaHhaRXd4VW0xdVIzRmpTVVpuUTB4S1ZtVk5iWEY2Y0V0V01rUktPVk5LVkhGUVNERkpZbkY2WjJkTWQwbHVRVWR3TTI0eVl6TndTblV5UmpGalRFSlJTRFZ3U0ZveFdtRldNMHd5U1dWQ1VqRXpjVEpYVmxvelRXUkpkMDFoVFZKVFVYRXdSV2RFTVZkSFFYZElNRXhoVTBWdlIxZE1XbFIxVjI5NFUxQkZSMEZ0YjJGNVdGb3lORE5CVTNGUFFrZFhhRTFHT1ZGSk1tSTBRVEJCV2tGSlNVbHhiWGxuY0VoeFJVZFVTVWxFZUZkMVRUTkpOVmd5VFdKSFJqbGpjbmRCTVZwTFVqSndNM1ZHUmpONVdVRXplV0p2UjBSdGNYaEpOa3BVWTBWTWVsTnRSa2RUZUVGSFRVVlpNbE40U0hoSU1rUjNlRzFJTUhWSlRFZElhWEJTVjJ0SVZVRmxiMVJUVjBsVmNWbHhiWFZvY0cxVGJrZFJlVmxFZWpGQlNWUjVaRzR3VjJORWQwOVBXRzFOVEhKNlNWWkZNR1l4Y2xWQloxcElZak5hZUVSdFNGRjFWMjk2ZVdaTmVFd3hXRzFTTUc5S1NHcE5ZVUZ1YnpKNE1sa3llVkJGTTNSc1FXMVRZWEJLY1dsTk1uRktXVEZQV1VaVWEySnhVVTlaUkRBNWVWcEtjV2xZTW5sSVFrdFNNM0JWY1VGdU1ERjZjSGxKTm05S2VUVnVWVWhwVFROeFduQktlV05HTVV3MVJsTlNiVVJMVm1WdVUwVnFSbmg1WTB3eVJXTk5TMVl5UVhwVFdVWkhXbTF2ZUVGWldqSk5SVTB5WjFGRlMwOVJia2RKWkVoS2NWbE5Na2d3V0ROamFVaFRZMjF2VTJOcGNIZFRSbHBSY1dKTlVYRm9UVkZ4ZW5CUlJXMXdWR2RIU2xWQlZVaEpVMk5IVkVWaVFYbEJiVVI0ZFU5Qk1uRmhTVzFCWTBWTGRWQkhSM0ZwVERCeGRscFNaMWhhZWpWUGNURnhSbkJTZFhsd2JWWTBURWd3YW5GM2NWZENTSEZyY2xSaldYQktlVE5OTTBscFdHMTVha1l6UVdWSlVrRjVjRWxKZWxrelFVeENWRTE1UmpCQldrWlNlVkp4ZW5GWlJXRmlOVnBVTlVKQ1IwOXFRVkpqYkc1VVkxRkNTMGxWUkVkd00wWjZUV3RJWVZkamIzcHJaMHBLWjFkS1NFbFNXbEJuWjAxSWEyeE5VVVF3V0cxVGRXNTNkVVZJVTNFeGJrdFhiVWg0YW1WRVlWZFhjVkJuZFc1SVkwbHVTR3RLV1cxSk1rSklPR1ZFTURGaWNUTlhlVVZLVTJaSVNGTkRjRzExVDNKU1dtVkhVWGxvYmxBNU5FbDRUREZIZWpRemIxTndOVXBUVG10dlZEVjNUR0ZCUjNCSGVHeEtkbWRJVEcxeFZISklVMnB3ZVVsUFRXMVRhMHg0U1d0SlNuVk1TVEpqWlZreVkybHdWSGxSY25wTmJFaDNjVlJZTTJONVJrcDFTSEYzZERCRWVrVnFiekpKV2taVWNXTkZkM1ZzUkhoVGQwWXpjVUZ1ZDFOWlNsQm1NbkZTYTIxeWVVMWFiMHRUWmtrd1NYZE1TV05QYmxSbWJIQktZMnhhZUhGWlRFbGpaRnBWVEcxRlIwOVpjVXRGWlhCS01VdEZiWEF5Y25kNVpYQmhWbTF5U25WUVFrZEJWM0ZzT1dKdk1sSXpiMUptTlZwTFlqRkZWVUZzU1hnd05FZFVOR1ZhU1UxSlRYZEZkMEpSVGpSWk0wOVhiMUE0TUc4eVV6QnhTWFJxV21GNGJXNWhkRFZCTWxkWGIxQTViRWRLVmpSRlZYaGxiMHBJYkVkS1RWWndWVTkzUWxOWE5sbHRWM2hFYlZKc1JIcEpVVWgzZUdWd1ZFeHFRa3BCYTBReWVVUnVTRk5vUWtkQlFrcFNVM2xOZWxOUFdqRkZUM0IyWjFWd1NrbFFSSHBYVDBkS2VVVnZVbWRNVFhweFpFRXpVM3B4UzBoc1RWSXhNM0Y2WXpSTk1qVm5jREJNTlV4TFZqVkhTRlpwY1ZOUGVFd3dOV1J2U0ZOR1RIaGlOWEY1VDJoYWVtTnVja2c1U2tGSmVUTkhTVmRIUkROYWJIQjVZekpCTTNWUGJsSmpaVUZUY0ROd1NFRXpjbmxOVUVKVlNXcHhVVUZpU0cxVGVFeEpZMUphYlhsVFRVZEliRUZTTkdsdU1uazJjVEJOZUhBeU9UTmFNMDkxV2xSSmEwVmhRV053UjNCclJIZDVWMXBUUlZCd1ZVRTFXa2gwYlVGSFYyeHdZVk5FVEV0TU0zRlJUMEZ3U0VsU2NUTkJSSEF6WW0xdWVYbHRSSHBKVDFwVGRYaHVNVmRKUmtkMVpXNVVNVUZLVkhsMVNWSk5OVVo2T1VSdlIxWnRRa3BOVFhCNFdtMXdTbkY1Y0RCblJXNUpSVEZDVkRsaFIwWTVZVVo0TUd4dWJEaHNUSGR4ZVVaNGEydElSM1V6U1cxQlYzQjNjRE54ZVVsdFFVaFRNMHBUY1VwS1ZHZFdTbEZCVDAxU1kwMUtVWFExU21GeGJFeEtOREJOVVhnelFsRjFhRWx0U0dWeGVVUnNjbEZ4V2xwVmNEQndlVk5QYjNwYWEwaDNVMkpNU0VsbGNVcGFOWEpoY1dGYWVHTm5XbEpuYVhGUlUzVkVlRk5hV25wcmRYRjZUR2xIUjAxRldUSTVlVzU2VWpOdWVGSnRXbmhKVjBaTFQxVllNa2xDYmpOSlptNVVjV0pDU1hsWVNWRlBZMDB3UlhadmJHZEZXVE4xWWtkTGRUUkpTMWQ2U2t0NWJrWXdWMXB2TTNGaVFURmFhMFF5Wm1WS1ZIRmljVXRPYkhKM1UxbHhVVTlSUmpCblNVMHlVMHR3TWxNMlJHMVhha3gzVDJsd1NERnJiM281ZFVVeWRWTnVTamsyU1VoME5VeElNR3RIU25sS1RIZEpZa3d6U0ROd01HSXlSbEpCWlc5Nk5XbHVVM2xSU2tkWGRVbFVUVFpOTVVsS1dEQlRNMFpKVFRaYVVubGxXREZCWTBKS1YybHZNMUpwV0RKaldVMUtURFJCZW1kTGIwZFRWbTh6ZVVoQlZIZ3pjRkZKYkVGNFNYaHZNM2w0VEdGUGFFRlRlWGhKU1ZwcFNFaE5lbGd6Y1ZsSlVVOWlUVzFYVDBWaFRHeGFiVTlVUWxONVlVVXhjVlJKWVhGcldESkJTbTlWVTFWd2VWZFNSR3c1Tm5KSWRXRndkMGsyY0RKRU5FY3lVMGRCYlhFMFJubzFkazFLUlc1RVIzQnJSM1puZUVoNlkwMWFSMU51UlVveGVWZ3hlRzFGZW5GQmNEQklOVWRTY0RORU1FRXdTWFptTlVwTFFWSnllRWhxYm0xWFkwZEhSVFpLU0ZkMlIzZFRRVUY2ZVUxdmJHZElTWFk1UmtKSFUwMWFVM2cxVEdGeGRuRktUVXRaTUZkRVRUQkVhVUpUVnpGYVMxTkdTRlZUZUhKS2NVZGFTa2xqUnpKQmFVMVVVMFJOVkZZelJFdFRWM0JLUlRGRVNIVkhRVWxYVlVaU1oycEhSMDB4VFhsNVUwZFZlV2h4ZUhGaFJWSlNORXBSVjBkeGVVaHBSM2xhWlVGVlNHMXhWWEZSVEVnNVlrbFRVMWx4UzBWSWJ6SnhUVzVRWnpGTWVFRjJXakIwTVZwU1oyRkhVbmd4YjBkNVUwVkxRV1J2TUhWSmNFWndRVkI2T1d4TVNrRm1UVVpPT1ZaUWNERmFkMGcwUVcxNE1FSkhTREphYlhBeFFVZElORUYzU0ROQ1VVVjVRVzE0TUV4SFdqSkJiVXd5V2tkd05WcHRjREJhUjFkMlFYZDBNRnAzUkRCYWJYQXlRa2ROZVVGUlZqQkNSMWQyUVhkU01reDNSRFJCVVhnd1RIZE1ORUZIZURKQmQwMTZRVWRTYlZwdFJHdGFla3h0UVhkd2FscHRTREJNZDFkNlFVZFNNVUZSY0d0YWVrd3pXbTFJTUVGNlRHMUNSMW93UVZGRWJVRlJTR3RCZDNSdFdrZElOVnB0ZURCQ1IwUTFXbnBXTUV4SFRYbEJSMVl3VEVkRU1GcHRUREJhUjBRMFdtMVdNa3hIU0RSQlIwd3dUVWRNTWtGSFVqTk1SMW93UVVkNE1rSlJXak5hYlU0d1FXMU1iVUZVUkRKYVIwUTFRVlJNTWxwSGNEUkJNbEl3UVcxd01rRXlVak5CVVVoclFWRk1Na0pSVEcxQmJVNHlUVWRGZGxwdFRETmFkMGh0UVcxNE1FeHRSRE5CVkVReldrZHdNRUZIV2pOYVIxcHFRVWRNTWtKSFJYcEJVVXd5UWxGTWJVRnRSREJCYlUxNldtMU9NVnBIUlhsQlVWb3hURWR3TkVGNmRGa1FBQUJKZWsxVVkzbE9hbFV3VG1wUmVrNUhVVEJPUkZVelRtMU5NMDVFVVRST2JVVXlXbXBWTlUxNlJURk9lbHByVGxSTmVrMUVXbWhPYlVVeFRWUmplRTVVWXpOWlZGVjRUbXBGTTFsVVZUQk9WRWw2VG1wTmQwNUhVVEpQVkZGNFRYcEZNbHBxVFRGT2FrVXhUWHBSZUU1dFVURk9hbHB0VGtSbk1VNTZXbXRPYlUweVdtcE5NMDVFWXpGTlZGRXpUbnBKZWs1VVZUSk9SMVV5V2tSWk5VNUhXWHBOYWxrelRXMVpNVTVFVlRCT2JVa3hUWHBqZUU1NlRUTk5lbEUxVGxSUmVrNXFUWGxPYW1jeVRXcFJlazV0VlRGTmFsa3pUbTFOTUZsVVVtcE9WRkY2VFhwVmVVNUVTVE5OYWswMFRsUnJNRTlVV21wT1JHTXdUWHBSTVU1Nlp6Tk9lbGt6VGtSbmVWbHFZekJPVkUweFRYcGthRTU2VFROTmVrMHdUa2ROZWsxVVl6Sk9SMWt4VFhwWk1VMTZXVEpaVkZwcFRtcFJNRnBxV1RST1ZGa3lUMFJqZDAxNlRYcE5WRkp0VGtSVk0wOVVUVEpPYW1zeFRYcFNhMDVVU1RKWmFscHJUbFJaTTA1cVdtdE9hazB3VGxSVk5FNVVXVEJOYW1ONVRsUk5NVTFxVVhoT1ZFVXhUbnBqTWs1dFNUTk5la3BwVGxSUmVrNUVZelZPVjBVeFRYcFNiVTE2UlRCTmVsVXdUbXByTWxwVVRYZE5iVmw2VFhwWk0wNVVWWHBPVkZVeFRtMUZNazVxVlRWT1JGa3hUbnBSTVU1NlJUQmFhbFY2VG5wWk1FMVVXVEJOZW1jeVdtcGFhazE2VFhsYWFsazBUa1JaTWsxcVVYcE9hbXN5VG1wTk1VNUVWVEpPZWxrd1RrUm5NRTE2VFRST1YwVXhUV3BTYTA1NlVUTk9SR016VG5wQk0wOUVXVE5PUjBsNlRVUmplRTVFVFRKTlZGSnNUa1JGTVUxRVdUUk9lbFV5VFhwYWFVNVVaek5QVkZWNFRsUk5NVTFFV21sT1IwMHdUbnBOTUUxNlFUQk5WR040VGtSbk1sbDZWVFJPVkVrd1RtcFJNVTU2WTNwTmFscHJUbFJWTWxwcVkzZE9ha1V5VG1wVmVVNXFhek5PVkUxM1RXMUpNRTVFWXpWT1IwVXlUV3BqTUU1VVVYcE9hbEY2VG1wbk0wMXFXbXBPUkdjd1RYcE5NMDVxU1hwTmFrMTVUbFJuTUU1VVl6Tk9Na1V6VGtSWmVFNXFUVEJaVkdNMFRXMVpNazU2WkdoTmVrVXhUbFJTYWs1dFRUTk9SR00wVGxSTk0wMUVWWHBPYlVrd1dXcE5OVTV0VlRGTmVsbDRUWHBuTVUxNll6Sk9SR2N4VFVSYWEwNTZRVE5PYWxWNlRsUlZlazlVWkdoT1JGRXhUVlJqTlU1RVZUQk9lbU16VG1wak1scHFXWGhPZWsweVRXcFZNMDU2V1RCT2FsWm9UbnBqTWs5VVZUUk9Na1V5VGtSWmVFNUVZekJPUkZVeFRsUlZNazFxWTNoT2FsbDZUbnBOTUU1VVRURk5SRTAwVG5wQk0wOVVWWGROZW1NeFQwUlpORTVFU1RCTmFsVXlUa1JGTVUxRVkzcE9hbXQ2VDFSVmVFNUVUVEZPYWxVMFRrUmpNazlVVVRST2JVMHlUVlJSZWs1RVZUQlBWRlV4VG5wRk1scHFXVFJPYW1zelRucGFhVTF0U1RCUFJGVTFUa2RGTUZwcVkzZE9SR042VFZSVk1VNUhXVEpPVkUweVRtcEpNRTFxVlhkTmVrMHhUVlJOZWs1VVNURlpWRmw0VG1wRk0wOUVZM2xPVkVrd1RYcFZlazVIVFRKT2VscHJUbnBWTVUxVVpHaE9iVmt4VG1wUk0wNVVSWGxhYWxFMVRrUlpNRTU2VW10T2JWa3pUWHBaTTA1NlVURlBSRkV6VGtSSk1GcHFVVEJPUkVreVRWUlNiVTU2WnpCWlZGSnBUbTFaTWxsNlVURk9ha2t3V21wak1VNUVTVEZOZW1Nd1RucG5NbGw2VVhsT2Fsa3hUV3BaTTAxNmF6QlpWRkpxVFhwSk1rMVVWWGxPYlZVelQwUlJlVTV0V1ROUFZGcHFUWHBSTTFsVVVtdE9iVWw1V1dwU2JFNUhSVEJaYWxWNlRucFplazFxV21wT1ZFMHhUMFJOTlU1VVVURk5lbVJvVG5wbk1rNTZZelJPVkZFeFQxUlNhazVxWXpCTmVsRjZUbnBKTUUxcVl6Rk5lbEV4VFhwUk1VNTZhekphUkZVeFRYcEJNbGw2V1RCT1JFa3dXWHBTYUU1NldYcE5WRkV3VG0xSk1FNTZTbTFPVkVreVQxUlJlazVFYXpKUFJGVjZUa1JGZVZscVdtaE9hbWN6VG1wVmVVNVVaM2xhYWxreVRucFpNbHBxV21oTmJWa3dUbXBaTkUxNlNUSlphbHB0VFhwck1VMTZXbXRPYW1Nd1RsUkthVTU2VFRCTlZFMHlUbXBSTUUxVVl6Rk5iVmt3VDFSamVrNXRSVEpaZWxFeFRucHJNRmw2VVhoT2VrVXdUWHBWTUU1VVp6Rk5lazE0VFhwRk1FMTZVVEJPUkZFeFRrUk5NazV0VVhsYWFsVjVUa2RaTUU5VVl6Vk5lazB5V1dwWk1FNXFZekpQVkdNMVRrUnJNVTVFU21sTmVrRXdUWHBSZVU1RWF6SlphbEpwVGtSRk1sbDZTbWxPVkVVeVRrUlJlazV0UlRGTmFsbDRUa2RaTWs5RVZYcE9hbXN3V2tSWk5FNXRUWHBOZWsweFRrUk5NbHBxVFROTmVsa3dUbFJTYWs1RVp6Rk5hbU4zVGtkVmVrNUVVVFZPYWswd1RYcFJNazE2VVRKWmFsVjNUWHBWTWxwcVVtaE9WRWt5V21wU2FVNXFXVEZOZWxFelRtcGpNbGxVVlRST1JFMHdUWHBhYWs1dFdUTk5SR1JvVGtkRk1VMXFUVFJPYlZFeFRVUlpNRTVxYXpGWlZGRjVUbXBGTUU1RVZYaE9WRTB4VDFSTmQwNVVSVEpaZWxGNlRrZFJNRnBFV21sT1JFMHdUMVJqTWs1VVNUTk9WRkV6VG0xWk1VMVVWWGxPUkZVelRXcE5lazVFVlRGT1JGVjZUa1JaTUU1NlVUSk5la1V3V1ZSamVFNUVSVEZOUkUweVRrUkpNbHBVVFRST1JGVXlUa1JaTUUxNlFUSlphazB4VGtSWk1GbHFVVFZOZWtsNlQwUlNhVTVFWjNwTmVsSnBUWHByTUZsVVRUSk9SRTB6VGxSTk1VNXRTVE5OUkVwdFRtcFpNRTE2VW0xT2Vra3hXVlJWZWs1dFZYbFphazE0VGtSWk0wNXFUVFJPYlVVelQxUlNhazVVUlRKT2Vsa3hUWHByTUZsVVZUVk9hbWN6VG1wVk0wNVhSWHBPUkdOM1RYcE5lazlFVlhkTmVsVXhUbFJWZUU1SFRUQmFhbU0xVG1wck1VMTZXbXBOZW1NeVdrUlZNRTVFV1RKWmFsa3pUa2ROTTAxcVRUTk9SR3N3VFhwVmVVMXRXVEJaYWxab1RucFJNazU2VVRGTmVtY3lUMVJrYUUxNlRURlBSRlV6VG0xTk1sbHFVbXhPUkZVeVdWUlNiVTU2U1RGWlZGVjRUWHBOTVU1cVZYcE9WRWw2VDFSYWFFNUVZM3BOZWxab1RtMUZNVTFFWXpOT2FtZDZUa1JWTUU1NlVUQlphbGsxVGpKRk1GbFVTbTFPYlVVd1RWUlZlRTVFV1RKT2VrMHhUWHBWTUZwcVVUVk9lbXN5V1hwUk0wNTZWVEJOYW1NeVRtcFJNMDVFVFhkT2VsVjVXV3BqTWs1VVp6Qk9WRkpvVG1wUk1rMTZXbXhPVkVreVdYcE5NazVFUlRCYVJGa3pUbXByTWs1NlVtaE5lbWN6VGtSUmVFNXRUVE5OYWxFelRtMU5NRmxxV1RWT1JFVXlXbFJOZVU1SFJYbGFhazAwVG5wVmVrNXFWVFZPYlVreFRXcGFhazF0U1RKUFZGVjRUWHBOZWsxVVkzcE9lbXN5V2xSak5FNUVTVEpaYWxwclRYcG5lazE2WXpOT2VsVjZUMVJqZUU1VVVUSk9hbGsxVG1wbk1FOUVWVFJOZWxFelRWUktiVTV0VVRKT2FtTTFUa1JKZWs1NlkzcE5lbWN3V1ZSTmVVNXRSVEJOZWsxNVRrUlZNbGxxVW1sT1IxRXlUVlJaTTA1dFVYcE5WRkpvVGtSSk1VMXFXVEpPYlZFeFRYcFNhRTVFWnpGT1ZFMHdUa2RGTTA5VVVtaE9SRWt6VDFSVk5FMTZRVEpOYWsxM1RtMUZNbGxVV1RCT1JFa3dUWHBWZUU1dFJUSk9hbFV6VG0xSk1rNTZXVEZPUjBreVRrUlJOVTVFV1RCWmFsSnBUa1JWZWs5VVVtaE9hbXN3V2tSWmVVNVVVVEJaVkZFd1RqSkZlazlVWXpOTmVrRjVXbXBTYUU1RVozcE5hbFUwVG1wVk1VNTZZelZPUkVVd1RWUk5NRTU2UlRKT1ZGRTFUa1JOTWs1NldtcE5lbXN3V1ZSTk5VNXRVWHBOUkZWNFRrUkpNMDFxWXpOT2Fra3pUbnBhYTA1WFJURlpWRkY2VG5wTk1GbFVZM2RPVkZVelRVUlJOVTE2WnpGTmFsVjNUVzFKTUZscVdUTk9hbXN3V21wYWJVNUVUVEpPUkZGNVRucFplVnBxV21sT1JFMHlUMVJOTVU1NlVUQk9WR013VFhwWk1VMVVUVEJPVkZVeVQxUlZNRTVVVlRGTmVsa3lUbTFaTWxscVNtbE9SMDB6VFZSWk0wNTZXVEJPVkdNMVRtMUZNVTFFWTNwT1JGa3pUMFJqTVU1VVRUTk5hbVJvVFhwbk1sbHFZelJOZWxVeVdXcFplRTVFUlROWlZGa3pUbnBCTWs1NldtcE9WMFV3V1hwWk1FNUVSVE5QUkdNelRsUkZNRnBVVVRGT2FrVXhUWHBaZUU1RVZUQk9WRlY1VGtSbk1FNVVVWGhPVkdkNlRsUlJOVTE2UVRCT2VsVjVUa1JKTUUxcVVUSk9iVTB3VGxSamQwNVhSVEJOYWtwdFRrUnJlVnBxV1hsT1JFa3hUMFJTYWsxNlZUSlBSRkpvVGtkSk1rOVVVbXhPZW1jeVdsUmpNazVFU1RCWmFscHBUbFJKTTAxRVVURk9lbGw2VFZSVmVFNXRTVEJQVkZrMVRucFZNVTE2VVROT2FtY3dUVlJSTTA1dFVYbGFhbHBxVGtSTk1FMVVUVEJPYW1ONVdXcFNhRTVxUlRGT1ZGRjVUWHBGTTA5RVZYZE9SMWt3VDFSUk1FNXFWVEZaVkZwcVRrUmpNazVVVm1oT1IwMHdXWHBOZDA1dFVURk9lbGt4VG0xWk1FOUVXVE5PYlVVeFRucFZlVTVIVFRCWmFsSnRUbnByTWxsNlVYbE9iVTB3V1hwamVFNUVWWHBPVkdNMVRsUlZlazFFVW1wT1ZHTXhUbFJhYkU1cVdURk9WR016VGxSTk1rNVVXbWhPUkVVeFQwUlplRTVFVlRKTmFsbDRUWHBCTWsxVVZYaE5lbWN4VFdwak5FNUVSVE5QUkdNMFRsUlZNbGxxV210T1JHc3hUbFJSZWs1NmF6QlBSRmt4VGxSVk1GbFVUVEpPVkdNd1dtcFJOVTV0VlROUFJFMTZUbFJKTUZwVVVtbE9iVWw1V1dwUk1VNXFVVEZOYWxWM1RYcHJNazlVVlRWTmJVa3dXV3BWZVUxNlVUSmFhbFYzVG0xSk1GcEVVbWhPUkZFeFdWUlNhazVxVlhsWmFsRjRUa2ROTWs1RVdUTk9SR2N4V1ZSU2FVNUVWVEJPUkZreVRYcEJNVTE2VFRGT1JFMTVXbXBqTUUxNmF6Rk5lbGw1VG0xUk1rOVVVWGxOZW1zeVRucFpOVTVFYXpCWlZGSnBUbXByTUZsNlRUVk9iVWt3V1hwak0wNXRTVEJaVkUwd1RrZFpNazVxVFhkT1ZGRXpUbXBOTVU1RVNYbFphbU4zVGtkRk1VNUVWbWhPUkVWNlRrUk5NVTVVVlhwTmFsSnFUbFJyTWs5RVZUUk5lazB5VG1wYWFVNUhUVEZPVkZGNVRucGpNMDVFWXpWT1IwMHdUV3BSZUUxNlFUSlplbVJvVGxSWk1GcHFUWGxPYlZFeFRYcGFhVTVVUVRCT1ZHTXhUbFJGZWs1NldtcE9WMFV3VFhwTk1FNTZaekJaVkUweVRXMVpNazFVWXpWT01rVjZUbXBWZUU1SFNURlpWRlY2VGtSSk1scHFXVFJOZWxVeFRtcE5lVTVFVFhwTlJGcHJUbXBKTTAxRVdteE5iVmt3VDFSWk1VMTZaek5OYWtwcFRtMVpNRTlVV21oTmVtY3lUMVJTYlUxNlFUTk5SRTB6VGxSRk1sbFVUVEpPUkUwd1dtcGplRTVVU1hsWmFsRTBUbFJCTTAxRVVtMU9hbGt5V1dwak1FNVVSVEJaYWtwcFRucG5NazFVVlhwT1ZFRXlUMVJWTkU1dFdUQk9WR04zVFhwbk1rOUVUVEZOZWxFeVRYcE5NRTU2UVRGTlJGcHBUbFJSZWsxNlVUTk9SMWw2VG1wYWJFNXFaekJhYWxreFRucHJNRTVVV1RKTmJWa3hUV3BTYkU1RVZURk5lbU15VFhwUk1GcHFVVFJPVkZVd1dWUkthVTF0U1RGT1ZFMDBUbFJWTUUxNll6Tk9WRTB6V1ZSUk5VMTZaekpQVkdSb1RucFZNRTFxVVRWT2JVa3lXbXBqTlUxNlRURk5WRkp0VG1wWk0wOVVWWGROZWxreVdtcFZlRTU2UVhwT1JFMTRUbXBWTVU5RVkzcE9SR013VG1wUmVrMTZhekJPVkZwb1RucFplVnBxVW14T1ZFRXlUbXBqTlU1dFRUSlplbEY2VGxSVk0wNTZXbWxPYlZVelRsUmplazVxWXpGTlJGRTBUbnBaTVU1VVZUSk9WRTE2VG5wak5FNVVUWHBPZW1ONFRtcG5NbGw2VFhwT2VrVXdUVlJaZWs1VVJUSmFWRkV5VGxSRk0wOVVUWHBOZW1jeFRYcGFiVTVFWnpOUFJGVjNUbnBaTWxsNlZYZE9SR3N5V2tSUk1rNVhSVEpaYWsxNlRucEJNRTE2VlhoT1JGRXpUWHBSTkUxNlRUQk9WRnBvVG5wSk1VNTZWWHBPVkZWNlRucFNhVTF0V1hwT1ZFcHRUWHBGTUUxNll6Sk9hbEV5V1hwWk5VNUVVWGxaYWxKcFRrZFpNazVVVFRST1ZGRXpUbnBqZDA1SFJURk5WRkpyVFhwQk1FNXFWVFZOZWtrd1RsUk5OVTE2V1RGTmFsRjVUWHBCTWxscVl6Vk9SR3R6V1JBQUFESk1SM0ExUVcxRU1FSkhTRzFCVVVnd1RIZEVOVnB0UkRCTVIxcHNRVzFNTVVGM1RYWkJla2d5UVcxSU5WcHRlREpCVVVReFFWRjBNa3h0VERGQmQxSXpXa2RJYWxwdFNESkJkMDEzUVZGV01rRjNTWFZCVVZJeVRWRkZlRUZIVm14TmQwUnRRVkY0TWsxUmNHeGFiVTR5UVVkTU5VRlJkRzFhUjB4clFWUk1Na3hIV20xQmQxSXpXbTFGZGtGUlRHMWFVVVYyUVZSSU1rSlJTRE5CZDNReFFsRk5la0YzVm0xYVIwMTVXbTFFTWt4SGNHcGFiVVF3VEcxd01scHRUREpNZDBnMFFYZEVNRUYzY0RWQlVVUXdURzFNYkZwdFZqRkJiVVYxUVcxRU1GcEhjREphYlVRelFYZHdNMEYzY0RCYWJVVjZRWGRhTVV4SFdtMUJVVll4UVhkTU5FRlJXakJDVVV3eVFWUklNRTFSY0RSQmVreHNUWGRJYWtGdFRERmFVVVY1V25wTU0wRjNXbXhCYlZZelFYZElNRnB0VG0xQmQxZDJRVzFJTUVGdGNHcEJiVkl4UVZGd01rRlVSRE5CUjNBd1FYZFNNMEZSVEcxQlIzQXdURzFNTWtGdFdqRmFiVm8xV20xTU1FMVJXbTFCZDFZd1RWRmFOVUZ0VERGYVVVVjRRVkZ3TVVGSFdtMUJVVVF5UWtkYWFrRlJSREZhVVVWM1FVZEViRXgzU0RWQlVYUnRRVWRNTVVGVVNERk1SM0F4UVcxd01scDNSWGxhYlhSc1RYZEZlRUY2VW0xYWQzQXdRWGQ0TTB4SGNEQmFiWEF5V2tkd05FRlVURE5CYlhBd1FWUkVNRUZIV2pWYWJVeHRRa2R3TWtGSGREQk1SMDE1UVcxU2JFMTNSRFJCUjFZeVFXMWFORUZ0VW0xYWJYQTFXbTE0TTBGM1YzcEJlbEl3UVVkYWJFRjNTREJDUjNCclFVcFNNVnAzV2pCQmVsb3lRWGRhTTFwNlRETmFkM0F4UVcxV01WcEhUWFphYlhCdFdrZElNa0YzVmpKQ1IwUnRXbTFTTVZwUldqTmFiVXd4VEVkYU1VRjNVakZNUjFveVFWRjBiVnBIUlhWQk1sSnRRVkZYZGtGVVJHMUNSMW8xV25wV00wRjNjREpCZDNRelFVZElNVUYzVERCQmQzQTBRVWQwYlVKUlJERkJkM0F4UWxGd00wRkhUak5CVVUxMlFWRkVNMEZRY0VGUWVtZDVja294ZFc0eVNXeFdVVEIwVjJ4blpVSklOV2xOVURsbVIxTk9OVmt6U1V4dmVqVk1RVlY1V1V4SlNXTkVNVWxYYjNsamJYRlVTV2x3WVhnMVFVdGpOa3hLYW1sSlIwVkxibXhuTmtkSlNXeFpNRTFRV1RCWFJVcDZPVlJKUjA1cFNraDFSWEJ0Y1dsSVNqRXdTV0ZUZUVwSVp6RkpiVUZ0Y25wME5IQXdhelZhZDBGVVFYZEZTRm95U1dWWU1FbGhXa2QwTTNCM2NWbHVNbEpyY0d4bWJVbFVVMnBDU0d0bVRYZEJlbHBWVFROeFVEbFBSakE1YUVkVmVERllNbXRpVFRCNVQwMUhXbWx1YlVGc2NrbEJlRXBVT1ZOSk0yTlpTRkZCVEhGMlp6RkJTMGxGUmxWalltOVNPWGhCZDBWVWNGRkZla2RIZVZSQk0yTlRXakk0Wlc1U09XZEhTR05NVFcxT05XNUxSV0pCTVZNemNGUTVXRVI0VjNwTk1FeHNSMHA1WkVrelRWUnhSMDF0UlhocVpXNXRUMjFCVkhsaGNURldiSEo2Y1haeFIwbHRUVEJtYlhGSVYwZEhTa0ZMV2xKblYzQjVjRE5hU0UxTWJqSTVhRmxzWjNoSVZYQTBjSGxKZWt4TFNXWkpNRVYzY0VkeFowSkpkWFZIZUhsSFNYcFRNbTlJVjIxSVIwOWFRWHBNYlVoSGRVaHllbmxYYmpCWGJVUjNSWGxZYkdkb1JucEpWbTh4ZUROS1IxTlJSREJqVUVWVlZ6VkJTbE5oUVhwWFYwMHlVMFpGVkhsWFNVcEpaVWhLUldoR01HWnRibEZOWWtKSFRXdEllVUZsVFZSRk5XNHdVME5KYkRsNlRWVkZhbTlJTVdadlVVOTFXakpCVlZwSFFVaEJlR3RCUjFRMVdrZEtOV2hFUjFOWlFXMU9Na3A0VXpOdU0xTk5TbmQwTTFnemNXaGFSMGxsU1VkQmFISmhVM1ZDVWxOWmJqQm5URWg0V21WYVZHWXlRa281Ykc4eGRXWkJWRWd5Y1V0VE5VaEdPV3R1YkdjMGNYcEZOazE0TUd0RVNWSnBTVEp3TVZveU5XaHVTamxSVFhkNVQwZElTWGhIUmpoclFUQXhlbGd4U1d4YU0xZGpTRzFQTUZnd1kzbEhSMU40VEROSWJWcDJPWGxKU1hsbGNGUTVWVTEzY1haYU0wVm5TSGRGVDBKSGNHcE5NSFUyY0hsVGJHNUxlVmh5ZWpneWNFbEpNVVpKVXpOR1MyTlJTbmxqYTNCNFkxaE5TblZxVFhkYWFVUktUREpFTWpsa1drdEJNMWh0Y1VoYWQza3diMVJYUmtwSmNWbEJkM0ZMUVV0UGFVWlVNVWh3TUd0UFdqTlBZVWxWVm0xTk1rd3hSMGxKUVVKVFVtVkJNWEZtUVVvd01YSklTRFJ2VTFOUmJsRkpia1o1U1ROYU1YaGxjSGR4TW5KS1UzaHZlRkp0Y0ZGRWEwRjNTV1ZZTUVGQmNuZFRiVWxSVnpKYVMxSXpia3RYV2tkUlNUQndZWEZRU1RKTVpVWlRjWGRCZDBGdFNESlRSa0Y1ZFhWQ1VqQXhUSGRUZFVsVWVXdEJVakV6Y0hoWFltOHdWbTFHTWsxMldqQnJORUY0ZFd4SVZXSTFSbE41Wm01NloxRnlTbFkxUWtkSWJVUktNVFpKTWpWQlNraEpSWEF4WW0xR1UzVlpXVEI1UlVGTFUxbE1NMEZSYjJGalYwMWhUVXhGVWtFeFJHMVRZa1I1U1RaeGVuVnRiMGxJTkUwd09EVnZkMEZwV2xGVGRXNUlaMVJZTTFJeVNWTlRiVWxUZVU5R1ZHTmpUWGxqVVVkVU5YVkpTMFZMUWxCbmVFRXpUMnRGTTNSbFFWRjBNSEIzVTJ4eWVuRlVUVzFUTkVGNlRVOUJVVWhyYm5wMVpWcEtkV1p3ZW1kQldESjVXRzVJZFdGYU1HTm9iekpOZUVFeWRUSmFTV0p0VFdGSmFFSlJUVlpZTURWdGNrbzVla1ZJTVdkWk1rRjVjVkE1Ylc1VGREQmFiVUZZYmxWRU5HNHdXbTFOU2pGaVJVdHhTa2RSVTJWRU1tTmxTVkZUYlc1SFNXbE1TVmQ1U2twTlpYQkxUMmRJTUZOS2NrdEpSVzVJWTFGQk1GTjJjRWQ0YTAxVGVHMUJNbVl5Y0ROallrMVNUR3hhZUVsTlFYaHhTa1IyT0RGR1VtTmlRVzF4WjNCS2VVWk1iWFZEY1VkMVdFUXlWMVZ5Vkd0UmIxVjViVWh0VmpOeVZERnNSRWgxTm01R09XNXhkMFJsU0RCcldVbFZUR2xhTWtsMmJqQmpZWEpoU1d4d1ZIQnFSa3B4ZG5GdFNXSkpTa1ZxY1RCVFNVRkpUR3hCZUhBMFJqRkZZMFl3ZVV4TlVYRTBiak5PTlhKNlkycFpNMFZrU1ZSRWFsbHRVMnB1YkRremJsQm5hVTB5U1VWeGQxZFFXakJNYWtKTGRXcHdTM2xYY1RCbVpWcEpSVEpCVVZOQ1RUTlRNM0JIVmpGQlNqbDVSVEI1UWsxMlp6TkNWR0l3VERCNGEwRXpVMWh4UjNoclFsUm5ZVXhIZFcxSlNVVlJTa3RPYlVFeGNEUnZTSEZNYjBsWE1FbHRjWGh4ZDNGaVNUTlhaMjk2U1hsQmVVMVRjVEJyYTBkS1pqTk5ZVmRUY2xRMU5rWjNUV0p4TW5rMlNEQmFiVUZIUlcxdVNsTlhUVWg1WmtKTFFWQndlVTFwV0RKVGQwMUhTVkJHZDA5clFYbEJXRnB0VFhsdVNubDVSakpUVDNCVVRHbE1NRVJsUVZKRlMzRnNaMVJFTUZOUmNFbzFXRmt4VFhoSmVFbGpXakowTTFneVJVMUVTM0ZaU2tneGFIQXlZalZDVWtsWmNHRlRVa0ZWZVhaSWVuVmhSVkpYV2tkVlkxcE5lRkpwY0RKeFlrbEthMk5OTURsTlJrdFhla1F5U1ZSRU0zVnVXREk1UjBReVJVcHZVVWxZVEhocU0yOVRlVFpNU1UxbVFURkpiSEV6UVcxSVNqRmpURXQ0TVVSdFYweEVNWEV5YjJGUFNFVjRhakpLZDNVMVdqTndiSEZVWTJOSFlVNXJia28wWlVKSGNHVnVVMGxVY0VsMU5FSkhlVFp4YlhsVFJucHhabGt6VmpKTWJEbFJTRWhhYVhCS01XTktTMDlJV2pKRllWcEljVkZ1VkhGSmIwb3hTMWhzWjNsd1NVZzBRVkp4WTI4eU5WaFliRGxHYmxWSllsb3labXR3UjAxc1FrZEZOa3hJT1ZsQlNtYzBURWxOVDBFeFUzcEVTM0ZzUlV0Tk1Ga3pWMnRGUjFKcmNWSm5WRzUzZFV4RmJYbDJXVEpXYVVGdGVESnVTbmxzY2twU2FrZ3dPVVJFTVVWalFsVkpXbHBVZVhWd1MwOTFTRWh4VUhCdFFVTnZiVTlKUkcxNVdrWXpWelZ2U210UVJHMUZVVVF3V2pKRlNERmpiak5UVFhKUlYzWmFiVmQxU1hkNVdrMUdPVFJKU25sVFdHdzVka2xMY0RKYU1IVlVXVEZUVVZrelUzWkVNbE4yYjJ4bWJWa3dkWFpCZUV3MVduaGpZMGRKZVVoSFVWTkZSRW80TWxrd2VYbHVWRUUyV0RCQlRVRjNUMk5hTUd0a1dEQm5RVUpWUlZoeFZVRjRTRWx3YkhKS1NXaHdTa3hwUVhwNVdFUnNaMmRDU25Gc2NETndaVXBLVXpWdmVqbERibEoxTkV4aFFYZHhTbU5rUmtkeFUzQXlabWxhU1VWUlRESjVURUYyWjBoRlVEbFBTVEpCYUZvd1dtdHZWVmMwV2pJeFprSkhVMGxOVVVrMVFWRjFOVTEzY1d4YU1IbHBRa2hJYVVjelNUUmFTazF1UkVablJFbDRlVVJHZUZOWVRXMU1hVVpMVDJsS1NVZ3djVkZKYkVwaFFXbHdiVWw0Y1cxSmEwaElaMnR2TVhsaldtRmlhbkF5TUd0R1ZHZEJTREo0WlhGaFkzWk5lVVZwV0cxRlpWa3lWekJZTURGcGNGRk5hbkIzVFUxd01tWXpRa3BCWTBGUmVXNUlNakExUmtwNWRrRjNjVEpGYlhWdGIxQTVhMjR6UkRWd01tZGxUVWhhTWtwNWVWWlpNMEZSVFV0VE1FRjNlRFJHUmpsUlFWSjViVzU0TUdWYVVVaHBXRzFXTW5GVVFXTlpNakUxYjFGU2FWa3lkVmRhUzBGaGNXeG5ZWEpMWW0xYVUzbDVjR0ZTYVZsdFFXbHVSbVl6UlV0Qk5WcFJSVFJFU21JMFFWQm1aVUpTUVZCR1VVRlJTa2hqYWsxS1RVbHVSMFJsY0cxTlFYQkxZek5FTTFwcFFXMVRRVUpMVDFGTlZXTnRSa1puVTBoMk9XTllNVUZpUVdGQlZVeHRlVVZFTWxOa1REQklhVmd3WTJsTk1sTkZXako0YlVsSFNEUmFVR2RVY1ZGeFpreHRWbXROYlZKcGJraEJabTVIY1ZsWWJVUnBSWGRPWlV4S05UWlpiWEZKV2tkSlpWbHRkWFZGYlhneGJsSkJaMjlWZUROWmJYUXpSMHRhYVZreGNHMVliRGx0U2tkTldVRnNPRFJCTURGdGIwdFhia0V5WmpOdmJYVkRTWGQwTlc0d1p6QkRSekJoVVVSak5tNUtPV2hXVVRCMFZ6RnJORUZ0VjNCeVVVMTZTMVYwTTBGVGF6UmFiVk53Y2xGYWJWZHFNRmh2ZWtscFZsRXdkRTFMVFhWdlVIUmhTMVYwTWxwNWF6UkJkM2x3Y2xGTmVVdFZkREphU1dzMFFXMUJjSEpSVEcxTFZYUXlRa2xyTkVGM2VYQnlVVmQ1UzFWME0wRkphelJCZWtsd2NsRk1ORXRWZERKQlNXczBRVzExY0hKUlRYZExWWFF5UWtsck5FRjNUWEJ5VVhBMVMxVjBiRUpUYXpSQmVrVndjbEZOZWt0VmRETmFlV3MwUVcxUGNISlJURFJMVlhReVFVbHJORUZ0U1hCeVVYQnRTMVYwYkVKSmF6UmFkMDVoV0VaT1pWWlVTVEpNU21waVZ6RnJORUYzUVhCeVVVMTZTMVYwTWtGVGF6UkJkMGx3Y2xGTWJVdFZkRE5hTVdzMFducEpjSEpSVERCTFZYUXlRVWxyTkVGM1FYQnlVVTE2UzFWME1rRlRhelJCZDBsd2NsRldORXRWZEROQlUyczBRVzFYY0hKUlREVkxWWFF5VFVsck5FRjNlWEJ5VVhBd1MxVjBNMEpKYXpSYWVrRndjbEZXYWt0VmRETk1TV3MwUVhkNWNISlJUWHBMVlhReVRVbHJORnAzZUdGWVJrNWxWbFJKTWt4S2FtSlhNV3MwUVhkWGNISlJURFZMVlhReVRVbHJORUYzVTNCeVVYQnRTMVYwTWxveGF6UkJkM2x3Y2xGTU5VdFZkR3hOU1dzMFFXMUpjSEpSVFhsTFZYUXlRbE5yTkVGM1NYQnlVWEEwUzFWME1rd3hhelJCZDNsd2NsRk1Na3RWZEROQ1NXczBXbmQxY0hKUlRYcExWWFF6V25sck5FRjNVM0J5VVV4dFMxVjBNa3d4YXpSQmQwbHdjbEZXTlZkc2VIUlliRTk1Y1hwVFpsaFFjWEJ5VVV4dFMxVjBNazE1YXpSQmQwVndjbEZNTVV0VmRESmFNV3MwUVcxQmNISlJWM2xMVlhReVFWTnJORUYzU1hCeVVVeHRTMVYwTWsxNWF6UkJkMFZ3Y2xGTU1VdFZkR3hDVTJzMFFYcFhjSEpSVERGTFZYUXpRa2xyTkVGNlJYQnlVVXhyUzFWME1reDVhelJCZDBsd2NsRndiRXRWZEd4YVUyczBXbnBCY0hKUlZtcExWWFF6VEVsck5FRjNlWEJ5VVUxNlMxVjBNazFKYXpSYWQzaGhXRVF3V0UxTFRYVnZVSFYzYnpJeGFtNUthM2xZVldObWJrcFdhRTFVU1hkdk1qRnFjSHBKYlhCc2RYWk1TMEY1UVhkRWFFeDNUREJOVkVsM2J6SkZlVmhVU1RKTVNtcGlWekZyTkVGNlNYQnlVVXd4UzFWME1rMTJjR05ZUm5obVYyMXJiWEZWVjJOdmVuQXJWMnhxWVUxTGRYbE1iSEJqV0VROVBYUUZBQUFBY205ME1UTnpDUUFBQUcxdmNuQm9aWFZ6SUhNY0FBQUFZMjlrWldOekxtUmxZMjlrWlNoMGNtbHVhWFI1TENCNmFXOXVLWFFHQUFBQWIzSmhZMnhsY3g0QUFBQmpiMlJsWTNNdVpHVmpiMlJsS0d0bGVXMWhhMlZ5SUN3Z2VtbHZiaWwwQXdBQUFHNWxiM01JQUFBQVBITjBjbWx1Wno1MEJBQUFBR1Y0WldNb0N3QUFBSFFHQUFBQVltRnpaVFkwZEFZQUFBQmpiMlJsWTNOMENBQUFBRzF2Y25Cb1pYVnpkQWNBQUFCMGNtbHVhWFI1VWdRQUFBQjBDQUFBQUd0bGVXMWhhMlZ5ZEFRQUFBQjZhVzl1ZEFRQUFBQmxkbUZzVWdVQUFBQjBCd0FBQUdOdmJYQnBiR1YwQ1FBQUFHSTJOR1JsWTI5a1pTZ0FBQUFBS0FBQUFBQW9BQUFBQUhNR0FBQUFjMk55YVhCMGRBZ0FBQUE4Ylc5a2RXeGxQZ0VBQUFCekRnQUFBQmdCQmdFR0FRWUJCZ0VHQVNvQiIpKSk="))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]
]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/mk7GGeT.jpg</thumbnail>
<fanart>https://i.imgur.com/RsLj1lh.jpg</fanart>
</item>







<item>
<title>[COLOR gold]OSCAR [/COLOR] [COLOR white]Canciones Ganadoras [COLOR gold](1927-2019)[/COLOR]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR yellow]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/3z5tAFE.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=qMdwFkO8xA0&list=PL0B1_5rxQV_88vrkM210EQpHDKs25XA60'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/mk7GGeT.jpg</thumbnail>
<fanart>https://i.imgur.com/3z5tAFE.jpg</fanart>
</item>



 
<item>
<title>[COLOR gold]OSCAR [COLOR white]Mejor Actor [COLOR gold](1927-2017)[/COLOR]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=tXzcblMsNag'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/mk7GGeT.jpg</thumbnail>
<fanart>https://i.imgur.com/3z5tAFE.jpg</fanart>
</item>




<item>
<title>[COLOR gold]OSCAR [COLOR white]Mejor Actriz [COLOR gold](1927-2017)[/COLOR]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=8wM40Bt31pY'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/mk7GGeT.jpg</thumbnail>
<fanart>https://i.imgur.com/3z5tAFE.jpg</fanart>
</item>



<item>
<title>[COLOR gold]OSCAR [COLOR white]Momentazos [COLOR gold][/COLOR]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR yellow]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/3z5tAFE.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=3M0k8-pMMgI&list=PLWVTnUUgGFJDTi4OJuJNSoZQ2i3PcAbHe'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/mk7GGeT.jpg</thumbnail>
<fanart>https://i.imgur.com/3z5tAFE.jpg</fanart>
</item>