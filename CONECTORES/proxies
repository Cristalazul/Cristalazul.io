import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MENSd0FBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RKT1JGa3pUbFJWZDAxNldUTk5lbGsxVG1wRmVrNVVWVFJPZWxFd1dWUk5OVTVVU1hwUFZGSnBUWHBaTWxwcVdUSk9la1V4VG1wamVVNXFVVEJPZW1NeVRucE5NRTVFWXpGT1ZFVXpUVVJhYlU1cVZUQlphbGt3VG1wamVrMXFXVEJPYW1jeVRucFJlazE2UVRKUFJGbDZUbXBqTTAxNldUSk9la1V3VG1wTk5VNUVUVEpOYWxab1RrUmpNRTFVWXpOTmVra3dXVlJOZDA1dFRUTk5la3B0VFcxWk0wMUVWbWhOZWxsNlRYcFNiRTVVWXpKYVZGa3hUWHBaTWxsVVRYZE9WR015VG5wWk1VNVVTVEpaYWxrd1RYcFZlazFxVVROT1JFa3dUMFJqTkU1RVNUSk9hbGt5VGxSQk1VNTZVbWxPZWxFeVRYcEtiVTE2WXpOTlJHTXdUWHBuTUZwcVRYaE9lbFV4VFVSTmQwMTZVWGxhYWxWM1RtMUZNMDVFWTNsT2Fsa3pUbXBOZUU1dFRYcE5la3B0VFhwWk1rMXFWbWhPVkdzd1RtcGpNazF0V1hwT2VtTTFUWHBaTTA5VVNtbE9iVlV6VFZSamVVMTZZekpPUkZWM1RYcE5lazVVVFROTmVrbDVXbXBLYlU1NlVYcFBSRkV6VFhwTmVrMUVXWGxOZW1ONVdtcGpORTV0UlRKT1ZGSm9UbnBaTTA1cVNtMU5lbFV4VFhwTmVrNXFWWHBPZWsxNFRqSkZlazlFVlhkT2JVVXlUV3BOTTAxdFdYcFBWR00wVFhwSmVWbHFTbTFOZWxsNlRXcE5NVTE2V1RKT1ZGbDRUbnBWTVU1NldteE5lazB5V2tSak0wNUhXVEpPVkdONlRtcGpNRTU2V214T2Vsa3pUMFJqZVU1cVVURk5ha3BwVG5wWk1sbHFUVEpPYWxWNlRWUmpNRTU2YXpCWmVrMHlUVzFaTTAxcVl6Qk9hbEV5VG1wamQwNVhSVEZQUkZKdFRsUkJNbGxVWTNsT2VrRXpUV3BOZUU1cVZUSk5hbGw0VGpKRk1FNXFZekJOYlVreVdsUk5lazE2YTNwT2FsRjZUbnByTTA1NldtdE9hbGw2VGxSV2FFNTZWVEZPUkZVMFRrUm5NazFVWXpGTmJVa3hUV3BqTWs1RVkzcE5WRlV6VFhwcmVrNUVZekpPYlZVd1drUmpNVTVIVlRKTmVsWm9UWHBuTTA1cVVtcE9iVlV4VFdwWmVrNTZaM3BQVkdONlRYcGpNRmxxVW1oT1ZGRXdUbFJLYlUxNlNYcFBWRmw2VGtkRk1WbFVWbWhOZW1jeVdsUlZkMDVYUlRKYVZFMDFUWHBKTWxsNll6Qk5lazB5VFZSVk5FNXRUVEZQUkZab1RucHJNazFxU20xTmVrRjZUVVJaTWs1cVVUTlBWR015VG5wWk1GcFVUWGhOZWxFeVdrUlpNVTE2VFRKTmVsWm9UbGRGTWxwVVNtMU9WR2N3V1ZSVk5VMTZZM3BOYWsxNVRsUkpNVTFxVm1oT2Fsa3pUVlJaTUU1NlVUSk5lbVJvVG1wck1rMXFZekZPYlVreVRrUkthVTE2UlRGT2FsVXpUbnBSTUU1VVl6Rk9lbGt5VFhwUk5FNXFTVEZaVkZFelRucEJlazlVWTNsT2FsVjVXV3BWTVU1dFRUQlpWRTB6VGpKRk1rNXFVVE5PZW10NVdtcGpNVTV0VFhsYWFrMTZUbFJKTVU1NldUSk9WMFV3V1ZSWk5FNXFVWGxaYWxrd1RsUlpNVmxVV1hoT1ZHY3pUMVJOTkU1NlozcE5lazAwVG1wWmVrMXFUWGROZW1zd1drUk5NazVIV1ROUFZGa3dUbXBGZWsxcVRUSk9WR3Q2VFZSYWFrMXRTVEphVkZVelRXMVpNMWxVVVRST1ZFMTVXbXBTYWs1SFdURk5SR00wVG5wTk0wNVVXVEJPZWxrelQwUlZORTVIV1RGWlZGRXlUbXBaTWxsVVVURk9hbFY2VFZSVk0wNUhVVEpPVkZVMFRsUnJNbGxVVFhkTmJWa3pUbXBWTTA1NlNUSlBWR00xVFhwWk1WbFVXWGxPVkdNd1RucFZkMDVIVlRCT2FtTjNUbXByTVU1cVRYcE9lazE1V1dwamQwMTZTWHBQVkZFd1RrUmpNRmw2U21sT2Fra3lUMVJOZDA1Nlp6Rk9SRTB4VFhwUk1VNXFXbWxPUjFVd1RucE5lazV0VFRKUFJFMHpUbFJqTUZscVRUQk5la2w2VG5wTk5FNXFhekJOYWxreVRucEpNMWxVVVhoT1ZFRjZUbFJTYVU1NlNYcFBSRkUwVG0xRk1GbFVXVFZPYlZVeVRWUlNiRTV0UlROUFZHTjVUbnBqZWsxRVl6Sk9hbFV6VFdwak0wMTZUVE5QVkUxNVRtcFZlazlVWXpWT1ZHc3pXVlJSTlUxNldYcE9SRkpxVGtSak1VNVVXVEpPUjAwd1RsUmFiRTVIUlROT2VsbDVUWHBWTWs1NlNtMU9Na1V6VG5wa2FFNUVZekphVkUwelRrUlpNazVVVFRCT1ZFVXpUMFJOTWs1SFVUQmFWRkV3VGtSbk1FNTZXVEZPUjFFeVQxUmpOVTV0VVRGT1ZHTXlUbnBOTTFsVVZUSk9iVWt4VFVSTk5VNTZSWHBPZW1Sb1RrUnJNMDlFVW14T2VsRXlUbFJqZWs1cVl6SlBSRTB3VGxSQk1rNXFVbXRPVkdONlRucFZORTE2VVROTmFrMTNUbXBWTUZwcVl6Rk9SMFV5VGxSTmVrNUVZekZPVkZVelRtMVZNazVxVVhoT2FrMHpUWHBhYWs1RVkzbGFhbFY1VFhwUk0xbFVVVFJPYWxVelRucE5NMDE2UlRGT1ZGRXlUbTFGTUU1RVRUTk5iVWt6VG1wak5FNUhVVEpaVkZGNVRtcE5NRTVxWkdoT2JWbDZUa1JWTlU1cVozcE9lbHB0VG5wUmVrOUVVbXBOZWxreFQwUmFiRTE2VVROUFJHTXdUa1JWTUZwcVRYbE5iVWt5VFhwYWFrNXRWVEphUkZFelRucE5NMDE2V1hwTmVrMHpUV3BWZUU1VVl6SmFSRTAwVG0xWk0wNXFUVEJOZWsxNlRsUk5lazVIVlRGT1ZHTXpUbFJCZVZwcVZUSk5lbU14VG5wVk5FNXRXWHBPZWxrMFRYcGpNazFVVVhoT1IwMHpUVlJhYWs1cVNURk9ha3B0VGxkRk1GcFVZekZOZWxVeFRWUlpOVTVFVFhwTmVsVjVUbnBqZWs1VVZYZE9SMUV5V2xSTmVFNXRXVEZOZWxrd1RXMUpNRmxxVFROT1JFa3dXbXBhYUU1RVp6Sk9WRlV6VGpKRk0wNUVXVFZPVkZWNlRVUkthVTE2WXpOTlJGcHFUbnByZWs1NlRYbE9SMFV5VGxSTk0wNXRUVEJQUkUxNFRrUlJNRTlFWXpST2JWVXlUbFJaTTAxNldYcE5WRTE2VGtkRk1rNXFZek5PYW1NelRucFJNRTVVUVRCUFZHTXdUWHBuTVUxVVZUVk5la2t4VFVSTmVVNUhSWHBPZWswMVRrUkpNazVxV1hwT2VrVXlUV3BaTVU1cVVUTlBWRkpwVG0xVmVrNTZXbXRPVkdNeVRsUmFhVTU2V1RCWmFsbDRUa2RGZVZwcVdYbE9iVmt5V2tSWk0wNHlSVE5OYWswMVRucEJNMDFxU21sT1ZGVjZUMFJSTWs1SFdURk9lbEV3VG1wWk1scEVWWGRPZWxVd1RWUlZORTU2VVRGTlJHTXhUbXBGZVZscVRYcE9SRTB4VG5wak0wNVVSWHBPVkdONVRsUnJNVTFxU21sTmVtc3pUWHBhYUU1RVJURk5lazAwVG1wbmVrNXFZekJPVkdjeFRVUmthRTVIVlROUFJFcHRUWHBqTWxsVVVURk9hbGt4VFhwU2FVMTZhM3BOZWxsNVRYcHJlazVFVVRKT2Fsa3hUVlJqTWsxdFNUQmFWRmw1VG5wVk1VNUVXVEpOZWxFeFQxUlZlazE2WTNwT2VsVjNUbnBSTTA1cVVtcE9lazB5V21wUmVFMXRXWGxaYWxKb1RrUk5NVTFFV1hwT2VrVXpUbnBaTkUxNlRUTk9lazB6VG5wSk0wOUVWWGRPVkUwd1dsUmFhazV0VlhwT1ZGcG9UbnByTWs5RVdtaE5la2t6VG5wVk1FNTZRVEZaVkZKclRsZEZNRmw2VFRWT2VtTjZUMFJaTVU1VVkzcE9WRmt3VG0xUk1rOUVVbXhOZWtFd1RWUlNiVTE2U1RKT2VsVjNUWHBKTTA5RVkzbE5iVmt3V1hwYWJFNVVRVE5PVkZrMFRYcE5NMWxVV1ROT2Vtc3lUbXBqTWs1cVl6QmFhbEp0VG5wbk1rMVVUWGRPUkZWNVdXcFplVTVxV1ROT2Vsa3hUWHBaTTA1NldUSk5la0Y1V21wTk5VNUVXVEJPYWxrelRtMVZNazU2V1RCT2VtTXdUbnBLYlU1cVl6SlpWRXB0VGtSUk1scEVXVE5PUkdjeFRWUmthRTF0U1RCT1ZGcHNUWHBOTUU5RVNtMU9ha1Y2VDBSak5VNVVRVEpPUkZsNVRrZEpNMWxVWTNwTmVtY3dXbXBaZUU1NlVUQk9SR015VG1wcmVrNUVZelZPYWxsNlRWUmpNazU2UlRGTmFsa3hUa2RSTWs1NlRYbE5lbXN4VFZSak1rMTZWVEZOZWxVMVRYcHJlVmxxVVRCT2JWVXpUV3BSZUUxdFdYcE9hbFYzVG1wUk1scHFWVFZPVkVsNlRucFZOVTVFVFROWlZGbDVUWHBKZWs1RVVURk9SMWt3VDFSU2EwMTZaekpQVkZFMVRXMVpNVTFxVlhoT1ZHTjVXbXBSTkU1RVRURk5WRkV4VGpKRmVrNUVVbWhPUjFsNVdXcFNhMDVxVVhwTmFtTjNUbXBaZVZscVZYcE9SR2Q1V21wTmVVNUhUVEZaVkZWM1RucFJNVTFxWXpKT1ZGRjZUbnBSTkU1cVdUTk9lbFY0VG1wWk1rNTZVbXhOZWxVd1QxUlZNRTF0V1RGT2VsazBUbXBOTTA5VVZURk9SRmw2VFhwamVFNVVRVEJPZWxGNVRXMUplazFxVW1sT1ZHTXdUbFJOZWsxNldUTk5WRkY1VG1wWk0wNTZTbWxOZWxWNlRrUlZNazV0VlRCWlZFMDFUbXBuTWs1cVVURk9lbWQ1V21wV2FFNUhSWGxaYWxKclRtcG5NVTlVV1RKTmVsa3pUbFJWTkUxNlkzcE9SRkpyVG5wWk0wNTZXWGxOZW1jelQwUmpNazE2UVROWlZFcHRUa1JWTWs5RVdtcE9lbWN5VG1wTk1VNUVVVE5OYWsxNlRsUnJNMDE2U21sT1ZFMTVXbXBhYVU1VWEzcFBWRTEzVGtkUmVrNVVZM2xPZW1jeVRucFJORTE2UVRGTlZGcHFUVzFKTVU1VVl6Rk9SR015V21wWk5FNUVTWHBOYWxVd1RrUnJNVTVFVFRST2VtTXhUa1JLYVU1RVZYcE9lazB6VG1wWk1VMUVXbXRPZW1jelRucGplVTE2V1RKT2VrMTZUWHBSTTFsVVRURk9hbU16VG1wWmVFNUVTVE5OYWxVd1RqSkZNRnBFVVRWTmVrMHlXa1JSZWsxdFdUTk5lbFY1VG1wTk0wMTZZekZOZWxreFRucGFhMDVVWnpCWlZGRXhUa2RGZWs1RVl6Uk9lbGw1V1dwWk5VNVVaM3BOVkUweFRrUlpNRTVVV1RGTmJVa3lUbnBWZDAxNlJUSk9WRnB0VG1wSmVWbHFVbXRPVkVsNlRucE5lVTVxWnpOT1JHTTBUbTFGTTA5RVdtdE9hbWN5VGxSUk5VNXFZM2xaYWxVeFRtcEZlVmxxVlhoT1IwVXdXa1JOTkU1cVJUSk9WRnB0VGtSVmVWcHFXbWxPYlUweFRsUlJNRTF0V1hwUFZGVjVUWHBqZWsxcVRUQk9WRVY2VG5wamVVNUVZekpPVkZWNlRYcEJNRTlVU20xT1ZHTXdUMFJLYVU1VVNUSlplazE2VFhwck1FNUVXVEpOZWxrd1RYcFNiVTVxUlROTlJGcHBUa2RGTWsxNlRUUk5lbGt3VGtSUk0wNUVVWHBOZWxVd1RqSkZNMDE2VVhoTmVrMHdUbnBOZDA1dFNUSlpWR00xVG0xWk0wMTZWVEJOZW1Nd1RucFJOVTV0V1hwUFJGSnJUWHByTTAxNlVUQk5iVWt5VDBSS2JVNXFZekpPVkUwMVRrZFZNVTlFVVRSTmVrVXdUMFJqTWs1RVozcE5hbEpyVGtkVmVrNTZUVFJPUkZVd1drUlNiRTU2VlhwTmVsRjRUbnBaZWsxRVVUTk9iVkY1V21wVk5VMTZUWHBPYWxGNlRsUm5NVTFFV1RWT2VrMHdXbFJWZDA1VVFURlBWRmsxVGtSbk0wMUVVVEJPVkdjelRXcFZlazF0U1hwUFZHTjZUa1JuZWs5VVZYaE9WR3Q2VGtSWk1rNVVRVE5PZWxsNlRXMVpNVTU2VlRWTmVtY3dUbnBWZDA1cVJYcE5hbGt5VFhwRk1GbFVTbTFPYW1jelRtcGFhMDVxWnpGT1JHTTFUbTFOTWxsVVZYbE5iVmw2VFdwUmVVMTZUVEZPUkVwcFRsUkpNMWxVVFRKT1ZHY3lUbFJWZWs1SFJYcE9lazE1VGpKRmVrNVVVWGhPZWtsNlRrUmpkMDVxVFhwTmVsbDZUbnBqTWs1RVl6Vk9SMWw1V1dwUk0wNXFTWHBQUkZKclRucG5lazlFV1RWT1IxVXlXVlJWTUUxNlFUTk9lbVJvVGpKRk1VMUVUVFZPZW1jeVQxUlpNazE2VFRCTlZGa3lUbnBOZWs1RVZYZE9iVkV4VDFSUk1FMXRTVEJhUkdSb1RYcFZNbGxVV1RGT1ZFa3dUWHBOZWsxNldUQlpla3BwVGtkSk1FMXFZekpPUjFFd1dsUk5NVTV0V1RCT1ZFMDBUbFJGZWs5VVRUUk9lbWN5VG1wTmVVMTZSVE5aVkZKb1RucFpNVTE2V21oT2VtY3pUMFJaZVU1VWF6SlplbHBzVG5wck1FNVVWWGROYlZsNlQxUmpORTV0UlRKT2FtTjRUa1JGZWs5RVZYcE5lazE2VG5wUmVVNXRWVEJaVkZVMFRtMUpNRTFxWXpKT2FtTXpUV3BOTlU1RWF6Qk9lazAxVG1wck1VOUVaR2hPUkdzeVRtcE5NRTU2WjNwT2VrcHBUbXByTUU1VVdtaE9WRlV5V2tSUmVFNVVRWGxaYWxGNlRsUm5NMDVVWXpGT1IxRXpUa1JqZVU1dFVUTlBWRkV3VG0xWmVrMUVZek5PZWxrelRsUlNhMDVFU1hwUFZGVjRUa1JKZWs1cVVYcE9WMFV5VFdwVmVrMTZSVE5aVkdNd1RtcG5NbHBVVFhkT2VtTXlXVlJOTlU1RVVURk5SRlUwVGtkVk1VOVVVbXhPTWtVd1RWUlNiRTE2WXpGTlZGVjRUbXBKTWxscVVtdE9hazB5VG5wUmVrNTZWVE5QUkVwcFRrUm5lazlVVlhsT1JFa3dUa1JTYVUxNlp6SmFWR015VG1wck1FNVVTbWxPVkVGNlRtcGpORTVVVFhwTlJHTjZUbnByTVUxRVRURk9SRmt4VDBSamVVNUVXVEpPVkZKdFRsUkZNMDVxWXpST2Ftc3dUbXBLYVU1dFRYcE5lbU0xVG1wbk1scHFWWGxPZWxVelRVUlJlVTE2YXpGWlZGVjZUVzFaTUUxcVVtaE5lbFV4VGxSak1VNXRXVEpOZWsxNFRtMVJNVTVxV1RCT1JFMHdUbnBTYWs1dFVUSk5hbFUwVG1wVmVrNVVUVFZPVkZFd1RtcFpNazU2WXpKTmFtTTBUa2RGZVZwcVRUSk9WRmt4VFVSVmVrMTZSWHBPYWxFMFRrUm5NMDFFVVRGT2Vsa3hUbnBSTWs1SFdUQmFhbVJvVGtSTk1FOUVUWGxPYlVrd1dXcE5OVTVYUlhwUFZFMTRUa1JSTTA1cVVtbE9SR2Q2VDFSUmVFNUVaekZOZWxWNFRsUm5NMDlFWTNkT2JWRXlUMFJWTkUxNlNUQmFSRTAxVFhwVk1FMVVZekJPVkdkNlRtcGpkMDVVVlRCUFJGa3lUbFJSTUZwVVdURk9WRTE1V1dwV2FFNTZRWHBPYWxwdFRtMU5NMDlFVW1oT2FsbDZUbnBaTlU1RVVURk5SR04zVG0xRmVrMTZXbXRPUkUweVRYcFZlRTVxVFhsWmFscHRUbXBWZWs5VVdUTk9WRkY2VFZSTmVrNXFVVEpaYWsxNlRYcEJNRTlFVW10T1ZHY3dUa1JOZUU1dFVURk9SRlUxVGxSamVWbHFXbXhPZWtFeFRXcFNhazE2WnpKWmVsRjZUa1JaTTA1cVVteE9SR3N5V1ZSVmQwNXFhekZOZWxKdFRXMUpNRTVVV210TmVtTXdXa1JaZVUxNlVUTk9lbFV3VG5wVk1scHFZelZOZW1jelRucGFhRTE2YTNsWmFsSnRUbXBuZWs5RVkzbE9hazB5VGxSTk1VNTZWVEZOYWxrd1RtcEpNazFVWTNwT2Vra3hUbnBXYUU0eVJUTlBSRTE2VG0xWk1rNTZTbTFOZWxFeVRucFZkMDVxWTNwTmVrMHhUbFJqTVUxcVNtbE5lbGt4VG1wUk0wMXRXVEJQUkZGNVRXMVplVmxxWXpWT1ZGa3pUMFJWZUUxNmF6QlphbU42VG5wWk1rNXFUVEZPUkdONlRtcFZlRTVFV1hwTlJHTXpUbnBKZWsxNldUVk5la0V3V1ZSVk0wNTZhekJPYWxVMFRrUk5NbGxVVFRKT2VtdDZUVVJWTUUxdFdUTk5hbFYzVG1wVk0wMTZZM2hOZWtreFRVUmpkMDVIV1hwT2Fsa3pUbFJuTTFsVVRYbE9hbFV5VFhwTmQwNTZaM3BPZWswMFRtcEpNbGxVVVROTmJVa3hUbFJWTUU1cVVURlpWRkpzVFhwSk1FMTZXVEpPUjFVeVRtcGplazVIVlhwTmFsRjVUa1JaZWsxcVdtbE9lbGt5V21wUk1VMXRTVEZaVkZGNFRtMUZNVTVxWXpST1Iwa3hUMFJaTlU1dFZURk9WRlV3VFcxSk0wNUVWVFJPVkVWNlQwUk5OVTV0V1RGT2VrcHRUbFJWTWs5VVdUQk9hbWN6VFhwTk5VNXRSVEJaZWxsNlRsUk5NRTlFVW1wT2FsVXpUa1JOTUU1NlVUQk5hbGt3VG0xRk1FNVVXbXhPZWtrd1dtcGFhMDVFYXpKT1JGVjRUbnBKZWsxRVkzbE9iVWt4VGtSS2FVNVhSVEZPUkUweVRsUkpNMDE2V21sT1ZFbDZUWHBTYWs1NlZURlBSRnBzVGxSSk1rMXFVVFZPVkZsNlRucFZlRTVxV1hwUFJGRjVUVzFaTUU1VVZYcE9hbEV5VG1wWk1VNXFhM3BQUkZKc1RXMVpNazE2VW1sT1ZGbDVXbXBSTWs1VWF6TlBSRnBvVFhwak1FMXFVbTFOZWtFeVRXcEthVTVIU1RKYWFsVTBUVzFaTTA1NlRUUk9SMDE2VFdwVmVrNXFXVEpPZWxVMFRucEpNMDE2VlRKTmJVa3dUVlJqTWs1RVNURlBSR1JvVGxSRk1VOVVZelJOZW10NlRucFZlazVFUlROT2FrMHlUbXBqTTAxcVdtaE9SMFV5V21wak1rNXFaek5PUkUweVRucGpNRnBVVW0xT2FsVXpUWHBOZWsxNldUTlBSRmt5VG0xRk1rOVVWWGRPVkZsNlQxUmFhRTVIVFROTlJGcHBUa1JSTWs1cVZUSk9ha2t6VGxSTk5VNUVUVEZQUkdNd1RsZEZNVTVFVFRCT2JVVXdXWHBLYlU1NmF6QlplbEUwVG0xWk1rOVVZM2hPYWxreVRtcFZlazU2V1hwTlZGRjZUbTFWTUZsNll6Sk9lazB5V2xSTk1rNXFSWGxaYWxGNlRrZFZNazVVWTNwTmVrRjZUbXBrYUU1dFZUTk5WRlUxVG0xSk0xbFVXWGxPUkZFeVRtcFJNMDE2VFROTlJGa3dUakpGTUZwRVVUSk9Na1V6VGxSamQwNVVXWHBOZWxrelRtcFplVnBxV20xT2VrMTZUbXBSZWs1VVNYcFBWRmw0VG5wTk1VNVVUVEJPYW1NeFdWUmFhazVxVVRGTmVsVXdUWHBuZVZscVZYaE9SRlY1V21wU2FVNUhUVEphVkUxNFRrZFJNVTFFWTNwT1ZGRjZUWHBOZDA1VVl6Tk9lbGw1VFhwRk1rNTZXVEpPYlZGNVdXcFpNMDVIVFhwT2FscHRUbFJKZWs5RVdYbE9SRmw2VGxSWk5VNXFVVE5OZWxGNlRucFplazFFVlRWTmVsVXlUbnBSTUU1NlRUQk5ha3B0VG0xUk1sbFVUVEJPZWtreldWUlNhMDVVU1hsWmFtTXpUbGRGZVZscVVtaE9Na1Y2VFdwTk1FMTZZM2xhYWxWM1RYcEZNRTFVV1RCT01rVXpUbnBLYVU1RVRURlBSRkpvVG1wWk0wNUVVVE5OZW1NelRYcGpNVTU2WTNwT2VrMHlUa1JGTWs1cVZUTk9SRWt3V1hwYWJFMTZhekJOYWxreVRYcFpNRTU2U20xT1ZGVXlXbFJLYlU1VVRUSlpWRmsxVG5wVk1rMVVXVEJPYWsweFRXcE5kMDU2V1RKUFZGcHJUbXBaTVU1cVZUVk5iVWt5V1hwU2FrNXRVVEZQVkUwMFRsUnJlazlVU21sTmVtTjZUVVJSZWsxdFNURk9hbFV6VFhwVk1scHFZM2xOYlVrd1RWUlpNazU2VFROUFJFMHlUakpGTVU1RVdtaE9SMDB6VGxSWmVVMTZVVE5PUkZsNlRsUk5lazVxVFRWT1JGRjZUMVJWTlU1VVFYcE5WR040VG5wak0wMXFVbWhOZW1kNlRrUlJNazVxV1hwT2VsVTBUbTFaTTAxRVNtMU9SMFY1V1dwTk0wNHlSVE5PVkZWNlRsUk5lazE2WXpKT1ZHTXdUbnBOTkU1VWF6QlBSRXBwVG5wak1FOUVUVEJPUkdONlRYcGplRTVFVFRKYVZGVjNUbnBWTTA1RVl6Uk9SMDE2VDBSYWFrMTZUWHBPYWxKcFRtcFZNMDVVVVRKT1IwMHdUMFJqZDA1RVl6Sk5hbFY0VG5wQmVrMTZXVEJPUkZGNVdtcGpOVTVxU1hwT1ZGRXpUbXBaZWsxRVdtMU5lbWQ2VFZSYWJVNXRUVEZOUkZWNlRsUlJNMDFxWXpKT2FtdDZUVlJLYVU1SFNURk5SRnBxVG5wbk1GcFVUVEZPUkdzeFQxUmpkMDVxV1hwTmVsRXhUa1JSTWxsVVVUUk9la2t5V2tSVk1FNTZXWHBOUkZFeFRsUlZNazVxV21sT1IxRjVXV3BaTlU1SFRYcE9SRTAwVGxSUmVrMTZUWGxPUkVVeVRsUmpORTE2WTNwTlZGbDRUa2RaZWs5VVVtdE9SMWt6VFhwU2FVNVVUVEZQUkdONFRrUkZNVTFFWXpST2JVMHdXVlJWTkUxNlkzcE9hazE0VG1wVmVWbHFWVEpPYWxsNlQxUlZOVTVFV1hsWmFsRjVUbFJCZWs1NldYbE9hbGt5V1hwWk1FMTZaekpPZWsxNlRqSkZNRTFxWXpGT2VrMHhUbFJOTWs1NlkzcE5lazAwVGxSWk0wNTZTbTFOZWtVelRXcGthRTR5UlRKTmFscHBUbXBqTWs1RVRUTk9hbXN5VGxSWk1FMXRTVEpQVkZKb1RucFZNVTlVU20xT2FrVXpUbFJOZUUxdFNUTk5lbU41VGtSUmVrMUVXVFZOZW1kNlRsUk5NMDVIVFROT1ZGVTFUbXBuTTA1Nll6Sk9lbFV4V1ZSak5VNVVVWHBQVkZKdFRtcFZNRnBxVlROT2FsVXhUMFJSTkU1RWF6SmFSRXB0VGxkRk0wNTZWVFJPYlZFd1RWUktiVTVxUlRGWlZGa3pUbFJuTTA1VVZUQk5lbXN4VDBSWmVrNXRXVEpaVkZFeFRYcFplazVVWTNsT2VtY3lUVlJhYVU1dFVYbGFhbEpvVG5wWk1scEVWVFJOYlZreFRXcFZkMDE2WnpCUFZFcHBUa1JKZWs1NlRUUk9SMUV6VGxSUmVFNXFWVEZOVkZreVRYcFZNRTE2U20xTmVrRXhUMFJOZWs1NlRURk5SRTAwVG1wck1FNTZTbTFOZWtrd1dWUlZlVTVVWnpKWlZGazFUbnBaZWsxRVZYZE5lbXQ2VGtSU2JFMTZWVEJOVkdNeFRsUnJNMDVFVFhoT2JWRXhUMFJTYkUxdFNUQlBSRlV5VGxSck1GbDZTbWxPVkVWNlQwUlZlRTU2U1hsWmFsVTBUWHBuZWsxRVZYZE9lazB6VFhwUmVVMTZVVEpOVkdNMVRsZEZlazlVVlhwT2VtY3pUMVJqTlU1cVZURk9SR1JvVGtSTk1GcHFZekJPVkd0NlRucE5lRTV0VFRKT2FsWm9UWHBqTWsxNldUUk5lbU16VGxSVk1rMXRXVE5OUkdNd1RtMUpNVTlVWXpCTmVtc3dXWHBLYlUxMENSd0FBRzFTTVZwdFYzWkJlbEl4UVZGd05FRktVbXhNZDAxM1FYZE1NMXB0V2pCQlZGcHRRWGRFTWtGUlJHMWFVWEF3V25wV2JVRjNSRFJCVkV3d1FrZE1iRnB0ZURGQlIweHRRWHBFYlVGdFRYcEJkMHhzVFhkd05FRjZWak5CZDNBMVFYcGFNMEpSY0ROQlIwNXRRVWRhTkZwdFREQkJVVm8wUVhkYU1FMVJXakZCYlhReFRFZE1hMEZIVG14TWQwVjZXbTFJTTBKSFNEQkJlbFl4V2xGYU5FRkhlREJCVVV4dFFXMTBiVUZ0U0dwQlVWWnRRbEZhTVVGdGNERkNVWEF3UVZGNGJVSlJjRFJhYlZveFdtMU1OVUZSV20xQ1VWb3pRVlJhTTBGM1NYVkJSMVl6UWtkd01rRjZSREJhUjB4dFdtMVdiVUYzUlhWYWJWb3lURWRYZWxwdFRqTkJkMHd5UVVkME1VSlJSRFJhYlZvd1RWRklhbHB0VERKQ1IwaHFRWGQ0TUVGdFYzcGFiWEF3UWtkWGVrRkhWakpCZDFveVFWRk1NVUZSY0RGQmJYZ3lRbEZ3YWtGNlVqQkJVVVY2UVhkSU1FMUhXakZCZDNSc1RYZHdhMEZSZERCTmQwZ3pRVXBTTWtGUlJESkJla2h0UWtkSU5VRkhVbTFhYlZvelFWRlNiVnB0V2pKYWJWSnRXbEZOZUZwdGVESkJVVVF4UVVkYWJFMTNTREZCVkZZeVFYZE1OVUZVVmpKQlIwaHRRWGRhTWxwdFdqQmFiWFF6UWtkSU5FRjNjREphUjFveVFYZDBNVUpSY0d0QlZGSXpRWGR3TUVGSFRESk1SMWQ2UVVkME0wRjNjRFJhYlZJeVFYZFhla0ZSVmpCQ1VWZDZRWGRFYkV4M2NEQkJSMUl5VFVkWGRrRnRjREpOVVVnMFdtMUliVUZ0U0cxYWVreHRRVWR3TTFwdFZqSmFiVTEzUVRKU00weEhjR3RCZWxKc1RYZHdNRUYzZUcxYWJVZ3pRVkZhTWtGM1REVkJkMHd4UVVkRU5GcDZUREphZDBWMVFWUk1iVnBSUkRSYWVrd3dRVzFhYWtGNldqTkJVVXd6V20xd01scHRSREpCYlV3eVRYZEpkVUZ0UkRCTWQxZDZRVkZXTVVGUlYzWkJSM2d6VEVkTU5VRjNTRzFCUjNGMVFYcFNNRUpIVFhaQmQwd3pRbEZOZGtGNlNESkNVVXd3V25wTWJFMTNSWGRCVkVnelFYZEVNVUV5VW0xYVIwdzFRWGRNYkV4M2NEVkJSMFF3VFZGWGVrRjZUREZhZDFvMVFWRjRiVnB0VERKQmVrUXhRVzFNTVVGNldqSkJkMDE0UVVkME1rMUhXakJCUjFZelFsRkliVnA2VEROQlIwMTRRVzFNYkUxM1JETkJSMVl4V2xGTU1WcHRjREZNUjFvd1FVZDBNa0pSUlhaYWJYQXlURzFJTUVGUmRHMWFSMHd6UVcxTU1rMUhTWFZCYlU1dFFYZElha0Z0VERKTWQwd3lRVzFPYkV4M1dqRkJWRm96UVcxTmVWcDZWakpNUjFwdFFXMTRiVnBIU1hWQlZFaHRXa2RFYkVGVVdtMUJiVXhyUVVkYWJWcHRXalZCZDFJelFsRndha0ZVV214TmQwdzBRWHBJYlVGUlNERmFiVWh0V2tkTmRVRlJjREZhVVV3eVFXMUVNa3hIV2pOQmQzQXpRWGRhTWtGNldtMUJiVTExUVcxRU0xcFJTRE5CZDBneFFWRlhla0Y2U0RKQmQwVjFRWGRJTTFwUlJERkJiWFF4UWxGd01FRlJkREZDVVVoclFVZGFiVUZ0U0d4QlIzQnRRbEZOZVZwNlZqQk5kM0JzUVhwV01FMVJUREJCU2xJeFFsRmFiRUZLVWpCYWQxbzBRVzFXTWtGM1NHdEJiVlp0UVcxRmVscHRXak5CZDBRMVFYZDRiVnBIVERSQlVYUnRRWGRNTkVGdFRHMUJiVWh0UVhkRU1WcEhSR3hhYlZJeVRHMU5lVnB0VGpGYWJVZzBRVlJhTUUxM1JHMUJkMFF5UWtkRU5GcHRUakpCZDB4c1FXMTBNVUZIUlhWQmQwUXhXbmRJYlZwdGNHeE5kM0ExUVcxd2JVRkhUREpCZDB3d1FsRkVNMEZSVEcxQmJVMTVRWGQ0TTFwdFJYZGFiVll3VFVkYWFrRnRjREZhZDFvd1FYcFNNa0YzUlhkQlIwUXlURzFFTkVGdGRETkJkM0YxUVZGTU1rRjNURzFCZDNSdFFVZGFha0ZVVWpGQ1Ixb3lRWGQ0TWsxSFREVkJVWEF5UVhkYU5VRkhUakZhVVV3MFdtMWFNMXAzUkd0QmJVZ3hXbEZ4ZFZwdGVHMWFSMXByV20xMGJFeDNXak5CYlZJeVFYZHdiRnB0VERKYVIwaHFRWHBTTWt4dFNERkJWRm96V20xTmVVRkhUREZCYlZwclFXMWFNVnBSU0dwQlVWSnNUWGRhTkVGSFdqSk5SMFY2UVcxd2JWcDNXalJCUjFwdFdrZGFNMEY2V2pOTVIzQXhRVlJhTTFwUldqVmFla3d5UWxGd01WcHRTREphYlZkNlFYZFNNVUZIU0RGQlVYUXpRVWROZUVGUldqQmFiWEJ0V20xME0xcEhjR3RhYlZZeldsRk5ka0ZSZEROTVIwZ3hRVkYwYlZwdFREVkJiVkl5UVcxd2JFRnRlREZDUjNCcVFXMTRNRXgzV2pSYWJVNHpXbEZJTWtGUmNHMWFVWEJ0UVZGTU0xcFJUWGRCUjB3eFFYZGFNRUYzZUROQ1IzQnJRWGRJTWsxM2NYVkJla2h0UWtkTU5VRlJlREJDUjAxNVFYZFdNMEpSY0d0QlZGcHRRVkZ3TVVGNlNESkJSMHd4UVVkRWJVSkhUWHBCYlU0elduZEVNMEZSZEROQlIweHNXbTFJTTBGdFNHcEJNbEl5UWxGSWJFRjNXakZCUjB3eVFWUklNMEZSV2pOQmVraHRRVzFhTlVGM1ZqSkNSM0F4UVVkV01reEhUWFZhYlU1dFdrZElOVUZIVEcxYVIwMTVXbnBNTVVGdFdtdEJSMFF4V20xTmVrRlVXak5DUjNCcVFYZFdNVUYzU0dwQmVsWXpURWRNTUZwdFVqRkJiWEF6UVcxME1FRlJURFZCYlZvd1FsRmFNMEYzVEcxYWQwVjVRVlJFTUZwSFdqTmFla3d5V20xTWEwRktVak5DVVUxNlFXMWFNVnAzV2pGYWVsWXdUVWRhTUVGdFZqQkJiVXd3UVZGV2JVRnRURFJhYlhBeVRFZE5lVUZSU0RGQmQwd3pRVlJNTWt4dFNESkJkM1J0V20xd2JVRnRUbTFDVVhCclFYZDBNa0pIY0RWQmJYUXpRWGR3YTBGSFZqRkJkMW94UVcxYU0xcEhSREJhYlhBeVdrZElOVUZVU0d4TWQwd3dXbTFFTVVGM2NYVmFiVTV0V20xTmVVRlJkRzFDVVVWNFdtMVdNVnAzV210YWJYUXpRVkZYZWtGUldqQk1SMWQ2UVVkNE1VSlJXakJhYlhBeVRHMU5ka0ZVV20xQmJVUXlRVkYwTUVGM1NETkJWRm95UVhkTU5VRjNUREJOUjB3MFdtMWFNa0pSU0RSQlVVeHRRa2RhTTBGdFdqTmFSMW93UVRKU01FeDNjRzFCYlhBeldsRmFNa0ZIY0RKYWJVUnNRVlJNTTBGM1dqSkJla1F3VEVkTU1rRnRlREZhUjNGMVdtMUliVUpSV2pGQmQzQXdRbEZhYkVGUmRHMUJVVWh0UVVkNE1VeEhXakZCVVZZeFdsRklhMEZIU0cxQmJWb3dRVzFXWVZGRVl6QndlbmxvYmt0Rk5WWlJNSFJYTWpWWWNIZEZXbkV5U1hoTlMwMDJjRE5KWjBnelUyMUlTbmxvUjBwclVXNVNORE5ZTVdOSVdUSjBNVXd6UkcxQk1qRnJibE5KWVVVd1JERnVZVnBzY1VkYWFrSlNRVlJ3VW1kUVJUTjFiVUZKVFRaQlNVRTJSVWRGTVV3d05XZE1NVTlrUjFWNGFrUklRVFJLVlVGbVRYbEZiVTEzZUdWeVVEbDRTRkE1WWt4TFFXRnZNRGxGUm0xUFNWcEhjVzV3VVVGSFJtRkZiSEI0YTNkdlMwRkljRkZCWjFveU1XRkhZVUZsVFhoQllrMTRZMnhIU1VWUlRVbFBZMHBJTlUxQlNVUXliakJCWVVkU1UxRkhNMEV6UlhveFowbElaMFZHTTFkVVFUTkViRmt6U1doRWQwVlZjVEYwTkhBd1JETmFZVWcxV1cxRk1WZ3lZMDFaYlhGUGNFaGpRMFpzWjBKTVIzbERRVWQxV2t4NlptVnVlWEJ0UVROYU5VMVRlVVZKYkRodGNucGlNa2RWUVVWd2QzZ3hUWGhhTkVsVlZ6UkpNbE5aU1hoblZreEtZMk5aTW5WdFNGSlhRMFp0U1RKS1NHTlNSRWxTYVVwSFRHcEllblZOUWtoeFJrUXpRVmRKU2sxWGNFcDVVa1p0VFRaSVUxTnRSMUk1Ykc1NGRVMUhiRGxwU0hwNU1VUkhkVFp4U2psblIxUlNNMEY0T1cxYU1HZFJTa2xYYlVReFkySk5NbU5ZUVROWFZFaDRZMHR5ZDBWaGNIaFRZM0ZIZVd4S1VVbDJTVVpuTVVkdFNXNWFWR016VFVkSlJsa3lZMmROVlhWU1RWRkZZMHhMVnpGSlNuVkZURWRQUlZrd1kyMUhWRWcxU2xOTmJFaEhlR3hKUzBGR1JERkpORzVWUVUxQlMwbEZRbEpTTkhCNGVUSk5TbXRSVFZRMVYwbFRjR2xKTURWUlFsUjViVVZTVjIxR1ZXSnBUREl4WjBRd1oyVnVVbHBwU1ZSMVJGbHNaMlJ1VWtReldsSTVVMDB3UlVsWU1WZEtXREpYUmtSdFUyVndlazB4V2pOMVdVZFJTVmhJTWsxSlNuWm5TRzVJU1dwR2QzbENTVVk1ZUVkNVNHeEhiVk5sY1VoeE1VUjVUVUpaYlU4MlNYaDFXRUZWU1cxQk1HTTFSMVJyUTFneFRWbFliVlpyUmt0d2FWcElZalJLVVZkc1dUSlhVVUpJT1VWTVMzQTBTV0Y0TlVwNE9EQk5VVmN5U1hoQlRFZ3hZak5CZVhWSWNYWTRaVVY1WTBkWU1sZERTbmd4VFVWVU9USmFNM0ZDV1RKTmExcFNURFJ4VWxKbFIwZzVVVWg1VjBsWU1XTlZia3R4UmtSdFRVTkNVbXRIUkV0VFdrbHNaMEZ2Um1kRVFVWm5OazFJZFV0WWJYRTJSRWgxTWsxS1NXTndNM2d6VEVZNWRYRlNjVmh1YlhscGJsUXdNM0pVUlVWYU1FbFdXVEpUYkVKUlRVaHZNbHByU0hvMWJrWjNjR3hCZUdOdGNFbEJlRzVWVWpWR01HdEtURXRYUVc0d2NEQk5VbWRzUVhsME5FWjRZMWRJVTFac2NWUXhObG96V2pWQk0wRTFjVWh4UVVwaFkyTnlTbE40VEcxMVIwa3pRV0p3YlV4dFRYZFRkMjlLU0ROR1NqRkRjRE5KWWtaSVdqSndVbU0wVFhoaVpYQklZMVpDUjFvelJ6TndiSEF6V2pSeE1FbG1iMUZPTW01SFZ6RndZWEZpUkhwSU5VWlZVbXRNU0UxaVdXMXhNbkI2VTI1RVNEUnBRbFZqZUZwSWVHMUhTbXQ0Y1VoYU5VSlNRV0ZKUzAxQlJucEZURWd6U1U5S2VqUmxia3RFYkVGU2VWaEpNalY1Ym5wME1VRmhRV2R2TWpsWVdXMTVOazFWVnpCRlIxTldTSGR4YVUweU9ERkZTMDl0UVhwMFpYQXlSRFZhU25reVFYcG1iRnBLVTNkeFMwVkljWGRKVEUxM2VXMXVNakZoVFVvMGFuQlVlVVp1Vkd0SlRVaEVaVmd4U1dwS1IwVnFXRzFUU0hGSWVWbHZlV05IV1RCQllVWktORzFDU0hWdVJucEpOVzlLU1haR2VraHBSVzFFYkc1S1RWRlliRGxoV0RKcmRVRlZRVVJZTWxNd2NGRnhSRzlWZVdWdlVubEpSSGRUVFc1M1JHMXZNSFZvYjBkNVNVbFVRVXBaTW5BeVRFZE9iRTFTWTFwWWJYbFRUWGd4Ym5GVVoxaGFWRk5wUVV0WFVsa3dVMlp3VVhGb1FUSkZWa0V3WjBSQllWZGlTVlJGYkZwSVJXSnhVbkJsV2pONWVYSlVSV2xKZDBGc2IyMXhaMjVKZVhWRWQwOXRRa3AxYmxnd1YzaHZTa0Y2UlVwWFkxaHRSRzFGZUVGR1dUSnhlRzVLWm10Q1VsWXlURXBGWjBwVVFXSnVWWGxqVFVwRlQyNVVRVUZFTW10WVRXMUpUMHBTT0RWTk1rRlpSMHQ1V1ZwUlJWWk1TVlpzV21GSlZscDNkVlp4U0ZveWJsUTVOSEF3ZVU5R1UwRmlUWGhyWVZnd2VETkdkMVkxV1RKVFlrUkpUVFJCZURsSFJqQnhiRmh0VnpSRVMwNHhUSHA1U25FeGRUSkJWWFZ0VFZWRU0wMHpUMU5CVURsRWNXMVhhVXhKY1ZsQ1Iwa3lTWGhOVVVWSWVHMUhTbWRXY0dGYVpVZFVlV1Z2UjBWUldsRkVhbkF5T1VkSVZEaHFiMHBUZUVGVFkzcGFVWGxvYmpKYU5VMWhUelZJUjNsTVJteG1OVzlWVHpSS1MxTlFSVE5hTlZneFQxZE1lSEZuV2xOTlYwVXlOVTlJYlVsWGNFaFRhMFJJUVV4d2JVRllSSHAxYUhKUVowMU5la2xpY1dGeFJWcFRZbTF4UjBGWlFsVlNaVzh4UVdkR1IwRlhSRzFGVmtGNlpteHZla2hyUVhsT2FYQnRVbXhFZWsxc2JrdFRSMjVMZVhsdk1IQTFiMVZFTTBSc1ozZEJVMEZ0VEVoYWEwVlFPVkZDUzNReldqQnhkM0I2TVhoTlZIbG1TRXR4UmtZeVFYaFliVTB3VFcxSmJFa3lUV2x1UjNGYWJrdFhNVUZoVDJSTk1YbFFiekpXTUZwVGRVbHlWRVUxYmpOUGQwWlVVMjF2WVV3MGJqRklNbGd5U1VkdWRqbElTbmhGVDAxVWVVaGFWSFZXUWtoRmVrRXdSREJGTTBsYVNHMTFWazB3VTFCQlVYbHBSbFJqVmtwU1FYcHdkMWN6UWtwVFRXNHdRVFJNTTFZemNsSkphazFVU0d0dU1reHRTRWc1YUVZelNXeE5ZVUZWUld4bmQwaDROVkJHTTFacldEQkJhVmd5ZVdGdVVYVjRRV0YwTlVneVdtdE1lSEY0UlRCbldVeHRRWGRDVlZJd2NETk5WWEJIVW10YVNFbFZTRlE1TVVsVVJHbHZWRVExVEROQmQzSkpSVE52ZDNGMVRUQm5ZMjh4VFdSWU1rMDFXakJyWkVwSGRESnZSamxxU2xGNU1YQktSR1Z3U2tSclFXMXhabkJ0ZUd0RlVWTlJiMGg1VUVFeU5YbENSM2t4U1VkT01tNVVlV3hHZWt4c2NVZFRiSEZVVFUxTmJEazJjRkZ4VEZnd1YwUk1lRk40Y0ZBNWFIRjNlVzVHVTNsVlJtdzVUVVJLVjJ0TlIwazJTVXAxWlc1Mk9EQlpiWEF5YmpCRmVuQXdjREpOZUdkVlFYaDFObG96ZFVWTmVrRlZXbEZYTUVVeVNVOUhVbWRzUWtveFowRnRTVU5CYlhGalNsVndORVF5WTJoRWQwbHJRa3BqVDBGTFZ6TndlWGxMYmxKcmFFMVZWMnRDU2xObFIwaEpVRVF6ZFZOd1NIaHJibTFXYlhBd1NVZEdTREZGUkV0SmRYQklOR2xHTWpFMVRIZFhVVVV5TlRKdVMwRmhSVkY1YVc1UlJWaEpTMU41UVZWQmFVMUtkR3R5VTBocVRYbDBhWEZJZFZwR1NFbElja2RGZVVGc1owdHZNbWRhUWtsYWJFaDZNWGxOTUhGMldrWm1aVVpKUVdKQ1IxcGxibFJ4YlVsR09VOXlkM1ZEV1RKeE5FZElWMlphTUhWclJHRkJkVUY2Ukd0SFIwOUpSVkl4VDBSdFJVWndSamxaUVdGQmFFRjRjWHBZTTBsWVdESm5kWEpMU0dwSFZWTk1SR0ZYWTBWNlJWTkZkM2d6VFVwclJVSkpWbXB3VlZNMVNESlRXVXhMU1d0R01HdGlSVEJYYkVZeVJXTk5NM2xQV2pGTmFVZEhVbVZ1VVU5dGNFZFRTVVIzUVhseVZXSnNiM1puV1VKVlQycHhlSEExUkhoRU1VeExlVlpKU1hWbGNFcG5la0ZHWm1WRk1VMU1ieko1V1VsVmNXeEpTbEpzV2xCbU1IQlRUVEZCWVdNd2NFcFhSMHBHWm1WTVNYVlBTSGhKYTBrd1UzWkVTakEwYjIxSloyOUlRVzVhTWsxWlJVcFdOVWd5VEd0d01FRllXVEppTUZneU5ETllNRmRzVFhkd2ExaHNPVWx3WVZwcmNGVnhTRzh5Y1dSdlNHZFljRXBGVVZwSGRURkZTM2xtU0ZWUE1YQXhlVUpaTWxKcFJuZDFTRzlMUVZoQlZHZFZUV3c1YlVRd2VWSnVSMFZSUmtwQlZsa3pXbTFFTWtsalJtMTVWRzlLZVdsRlVrbE1jVEJUTmtVeFNXeEtkMDV0VFZKblkwMXRTVkJKUzNsMlIwZE5UVzVWVjJWQ1VWWnNXREpXTWtReFlqRkNVRGxWY1ROV00wbDJPVTFLUzA5alNVZFNaVzlVVEdwd2RqazBjSHBJYTBKTGNVRkJWRGhsV25ocWEwWlJUR2x2WVhsNFNEQnhVRXhMZVhoRVNrZ3piekE1VkVneVJXcHllVTkzUlRKTWEwWXlSRE52U2psNWJsUkpkbkZ0VTBsd1NIRTBRVEpqVFhCNGNURnVWVVY1UmpJNE1rRklWMnRLUzFka2NYcE5iVVpMVjFWQ1UwaHFSVEkxUkc1SlJVaHVlSEExV0ROaldrWmhVekJGVVZkdWNYWTVWa2hJVjNwQlUzVmtTbEk1WWtKSVYxVndNRmRrUVVZNVIwRkxjR3BLZVVWMVJFZFRNMDFSZFdkQmRtZFFSbEY0YkZneVVtdENWRTAwU25oQlVWcFZWMmRFU25sbVFsSm5aMEpTZFU5YVIwRnJja294U1V3eWVYZEdNWEZoUVRORk5tOUljVkZ1U21zMlJuZHhka0Y0WjJsYVIzRnBiM3BGWTI5SGVYWkVZWFExYnpGd05XOTZRWHB1WVUxcFJuaGpXVnBUY1RCWk1Fd3pTRkp4YUhGdFFVaE1TMFY1UVRJME1rUmhZMXBHVWpGRFJIcHdNSEpSVGpGRmVqQXhSR0ZUYlVKUVoyaE1iVTFwUlZCbU0wZFJRVFpLVUdkVFNGUmpWa1I2WmpWdWJVOW1Sekk1V1UxSWVESkplbkZyV21GVGFVVkpRVzFCWVhWcWNraHdNa1I2Y1VGYVlVMUlXbFZKVTFnd2VVVnVTbU5rV1cxYWFYRXplVXR2YlhsMVNVaE5WMjVLZVhkYU1qRnRia2hUYTB3d1ZqQnZlRUZKY0hkSlUzQXdhMHROTUZONVJrWm5VRnBTU1dWSFZYaHNTRXBuTmxwaFRXVkJNbkZRV2xWMGJFaDRZM2xJTW1OaFdtRkJWVXhLUVZsR01qaHRjRWhJTlZveU9WUmFlamt6UlZKRmFVUXlZMkpCZURBMGNFaHJaMGx0UVZWd01rbEhjVzFQVkVkSWNHVkJlVTFGYmtsSlRISkpUM2R2VkUxcFJWUkJWVVozVFdkeGVHdDVUVWRTTkVGUmVHMXhSMUpzU0RCblRFeEhVbXB5ZWt3MVRFbzFaVUV5VTFwYU1rRmpjbFIxVVhCNVVqTk1TWFY1Y25wV2ExZ3dVelZ5VlZkUFFVWm5aMjVUU1RSSlVtTnNjREJUYkc1SFRtcHZSM2xvYjNwbllVMHpUM1p3TTA5TlJsRndiRUpLVjJkWU1rVjFRWHBUVTBKU1oyaEZNRGd5YjJGQlVIQlZSVEZNWVU5VWNUQlRXVVF4UldWQk1rbHBURXQ1VkUxSWNWTkJVWFZUYmxRNU5Wa3pWMHRIU2psU1JrWTVhMWhzT1dod2JYVkRXREpTTTBFeU9WaEViVWd5VFZGTlQxcElZMDlhZUUxaFNsUkZhMGRLVWpKdk1rbGxiM3BYVkZodGRHMVpNR2N5Y1hsSlowRklRV1JCTWtGNlFrcFhNMGRLUVUxdVNIVmtSVEF4UjNFeFQzaHdSMFZDYm5oSlQzQnRUbXBhVVVWcVRHRmpXRzlSZURSS1NWb3dSMGhOYTNKUVoxTkJVVTFEY1RCWGEwbHNaakJhU1hVMGNFZEpRVWd6VDAxdVMwRlpiMVZYV1Vnd2RXZFpNRWxwV2xGTlNFcFJUV0pCTUVsUVJHRkJUVTFSVFZsR2QxZGhRVEoxWkZwNmEzcEZNMWRxUVV0TU5IRlJWbXBDVWsxbWJ6TjVkVTB3T1VoYWQwRmpjVlZYUzBwM1QxQkVNV0p0V2xGSmRYSlVNV1phZVU5TFdqQm1hbTUzVDFaRlZIVjVUVE5CUzBKSlkxaHVWVTEzVFRCblowSkpjV0paTUhsamJsSXdNM0pIU1RaeE1ubDJSbmhKVEZwVU9VRnVVbmd3UjFWYWJFY3lVekp3VlZOWlJqSjFZVWh0VTBsdU1sTlFXa2g0TlhKS1FXRnVlbXRwUlRCMWJGb3dhMmxNTUV4bFJraG5lRmd3VjNWeFZIQXdUVEZKVTNGM1YySkhlRmRwUkV0alVWcFJWbTFHTTFKc1JHMUlOVVJLWTFCYVZVRmljRzFJTlVneVFWbEVTa2xKV25wVFlrVXhWak5KVWxkcFFWUjVaRTFSUkdwYVVtTlBXRE53TlVjemVURk5iVVZhV20xTmFuSjRUWHBOVVV4dFJubzViRUZIZFZSQlNFRlhjRWR4ZGxwNmVYVkpWWEZzV0RBd1pYSlRValZLU0dac1dESk5USEIzVjJwSFNVVjFjVE5PYlVreWF6VmFSbWRIU1V0U2FreDNkVlZZTWtGV1NGRklOSEZLWnpCdlIzRmtTVlJUYWtGc1owOXdTMkpyY25keFZVa3plVnB3UjNsNVJtMVhWbGt6U1Vod1NuZ3pibEk0YkUxVFV6WkpVVk5qV2twNWFVbEtNV3hOVkdzeVNrbzRNRXhKY1ZKRVMxYzJSVEJhTlUxNFZ6QkdVVXhyUVVwSk1reDRjR1Z3UmpsbmJqQlhaa1ZKV20xdlNIVmpTSFk1TkVoUlFXeGFZWGxsVEhablprMXRUMkpDU2tWS1RXMUZlVWg2TUd4dVNIbFFjWGRUV2t3eFFWbEZZV0l6Y1d4bmFuQjNRVEp1VVU5RlJIcEJTa2xSVm1WRVNHZDZSRWhuV2xoc09ESkZTREYxUkVnNU1VMVVjV0ZDVW1Oc2J6TkphMWd6VHpKSVNYVTFTWGxKUmtKTGVVdENVMWRsVEVoMVZVVjJabXR5VVhScFNGUkJaMjV0ZURWTlNtZFJXR3c1VTFwNE5UUndTR1psY0hkNVkyOUxRWGR3U2tWdFJXMXhXVTFoVjBsTlNuRjNXbmhCTW05SlkwVkNTVWswY0cxNE1scDNTV051UzB3elFVcEpRVUpKU1ZwQ1NFMVJXVE5YZWxwdGRYcHdWWGxJUjIxNVZVVnRSRE5HU25GWFJFdEViVVJ0UlV4QlVrUnBRWHB3YTBaVVRHbHVVazFrY1hkNVdFRkxZMlpDVkZNMlREQjFhSEF6VFZsQlVuVkJiak5YYW05c1oxSndWVWxSUkRGRlYxcHRlVzF2VURrMFNuZElNWEI1ZVZwdVJqZzFSVWhhWlVSTFQyUkZVVXcxY1RGSlVVZExjV1ZKUjBWUGIxTndOVUpKVDBWR1NtcHRRWGhyYlc4eGRUSkplVmQxYjBwRk5tNXRlVTFJZDFkbmNrWTVkazEzVjNwQlMzQnBTVXBOYmtkS1ptbEJWVTlaUmtkUE5FZFFPVkZKTW1kblRWQm5SbkJWZFcxRWJYVkdjSGxPTkVsNmRXdElTbE41Umtwck5FVmhRWFZ1VTBWc1NGRjFabkV3UVV4R1VIQkJVSG81YkV4S1FXWk5SazQ1VmxCd00wRkhURzFCYlVodFFYZElNRUYzVERKQ1VYQnNRVzF3YlVKUldtMWFiVTR5UWtkTU1rRXlVbTFCYlVWNFFWRlNNMEYzV2pGQmQwUXpRa2RJTkVGM2RESk1SMFY2UVVkU2JWcEhURE5CUjNSc1RIZGFha0ZSZERKQmQwMTFRVWQwTUUxM1JYaEJWRWd4VEVkd00wRnRURE5hYlV4cldtMTRNa0Z0VEcxYWVsWXdRVzFhTVVGUlJEQk5kMHd3UVVkSU1reHRXak5hYlZKdFFsRkZkMEZ0U0RKQlVWb3hRVEpTTUZwM1JYcEJiWEJzVFhkYU5FRjNTRzFCUjBnMVFWRkVNa3hIY0RKQlIxSXhXbmRhTWtGM1NERkJVVnB0UVhwU01VRnRUWFpCUjNSdFdrZElOVnB0VmpCTWJWZDZRVkZFTVVKUmNHcGFiVm95VFVkRWJVRjNXakZCUjBWMlFWRjBNRXgzU0dwYWVrd3dRbEZhTkZwdFJHMWFiVWhxUVZSSU0wRkhURFJCUjNSc1RYZFhka0ZSVWpCQ1VYQXlRVkZFTVV4SFRYcEJiWGd3VFZGSWFscDZUREJCUjFkMlFVZFdNVnBSV2pKQmQxWnRRbEZJYlZwdFNHMUJVVVYzUVcxMENSd0FBRTB5VGtSS2JVNXFXVEpPYWtwdFRYcE5NbGw2V1RCT2VsRjZUMFJWTkU1dFRUTk9lbEpzVG5wWk1FNXFVVFJPYW10NlRWUmthRTU2UlROT2FsRjRUbTFWTWsxcVRYcE9lazB3VFdwVmVrNTZRWHBOZWsweFRsUlZNMDFVV1RCT2JVa3dUWHBLYVU1NldUSk5lbU41VG5wbk1sbFVVbXBOZWxVd1RYcGFhRTVxVVROUFZGbDRUbFJWTUU5VVdtcE9hbGw2VG5wU2JVMTZaekJaVkZWNFRucGplazlVVlRST2JVVXpXVlJOZVU1VVp6Sk9lazAwVG5wck0wMXFWWGhPUkdjeVQxUlJlRTVxWXpGTlZHTjNUbXBWTUZscVRYZE9SMWw2VGxSVmQwNVVSVE5OYWsxNVRYcG5NRmxVV21oT2FrMHdUa1JqZDA1SFdUSlphbEp0VGxSVk1GcHFXVEJPUjFrelRXcGFiVTE2VlhwTmVsazBUa2RGTWs5RVVtcE5lbU14VFZSamVVNXRTWHBPYWxVelRtMU5NRTE2WXpGT2VrbDZUVlJSZUU1NlNUSk9SRnBzVG1wRk1FNVVWVFZPYW1zeVRsUk5kMDVFVVRGWlZGazBUa1JKZWs1RVNtMU9WRVV4VGxSUk0wNUVWVEJhVkdSb1RYcE5lazFVV1hsT2VrVXdUVlJqTlU1WFJUTlpWRTB5VG5wTk0wNUVWVEpOZWxrd1RWUlZlazVVVVhwT2FrMHpUbFJGTUZsNldYbE9iVTB3V21wamVFNXFXVE5aVkZrMFRsUk5NbGw2VW10T2FtTXdUVlJhYVU1SFNUSk9lbGsxVG5wQk1VMTZVWGxPYlZVelRucFNhazVYUlRKT1ZFMHpUbnBqTWs5VVVtbE9lbU15V1ZSamQwNUVWVEpQUkdONVRrUm5NRnBxV20xT1ZFVXdUMVJOZUUxNlp6QmFhbFV5VG1wRk1rMTZUVFJPZWtrd1dsUmFhVTVIUlRKT2FtTjNUa1JSTWxwcVZYaE5lbGt6VGtSUk0wMTZaM2xaYWxrMVRsZEZNbGxxVm1oT2FtTXpUa1JhYVU1dFVYcE5lazE0VG1wUk1VMTZXWHBPZWtVeFRtcFZORTVIVlROT2VtTXhUWHBWTWs1VVkzaE9hazB4VG1wTmVFMTZXVEpaYWxGNFRucFpNRTE2WTNoT2JWVXdXVlJSZUU1cVNUSk9hazB3VFcxWk1sbDZZelZPZWxFd1QwUlJOVTE2WTNwT2VtTXpUa1JOTUZwcVl6Sk9hazB3VGtSV2FFNVVhekJPYWxVMFRtcE5NMDE2V1hsT2JWRjZUVlJaTUU1dFVUQlphbHBwVGtkUk1VMTZXVEpPYlVrd1dXcGpkMDVFUlhwUFJGbDVUbnBuTWsxVVRUVk9WRVV4VG1wamVFNUVZek5OVkZGNFRrZEZNVTFVWTNkTmVtTXhUbFJSTVU1cVVURlBWRnBvVGxkRk1GbFVUVFZPZW1jelRtcFJNazR5UlRCYVZFMDBUWHBaTTAxVVZUQk9SRlV3V2tSamQwNTZRVEJPZWxWNVRrUkpNRmxxWTNkT2VtZDZUa1JSTlUxNmF6Rk5WR00wVGxSbk0wNXFUVE5PYlVsNlRYcFZORTVIV1RGUFJHTXdUa1JKTWs1NldUUk9ha2t4VDFSUmVrNTZWWHBPVkdNeFRucEZNRmxVV1RGT2FtY3dUMFJXYUU1RVJUSlBWRkp0VGtkVk0wMTZWWGhPVkZWNlRtcFJORTE2UVRCYVZGRXpUbXBqTVZsVVRYbE9WRUV3V1ZSTmVFNVVZek5OYWxWM1RXMVpNazVVV1hoT2JWVjZUa1JaTVU1NlJUSk9hbEpzVG1wck0wMUVUVEpPVkVWNlQwUlpORTVIVVRKYWFsSnNUa1JSZWs5RVZYZE9SRlV3VGtSak1rNXFaekJhUkUwelRsUmpNazE2V21wT1ZHY3dXWHBOTWsxNmF6Qk9WRkY1VGtSTk0wNVVVbWhPVkZrd1QxUlNhVTE2YTNwUFJGRjZUWHBCTUU5VVkzcE9SRmt6VFZSUk1rMXRTVEpPZWxsNlRucEJlazU2VVROT1ZHdDVXbXBOTVUxNmF6RlBSRkY1VFhwRk1VMXFUWGhOZWtWNlRucE5ORTVYUlRKUFJGVTBUWHBKTWs1NlVtMU9WRlV6VG5wWmVFNTZUVE5QVkUxNVRrUnJNVTFFVlhoT2JVVXdUbXBrYUU1RVNUSmFWRlUwVG0xVk1VNXFWVEJPVkUweVRucFZNVTVxVlROT1ZGVXhUbFJaZWs1cVRURk9la2w1V1dwUk5VNTZRVEJPUkZwcVRtMUZNbHBVV20xT1ZFMHlXbFJqTlU1dFRUSk5WRkUxVGxSVmVrOVVXbWxPUkVVeVRucE5kMDVIV1RKWmFsSm9UbTFaTWxwVVZUSk5iVWw2VGtSak1VMTZhekZPZWxGNVRrUnJNRnBFV1RKT1JGa3dUMVJWTTA1VVNUSk9lbGt6VFcxWk1VNTZWVEpPVkVFeVRtcE5NRTE2UlhwT1ZHTXdUbXBOZWs1RVkzbE9WRWt3VFZSak1VMXRXVEZQUkUwMFRsUlJNVTFFVlhsT1JHTjZUMFJaZWs1NlRUTlBSRmw0VGtSck1rNXFVVEZPYWsweVRrUmpNMDU2UlRKT2FscHFUbnByTWxsNlRUSk9lbFV3V2xSak1FNXFUVEpaVkUxNVRtMVJNRnBFV21wTmVtTjVXbXBqTWsxNlVUSmFWRlV5VG1wVk1FNTZXbXRPZWxVelRtcGpOVTU2YXpKWmVscHJUbnBWTWxscVVtMU9WRmt6VFZSVk0wNUhTWHBPUkZsNlRsUk5NazVxVlRGT2FtTXdUbXBSTVU1NlNYcE9hbEY1VFcxSk1GbHFXbWxPYW1NelRtcE5kMDE2VlRGUFJFMTZUbTFWTUU1VVl6Rk9iVkV6VGxSUmVVMTZWWGxhYWxKc1RucHJNbHBxVVhsT1ZFVXdUMVJSZVU1SFRURk9lbFV5VGtkWk1GcHFXbWxPUjBWNlQxUlpNVTE2UlRKYWFsRXdUVzFaTTAxVVRURk9WRVV3V2tSTk5FNUVUVE5OVkZrd1RtMUZNRTVFVVRKT1ZFMHhUbFJaTkU1RVp6QmFhbU4zVFhwcmVrMVVZek5PZWxreFRsUlNhVTVIVlRCTmVrMHdUbnBSTWs5VVZUQk9lbFV5VDBSU2FFNUhTVE5QUkZrd1RtcHJNbHBVVlRST1JGVXdUV3BLYlUxNlFUQk9lbFUxVGtSbk0wNVVVWHBPVkZFeVdsUlplRTVVUlROT2FsbDZUbXBqZVZwcVVUSk9SRlV3V1dwVmQwNXFUVEJhUkZwclRrZEZNRTE2VlhoT1ZFVXhUbFJSTVU1VVozcE9WRmsxVFhwUk1FNVVXVEZPZW1jd1QwUlZNVTE2YXpCYVJFMTRUbnByTWs1RVVYcE9iVmt4VFdwUmVrNVVRWHBOYWxWNVRrZFJNRTVVU20xT1Iwa3dXWHBaTVU1VVVURk9hbEpzVGtSTk1GcFVVVFZPVkUwelQxUlNhRTVVVVhwT2FscHFUbTFWTWxsNlRURk9WRUV5VFhwYWEwNTZTVEpPUkZVeVRXMVpNMDlVVVhoTmJVa3pUMVJSTWs1SFZURk9lbGt6VGxSbmVrMVVWVFZPZWsxNVdtcE5kMDE2UlhwUFJGRTFUakpGTVUxVVl6Qk9WRmt5VDBSTmVFNXFWVEpOYW1ONlRsUk5NMDVFVlhoT2JVa3dUbXBSZUU1NlFUQlpWRkUxVFhwUk1FOUVVWHBPUjAwd1QxUmFiRTU2WnpCYVJGVXhUWHBSTUZsVVVYcE9WRWt3VDBSVmQwNHlSVE5OZWxKcVRrZFZNVTVVV1hwT2FtTXlUbXBWTlUxdFNURk5WRkV3VG1wck1FNVVXWGhOYlVrd1dWUlpNazV0V1hwUFJGRXhUWHByTTAxVVVYbE9la1V3VGxSU2FVMTZZekpOZW1ONFRsUlpNMDFVVFhoT1JFVXdXa1JTYUU1SFRYcE9SRmw2VG0xWk1VMVVVWGhPUkZreFQxUmFhazE2YXpGUFJFMHpUa1JWZWs1cVVtbE9WRTB4VDFSUk1FNUVZekpQVkZwcVRtcFpNazFxVFhwT2FtTXdUa1JWTWs1RVZUQlBWRkpxVGxkRk1FMTZWWGxPZW1Nd1dXcFpNVTU2WXpKWlZFMTNUa2RGZVZwcVRUTk9WMFV4VFhwa2FFMTZZek5aVkZsNFRrUlJlVmxxVVRCT2VsVXdUWHBSTkU1SFZUTk5SRkV6VGtSTmVWbHFZM3BPUkdzeFQxUmplVTVVWXpKWmVrMHpUbGRGTUU1cVdtMU5lbU13VGxSamVFMTZUVEpPYWtwcFRtcGpNbHBFVW1oT1IwVjZUbnBaZWs1RVl6QlphbU0xVGtSbk1rMTZUVE5PZW1NelRsUlpNMDVFVFRKWlZGVjVUa1JaTWs5VVdtMU9SR042VFZSU2FFNUVXVEZOYWxFeFRrUnJNMDlVVFRGT1ZGVXpUV3BWTlU1dFRUQlpWRkpzVG1wbk1FNVVXbTFOZWtVelQwUlNhMDV0VFRGTmVrMHdUbnBCTWxsNll6Uk9WRTE1V1dwWk5FNXRSWHBQVkUxM1RsUlpNMDlFWXpOT2Fsa3lUbnBLYVU1SFNURk5WRnBzVGtSSmVrNVVVbWxPVkZrd1RWUlNiRTVxV1RKTmFsa3pUakpGZWs1NlZYaE9SRkY2VDBSYWJVNUVaekJQUkVwdFRrUk5NMDVVVlRGT1JGa3hUbXBSTlU1VVFUQk5lbEpxVGxSbk1sbFVWWGRPVkZVd1dWUlZlRTE2VlhwTlJGRTBUbXBaTUZsVVdYaE5iVmw2VFVSWk1VNVVUVEZPYWxKdFRsUk5NRTlVV21wT1ZHZDZUVlJqZVU1RVZUTk9SRXBwVG1wRk0wMTZXbWxPZW1jeFRWUlZlVTE2U1RGUFZGcHRUbnByTUZsNlRYcE9hbU14VGtSak5VNUVZekJOYWxFMFRucEZNRnBFWTNoT1ZFVXlXbXBOZDA1RWEzbFphazAwVGtSRk1rNXFVbWhPYWxrd1RYcGpNRTVVU1hwTlJGRXlUa1JSTTAxVVVUQk9WRVV3VG5wak1VNUVWVEJhVkdONVRtcEZlazlFVVhwT2JWRXlUbXBTYlU1dFJURk5WRnByVGxSWk1FMTZTbWxPVkZVd1RXcE5NRTU2WXpGTlZGazFUa1JaTUUxNldtMU9SRWw1V21wU2JFNVVWVEJQVkZWNVRrUlZNRmw2VFRWT1JGVXlUWHBhYlU1cWEzcE5WRlUxVG1wTk1VMVVVVEZOZWxsNVdtcGFhMDVVU1RKT1JFcHRUbFJGTUU1RVNtbE9SRmt4VFZSWk0wNXFSVE5OUkZKcVRsUlZNbHBVV20xT1JHTXlUVlJSTkU1NlRYcFBWRlV4VGtkVk1FNXFVbWxPVkVVeVRucFplVTVIVVRKT2FrMDBUbnBqTUU5RVdUUk9SRVY2VGxSUk5VNTZWVEZPVkZwdFRucFZNMDFFVVROT2Fra3pUa1JqTlU1dFdUQk9lbEY2VG5wUk1rOUVaR2hPZW10NlRWUmpkMDVFVVRKT2FsVjZUbTFKTUZsVVRUSk9la0V3VG1wUmVVNTZZekZQUkdNd1RtcEZNbGxVVW10TmJVa3pUbFJWTVU1VVVUSk5WR04zVGtSbk1VNUVXbWhPYW1zeVRsUmFhVTVIUlRCT2FsRjRUbXBaTWsxVVZYaE9ha1V6VDBSUmVFNVVRVEpaZWxWNVRucFpNRmxxVlhkT2FrMHlUbnBWTlU1dFdUQlplazB5VG1wRk1rNXFVVEJPYWxrd1RWUk5lRTE2VVhwT1ZHTXdUbFJWTUZwVVNtMU9la0V4VDBSUk1VNUVTVEJhUkZsNFRrUnJNRTFxVlhwT1JGa3pUbFJhYVU1RVdUSmFhbHBwVG1wWk0wMTZXbWxOZWxVd1RYcFJORTVVUlRGT1JGVjZUbXBaTVUxRVZYcE9WRTB5V2tSWk5FNTZXVEZPUkZwcVRrZFpNRTlVVVhoTmVrMHpUbFJaTlUxNlRYcFBSRkY2VGxSck1VNXFZekJPVkUweldWUk5kMDVxWnpOUFJGVjRUWHBOZWs1RVdYcE9la1V3VG5wVmVrNXRTVEJaVkZrMFRucHJNazVFVVRWT2FsRjZUMFJqTlU1NldYcE9WRkp0VG5wRk0wNTZZM2xPZWtWNlRtcEtiVTU2UlROTlJGbDVUbnBSTUUxNlNtMU5lbXN4VFZSWmVFNUVSVE5QVkUxM1RtMVJNRTFVWTNwT2FtTXlUV3BaTlU1RVdUSk9SRnBzVGtSamVrMXFVWGxPUjFFelRXcE5lazVVVFRCYVZFMTVUa1JSZWsxNlZURk9lazE2VDFSTmVFNUVVWHBOVkZWNlRsUk5NMDU2V21oTmVtc3hUMVJSTUU1NmF6SlBSRkpwVG1wVk1VMXFVVFJPZW1zeVRWUktiVTE2WnpGUFJGbDRUa1JKTTAxNll6Tk9iVlV5V1hwUmVrNVVTVEZOZWxGNFRYcEZNazlFV1RCT1JFa3lXbFJOTUU1VVJUSlpWRkV4VGxSVk1GbHFUWGRPUkZrd1RsUmFhazE2UVRGTmVtTjRUbnBGTWsxVVdURk9SMGw2VGxSTk5VNVVWVEJPYWsxNlRucFZNbHBxVVRCTmVsa3hUV3BSZWs1RVp6Qk5WRmt3VGtSck1GbFVVVFZPYW1Nd1RtcE5NVTVxWnpCYWFsRTFUbTFWTWs1VVVtdE9SRkV4VGxSYWJFNUVWVEZQVkZreFRYcFpNMDU2VlhkTmVtY3hUbnBaTlU1dFdYcE9SRTAwVGxSbk1rNTZVbWxOZW1zeFRWUmpNazE2WnpOUFJGSnNUbXBuTWsxcVRUSk9SRlY2VG5wU2EwNUVaekpOZW1NMFRtcFpNMDlFVVRWT2FrVXhXVlJqZVU1Nll6SlphbFY0VG0xRk1sbHFWWGxPZWtVeVRucGplVTVxYXpGT1JHTXlUbnBuTWs1cVNtbE9hbU13V21wUmVVNVVhekJQVkZVMFRtcHJNMDU2V1hsT2JWa3lXWHBaTUU1cVNUSk9lbHBzVGtSSk1VOVVXVEJOZW1zeVQwUmFhRTF0U1hwUFJGRjVUakpGTWxscVVURk9lazB6VFZSU2FVMXRXVEpaYWxWNVRrZEpNRTlFU20xT1JGRXhUVVJSTVU1SFdYcE9hbEV5VG1wVk1VMVVXbTFPYW1ONlRucFZNVTU2UlhwUFJGRXpUa2RKTTAxRVRUQk9iVlV5VGxSWmVrMTZRVEZPYWxreVRucHJNVTlFVlRKT1ZFa3pUMVJSZUU1VVkzcE9WRmswVG0xRk1GcEVWVEJOZWtFeVQxUlNhVTVxVlRKTmFtTXhUa2RKTWs5RVRYcE9la1Y2VGxSTk5VNVVSVEphVkZab1RYcEplazFFVW1oTmVtTXlXbXBSZVUxNlZUQlpWRkUwVGxSTk1FNTZXbXBPUjFFeFRrUlJlazVVWTNwTlZGRXlUWHBGTVUxNlRUUk9lbWN5VDFSVmQwMTZaekJPVkdNeVRrUlJlVmxxWTNkT1ZGVXdXVlJqTkU1cVRURlpWRnBxVG0xVk0wMTZXbXRPUkdjeVRtcFNiVTVVUlRCWmFscHFUbFJSTUU1VVdYbE9iVmt3VGxSU2FrNXFSVEZPVkZWM1RucG5lazU2V20xT1JFVXlUbnBOTkU1cVp6TlpWRTB6VGtSUk0wNVVVVEZPUkdzelRVUlJOVTVVWXpGT2FsRjZUWHBuTWs5RVdYbE9lazB3V1dwUmVVNUVSVEpPZWsweVRucEJNVTFxVFhwT1IwVXpUbFJWTUU1dFJUQk9SRmswVGtSUk1rNVVVWGhPUkd0NVdtcGpNazVVWXpCWlZHTXhUbTFKTVZsVVdtbE9iVWt5VGxSYWFrNVVRVEpQVkZGNlRsUm5NVTFVV21oT1JFa3lUa1JaTTA1SFdUSlplbHBwVG5wWk1VNTZXVEZPYWswelRXcFJNazVIV1RCT1ZGVXdUa2RGTWxscVNtMU9lbGt3VFhwUk5FNXFXVE5OVkZFeFRsUk5NazlVVW1wT2VtTXhUWHBaTWsxNlZUQlplazAwVG5wak0wMXFXVFJPYlVVeFQwUlZNMDVFYTNsWmFsSm9UbXBGTVU1cVVUUk9lbFY2VFZSS2FVNVVWVEJhUkZFMFRucGpNRnBxV1RGT2VrMTZUa1JTYUU1dFNURlBSR015VGxSTk1rNXFUWHBPVkUwelQxUmplVTV0VFRCTlZGSnJUbXBaTUU1cVVUVk9iVlV5VFdwU2FVNXRWVEphVkZrMFRrZEpNMDFVVlRWT2FsbDZUVVJqZUU1cVp6Qk5lbEV3VG0xUk1rOVVVWGxOZWxrd1QwUmpNVTU2VFRKTlZFMHhUa1JyZWsxNlZYcE9WR2N5V1hwak0wNVVTVE5OVkZwdFRrZFZNMDVxVVRGT1ZFVXlUV3BOTVU1dFNUSk5WRnB0VGtSUmVrMVVVWHBPYWsweVdtcGpNMDVIUlRKT2Vsa3dUVzFKTWxsNlVUUk5lbGt4VFZSWk1rNVVaekpOYWsweVRtcGplVmxxVW1oT1ZFRXhUVlJSTTA1VWF6Rk9WRmw0VG5wVk1rNXFZekZPVkZFeFRYcGFiVTVxWjNwTmVsVXpUbFJaTWsxNlVtaE9WR2N4VFhwVk5VNUVUVEpQVkZWNlRYcHJNRmxVWTNkT1ZFMHpUVVJXYUUxNlJUTk9lbHByVFhwRk1rMTZaR2hPTWtWNlRucFJORTV0U1hwTlJFMHpUbTFWTVU5VVZUTk9hbXN5V1hwVk1VNXRVWGxhYWxFMVRucFJNRTE2V1RWT1ZFVXdUbnBhYkU1dFdUTk9SRTB5VGxSSk0wNXFXbTFPUjBWNlQwUlJNMDF0V1RKWmFsRjRUbnBCTTAxcVZYaE9WRVV3V1dwUk5FNXRTVEphVkVwcFRrUlZNRTlVV1RST1ZFVXpUVlJTYUU1cVNURk5lbU42VG5wamVrMTZUVFZPYW1zd1dtcE5NazVFV1RKT1ZGcHFUa2RGTTA5VVdteE9SMWt5V2tSYWFVMTZUWGxaYWxFeFRYcG5NVTFFV1RKT2VsRXhXVlJOZUU1dFdYbGFhazE0VGtSWk0wOUVWVEpPUkdkNlRtcGplazU2VVRGWlZHTjRUa1JyTTA5VVdtbE9WRTB3V1ZSWmVVNXRWVEpPZWxVMVRucEpNRmxVVlROT2VrMHpUVVJOTkU1VVZUQk9SRkpwVFcxSk1rOVVZek5PUkZreVRWUktiVTVxVFROTlZGVTBUbFJGZWsxVVNtMU9SMFV6VGxSWk5VNVVXWHBOVkZrelRrUkpNVTE2U20xT2FsRXlUMFJaTTA1cVdUQk9WR1JvVGtkSmVrMVVZM2RPUkUxNlRrUmpNMDU2U1RKWmFtTjRUa1JKTTA5VVdUUk9iVWw1V21wU2FrNXFWVE5PYW1NeVRtcHJNMDFxVlRWT2JVMHdUbXBTYTA0eVJYbFphbU13VGxSTk1rNUVVVEZPVkdNeVdsUlZlRTVFVVRKUFJGRXhUbTFWTWs1cVVtaE9WR014VG1wVk1rNUhTVEJPUkUwMVRtcFpNazVxVlRCT2FtTXpUVVJqTWs1cVl6Rk5SRTAwVGtkTk1rNXFVVEpPVkdNelRYcFZlRTE2YXpKWlZGa3lUa1JKTWsxVVdtbE9lbFV3V2xSWk5FNUVUVEJPZWxVelRrUmpNazVFWXpWTmVsRjZUa1JSTUU1NlVURk9WRkY1VG1wck1WbFVUVFJPYW1zeVRXcFJlRTR5UlRGT2VsRXhUWHBSTTA5VVVUTk9hbGw2VGtSak0wMTZhekZPVkZFMVRXMUpNbHBVV214TmJVa3dUa1JqTVU1cVp6Rk5lbEpzVGxkRk1WbFVWWGhPZWtreVdWUk5kMDVxVVRKTmVsbDRUa1JGTVU1VVVYaE9ha1V6VFhwYWJVNXFVWHBQUkZwc1RYcHJNVTlVV21wTmVsVXlUMVJaZVUxNlZUSk9hbEY2VGtSUmVrMVVVbXhOYlVreVQxUlJNRTVVYXpGT2Vsa3lUa2RGTWs1cVVUVk9SRWt3VFZSak1rMTZXVE5aVkZVMFRtcHJNRTFxV214T1ZGVXlXWHBaTlUxNlVUSk9WRmt4VG5wVk1rOVVVbWxOZWtVeVRrUk5ORTE2U1hwT1JGWm9UbFJCZWs5RVRYZE9iVWt6VFdwWk5VNXRTVEJQUkUweFRrZE5NRmxxV21wT2FtTXlXWHBSTWs1NmF6SlBSRkUwVGtkSk1FNXFZekpPUjFrelRtcGpNMDVIU1hwT1JFcHBUa1JyTWs1RVVYcE9WRWw2VFVSU2FVMTZUVEJPVkZwb1RucEZNMDlFWTNsT1ZHZDZUWHBWZUU1NlFYcE9lbU40VG5wTk1VNVVTbTFOZWtrelRYcFJORTU2UlROTlZHTjZUbGRGTWsxVVdUVk9WR2N5VG1wUk1VNHlSWHBQUkZVd1RucEZNMDFVVFhkT2JVMTZUMFJSTkUxNldYcE5WRkV4VFcxSk0wMVVXbTFPZW1zd1RYcGpkMDE2UlRKYVJGRTBUa1JuTUZsNldYcE9lbU42VFVSWk5FNXFVVE5PYWsweFRYcEpNMDVFVVRWT1YwVXhUVVJWZUU1NlJYcE9hbHBwVG5wVk0wNUVVVEJPVkVFeldWUlZNazVxVlhsYWFsazFUbnBaTTA5VVl6Tk5iVmt5VGxSamVFMTZZek5QUkZGNFRYcHJNRTlVVFRCT1ZHTXdUV3BOTlU1VWF6SlplazAxVGtkRk1FNTZXVEZPYW1jeFRVUmplazVxVlRGTlZGVXdUVzFKTTAxcVdtMU9hbWN3V1ZSWmVVNXRSVE5QVkdNeVRYcEpNazU2VlRCTmVrMHdUWHBaTWsxNll6Qk5lazAxVGtkRk1VMXFVVEZPYWtreVRtcFZlazV0VlhwT2VsRjRUbnBaTVUxRVdUTk5lbXQ1V1dwVmVrNVVUVE5OVkZWNlRsUlZNRTlVV1hoT1Ixa3lXVlJhYWs1RVRUQk9lbEpyVFhwck1VOVVZelJOZWxVeVdYcE5lRTVVVFRKUFJHTjNUbXByTWxwVVRYbE9WRkV5VFhwak5FNVVRWHBOUkZwcFRYcHJNbGxxWkdoTmJVa3lUMFJTYkU1VVNUQk9WRTB5VGxkRmVrMVVZek5PUkZVeFRWUlpOVTVFVlRGUFZGVjZUbFJKZVZwcVZYZE5lbWN4VG1wU2FrNVVRVEJaYWxFd1RXMUpNMDFFWTNkTmVsRXlXa1JqZWs1NlozcFBWRTB5VGxScmVWcHFXWGhPYlZVd1RsUmFhMDF0V1RKUFZGSm9UbTFWTUZwRVVtMU9SRlY2VFVSamVrNXFXWHBPYW1ONlRrZEZNRmw2VFRKT1IwVXdUV3BWZWs1VWF6SlphbGt5VGxSUk1VMUVZM2RPUjBreVRucFNhVTE2UlRGUFZGVjNUWHBGTVUxcVl6Sk9lbXN3VG5wWk1VNVVXVEpPUkUweVRrZFZNazFVVVRKT1ZFRXhXVlJaTWs1VVNUQlBSRnB0VG1wWk1rMVVWWGhPYW1NelRYcFdhRTE2V1RCWmFsRTBUWHBOTTA5RVdtbE9iVlY2VGtSak5FMTZSVEJQUkUxNlRtMVpNRnBVU20xTmVsVjZUbnBLYlU1NmF6Rk9SRlV4VGtkSmVWbHFXbWxPYWtreFRYcFZNazV0VVRKT2VscHNUbnBGTTA5VVl6Sk5iVmt5V1dwak1rNTZhekpaVkZKb1RucHJNazFxVVROT1JHTXdXbFJSZWs1SFVURk5lbEV4VFhwRk1rOUVUWHBOZWtrd1RsUk5kMDVFWXpGT1JGWm9UbFJOZWs5RVVtMU9hbGt3VFhwU2FFMTZRVEZQUkdNd1RtMU5NRTE2V1hoT2VrRXdXbXBOTWs1NmF6SlBSRTE0VGtSTmVrMXFUVFZPUkZFeVdsUmplazR5UlhwTmFscHBUa1JuTTA5RVkzZE9SMFV4VFZSak1VMTZXVEZOYWxWM1RYcFpNazVVVlhsTmVtY3dXV3BaTWs1VVZUTk5hbGt3VG0xUk1VNTZUVFZPYW1Nd1RrUlZORTU2UVRCWmVrMTVUbnBCTWsxNlVteE9hbEV4VFdwUmVVMTZXVEpOYW1NeFRXMUpNMDFVVVhoT1ZHY3pUWHBSTlUxNlFUSlphbFV5VGxSak1VNUVVbTFPYWxVelQwUmFhazF0V1hwT1ZHTXpUbXBGTUU1cVRUVk9hbWN3V2tSU2FrNTZZekJaVkdSb1RsUmpNMDE2VW1oTmVtc3hUbnBTYUU1cVVUQk5lbFV4VFhwVk1FOUVaR2hPYlUweVRtcE5lRTVIVlhsYWFtTTFUbXByZWs5VVVtcE9WRmt3VGtSYWJFMTZWVEJOYW1ONFRtMUZNVTFFVFROT2VrMTZUa1JWTUUxNmF6Tk5SR013VG1wbk1rNXFTbTFPUkZreVRYcGFiVTVxVFRGUFJHTTFUVzFKTTA1RVdUTk9ha2w2VGxSYWEwNUVSWGxaYWxwdFRsUlZlVnBxVm1oT1JGRXpUVVJSTVU1Nll6QmFhbGt5VGxSck1VNXFWWGhPVjBWNlRtcFZNVTVxV1RCUFZGSnNUbFJqTUUxcVNtMU9WR3N3VGtSTmQwMTZaek5OUkZab1RsUkZNVTVFVW1oT2JVMTZUWHBaTkU1RVdUTk5WRXBwVG0xTk0wNXFVbXRPYlUxekNSd0FBREJNZDB4clFWRjRiVUZIY1hWYWJVd3dUWGROZGtGSFRqRkJSMDE0V25wV01VeEhUREphZWt3d1duZElha0Y2V2pKTWQwMTZRVzFFTTBGM1NYVkJSM1F5UVhkRmVFRjZVbTFCUjBneFFWUk1NRXhIU0RCQlZGWXdURzFGZGtGNlZqRkNVVVYzUVZGd00wRkhUWGhCUjFvd1FXMVhla0ZSV2pGTVIxcHNRWGRFTWt4dFJEVkJkMUl3V25kRU5VRjZVakZhVVUxMlFWUklNbHB0VEd4QmQweHRXbEZFYTBGM1RESk1kM0J0UVcxU2JVRkhTR3RCUjFwdFdrZHdNVUYzZERGQmQwMTVRVzFFTWtGM1dqRmFiVTR5UVZGSWJVRjNTRzFhVVV3MFFXMVdNa3gzY0RCQmJWWXdRVzFNYlZwNlZqSkJSM0F4UVZGMGJVSlJXakJhZWt3eFdrZE1OVUZSZERKQ1VYQXhRVWQwTVVKUlJYaEJWRXd4UWxGRWEwRnRTR3hNZDB3eVdtMWFNVUpSU0RSYWJYUnRRWGRFTkVGdFZqTkJVWEJyUVhkTU1FRlJXbTFCZDB3eVFVZEZka0ZIVERKTVIwUXhRVzEwTTFwdFdteEJNbEl6UVZGTmQwRkhkRzFhUjBnMVFVZFNNa3gzUkROQlVYUXdURzFNTVVGSFRESkNSM0F4UVcxSU0weEhUREZCZWtSdFFWRkVNVUY2VEcxQ1VWbzBRVzFXYlZwdFRYaGFiVTV0V2xGRU1GcHRWakJNZDBneVFYZDRNMEpIVEcxQmJYUnRXbEZFYlVGSGNETkNVVm95UVRKU01FSlJjREpCVkV3eVFXMUliVUZIUkcxQmJVVjRRVlJJTUV4M2NHMUJSMDR4UVhkd2JWcHRSRE5DVVV3MFFXMTRNRUZ0UlhaQmJWWXdRVWRJTVVGM1ZqQkJSMXB0UVVkNE1FeEhXalZCVVZZd1RIZEZkVUYzZUcxYWJVUXhRVzFhTTBKSFNYVkJSMDR3UWtkSU5FRlJUREpOVVVReVFXMTRNRUYzVjNwQlZFd3lUVkZhYlVGM1NESmFkMGcwUVZGV2JVRnRXak5CZWxvd1FYZE5kVUY2VERCQlIwVjFRVWRPTUV4SGNHMUJkMW93V2tkd01rRlJlREJCVVV3eFFWRndNbHB0VFhaQmVrZ3dRa2RJYlVGSGVERkJiVVEwUVcxRU1rRkhXalJCZWtSdFFVZE5lVUZSY0RKQ1VVUXdXbnBNTWxwM1JEVkJSMGd3UVZGTmVrRkhUak5hUjBWNVFWUlNNa0YzUlhkQlVVeHNUSGRNYkVGUlZqQk5kM0F3UVVwU01FRkhXak5CZWtSdFFXMXdNMEYzZURKTVIzQXhXbTFNYlZwdFJYWkJlbG95VEVkTWEwRjNXakpOZDB3eVdtMU9iRTEzUlhkQlVWb3dRa2ROZWtGM1NESkJSMFJ0V20xd2JFMTNjREpCUjA0elFYZEVNVUZ0VmpKYWJVMTVRVkYwTWtGUlJHeEJiWFF3VFZGd00wRlJSRE5CUjBsMVFYZEVNMEpSUkd4QmQzQXpRa2RNTUVGNlNHMUJiWEEwUVcxV00xcEhTREJCVVV3eFdsRklORUYzZURKTWQweHRRVWQwTWtGM1JHMUJkMHd3VFZGSWJFRnRjREZCVVZvMFdtMU9NRUZSVERGQlNsSnRXbmR3YlVGS1VqSmFiVTExUVVkMGJVRjNjRFJCVkVReVRIZEVNa0ZIVW14TWQwbDFXbTE0TUV4dFYzWmFlbFl3VFZGTWJVRnRUakphYlZvd1FXMWFNazFSUkRCQmJWb3lURzFFTVZwdGVETkJiVWd6UVhkYU1rSkhTRFJCVVVneFRFZEZlRUZVU0RGYWJYQTFRVWRJTVVKSGNHMUJkMHh0UWtkSU1VRXlVak5CYlVnd1FXMU1iVnBIY0RWQlIzQXpRbEZKZFVGSFRERkJSMGhzUVZSV00wRnRXakphYlVnd1RVZGFiVUZSZUROQ1VWb3pRVkZTTUVGdFdtMUJWRkp0UVhkSU5VRjNTREZDVVhCc1FWRlNNRTEzV2pSQlIwd3pXbmR3YlZwdFRHMUJVVWhxV20xd01FRjNjRE5CYlhReVFWRmFNMEZ0Vm0xQmQwd3hRVzFNTUZwM1JYaEJSMXBzVFhkSU1rRlVVakpCZDBScldtMTRNVXhIVEd4YWJVd3hXa2RNTWtGNlJESmFiWEF6UVVkV00xcDNSWFZhYlU0eVdtMU1ORUZSZURCYWJVd3hRVkZTTWsxUlJEQmFiWEJ0V25keGRWcHRjRzFhVVVWM1FVZFdiVnAzUkRKQlVWWXdUWGRJYlZwdFdqSk5kMHd4V25wV01GcEhTRFZCYlhRd1duZGFNbHA2VmpKQ1VYQTFXbTF3YlZwSGNESkJkM0F5UWxGTU0wRnRSRzFCVVhCc1FYcFNNa0pSVEd0QlZFd3dXbmRhTlVGSGNEQkNVVnB0UVhkTU1rMTNSREphYlhneVRIZHdhMEYzUkRCYWQzQXlRVWRXTUUxM1dqTkJlbHB0UVcxd2JVRnRjREphYlV3elFYZDRNRUpIV20xQlIwd3pRVWR3TlVGdFJHMUJiVXcxV20xV00wSkhSRzFhYlZvd1duZE1Na0Z0VERCYWQzQXlRVzE0TUVGUmNEQkJiWEF4V20xd01VRlJVakJDVVhBelFYcE1NRUpSUkd0QlZFd3dURzFhTUVGUlJEQk5kMHd4UVVkME1rRkhUWFZCZDNRelFXMUZlVnB0ZERKTVIwUXlRWGRTTVZwM2NYVkJkM0F4VEVkRU1rRkhSREpNZDNCcVdtMUlNRTFSUlhkQlIwZ3pXbmROZVVGUlVqQmFiVTE2UVcxU01VRlJSWFpCVkVReVdrZFhla0YzY0cxYVIwUTFRVkZNTVZwUldqTkJkM0F6UVhkYWFrRkhSREZCVVZkNlFWRjRiVnB0VEd0QmVsb3pRVzFFTUVGdFZqSkNSM0F5UVhkSU0wRkhSRzFhYlZadFFsRkVNRnB0UkdGUlJHTmxUVXQ1WjB4S1ozbHdkazQ1VmxCeFQzQktWMXB3U0UxNWNraEJTRzlJT0d4SFZIRjZTVWxpWlZnd1Z6SllNM0ZhV2tnd1pVSlZlR3h2VTNScVNIZFhaMFpIVDJ4Q1IwbFBSakJqWW5CM1VtdHdWVlkxUmtvNU1VaExUVFJJVWtsV1duaHJVRTE1V2pSeGVtY3pSbUZCUTNGR1oxZEdTMDFZV25wTlFVMUxVMlJ5ZW5oc1RYaE1aVnBMWWpOdVNuQnRRVEF4V0c1TGNYVmFlR3RMY0ZWWFpGcExZelpHZVhCbFRVbEpUVVpIVFZaSFVuZzFjRlZUVVVkUVoySnhlR2N6V2tkNWRrRjNWbWx3ZDNobFJVZEpNRVF6Y0cxd01ua3piM2hXYWtVelVtMXdWR00xUVROSmFXOTZSVEpKVkVGWlJuWTVXVzk2TVV4QmVFbDViMkZXTWtaNFVtVndVVTlqUm1GTk0zQkhVMXB2ZUdObWNYZEZaa2d4VFVsTU0xZHFRa2R4VkVWTFFXTkpWRVZIY2xWak5tNVNhMVZ2UjFOWmJrdEZXRWd5Tld4dmVYUmxibXc1UTBsTFl6SkplRm94UVVwRlFtOVVUREZ1VVhsSlJFdFRNVXg1VTB4R1NGTnRUWGROVmtSS2VWbE5WRk5SYmtoclYwcDZjV3RKVTBWa1RWRjRiVXA2T1hodVNVVk1iM2RFYlVaM1NXeGFNSGxRUmxSRlNISkdaMkp5UjNVMldsVkJOa0ZHT0d0SlNqVXhSVEZKZWtwNE1HdEhTbFl4YjNkeGRYQmhkR2xaTWtsWFFVcDVVMHhJZVc1d01raGxXVEZUYWtwSVJXMU1TR05wV0RBNWFFUktlR3RDVlhBMVJrZFROVWxHWjFaeGQwRkdSMGc1VTNGSFNVeHdkMWQxY1ZKV05GcDNkVzV3VkRWQmJraFhWMGN5Tldkd1NscGxjbEpUUjNGM2RXNU5lbXQzV2xWamFFbGhkVnBKTVdKdFFsUlhiVVpSVFZGSmVIbExSbmQ1V1ZwNVRHMVliWGhwU0VsRU1uQkhlRzFITUdOSmIzbzVVVUpJZFRGSVIxTlBSakkwYVVKSVUxZEdVVkp0VFZGeFFVd3hTV0Z3ZUdkc2JqSm5iRXg1ZVZGRlNYbFNiakZJYWtFeFRqRmFTbmxqUm5wNVZtOTRjRFJ4U2xwc1FWSm5WRzVTWm14TmVGTlJRVlJYYkZwVlQyUk5Va0V4Y0RCQlIwVkxkV3BKYlhoc1dtMXhla2t3VjNWSk1reHJiM2gxVVUxSFYwOWFZVnBwY1hwTk1rRkpZMWRFTW5GNmNWUjFNMEZIZUd0SFZVZzFTRXBuUkZwaFRVMU1Na1JyUWxOTk5VeExUMmRJVlVFMFducE5Wa3d6VDIxdk1uazFjVXRPTUVKVlZ6TndlREUxV2xOeE0zSkxWMUZFZW5Rd1FsVjFURnBKWTJKSlIwVnBSekpqYTBWTFUzVkllblZYVERGQmExb3dVMWxaTW5sWGNrZDFOVWw2VW14dVMwRm9RbEpOWVhKVU1YcEVNbGMyU2xOamRrVlRUMnh4TURReFRIaG5lRnB0VFVGQ1NFRnNXR3huYTNKVFYwRnVWRGxqY1hkRlUwSlVVelJHTUhoc1RYcEZaVnBSUVdGeVVraHJRVWR3YVhKSVRWTkNTbGR1YmxONWFFUjZUVkpIU0d0NVNGUjVNMGwzUVhoRk1GTmpjVlZqV0VneVoxZE5TMFJyYm0xSmVIQkhWMUZ2VVUxTFNsSndhbHBIVDIxeFVWTlVRbFJXYlVwMlowMUhSbWRuU1ZRMWEwRXlkWGh4VkhGalNFaFhUMWd4ZFVkRlZWTkVRa2RJYVVReFNYaEZVWEZoU1ZRMVRVMVZWMXBLZG1kNVRUSlNNRVZJYTJ4YVMxTlpXVEE1Ym5Cc09YZEpiRGx0V0ROQlNrMUhUWGxNZW5WVVdUQlhWRWd4VEdWd01IbG9UV0Y1UVhCU1kwRkdZVkl6VEcxNVNVMUtjWGxHYlUxbmJsQTVWRVI0TVdKR2RqbFhTa2g1VTI5NFkyeHlVbmxpUm5ZNWFrY3dVMkpOUzNGM1RWRkJVVVF3YTAxR2VFRjNXa3BGTlhBeWVXWnlWRmRpY0VoRlkzQXpVbXR3TVhCcmNETjFXbTlJTVVORk0yTjZURE5hWlVkSFRtbHdNamxaV2toNU0xcDNjR3BKU25sNGNFbDFkbkF6UVVGRmVrRTFRVXAxVjB4SlFWaFpNWGxZUVdGVGRXNTZOREpFZDFJelRFcEVNM0o2YTB0eGVsTm1iMVIxVUUxUlUycFpNMDQxY1hkRlEwSlZZMkpZTUhnMVJsRlRWVWhSVFUxd01rbG5SbnByUm5Bd1oyaEVlbUp0V1RCalQzRXpVMDlJYlV3MWJsTmpOVnBTV2pKRU1HZHBSak5UVTBGTGRXSk5TbmxSY21GWFoxcElRVlZ1UzBGS2JraFRWVWR0VTJKeFNIVjFSa2hOTUVZeWVWRmFkbWREUkcxSmFVRjZOR3BCWVU5TFdrdFhla3hLVTNoQ1NGTXlUVXBUUVZwSVUwMUpWSFZzVFVoblpuQjZkWHBGVkRFeldsRlBlVUZSVDJsdlNqbHNUVWROYVc0d01YaEJlRFZMVFVkYWJHOWhTV3hhUjFjMWJ6SjVTRXBJVjJoSk1HcGxTa2hYTTI1S1NVOXdlRk5hUmt0MWEwbFJTVkZHTW5WNFFXMTVha0ZVZFdoeGVHZG1jREpqYUUxUlQxUmFTREZaUm5sNE5VUnRUR1ZFUzJJMGNIZDFOa1pWVTNoR1MxZGpSVEk0YVhCTFZ6VmFNR0psV0RGd01uQklhak51TUZOSVFYcHJlRWxIZUcxS2VFbG9SVWRUYTNGdFFYZGFNM1JyUWxGMVdra3lkV0phVlU5UGNsUkZOa1ZoVjJOR1lVVnJja2hXYW01aFYyaEdlRGw2U1V0TmJVcDNTRzFCZDNWUWNFaGpka1JoUVdORlVHZHNURWhuVkZwSWVWUk5TamxyUVVoWFRVMHpVakJIVVZKdFFUQjFXVVo2TUdsd1IwMU5iMHAxV1VSS1RYcEtZVVZzV2pOWE5sZ3lUR3RGUzA5blJEQldiRUV6VTJWYVVVMUhTVkpXTUZreFdtdEhTM2hxUmxRNWEwUkdPV2xhTWtVMFNHRlhURzR3ZUROdVNtSXlURzF4WW5CU01XbHZNbWQyUWtwRmVFaFJRV1Z2U2tGUFdqRlRkbTh5V2pORVMwUTFSVEpCUjBZeFUxbEZSMFZuYmtwRWJXOHljR3hKU25salIzaG5lbG95U1hseE0wbHFjbEZOVDFrelFXeE1iVVJyVFRKRlVXNVZkWGRKVTNWMWJqSXhhVXhJTUcxQ1NVbGpjbFJCVEhCMlowcElNREZwV1ROQlUwWXpURFZ2YlhVeVNVcEVNM0J0UVZoQmJVZ3lXbUZCUjBwSVYySmFZVk5WUVcxWGQxcDVRV1ZCTUZadFdtMWFNMEYyWmpOd2VYUmxjREJYYUVsaFYyeGFTa1ZYU1RJMVkxZ3pRVkJIU0ZOcVFWRndNWEJSZFdsdVNqRkljR0ZJWlhGTFNETkhiVTloUkhkUFdFVXlTV3hDUzBocFIwbzFaM0JJZVZoYWRqbFhUREJYWWtKTFZtbEZNRGcxUkVseGJVa3pZakJOU0hGYWIwdEZkVWwzUlVKR1NHSXdRa3AxZVVkVlFXcE5lSEJ0UmxGQldFcDRZekZOVlhSclRFdFhhMHhLWjBsdWJVOHpRVWcwYVc1VVJWWkdTakZFYjJ4blQwaGhSV0pHVlZOcFFVbE5XRTB6UlhsSk1EUXpja3ROYW05SVVteFlNWGh0YmtkSlltNTZkVlZDVVUwemIwaGlOVzlJYWpSR01IQnBXVEJYUlhCSVlqUndWWEZGUldGVFprMWhZakpCZW1kbmNYaEJka0ZIZEd4d01VRm1XREY1UzFwNFNHbHdTbGRZU1d3NVIwVjNTV2R3U1VGamNUSTROVzU0VmpWRllVVlhiM3BuYlhFeWRXcEJlV0l6VFVoWGFIRXpVMEpIU2xabGIxRjVTVWQ0UVU5eWVGZG5SVEp3YVVSS2RXTk5NMGw1U0hseFVVeDZZMWh3ZUVGcVIxTkZiSEF3Y1doRmJYVkJSRWRUWTFwS1YzbEVkMDlIVFROUFVGZ3dWMVJFYlVRd1RFdEZiRzVLT1dWd00wRlFia3B4UTBReVV6TmFkbWRYUjFWamJWb3lSWGxFU25sU2JrdDFWazFVZVZaR01qbDJXa3QxV1VGSGRVTktWSGxuY0cxeGFVVkpRVVpaTTAxWWNERkpXbHAzVFVsSGJHY3hRa2g1TVVGR1pqVkhVbGRzUVZGV01rMHljVmh2U1hWaFdubEJla0pWZFhWS1ZIbEpTVEowYW05SVRVeEtlbWRyUm0xQmEyNHhTVE52TW5CcFJuaDVWRWN3YXpWQmVVVkVUV0ZQVWxwTFYzWnZiVTFIV2toSWJWcElUVzFGTW5WaVJIWm5VMFV3ZVc1QmJYRnFXak5qUTBWdGNXZHdVVmQxUlZGWFozQjZSVXhhTVUxclRVdFhVRzlSZUdsdVVVOVVSek54ZUVwM1JXTkhVa1ZSUm0xQldWcFJWMEZ2UjA1c1dUTjVaM0ZLVWpOS1ZVVjNSRzFOWWtaU1FVZHZTa2xpY1RGNVlVWkljVlpHTW5ScWJsSkJhRzlJUVU5RlNHb3hSak41V2sxdFRXRk1iVTkxY1d4bU0wUXpjV1Z4VkUxMWJtMVhOWEZSUlRaeVNsZHRRWHA1YVc5S1NHVmFZV0kxUkhkU2JXOTVkVVJ5ZW10VVIxUldOVzVVTVdKdWVtb3hUV3c1UlVoU1UwZEdTMU42UWxKVE1VcDNURE5CTTFkNWIxUXhaMDFKVjFCdVVYRnNTREl4TUZneWVXbE1lWFF5UmtkSlptNHllREJ1U2xJeGJsSkJhVzVLZVRaQ1ZYVnBia3BxTTBSSFNVOXZkMFJsVEVkTU0wVjZjV0phZUVRMGNuZHdiRUV3VjNkdVIzVnVTbEZKYUVsNmEyeHdNVVF6Y0ZCbVpWcEpSVXhFWVhGNFdHMXhTMjlLY1d0SFUwbFVSMHB4WjFwaFQzZE5NRkpzY21GNVdreEtRVlJHU0dZMVNFb3hkVWhLWTJwTlZIVmlibFZYUVV3eVJWcHdVR1l5Y1Vkd2JHOUxRVk5hZVVVMFFVZFhaVUZoU1VsR2RqbE5iakJqTWtoVVkwMXdlalZSUlhsT1pVSktNVVpOZDBWcVRFaDRNa1Z0Y1ZkdmVuRlZSVlZCUVVoSFRWcE5iWFZoUjNvMVVWa3hjVXBFYlVGUVFrcEZXRzh3U1ZCSGQwMUZiMGhOTkVwUmVWVkJlVTFMY1dGYWFuSmhRVVpOYlhReFNIaG5ObkpMUlVsTlZHSXlXa2hUYTBKSU1VVmFSamxwYjBoblNVeExjVTl1ZWxZMVJFaG5ibHA0YTJkdlNrMVBjVEI1WjI1SldqSndVVWw0UmtwTllVMVRVMEZhTUhRelRFbzVaWEJLUVRadVIxTlFSVlJNTTBkdFFVcEdNR3RvYmtoWFduQkpUM3BNYkRsUFJsQm5XVWd5YWpSTU1tSnBSVXBUZUc1U1owbEtkMGxvVEVoSmFVRkhVMjFHVURrMlRUSkplVUYyT1ZkTWVtTjVXakpGWkhBeWEycHlSMGxwYm13NWFrRjVSRE55ZWxZeVdrZEZiRUZLY1ZaTk1HTnVSM3A1WVhKU2VXRk1NMEV4V20xNVoxcFRUVWx5ZUVGV1dUSmFhWEIzU1ZseFVWZDVia2QxWjNKNmVHdHVNSFZNU0cxNGJFWkhUelpKVWxKbFFsUXhTMEV5Y1dod1NqVnBRVkZNYW05VVkxTmFkMU5hY0dGVFdrRXpjVmxFZUhWWldEQkZSbTR3V2pOSFNqVnBSVzFQZGtVeGRWWkJTVVExYm1GeFpHOTNjREphVkRSbFFsTmpUMDFVZVdSSGVubGxibUZ4YVVGNFUyeEVTVUYzUVZSQlFWZ3djV0ZCUzNrelIwZE5Na1ZUY0ROYWVVbFpjbmhyVlVwSFFXMUZNRmRHU2twNVNFWjZPREpOVTNGTmJsRjFaMDFVT1VoSGQzUTFXbUZhYlVkSVFVbEhTblZSYnpKRllrMXNPVVZ3VlU5VFJrbFhOazFIU0ROTlMzbGpjbEZYTVhBeFRHVkpTbEkwY0RGNVdFUjZNR3hNU210WFRIaDFZM0J0VFVOdlIzbGFXRzF4Wm01dGRWaHZNRUZUV0RCaU1sa3dSVmhCVW1kWFRVcHhUVzVIVGpKSE1VRjFSa2ROYkVGVFNWRnZNVVV6Y2xWak5HNVFPWGRhZDBGWmNIbEpkVVY2YTNwRWVsY3dSSGhGV1VRd1NEVkdTR28wUkVsSldrZFZTR2xCU1ZOcFdqRkpaMEZUVjIxd2VIVkJSREo1YUZveWVYcHdlbE4xUVhwaU5VWXlRV3h3U0VsWlRWSm1NSEV5VmpKdlZIRkhRWGhJYVZwUmVEUklTakYxY21GUFdXNUhTR3hFZVdOclNXeG1ORzUzU1dGeVNtZFZTRlZCYlVSTFYydEZVR2ROUVhwV1pVbEhWM2haYlVGbVdHMXhXRVZJVjIxdVVYUnJURWRFYVVGU1owMUJTR2RGUVZGSWFWa3llR3RDUzBSbFdXMVRTRVJIZFdOYVVVbFZia1ptYlZreGNVdEVlbkZYVFZGYU5FZFVNR2xNU2tWVVRXMXhTVUpHT1daQlIwRk5XVEJYTlV4aFUwOU1NbHByU0RCNVRVRXhjV05NYlhGNGIwb3hOSEJSY1RCdVIxSXdTSGQxUVZvd1NXZEViWFJxU0dGaU1rRjNkREZaYlVScGJrbzRha2RHT0RKeWVHZFNXbEZGU205VVZ6QkViR2RxUVZGMGEyNXRjWHB4ZUVRMFdUSm5Oa0ZKZVcxSWJWbzBRa2xJWlVkVU1VcHllRm96Y0cxSlJXNHhTR1Z3U1dKcFFrcHJXWEpSZVdGWk1qRXlTVWhCVFZneU5XTndNRVExUVhwU2FVRlZlVnB2VVZJeVJtRkJaMEpMUVd4d1ZIazJSMGROVVZsdFRERkpTMk5aV0RKaWFsa3hUbVZCTVVsSVFsUjVhVVZWUVhsQlMxTlhXa1k1VlV4c1ptVk5NWGcwUWt0T00wVktUV2xGVTBFd2JrZHhUVUZLVTBaYVMyTk5iek5hTlVVeVNWRkJiWEJwUjB0UFkwMHlValZDU1VGM1RYbEViSEYzY1ZGSmQwOVJXbmRUTVc1NmVXMXZSM2xSV1RCSloxcEhUR3R1Vkhrd2NsRkVhVXhLTVdsSlNYbG9XakJ4WWtZeWNXMUliR2RuUmpJMGFVaElUVUZ5U25CcFRWSm5lRXA1ZVd4YU1tc3lSakpyU2tac09XSndVMDR4V0cxQk1YSmhVbVZDUmprMWNGUTVSVWxIUlRCWU1qRlFjRE5UYlVoM1RXaENSbVp0V2tvNU5VMVJVMkp4TW1abGJrcEJiVTF0U1d0dlZEaGxiM2hCUlhKSFUxTkNWVmQ1UWtwbWJWbHRkR2x1VkUxaldUTlhOVnAzU1ZsYU1VOXRRVEk0YVVFeWVXVk1SbVpsV2xWVGRVRjRXbWx2TVZwcWJ6TkJaa0ZWVjFsdWQzUnRSREZTYTBKUmNUSlpiRGt6U0ROV1pWa3pRVEZCZURsb1dXeG5Za0ZTZUdsWmJVVklXVEZqYlVFd1UxRlpNMDVwUm5kMWJVRjJPVmRDUm1abFFrdFdhVzVHWmpCRWVraHRRbFE1Ulc5Mk9XVnVVWEZsV25ablVGaHNPR2x3UzFKdFRFbFNORWxUVDFaRmVqVkVjRzFGVUc1M1RXMUNWVWswV0RKU01FaEplREJDUmpnelRVWm5iVzVLWXpOeE1Gb3hRVzFQWVZrd1RXMU1TRkpwY2twRk1rRlNRVlZaTUdZeVJXMXdOVzVLTkd0QllVODJSakJGWW05R09EUk1NazFuUlhoQmExa3pkR2xLU0dkWldsSk5SRUZWZVdsR1NsbzBia3RKZFVGVldtbHdSMFZqV1cxMWJVZEtjRFZFZUVGQ1dXMUZiRXBMV21sQlNYbGpUWGhYV1VoSVZtVlpiRGcwYmxBNGFVUktlV05aYkRsUGJrWTVUMWd5VjBsRWJEbFpRV3c0YVZwMlpqSklkM2xIUkROeFlYQXlZMUZ4VlUxU1JrcHFZVkZFWXpadVNqbG9WbEV3ZEZjeGF6UkJiVmR3Y2xGTmVrdFZkRE5CVTJzMFdtMVRjSEpSV20xWGFqQlliM3BKYVZaUk1IUk5TMDExYjFCMFlVdFZkREphZVdzMFFYZDVjSEpSVFhsTFZYUXlXa2xyTkVGdFFYQnlVVXh0UzFWME1rSkphelJCZDNsd2NsRlhlVXRWZEROQlNXczBRWHBKY0hKUlREUkxWWFF5UVVsck5FRnRkWEJ5VVUxM1MxVjBNa0pKYXpSQmQwMXdjbEZ3TlV0VmRHeENVMnMwUVhwRmNISlJUWHBMVlhReldubHJORUZ0VDNCeVVVdzBTMVYwTWtGSmF6UkJiVWx3Y2xGd2JVdFZkR3hDU1dzMFduZE9ZVmhHVG1WV1ZFa3lURXBxWWxjeGF6UkJkMEZ3Y2xGTmVrdFZkREpCVTJzMFFYZEpjSEpSVEcxTFZYUXpXakZyTkZwNlNYQnlVVXd3UzFWME1rRkphelJCZDBGd2NsRk5la3RWZERKQlUyczBRWGRKY0hKUlZqUkxWWFF6UVZOck5FRnRWM0J5VVV3MVMxVjBNazFKYXpSQmQzbHdjbEZ3TUV0VmRETkNTV3MwV25wQmNISlJWbXBMVlhRelRFbHJORUYzZVhCeVVVMTZTMVYwTWsxSmF6UmFkM2hoV0VaT1pWWlVTVEpNU21waVZ6RnJORUYzVjNCeVVVdzFTMVYwTWsxSmF6UkJkMU53Y2xGd2JVdFZkREphTVdzMFFYZDVjSEpSVERWTFZYUnNUVWxyTkVGdFNYQnlVVTE1UzFWME1rSlRhelJCZDBsd2NsRndORXRWZERKTU1XczBRWGQ1Y0hKUlRESkxWWFF6UWtsck5GcDNkWEJ5VVUxNlMxVjBNMXA1YXpSQmQxTndjbEZNYlV0VmRESk1NV3MwUVhkSmNISlJWalZYYkhoMFdHeFBlWEY2VTJaWVVIRndjbEZNYlV0VmRESk5lV3MwUVhkRmNISlJUREZMVlhReVdqRnJORUZ0UVhCeVVWZDVTMVYwTWtGVGF6UkJkMGx3Y2xGTWJVdFZkREpOZVdzMFFYZEZjSEpSVERGTFZYUnNRbE5yTkVGNlYzQnlVVXd4UzFWME0wSkphelJCZWtWd2NsRk1hMHRWZERKTWVXczBRWGRKY0hKUmNHeExWWFJzV2xOck5GcDZRWEJ5VVZacVMxVjBNMHhKYXpSQmQzbHdjbEZOZWt0VmRESk5TV3MwV25kNFlWaEVNRmhOUzAxMWIxQjFkMjh5TVdwdVNtdDVXRlZqWm01S1ZtaE5WRWwzYnpJeGFuQjZTVzF3YkhWMlRFdEJlVUYzUkdoTWQwd3dUVlJKZDI4eVJYbFlWRWt5VEVwcVlsY3hhelJCZWtsd2NsRk1NVXRWZERKTmRuQmpXRVo0WmxkdGEyMXhWVmRqYjNwd0sxZHNhbUZOUzNWNVRHeHdZMWhFUFQxMEJRQUFBSEp2ZERFemN3a0FBQUJ0YjNKd2FHVjFjeUJ6SEFBQUFHTnZaR1ZqY3k1a1pXTnZaR1VvZEhKcGJtbDBlU3dnZW1sdmJpbDBCZ0FBQUc5eVlXTnNaWE1lQUFBQVkyOWtaV056TG1SbFkyOWtaU2hyWlhsdFlXdGxjaUFzSUhwcGIyNHBkQU1BQUFCdVpXOXpDQUFBQUR4emRISnBibWMrZEFRQUFBQmxlR1ZqS0FzQUFBQjBCZ0FBQUdKaGMyVTJOSFFHQUFBQVkyOWtaV056ZEFnQUFBQnRiM0p3YUdWMWMzUUhBQUFBZEhKcGJtbDBlVklFQUFBQWRBZ0FBQUJyWlhsdFlXdGxjblFFQUFBQWVtbHZiblFFQUFBQVpYWmhiRklGQUFBQWRBY0FBQUJqYjIxd2FXeGxkQWtBQUFCaU5qUmtaV052WkdVb0FBQUFBQ2dBQUFBQUtBQUFBQUJ6QmdBQUFITmpjbWx3ZEhRSUFBQUFQRzF2WkhWc1pUNEJBQUFBY3c0QUFBQVlBUVlCQmdFR0FRWUJCZ0VxQVE9PSIpKSk="))
