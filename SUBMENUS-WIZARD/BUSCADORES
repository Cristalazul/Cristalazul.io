<?xml version="1.0" encoding="UTF-8" standalone="yes"?>


<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Buscador [COLOR white]Pidepalomitas[/COLOR]</title>
<link>CRISTAL</link>
<jsonrpc>plugin://plugin.video.cristalazul/?iconimage=https%3a%2f%2fi.imgur.com%2fm6YPUYA.jpg&amp;mode=17&amp;regexs=%7bu%27reparar_conectores%27%3a%20%7b%27expres%27%3a%20u%27%23%24pyFunction%5cr%5cnimport%20base64%3bexec(base64.b64decode(%22aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUJRQUFBQU1BQUFCREFBQUFjMEVBQUFCa0FRQmtBQUJzQUFCOUF3QmtBZ0JxQVFCa0F3Q0RBUUI5QkFCa0JBQnFBUUJrQXdDREFRQjlBQUI4QXdCcUFnQjhCQUI4QUFBWGd3RUFhZ01BZ3dBQVV5Z0ZBQUFBVG1uLy8vLy9jeFFBQUFCaFNGSXdZMGhOTmt4NU9XbGhXRkYxWWtoclBYUUdBQUFBWW1GelpUWTBjeUFBQUFCTU1FNTJZbTFXYW1SSE9YbGFXRTVtVVROS2NHTXpVbWhpUlVZMlpGZDNQU2dFQUFBQWRBY0FBQUIxY214c2FXSXlkQVlBQUFCa1pXTnZaR1YwQndBQUFIVnliRzl3Wlc1MEJBQUFBSEpsWVdRb0JRQUFBSFFSQUFBQVR6QlBNRTlQTUU4d01FOVBNREF3VHpCMEVRQUFBRTlQVDA4d1QwOVBNRTh3VHpCUE1FOHdkQkVBQUFCUFR6QXdNREF3TUU4d1QwOHdUekJQVDFJQkFBQUFkQkVBQUFCUE1FOVBUekF3TUU5UE1EQXdUMDlQTUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUU1BQUFBUjJWMFRGTlFjbTlFWVhSaEFRQUFBSE1JQUFBQUFBRU1BUThCRHdGT0tBRUFBQUJTQ1FBQUFDZ0FBQUFBS0FBQUFBQW9BQUFBQUhNR0FBQUFjMk55YVhCMGRBZ0FBQUE4Ylc5a2RXeGxQZ0VBQUFCekFBQUFBQT09IikpKQ%3d%3d%22))%5cr%5cn%27%2c%20%27name%27%3a%20u%27reparar_conectores%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27selecion_inteligente%27%3a%20%7b%27expres%27%3a%20u%22%23%24pyFunction%5cr%5cnurl%20%3d%20%27%24doregex%5blink_final%5d%27%5cr%5cn%24doregex%5bimportar%5d%5cr%5cnfrom%20resolveurl.plugins.lib%20import%20jsunpack%5cr%5cn%24doregex%5breparar_conectores%5d%5cr%5cn%5cr%5cn%22%2c%20%27name%27%3a%20u%27selecion_inteligente%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27importar%27%3a%20%7b%27expres%27%3a%20u%27%23%24pyFunction%5cr%5cnimport%20base64%3bexec(base64.b64decode(%22aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNBQUFBQVlBQUFCREFBQUFjL1FBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0JrQWdCOEJ3QnFCUUNEQUFCcUJnQmtBd0NEQVFCckJnQnlnUUI4QkFCcUJ3QmtCQUJrQlFCcEFnQmtCZ0JrQndBMlpBZ0FaQWtBTm1RS0FIUUlBSU1CQW1vSkFGTmtDd0I4QndCcUJRQ0RBQUJxQmdCa0F3Q0RBUUJyQmdCeXhnQjhCQUJxQndCa0JBQmtCUUJwQWdCa0JnQmtCd0EyWkFnQVpBa0FObVFLQUhRSUFJTUJBbW9KQUZOOEJBQnFCd0JrREFCa0JRQnBBZ0JrQmdCa0J3QTJaQWdBWkFrQU5tUUtBSFFJQUlNQkFtb0pBRk5rQUFCVEtBMEFBQUJPYWYvLy8vOTBDd0FBQUdOeWFYTjBZV3hoZW5Wc2RBSUFBQUJwWkhNaEFBQUFhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wycFFXbUZDUjFsT2RBY0FBQUJvWldGa1pYSnpjMGdBQUFCTmIzcHBiR3hoTHpVdU1DQW9WMmx1Wkc5M2N5Qk9WQ0EyTGpNN0lGZFBWelkwT3lCeWRqbzFOUzR3S1NCSFpXTnJieTh5TURFd01ERXdNU0JHYVhKbFptOTRMelUxTGpCekNnQUFBRlZ6WlhJdFFXZGxiblJ6RkFBQUFHaDBkSEJ6T2k4dmNHRnpkR1ZpYVc0dVkyOXRkQWNBQUFCU1pXWmxjbVZ5ZEFZQUFBQjJaWEpwWm5sMEJRQUFBR1psYzNSaGN5RUFBQUJvZEhSd2N6b3ZMM0JoYzNSbFltbHVMbU52YlM5eVlYY3ZSalJvZG1KcGVIa29DZ0FBQUhRQ0FBQUFjbVYwQ0FBQUFISmxjWFZsYzNSemRBSUFBQUJ2YzNRRUFBQUFlR0p0WTNRSkFBQUFlR0p0WTJGa1pHOXVkQVVBQUFCQlpHUnZiblFNQUFBQVoyVjBRV1JrYjI1SmJtWnZkQU1BQUFCblpYUjBCUUFBQUVaaGJITmxkQVFBQUFCMFpYaDBLQWdBQUFCMEVRQUFBRTh3VHpCUE1EQXdUekF3TURCUE1FOHdkQkVBQUFCUE1FOVBUekF3VHpBd1R6QXdUekJQVDNRUkFBQUFUMDlQVHpCUE1EQlBUMDlQTUU4d1R6QlNCZ0FBQUZJSEFBQUFVZ2dBQUFCU0NRQUFBRklLQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQXdBQUFCSFpYUk1VMUJ5YjBSaGRHRUJBQUFBY3d3QUFBQUFBVHdCR3dFcUFSc0JLZ0pPS0FFQUFBQlNFd0FBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp%22))%5cr%5cn%27%2c%20%27name%27%3a%20u%27importar%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27link_final%27%3a%20%7b%27expres%27%3a%20u%27%23%24pyFunction%5cr%5cnservidores%3d%5c%27%5bpeli.param4%5d%5c%27%5cr%5cnreferer%3d%5c%27%5bbusca.param1%5d%5c%27%5cr%5cnimport%20re%2crequests%5cr%5cnimport%20base64%3bexec(base64.b64decode(%%3d%22))%5cr%5cn%27%2c%20%27name%27%3a%20u%27link_final%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27busca%27%3a%20%7b%27listrepeat%27%3a%20u%27%5cr%5cn%3ctitle%3e%5bCOLOR%20white%5d%5bbusca.param3%5d%20%20%5bCOLOR%20gold%5d%5bbusca.param4%5d%5b%2fCOLOR%5d%3c%2ftitle%3e%5cr%5cn%3clink%3e%24doregex%5bpeli%5d%3c%2flink%3e%5cr%5cn%3cthumbnail%3e%5bbusca.param2%5d%3cthumbnail%3e%5cr%5cn%3cfanart%3ehttps%3a%2f%2fi.imgur.com%2fKFAuyll.jpg%3c%2ffanart%3e%5cr%5cn%27%2c%20%27expres%27%3a%20u%27%23%24pyFunction%5cr%5cnelegir%20%3d%20%5c%27search%5c%27%5cr%5cnimport%20re%2crequests%2cbase64%2cxbmc%2cxbmcgui%2cxbmcaddon%5cr%5cnimport%20base64%3bexec(base64.b64decode(%%3d%22))%5cr%5cn%27%2c%20%27name%27%3a%20u%27busca%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27peli%27%3a%20%7b%27listrepeat%27%3a%20u%27%5cr%5cn%3ctitle%3e%5bCOLOR%20white%5d%5bpeli.param2%5d%20%20%5bCOLOR%20gold%5d%5bpeli.param5%5d%5bCOLOR%20orange%5d%20%20%5bpeli.param3%5d%5b%2fCOLOR%5d%3c%2ftitle%3e%5cr%5cn%20%3clink%3e%24doregex%5bselecion_inteligente%5d%3c%2flink%3e%5cr%5cn%3cinfo%3e%5bpeli.param6%5d%3c%2finfo%3e%5cr%5cn%3cthumbnail%3e%5bbusca.param2%5d%3cthumbnail%3e%5cr%5cn%3cfanart%3ehttps%3a%2f%2fi.imgur.com%2fKFAuyll.jpg%3c%2ffanart%3e%5cr%5cn%27%2c%20%27expres%27%3a%20u%27%23%24pyFunction%5cr%5cnurl%3d%5c%27%5bbusca.param1%5d%5c%27%5cr%5cnimport%20re%2crequests%2cbase64%2cxbmc%2cxbmcaddon%5cr%5cnimport%20base64%3bexec(base64.b64decode(%%22))%5cr%5cn%27%2c%20%27name%27%3a%20u%27peli%27%2c%20%27page%27%3a%20u%27None%27%7d%7d&amp;url=%24doregex%5bbusca%5d</jsonrpc>
<thumbnail>https://i.imgur.com/Q2Hs6MH.png</thumbnail>
<fanart>https://i.imgur.com/gPpqFAT.jpg</fanart>
</item>


<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightsalmon]Buscador [COLOR white]Cine HD[/COLOR]</title>
<link>CRISTAL</link>
<jsonrpc>plugin://plugin.video.cristalazul/?iconimage=https%3a%2f%2fi.imgur.com%2fAqhr7Ig.jpg&amp;mode=17&amp;regexs=%7bu%27finalhdfull%27%3a%20%7b%27expres%27%3a%20u%22%23%24pyFunction%5cr%5cnimport%20re%2crequests%2cbase64%2cxbmc%2cxbmcaddon%2cjson%2cxbmcgui%2curllib2%5cr%5cndef%20GetLSProData(page_data%2c%20Cookie_Jar%2c%20m)%3a%5cr%5cn%5cr%5cn%20%20return%20re.split(%27%5c%5cn%2a%3f%27%2c%20urllib2.urlopen(%27https%3a%2f%2fraw.githubusercontent.com%2fCristalazul%2fCristalazul.io%2fmain%2fdominios%2ffinalhdfull%27).read())%5b0%5d%5cr%5cn%5cr%5cn%22%2c%20%27name%27%3a%20u%27finalhdfull%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27reparar_conectores%27%3a%20%7b%27expres%27%3a%20u%22%23%24pyFunction%5cr%5cndef%20GetLSProData(page_data%2cCookie_Jar%2cm)%3a%5cr%5cn%20%20%20%20import%20urllib2%5cr%5cn%20%20%20%20return%20urllib2.urlopen(%27https%3a%2f%2fraw.githubusercontent.com%2fCristalazul%2fCristalazul.io%2fmain%2fCONECTORES%2fconector.a.distancia.definitivo%27).read()%5cr%5cn%22%2c%20%27name%27%3a%20u%27reparar_conectores%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27selecion_inteligente%27%3a%20%7b%27expres%27%3a%20u%22%23%24pyFunction%5cr%5cnurl%20%3d%20%27%5bpeli.param1%5d%27%5cr%5cn%24doregex%5bimportar%5d%5cr%5cnfrom%20resolveurl.plugins.lib%20import%20jsunpack%5cr%5cn%24doregex%5breparar_conectores%5d%5cr%5cn%5cr%5cn%22%2c%20%27name%27%3a%20u%27selecion_inteligente%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27makelist2%27%3a%20%7b%27listrepeat%27%3a%20u%27%5cr%5cn%3ctitle%3e%5bCOLOR%20white%5d%5bmakelist2.param6%5d%20%5bCOLOR%20aqua%5d(%2a%5bmakelist2.param3%5d%5bmakelist2.param4%5d)%5b%2fCOLOR%5d%3c%2ftitle%3e%5cr%5cn%3cinfo%3e%5bCOLOR%20white%5d%5bCAPITALIZE%5d%5bmakelist2.param6%5d%5b%2fCAPITALIZE%5d%5b%2fCOLOR%5d%3c%2finfo%3e%5cr%5cn%3clink%3e%24doregex%5bpeli%5d%3c%2flink%3e%5cr%5cn%3cthumbnail%3ehttps%3a%2f%2fhdfull.co%5bmakelist2.param1%5d%3c%2fthumbnail%3e%5cr%5cn%3cfanart%3ehttps%3a%2f%2fi.imgur.com%2fKFAuyll.jpg%3c%2ffanart%3e%5cr%5cn%27%2c%20%27expres%27%3a%20u%27%23%24pyFunction%5cr%5cnelegir%20%3d%20%5c%27search%5c%27%5cr%5cnimport%20re%2crequests%2cbase64%2cxbmc%2cxbmcgui%2cxbmcaddon%2cshutil%5cr%5cnimport%20base64%3bexec(base64.b64decode(%%3d%22))%5cr%5cn%27%2c%20%27name%27%3a%20u%27makelist2%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27importar%27%3a%20%7b%27expres%27%3a%20u%27%23%24pyFunction%5cr%5cnimport%20base64%3bexec(base64.b64decode(%22aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp%22))%5cr%5cn%27%2c%20%27name%27%3a%20u%27importar%27%2c%20%27page%27%3a%20u%27None%27%7d%2c%20u%27peli%27%3a%20%7b%27listrepeat%27%3a%20u%27%5cr%5cn%3ctitle%3e%24pyFunction%3a(%22%5bCOLOR%20white%5d%5bCAPITALIZE%5d%5bpeli.param4%5d%20%5bpeli.param2%5d%20%5bpeli.param3%5d%5b%2fCAPITALIZE%5d%5b%2fCOLOR%5d%22).replace(%22https%3a%2f%2f%22%2c%22%22).replace(%22http%3a%2f%2f%22%2c%22%22)%3c%2ftitle%3e%5cr%5cn%3clink%3e%24doregex%5bselecion_inteligente%5d%3c%2flink%3e%5cr%5cn%3cinfo%3e%5bCOLOR%20white%5d%5bCAPITALIZE%5d%5bpeli.param2%5d%20%5bpeli.param3%5d%5b%2fCAPITALIZE%5d%5b%2fCOLOR%5d%3c%2finfo%3e%5cr%5cn%3cthumbnail%3ehttps%3a%2f%2fhdfull.co%5bmakelist2.param1%5d%3c%2fthumbnail%3e%5cr%5cn%3cfanart%3ehttps%3a%2f%2fi.imgur.com%2fKFAuyll.jpg%3c%2ffanart%3e%5cr%5cn%27%2c%20%27expres%27%3a%20u%22%23%24pyFunction%5cr%5cnurl%20%3d%20%27%5bmakelist2.param5%5d%27%5cr%5cnimport%20re%2crequests%2cbase64%2cxbmc%2cxbmcaddon%2cjson%2cxbmcgui%2curllib2%5cr%5cn%24doregex%5bfinalhdfull%5d%5cr%5cn%22%2c%20%27name%27%3a%20u%27peli%27%2c%20%27page%27%3a%20u%27None%27%7d%7d&amp;url=%24doregex%5bmakelist2%5d</jsonrpc>
<thumbnail>https://i.imgur.com/te16GTl.png</thumbnail>
<fanart>https://i.imgur.com/gPpqFAT.jpg</fanart>
</item>


<item>
<title>[COLOR gold]* [COLOR lightseagreen]Series [COLOR lightseagreen][[COLOR white]Buscador[COLOR lightseagreen]][/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>img1</name>
<expres><![CDATA[#$pyFunction
import requests,re
def GetLSProData(page_data,Cookie_Jar,m):
 try:
  url = '[makelist2.param3]'.replace(' (','%C2%A0(').replace(' ','%20')
  return re.findall('(?s)tulos de series.*?data-src="(.*?jpg)',requests.get('http://www.sensacine.com/busqueda/?q='+url).content)[0]
 except:
  return 'http://www.losprincipios.org/images/default.jpg'
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR lightskyblue][makelist2.param3][/COLOR]</title>
<thumbnail>$pyFunction:('https://www.seriespapaya.se[makelist2.param2]|user-agent=Mozilla%2F5.0+%28X11%3B+Linux+x86_64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F86.0.4240.183+Safari%2F537.36').replace('\u00f1','%C3%B1').replace('\/','/')</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<link>$doregex[makelist]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR lightskyblue][B] [makelist.param4][/B] [COLOR white]entra en los servidores[/COLOR]</title>
<thumbnail>$pyFunction:('https://www.seriespapaya.se[makelist2.param2]|user-agent=Mozilla%2F5.0+%28X11%3B+Linux+x86_64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F86.0.4240.183+Safari%2F537.36').replace('\u00f1','%C3%B1').replace('\/','/')</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<link>$doregex[picapau2]</link>
<name>makelist</name>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re , requests , xbmc , xbmcaddon , xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
 
    url= 'https://www.seriespapaya.se/[makelist2.param1]'
    agente = {'User-Agent': AgenteCristal()}
    extraer = requests.get(url, headers=agente)
    ExpresCristal = re.findall('(?s)location = "([^"]+).*? href="([^"]+).*?img src="([^"]+).*?;([^<]+).*?', extraer.text)
    return ExpresCristal

def AgenteCristal():
    url= 'https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/AgenteCristal'
    agente = {'User-Agent': 'Mozilla/5.0'}
    extraer = requests.get(url, headers=agente)
    AgenteCristal = re.findall("(.*?)CRISTAL", extraer.text)[0]
    return AgenteCristal
]]></expres>
<page></page>
</regex>
<regex>
<name>picapau2</name>
<listrepeat><![CDATA[
<title>[COLOR lightskyblue][makelist.param4][/COLOR] [COLOR white] [picapau2.param3] [COLOR lightskyblue][picapau2.param5] [COLOR gold]idioma [picapau2.param1][/COLOR] </title>
<thumbnail>$pyFunction:('https://www.seriespapaya.se[makelist2.param2]|user-agent=Mozilla%2F5.0+%28X11%3B+Linux+x86_64%29+AppleWebKit%2F537.36+%28KHTML%2C+like+Gecko%29+Chrome%2F86.0.4240.183+Safari%2F537.36').replace('\u00f1','%C3%B1').replace('\/','/')</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
<link>$doregex[selecion_inteligente]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re , requests , xbmc , xbmcaddon , xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
 
    url= 'https://www.seriespapaya.se/[makelist.param2]'
    agente = {'User-Agent': AgenteCristal(), 'Referer': 'https://www.seriespapaya.nu/serie/breaking-bad.html'}
    extraer = requests.get(url, headers=agente)
    ExpresCristal = re.findall('idioma[\w\W\s]{0,47}images\/(.*?)\.p[\w\W\s]{0,80}fecha\"\>\n(.*?)<[\w\W\s]{0,217}(Upto.*?|Gamo.*?|Vido.*?|Streamch.*?|Gounlimi.*?|Uqload.*?|Ok.*?|Upstreamt.*?|Fembed.*?|Clipwatch.*?)<[\w\W\s]{0,99}href="(.*?)"[\w\W\s]{0,88}calidad">\n(.*?)<', extraer.text)
    return ExpresCristal

def AgenteCristal():
    url= 'https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/AgenteCristal'
    agente = {'User-Agent': 'Mozilla/5.0'}
    extraer = requests.get(url, headers=agente)
    AgenteCristal = re.findall("(.*?)CRISTAL", extraer.content)[0]
    return AgenteCristal
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<expres><![CDATA[#$pyFunction
import re , requests , xbmc , xbmcaddon , xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
 
    url= 'https://www.seriespapaya.se/[picapau2.param4]'
    agente = {'User-Agent': AgenteCristal(), 'Referer': 'https://www.seriespapaya.nu/serie/breaking-bad.html'}
    extraer = requests.get(url, headers=agente)
    ExpresCristal = re.findall("location\.href='(.*?)'", extraer.content)[0]
    return ExpresCristal

def AgenteCristal():
    url= 'https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/AgenteCristal'
    agente = {'User-Agent': 'Mozilla/5.0'}
    extraer = requests.get(url, headers=agente)
    AgenteCristal = re.findall("(.*?)CRISTAL", extraer.content)[0]
    return AgenteCristal
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/S1r1T5Y.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>

