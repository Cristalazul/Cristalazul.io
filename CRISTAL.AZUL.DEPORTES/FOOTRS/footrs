<?xml version="1.0" encoding="UTF-8" standalone="yes"?>


<item>
<title>[COLOR gold]* [COLOR lightgreen]Cristal Azul [COLOR white]TODO FOOTERS[/COLOR]</title>
<link>$doregex[makelist]</link>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist.param2][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>[makelist.param3]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import requests,re
from datetime import datetime, timedelta
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [makelist2.param4][/COLOR]</title>
<link>plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;iconImage=https://i.imgur.com/z9XBFGC.png&amp;name=[COLOR aqua]CRISTAL AZUL[/COLOR]&amp;url=$doregex[makelist3]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
categoria = '[makelist.param1]'
import requests,re,urllib2
from datetime import datetime, timedelta
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>makelist3</name>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param5]'
import requests,re,xbmc,xbmcgui,urllib
from datetime import datetime, timedelta
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<thumbnail>https://i.imgur.com/z9XBFGC.png</thumbnail>
<fanart>https://i.imgur.com/sv5yRUU.jpg</fanart>
</item>






<item>
<title>[COLOR gold]* [COLOR lightgreen]Cristal Azul [COLOR white]FOOTERS REPETICIONES[/COLOR]</title>
<link>$doregex[makelist]</link>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist.param2][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>[makelist.param3]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import requests,re
from datetime import datetime, timedelta
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [makelist2.param4][/COLOR]</title>
<link>$doregex[makelist3]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
categoria = '[makelist.param1]'
import requests,re,urllib2,xbmc,xbmcgui
from datetime import datetime, timedelta
import time
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>makelist3</name>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param5]'
import requests,re,xbmc,xbmcgui,urllib
from datetime import datetime, timedelta
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<thumbnail>https://i.imgur.com/z9XBFGC.png</thumbnail>
<fanart>https://i.imgur.com/sv5yRUU.jpg</fanart>
</item>


<item>
<title>[COLOR gold]* [COLOR lightgreen]Cristal Azul [COLOR white]REAL FEDERACION ANDALUZA DE FUTBOL[/COLOR]</title>
<externallink>https://pastebin.com/raw/yHXBg9X1</externallink>
<link>na</link>
<thumbnail>https://i.imgur.com/z9XBFGC.png</thumbnail>
<fanart>https://i.imgur.com/sv5yRUU.jpg</fanart>
</item>

